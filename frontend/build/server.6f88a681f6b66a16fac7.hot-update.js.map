{"version":3,"file":"server.6f88a681f6b66a16fac7.hot-update.js","sources":["webpack:///./src/customizations/components/theme/View/ListingView.jsx"],"sourcesContent":["/**\n * Document view component.\n * @module components/theme/View/ListingView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Container } from 'semantic-ui-react';\nimport { UniversalLink, PreviewImage } from '@plone/volto/components';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\n\n/**\n * List view component class.\n * @function ListingView\n * @params {object} content Content object.\n * @returns {string} Markup of the component.\n */\n\n\nconst ListingView = ({ content }) => (\n  <Container id=\"page-home\">\n    <div id=\"list-title\">\n      <h1>{content.title}</h1>\n    </div>\n    <section id=\"content-core\">\n      {content.items.map((item) => (\n        <div key={item.url} className=\"listing-items\">\n          {console.log(content.item)}\n\n          {item.image_field && (\n            <UniversalLink item={item}>\n              <PreviewImage\n                item={item}\n                size=\"large\"\n                alt={item.image_caption ? item.image_caption : item.title}\n                className=\"ui image\"\n              />\n            </UniversalLink>\n          )}\n          <div id=\"jaarverslag-title\">\n            <h2>\n              <UniversalLink item={item}>\n                JAARVERSLAG {item.title}\n              </UniversalLink>\n            </h2>\n            {item.description && <p>{item.description}</p>}\n          </div>\n        </div>\n      ))}\n    </section>\n  </Container>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nListingView.propTypes = {\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        '@type': PropTypes.string,\n        description: PropTypes.string,\n        review_state: PropTypes.string,\n        title: PropTypes.string,\n        url: PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n};\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      navItems: state.navigation.items,\n    }),\n  ),\n) (ListingView);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AADA;AAGA;AAAA;AAEA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AADA;AASA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAKA;AAAA;AANA;AAbA;AAFA;AAJA;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAJA;AADA;AAiBA;AAIA;AADA;;;;A","sourceRoot":""}