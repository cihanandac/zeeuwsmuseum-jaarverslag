{"version":3,"file":"vendors~PDFViewer.js","sources":["webpack:///./node_modules/@eeacms/volto-pdf-block/src/components/manage/PDFViewer/PDFViewer.jsx","webpack:///./node_modules/@eeacms/volto-pdf-block/src/components/manage/PDFViewer/react-pdf.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport config from '@plone/volto/registry';\n// import PDF from '@mikecousins/react-pdf';\nimport PDF from './react-pdf';\nimport cx from 'classnames';\n\nimport { Icon } from '@plone/volto/components';\nimport zoomInSVG from '@plone/volto/icons/add.svg';\nimport zoomOutSVG from '@plone/volto/icons/remove.svg';\nimport downloadSVG from '@plone/volto/icons/move-down.svg';\n\nimport './pdf-styling.css';\n\n// Based on\n// https://raw.githubusercontent.com/MGrin/mgr-pdf-viewer-react/master/src/index.js\n\nconst mgrpdfStyles = {};\n\nmgrpdfStyles.wrapper = {\n  textAlign: 'center',\n  width: '100%',\n};\n\nconst LoaderComponent = ({ children }) => (\n  <div\n    className=\"block pdf_viewer selected\"\n    tabindex=\"-1\"\n    style={{ outline: 'none', height: '100%' }}\n  >\n    <div className=\"ui message\">\n      <div\n        className=\"ui active transition visible dimmer\"\n        style={{ display: 'flex !important;' }}\n      ></div>\n      <div\n        className=\"ui active transition visible dimmer\"\n        style={{ display: 'flex !important;' }}\n      >\n        <div className=\"content\">\n          <div className=\"ui indeterminate text loader\"></div>\n        </div>\n      </div>\n      {children}\n    </div>\n  </div>\n);\n\nconst PDFToolbar = ({ downloadUrl, onScaleUp, onScaleDown, scale_ratio }) => (\n  <div className=\"pdf-toolbar pdf-toolbar-top\">\n    <div>\n      <button className=\"pdf-toolbar-btn\" title=\"Zoom In\" onClick={onScaleUp}>\n        <Icon name={zoomInSVG} size=\"15px\" />\n      </button>\n      <div className=\"scale-separator\" />\n      <button\n        className=\"pdf-toolbar-btn\"\n        title=\"Zoom Out\"\n        onClick={onScaleDown}\n      >\n        <Icon name={zoomOutSVG} size=\"15px\" />\n      </button>\n      <p className=\"scale-ratio\">{scale_ratio + '%'}</p>\n    </div>\n    <div>\n      <a href={downloadUrl}>\n        <button className=\"pdf-toolbar-btn\" title=\"Download\">\n          <Icon name={downloadSVG} size=\"20px\" />\n        </button>\n      </a>\n    </div>\n  </div>\n);\n\nfunction PDFViewer({\n  page = 1,\n  initialScale = 1.0,\n  initial_scale_ratio = 100,\n  loader,\n  navigation: NavigationToolbar,\n  css,\n  document: source,\n  showNavbar = true,\n  showToolbar = true,\n  enableScroll = true,\n  fitPageWidth = false,\n  onPageRenderSuccess,\n}) {\n  const [totalPages, setTotalPages] = React.useState(0);\n  const [currentPage, setCurrentPage] = React.useState(page);\n\n  const [loading, setLoading] = React.useState(true);\n  const [loaded, setLoaded] = React.useState(false);\n\n  const nodeRef = React.useRef();\n  const [scale_ratio, setScale_ratio] = React.useState(initial_scale_ratio);\n  const [scale, setScale] = React.useState(initialScale);\n  const [baseWidth, setBaseWidth] = React.useState();\n\n  React.useLayoutEffect(() => {\n    setBaseWidth(nodeRef.current.clientWidth);\n  }, []);\n\n  React.useEffect(() => {\n    setCurrentPage(page || 1);\n  }, [page]);\n\n  const increaseScale = () => {\n    setScale(scale + 0.1);\n    setScale_ratio(scale_ratio + 10);\n  };\n  const decreaseScale = () => {\n    setScale(scale - 0.1);\n    setScale_ratio(scale_ratio - 10);\n  };\n\n  const handlePrevClick = () => {\n    if (currentPage === 1) return;\n    setCurrentPage(currentPage - 1);\n  };\n\n  const handleNextClick = () => {\n    if (currentPage === totalPages) return;\n    setCurrentPage(currentPage + 1);\n  };\n\n  React.useLayoutEffect(() => {\n    if (!enableScroll) return;\n\n    function handleWheel(event) {\n      if (event.deltaY < 0) {\n        setCurrentPage(Math.max(currentPage - 1, 1));\n      } else if (event.deltaY > 0) {\n        setCurrentPage(Math.min(currentPage + 1, totalPages));\n      }\n\n      event.preventDefault();\n    }\n\n    const pdfWrapper = document.querySelector('.pdf-wrapper');\n\n    if (pdfWrapper) {\n      pdfWrapper.addEventListener('wheel', handleWheel);\n    }\n\n    return () => {\n      const pdfWrapper = document.querySelector('.pdf-wrapper');\n      if (pdfWrapper) {\n        pdfWrapper.removeEventListener('wheel', handleWheel);\n      }\n    };\n  }, [currentPage, totalPages, enableScroll]);\n\n  return (\n    <div\n      ref={nodeRef}\n      className={\n        !loading && css\n          ? cx(css, 'pdf-wrapper')\n          : cx('mgrpdf__wrapper', 'pdf-wrapper')\n      }\n      style={mgrpdfStyles.wrapper}\n    >\n      {showToolbar && (\n        <PDFToolbar\n          onScaleUp={increaseScale}\n          onScaleDown={decreaseScale}\n          downloadUrl={source.url}\n          scale_ratio={scale_ratio}\n        />\n      )}\n      {baseWidth && (\n        <PDF\n          baseWidth={fitPageWidth ? baseWidth : undefined}\n          file={source.file || source.url}\n          content={source.base64}\n          binaryContent={source.binary}\n          documentInitParameters={source.connection}\n          loading={loader || loading}\n          page={currentPage}\n          scale={scale}\n          onPageRenderSuccess={(page, canvasEl, viewport) => {\n            setLoading(false);\n            setLoaded(true);\n            onPageRenderSuccess &&\n              onPageRenderSuccess(page, canvasEl, viewport);\n          }}\n          onPageRenderFail={() => {\n            setLoading(false);\n            setLoaded(false);\n          }}\n          workerSrc={config.settings.pdfWorkerSrc}\n          onDocumentLoadSuccess={(pdfDoc) => {\n            setLoaded(true);\n            setTotalPages(pdfDoc.numPages);\n          }}\n        >\n          {({ pdfDocument, pdfPage, canvas }) => {\n            return loaded ? (\n              canvas\n            ) : (\n              <LoaderComponent>{canvas}</LoaderComponent>\n            );\n          }}\n        </PDF>\n      )}\n\n      {showNavbar && totalPages > 1 ? (\n        <NavigationToolbar\n          page={currentPage}\n          pages={totalPages}\n          handleNextClick={handleNextClick}\n          handlePrevClick={handlePrevClick}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nPDFViewer.propTypes = {\n  document: PropTypes.shape({\n    file: PropTypes.any, // File object,\n    url: PropTypes.string,\n    connection: PropTypes.shape({\n      url: PropTypes.string.isRequired, // URL to fetch the pdf\n    }),\n    base64: PropTypes.string, // PDF file encoded in base64\n    binary: PropTypes.shape({\n      // UInt8Array\n      data: PropTypes.any,\n    }),\n  }).isRequired,\n\n  loader: PropTypes.node,\n  page: PropTypes.number,\n  scale: PropTypes.number,\n  css: PropTypes.string,\n  // onDocumentClick: PropTypes.func,\n  // onDocumentComplete: PropTypes.func,\n\n  hideNavbar: PropTypes.bool,\n  navigation: PropTypes.oneOfType([\n    // Can be an object with css classes or react elements to be rendered\n    PropTypes.shape({\n      css: PropTypes.shape({\n        previousPageBtn: PropTypes.string,\n        nextPageBtn: PropTypes.string,\n        pages: PropTypes.string,\n        wrapper: PropTypes.string,\n      }),\n      elements: PropTypes.shape({\n        previousPageBtn: PropTypes.any,\n        nextPageBtn: PropTypes.any,\n        pages: PropTypes.any,\n      }),\n    }),\n    // Or a full navigation component\n    PropTypes.any,\n  ]),\n};\n\nPDFViewer.defaultProps = {\n  scale: 1,\n};\n\nexport default PDFViewer;\n","// Adopted copy of MIT licensed\n// https://github.com/mikecousins/react-pdf-js/blob/9afbc77a15105fb8b0332dc0e531e27ec049dad2/src/index.tsx\n\nimport pdfjs from '@bundled-es-modules/pdfjs-dist';\nimport React, { useState, useEffect, useRef, useImperativeHandle } from 'react';\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nconst Pdf = React.forwardRef(\n  (\n    {\n      file,\n      onDocumentLoadSuccess,\n      onDocumentLoadFail,\n      onPageLoadSuccess,\n      onPageLoadFail,\n      onPageRenderSuccess,\n      onPageRenderFail,\n      page,\n      scale,\n      rotate,\n      cMapUrl,\n      cMapPacked,\n      workerSrc,\n      withCredentials,\n      baseWidth,\n      children,\n      ...canvasProps\n    },\n    ref,\n  ) => {\n    const canvasRef = useRef();\n    useImperativeHandle(ref, () => canvasRef.current);\n\n    const pdfData = usePdf({\n      canvasRef,\n      file,\n      onDocumentLoadSuccess,\n      onDocumentLoadFail,\n      onPageLoadSuccess,\n      onPageLoadFail,\n      onPageRenderSuccess,\n      onPageRenderFail,\n      page,\n      scale,\n      rotate,\n      cMapUrl,\n      cMapPacked,\n      workerSrc,\n      withCredentials,\n      baseWidth,\n    });\n\n    const canvas = <canvas {...canvasProps} ref={canvasRef} />;\n\n    if (isFunction(children)) {\n      return children({ canvas, ...pdfData });\n    }\n\n    return canvas;\n  },\n);\n\nexport const usePdf = ({\n  canvasRef,\n  file,\n  onDocumentLoadSuccess,\n  onDocumentLoadFail,\n  onPageLoadSuccess,\n  onPageLoadFail,\n  onPageRenderSuccess,\n  onPageRenderFail,\n  scale = 1,\n  rotate = 0,\n  page = 1,\n  cMapUrl,\n  cMapPacked,\n  workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`,\n  withCredentials = false,\n  baseWidth,\n}) => {\n  const [pdfDocument, setPdfDocument] = useState();\n  const [pdfPage, setPdfPage] = useState();\n  const renderTask = useRef(null);\n  const onDocumentLoadSuccessRef = useRef(onDocumentLoadSuccess);\n  const onDocumentLoadFailRef = useRef(onDocumentLoadFail);\n  const onPageLoadSuccessRef = useRef(onPageLoadSuccess);\n  const onPageLoadFailRef = useRef(onPageLoadFail);\n  const onPageRenderSuccessRef = useRef(onPageRenderSuccess);\n  const onPageRenderFailRef = useRef(onPageRenderFail);\n\n  // assign callbacks to refs to avoid redrawing\n  useEffect(() => {\n    onDocumentLoadSuccessRef.current = onDocumentLoadSuccess;\n  }, [onDocumentLoadSuccess]);\n\n  useEffect(() => {\n    onDocumentLoadFailRef.current = onDocumentLoadFail;\n  }, [onDocumentLoadFail]);\n\n  useEffect(() => {\n    onPageLoadSuccessRef.current = onPageLoadSuccess;\n  }, [onPageLoadSuccess]);\n\n  useEffect(() => {\n    onPageLoadFailRef.current = onPageLoadFail;\n  }, [onPageLoadFail]);\n\n  useEffect(() => {\n    onPageRenderSuccessRef.current = onPageRenderSuccess;\n  }, [onPageRenderSuccess]);\n\n  useEffect(() => {\n    onPageRenderFailRef.current = onPageRenderFail;\n  }, [onPageRenderFail]);\n\n  useEffect(() => {\n    pdfjs.GlobalWorkerOptions.workerSrc = workerSrc;\n  }, [workerSrc]);\n\n  useEffect(() => {\n    const config = { url: file, withCredentials };\n    if (cMapUrl) {\n      config.cMapUrl = cMapUrl;\n      config.cMapPacked = cMapPacked;\n    }\n    pdfjs.getDocument(config).promise.then(\n      (loadedPdfDocument) => {\n        setPdfDocument(loadedPdfDocument);\n\n        if (isFunction(onDocumentLoadSuccessRef.current)) {\n          onDocumentLoadSuccessRef.current(loadedPdfDocument);\n        }\n      },\n      () => {\n        if (isFunction(onDocumentLoadFailRef.current)) {\n          onDocumentLoadFailRef.current();\n        }\n      },\n    );\n  }, [file, withCredentials, cMapUrl, cMapPacked]);\n\n  useEffect(() => {\n    // draw a page of the pdf\n    const drawPDF = (page) => {\n      // Because this page's rotation option overwrites pdf default rotation value,\n      // calculating page rotation option value from pdf default and this component prop rotate.\n      const rotation = rotate === 0 ? page.rotate : page.rotate + rotate;\n      const dpRatio = window.devicePixelRatio;\n      const CSS_UNITS = 96 / 72;\n      let adjustedScale = scale * dpRatio;\n      adjustedScale = baseWidth\n        ? (baseWidth / page.getViewport({ scale: 1, rotation }).width) *\n          CSS_UNITS *\n          1.0 // coeficient to make it look good\n        : adjustedScale;\n      const viewport = page.getViewport({ scale: adjustedScale, rotation });\n      const canvasEl = canvasRef.current;\n      if (!canvasEl) {\n        return;\n      }\n\n      const canvasContext = canvasEl.getContext('2d');\n      if (!canvasContext) {\n        return;\n      }\n\n      canvasEl.style.width = `${viewport.width / dpRatio}px`;\n      canvasEl.style.height = `${viewport.height / dpRatio}px`;\n      canvasEl.height = viewport.height;\n      canvasEl.width = viewport.width;\n\n      // if previous render isn't done yet, we cancel it\n      if (renderTask.current) {\n        renderTask.current.cancel();\n        return;\n      }\n\n      renderTask.current = page.render({\n        canvasContext,\n        viewport,\n      });\n\n      return renderTask.current.promise.then(\n        () => {\n          renderTask.current = null;\n\n          if (isFunction(onPageRenderSuccessRef.current)) {\n            onPageRenderSuccessRef.current(page, canvasEl, viewport);\n          }\n        },\n        (err) => {\n          renderTask.current = null;\n\n          // @ts-ignore typings are outdated\n          if (err && err.name === 'RenderingCancelledException') {\n            drawPDF(page);\n          } else if (isFunction(onPageRenderFailRef.current)) {\n            onPageRenderFailRef.current();\n          }\n        },\n      );\n    };\n\n    if (pdfDocument) {\n      pdfDocument.getPage(page).then(\n        (loadedPdfPage) => {\n          setPdfPage(loadedPdfPage);\n\n          if (isFunction(onPageLoadSuccessRef.current)) {\n            onPageLoadSuccessRef.current(loadedPdfPage);\n          }\n\n          drawPDF(loadedPdfPage);\n        },\n        () => {\n          if (isFunction(onPageLoadFailRef.current)) {\n            onPageLoadFailRef.current();\n          }\n        },\n      );\n    }\n  }, [canvasRef, page, pdfDocument, rotate, scale, baseWidth]);\n\n  return { pdfDocument, pdfPage };\n};\n\nexport default Pdf;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;;;AACA;AAEA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AACA;AAAA;AADA;AAJA;AALA;AALA;AACA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AAZA;AAcA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AADA;AADA;AAfA;AACA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAKA;AAPA;AAWA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAyBA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAEA;AA/BA;AAqCA;AACA;AACA;AACA;AAJA;AAtDA;AA+DA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAGA;AAAA;AACA;AACA;AACA;AAFA;AAPA;AAaA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAPA;AAcA;AAtCA;AA0CA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzQA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAsBA;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAoBA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AACA;AAkBA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;;;;A","sourceRoot":""}