{"version":3,"file":"server.c628444ae68775ee84f3.hot-update.js","sources":["webpack:///./src/customizations/components/theme/Header/Header.jsx"],"sourcesContent":["/**\n * Header component.\n * @module components/theme/Header/Header\n */\nimport { useState, useEffect } from 'react';\nimport React, { Component } from 'react';\nimport { Container, Segment } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  Anontools,\n  LanguageSelector,\n  Logo,\n  Navigation,\n  SearchWidget,\n} from '@plone/volto/components';\n\n// scroll direction hook\nfunction useScrollDirection() {\n  const [scrollDirection, setScrollDirection] = React.useState(null);\n\n  React.useEffect(() => {\n    let lastScrollY = window.pageYOffset;\n\n    const updateScrollDirection = () => {\n      const scrollY = window.pageYOffset;\n      const direction = scrollY > lastScrollY ? 'down' : 'up';\n      if (\n        direction !== scrollDirection &&\n        (scrollY - lastScrollY > 5 || scrollY - lastScrollY < -5)\n      ) {\n        setScrollDirection(direction);\n      }\n      lastScrollY = scrollY > 0 ? scrollY : 0;\n    };\n    window.addEventListener('scroll', updateScrollDirection); // add event listener\n    return () => {\n      window.removeEventListener('scroll', updateScrollDirection); // clean up\n    };\n  }, [scrollDirection]);\n\n  return scrollDirection;\n}\n\n/**\n * Header component class.\n * @class Header\n * @extends Component\n */\nclass Header extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    token: PropTypes.string,\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    token: null,\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const scrollDirection = useScrollDirection();\n\n    return (\n      <Segment basic className=\"header-wrapper\" role=\"banner\">\n        <Container\n          className={`sticky ${\n            scrollDirection === 'down' ? '-top-24' : 'top-0'\n          } h-24 bg-blue-200 transition-all duration-500`}\n        >\n          <div className=\"header\">\n            <div className=\"logo-nav-wrapper\">\n              <div className=\"logo\">\n                <a className=\"logo-written\" id=\"writtenlogo\" href=\"/\">\n                  ZEEUWS MUSEUM\n                </a>\n              </div>\n\n              {/* <div id=\"dropdownmenu\">\n                <Menudropdown />\n              </div> */}\n\n              {/* This section is for the rest of the menu */}\n              <Navigation pathname={this.props.pathname} />\n            </div>\n            {/* <div className=\"tools-search-wrapper\">\n              <LanguageSelector />\n              {!this.props.token && (\n                <div className=\"tools\">\n                  <Anontools />\n                </div>\n              )}\n              <div className=\"search\">\n                <SearchWidget />\n              </div>\n            </div> */}\n          </div>\n        </Container>\n      </Segment>\n    );\n  }\n}\n\nexport default connect((state) => ({\n  token: state.userSession.token,\n}))(Header);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AADA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AAAA;AAZA;AADA;AALA;AADA;AAoCA;AACA;AAlEA;AACA;AADA;AAOA;AACA;AAFA;AACA;AAPA;AAiBA;AADA;AACA;AAmDA;AACA;AADA;;;;A","sourceRoot":""}