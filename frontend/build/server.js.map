{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react/jsx-runtime\"","webpack:///external \"semantic-ui-react\"","webpack:///./node_modules/@plone/volto/src/components/index.js","webpack:///external \"react-intl\"","webpack:///./node_modules/@plone/volto/src/helpers/Api/Api.js","webpack:///./node_modules/@plone/volto/src/helpers/Api/APIResourceWithAuth.js","webpack:///./node_modules/@plone/volto/src/helpers/Helmet/HelmetConstants.js","webpack:///./node_modules/@plone/volto/src/helpers/Helmet/HelmetUtils.js","webpack:///./node_modules/@plone/volto/src/helpers/Helmet/Helmet.js","webpack:///./node_modules/@plone/volto/src/helpers/BodyClass/BodyClass.jsx","webpack:///./node_modules/@plone/volto/src/runtime_config.js","webpack:///./node_modules/@plone/volto/src/helpers/Html/Html.jsx","webpack:///./node_modules/@plone/volto/src/helpers/AuthToken/AuthToken.js","webpack:///./node_modules/@plone/volto/src/helpers/Sitemap/Sitemap.js","webpack:///./node_modules/@plone/volto/src/helpers/Robots/Robots.js","webpack:///./node_modules/@plone/volto/src/helpers/Content/Content.js","webpack:///./node_modules/@plone/volto/src/helpers/ScrollToTop/ScrollToTop.jsx","webpack:///./node_modules/@plone/volto/src/helpers/LanguageMap/LanguageMap.js","webpack:///./node_modules/@plone/volto/src/helpers/MessageLabels/MessageLabels.js","webpack:///./node_modules/@plone/volto/src/helpers/FormValidation/FormValidation.js","webpack:///./node_modules/@plone/volto/src/helpers/User/User.js","webpack:///./node_modules/@plone/volto/src/helpers/Utils/useDetectClickOutside.js","webpack:///./node_modules/@plone/volto/src/helpers/Utils/usePagination.js","webpack:///./node_modules/@plone/volto/src/helpers/Utils/usePrevious.js","webpack:///./node_modules/@plone/volto/src/helpers/UndoManager/useUndoManager.js","webpack:///./node_modules/@plone/volto/src/helpers/Cookies/cookies.js","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"react\"","webpack:///./node_modules/@plone/volto/src/constants/ActionTypes.js","webpack:///./node_modules/@plone/volto/src/registry.js","webpack:///./node_modules/@plone/volto/src/actions/actions/actions.js","webpack:///./node_modules/@plone/volto/src/actions/breadcrumbs/breadcrumbs.js","webpack:///./node_modules/@plone/volto/src/actions/toolbar/toolbar.js","webpack:///./node_modules/@plone/volto/src/actions/clipboard/clipboard.js","webpack:///./node_modules/@plone/volto/src/actions/addons/addons.js","webpack:///./node_modules/@plone/volto/src/actions/comments/comments.js","webpack:///./node_modules/@plone/volto/src/actions/content/content.js","webpack:///./node_modules/@plone/volto/src/actions/controlpanels/controlpanels.js","webpack:///./node_modules/@plone/volto/src/actions/diff/diff.js","webpack:///./node_modules/@plone/volto/src/actions/emailNotification/emailNotification.js","webpack:///./node_modules/@plone/volto/src/actions/groups/groups.js","webpack:///./node_modules/@plone/volto/src/actions/history/history.js","webpack:///./node_modules/@plone/volto/src/actions/messages/messages.js","webpack:///./node_modules/@plone/volto/src/actions/navigation/navigation.js","webpack:///./node_modules/@plone/volto/src/actions/roles/roles.js","webpack:///./node_modules/@plone/volto/src/actions/schema/schema.js","webpack:///./node_modules/@plone/volto/src/actions/sharing/sharing.js","webpack:///./node_modules/@plone/volto/src/actions/types/types.js","webpack:///./node_modules/@plone/volto/src/actions/users/users.js","webpack:///./node_modules/@plone/volto/src/actions/userSession/userSession.js","webpack:///./node_modules/@plone/volto/src/actions/vocabularies/vocabularies.js","webpack:///./node_modules/@plone/volto/src/actions/workflow/workflow.js","webpack:///./node_modules/@plone/volto/src/actions/querystring/querystring.js","webpack:///./node_modules/@plone/volto/src/actions/querystringsearch/querystringsearch.js","webpack:///./node_modules/@plone/volto/src/actions/sidebar/sidebar.js","webpack:///./node_modules/@plone/volto/src/actions/translations/translations.js","webpack:///./node_modules/@plone/volto/src/actions/blocksClipboard/blocksClipboard.js","webpack:///./node_modules/@plone/volto/src/actions/lazyLibraries/lazyLibraries.js","webpack:///./node_modules/@plone/volto/src/actions/authRole/authRole.js","webpack:///./node_modules/@plone/volto/src/actions/language/language.js","webpack:///./node_modules/@plone/volto/src/actions/workingcopy/workingcopy.js","webpack:///external \"react-redux\"","webpack:///external \"prop-types\"","webpack:///external \"lodash/map\"","webpack:///external \"redux\"","webpack:///external \"react-router-dom\"","webpack:///./node_modules/@plone/volto/src/helpers/Loadable/Loadable.js","webpack:///external \"classnames\"","webpack:///external \"react-toastify\"","webpack:///./node_modules/@plone/volto/src/icons/clear.svg","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/SelectStyling.jsx","webpack:///external \"react-portal\"","webpack:///external \"@loadable/component\"","webpack:///./node_modules/@plone/volto/src/helpers/Url/urlRegex.js","webpack:///./node_modules/@plone/volto/src/helpers/Url/Url.js","webpack:///external \"lodash/isEqual\"","webpack:///external \"lodash/find\"","webpack:///external \"query-string\"","webpack:///./node_modules/@plone/volto/src/components/theme/Icon/Icon.jsx","webpack:///./node_modules/@plone/volto/src/icons/back.svg","webpack:///external \"@babel/runtime/helpers/objectWithoutProperties\"","webpack:///external \"lodash/keys\"","webpack:///external \"lodash/filter\"","webpack:///external \"lodash/isEmpty\"","webpack:///./node_modules/@plone/volto/src/icons/right-key.svg","webpack:///external \"lodash/concat\"","webpack:///external \"react-router\"","webpack:///./node_modules/@plone/volto/src/icons/delete.svg","webpack:///./node_modules/@plone/volto/src/components/manage/Pluggable/index.js","webpack:///./node_modules/@plone/volto/src/icons/down-key.svg","webpack:///external \"uuid\"","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Block/Schema.jsx","webpack:///external \"rrule\"","webpack:///external \"lodash/join\"","webpack:///./node_modules/@plone/volto/src/icons/ahead.svg","webpack:///external \"lodash/omit\"","webpack:///./node_modules/@plone/volto/src/helpers/Blocks/Blocks.js","webpack:///./node_modules/@plone/volto/src/icons/save.svg","webpack:///./node_modules/@plone/volto/src/icons/up-key.svg","webpack:///external \"jwt-decode\"","webpack:///./node_modules/@plone/volto/src/icons/nav.svg","webpack:///./node_modules/@plone/volto/src/helpers/Utils/Utils.js","webpack:///external \"lodash/slice\"","webpack:///./node_modules/@plone/volto/node_modules/connected-react-router/esm/actions.js","webpack:///external \"lodash/cloneDeep\"","webpack:///external \"date-fns\"","webpack:///external \"react-dom\"","webpack:///./node_modules/@plone/volto/src/icons/left-key.svg","webpack:///external \"lodash/last\"","webpack:///external \"lodash/toPairs\"","webpack:///./node_modules/@plone/volto/src/icons/zoom.svg","webpack:///external \"express\"","webpack:///external \"react-intl-redux\"","webpack:///external \"lodash/remove\"","webpack:///external \"lodash/pickBy\"","webpack:///./node_modules/@plone/volto/src/helpers/Extensions/withBlockExtensions.js","webpack:///./node_modules/@plone/volto/src/components/manage/Sidebar/ObjectBrowserNav.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Sidebar/ObjectBrowserBody.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Sidebar/ObjectBrowser.jsx","webpack:///./node_modules/@plone/volto/src/actions/asyncConnect/asyncConnect.js","webpack:///./node_modules/@plone/volto/src/icons/check.svg","webpack:///external \"react-dom/server\"","webpack:///./node_modules/@plone/volto/src/helpers/Vocabularies/Vocabularies.js","webpack:///external \"lodash/compact\"","webpack:///external \"semantic-ui-react/dist/commonjs/lib\"","webpack:///external \"use-deep-compare-effect\"","webpack:///external \"react-cookie\"","webpack:///external \"lodash/uniqBy\"","webpack:///./node_modules/@plone/volto/src/components/manage/Sidebar/AlignBlock.jsx","webpack:///external \"lodash/without\"","webpack:///external \"promise-file-reader\"","webpack:///external \"universal-cookie\"","webpack:///external \"lodash/groupBy\"","webpack:///./node_modules/@plone/volto/src/icons/link.svg","webpack:///external \"lodash/isObject\"","webpack:///./node_modules/@plone/volto/src/helpers/Utils/Date.js","webpack:///./node_modules/@plone/volto/src/components/theme/View/View.jsx","webpack:///./node_modules/@plone/volto/src/routes.js","webpack:///./src/routes.js","webpack:///./node_modules/@plone/volto/src/server.jsx","webpack:///./node_modules/@plone/volto/src/actions/search/search.js","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/ObjectBrowserWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/ObjectWidget.jsx","webpack:///external \"superagent\"","webpack:///external \"react-router-config\"","webpack:///./node_modules/@plone/volto/src/icons/home.svg","webpack:///./node_modules/@plone/volto/src/components/theme/View/RenderBlocks.jsx","webpack:///./node_modules/@plone/volto/src/icons/folder.svg","webpack:///./node_modules/@plone/volto/src/icons/plone.svg","webpack:///./node_modules/@plone/volto/src/icons/add.svg","webpack:///./node_modules/@plone/volto/src/icons/drag.svg","webpack:///./node_modules/@plone/volto/src/icons/image.svg","webpack:///external \"lodash/isArray\"","webpack:///external \"lodash-move\"","webpack:///external \"lodash/pull\"","webpack:///external \"lodash/isBoolean\"","webpack:///./locales lazy ^\\.\\/.*\\.json$ namespace object","webpack:///external \"url\"","webpack:///external \"lodash/mapKeys\"","webpack:///external \"history\"","webpack:///./node_modules/@plone/volto/src/icons/more.svg","webpack:///external \"lodash/nth\"","webpack:///external \"lodash/findIndex\"","webpack:///./node_modules/@plone/volto/src/reducers/actions/actions.js","webpack:///./node_modules/@plone/volto/src/reducers/addons/addons.js","webpack:///./node_modules/@plone/volto/src/reducers/apierror/apierror.js","webpack:///./node_modules/@plone/volto/src/reducers/breadcrumbs/breadcrumbs.js","webpack:///./node_modules/@plone/volto/src/reducers/browserdetect/browserdetect.js","webpack:///./node_modules/@plone/volto/src/reducers/comments/comments.js","webpack:///./node_modules/@plone/volto/src/reducers/content/content.js","webpack:///./node_modules/@plone/volto/src/reducers/controlpanels/controlpanels.js","webpack:///./node_modules/@plone/volto/src/reducers/clipboard/clipboard.js","webpack:///./node_modules/@plone/volto/src/reducers/diff/diff.js","webpack:///./node_modules/@plone/volto/src/reducers/emailNotification/emailNotification.js","webpack:///./node_modules/@plone/volto/src/reducers/emailSend/emailSend.js","webpack:///./node_modules/@plone/volto/src/reducers/form/form.js","webpack:///./node_modules/@plone/volto/src/reducers/history/history.js","webpack:///./node_modules/@plone/volto/src/reducers/groups/groups.js","webpack:///./node_modules/@plone/volto/src/reducers/messages/messages.js","webpack:///./node_modules/@plone/volto/src/reducers/navigation/navigation.js","webpack:///./node_modules/@plone/volto/src/reducers/querystring/querystring.js","webpack:///./node_modules/@plone/volto/src/reducers/querystringsearch/querystringsearch.js","webpack:///./node_modules/@plone/volto/src/reducers/roles/roles.js","webpack:///./node_modules/@plone/volto/src/reducers/schema/schema.js","webpack:///./node_modules/@plone/volto/src/reducers/search/search.js","webpack:///./node_modules/@plone/volto/src/reducers/sharing/sharing.js","webpack:///./node_modules/@plone/volto/src/reducers/sidebar/sidebar.js","webpack:///./node_modules/@plone/volto/src/reducers/types/types.js","webpack:///./node_modules/@plone/volto/src/reducers/users/users.js","webpack:///./node_modules/@plone/volto/src/reducers/authRole/authRole.js","webpack:///./node_modules/@plone/volto/src/reducers/vocabularies/vocabularies.js","webpack:///./node_modules/@plone/volto/src/reducers/workflow/workflow.js","webpack:///./node_modules/@plone/volto/src/reducers/toolbar/toolbar.js","webpack:///./node_modules/@plone/volto/src/reducers/blocksClipboard/blocksClipboard.js","webpack:///./node_modules/@plone/volto/src/reducers/lazyLibraries/lazyLibraries.js","webpack:///./node_modules/@plone/volto/src/reducers/asyncConnect/asyncConnect.js","webpack:///./node_modules/@plone/volto/src/reducers/workingcopy/workingcopy.js","webpack:///./src/reducers/index.js","webpack:///./node_modules/@plone/volto/src/reducers/index.js","webpack:///./node_modules/@plone/volto/src/reducers/contextNavigation/contextNavigation.js","webpack:///./node_modules/@plone/volto/src/middleware/api.js","webpack:///./node_modules/@plone/volto/src/middleware/crashReporter.js","webpack:///./node_modules/@plone/volto/src/middleware/blacklistRoutes.js","webpack:///./node_modules/@plone/volto/src/store.js","webpack:///external \"hoist-non-react-statics\"","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/SelectUtils.js","webpack:///external \"react-dropzone\"","webpack:///external \"draft-js-plugins-editor\"","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/DatetimeWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/ToC/View.jsx","webpack:///external \"lodash/intersection\"","webpack:///external \"lodash/flatten\"","webpack:///./node_modules/@plone/volto/src/icons/calendar.svg","webpack:///./node_modules/@plone/volto/src/icons/cut.svg","webpack:///./node_modules/@plone/volto/src/icons/copy.svg","webpack:///./node_modules/@plone/volto/src/icons/user.svg","webpack:///./node_modules/@plone/volto/src/icons/editing.svg","webpack:///external \"lodash/includes\"","webpack:///external \"redraft\"","webpack:///./node_modules/@plone/volto/src/icons/code.svg","webpack:///./node_modules/@plone/volto/src/icons/list-bullet.svg","webpack:///./node_modules/@plone/volto/node_modules/connected-react-router/esm/selectors.js","webpack:///./node_modules/@plone/volto/node_modules/connected-react-router/esm/ConnectedRouter.js","webpack:///./node_modules/@plone/volto/node_modules/connected-react-router/esm/reducer.js","webpack:///./node_modules/@plone/volto/node_modules/connected-react-router/esm/structure/plain/index.js","webpack:///./node_modules/@plone/volto/node_modules/connected-react-router/esm/structure/plain/getIn.js","webpack:///./node_modules/@plone/volto/node_modules/connected-react-router/esm/index.js","webpack:///external \"lodash/endsWith\"","webpack:///external \"lodash/mapValues\"","webpack:///./node_modules/@plone/volto/src/icons/checkbox-unchecked.svg","webpack:///./node_modules/@plone/volto/src/icons/checkbox-checked.svg","webpack:///external \"lodash/isString\"","webpack:///./node_modules/@plone/volto/src/error.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/View/DefaultView.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/ArrayWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/FileWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/IdWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/PasswordWidget.jsx","webpack:///./node_modules/@plone/volto/src/helpers/AsyncConnect/utils.js","webpack:///./node_modules/@plone/volto/src/helpers/AsyncConnect/ssr.js","webpack:///./node_modules/@plone/volto/src/helpers/AsyncConnect/AsyncConnect.jsx","webpack:///./node_modules/@plone/volto/src/helpers/AsyncConnect/index.js","webpack:///external \"react-transition-group\"","webpack:///./node_modules/@plone/volto/src/constants/Languages.js","webpack:///external \"lodash/merge\"","webpack:///./node_modules/@plone/volto/src/icons/ready.svg","webpack:///./node_modules/@plone/volto/src/icons/camera.svg","webpack:///external \"lodash/indexOf\"","webpack:///./node_modules/@plone/volto/src/config/Views.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/View/EventView.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/RecurrenceWidget/Utils.js","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/RecurrenceWidget/IntervalField.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/RecurrenceWidget/ByDayField.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/RecurrenceWidget/EndField.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/RecurrenceWidget/ByMonthDayField.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/RecurrenceWidget/SelectInput.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/RecurrenceWidget/WeekdayOfTheMonthIndexField.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/RecurrenceWidget/WeekdayOfTheMonthField.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/RecurrenceWidget/ByMonthField.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/RecurrenceWidget/MonthOfTheYearField.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/RecurrenceWidget/ByYearField.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/RecurrenceWidget/Occurences.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/RecurrenceWidget/RecurrenceWidget.jsx","webpack:///./node_modules/@plone/volto/src/helpers/Extensions/withBlockSchemaEnhancer.js","webpack:///./node_modules/@plone/volto/src/components/theme/PreviewImage/PreviewImage.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/NotFound/NotFound.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Forbidden/Forbidden.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Unauthorized/Unauthorized.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/UniversalLink/UniversalLink.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Preferences/PersonalPreferences.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Preferences/PersonalInformation.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/View/FileView.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/View/ImageView.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/View/NewsItemView.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/View/ListingView.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/View/SummaryView.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/View/TabularView.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/View/AlbumView.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Toolbar/More.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Toolbar/PersonalTools.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Toolbar/Types.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Sidebar/SidebarPopup.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Form/Field.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Form/InlineForm.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Block/Edit.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/FormFieldWrapper.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/CheckboxWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/ReferenceWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/SchemaWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/SelectWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/TextareaWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/TextWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/WysiwygWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/ObjectListWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Description/Edit.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Title/Edit.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/ToC/Edit.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Text/Edit.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Image/Edit.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Listing/Edit.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Listing/ListingData.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Video/Edit.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/HeroImageLeft/View.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Maps/Edit.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/HTML/Edit.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Description/View.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Title/View.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Text/View.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Image/View.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Listing/View.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Video/View.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Maps/View.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/HTML/View.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Text/Schema.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Image/Schema.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/ToC/Schema.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/hocs/withQueryString.jsx","webpack:///external \"react-beautiful-dnd\"","webpack:///external \"react-select\"","webpack:///./node_modules/@plone/volto/src/components/theme/MultilingualRedirector/MultilingualRedirector.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/WorkingCopyToastsFactory/WorkingCopyToastsFactory.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/LockingToastsFactory/LockingToastsFactory.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/App/App.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/HeroImageLeft/Edit.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Listing/ListingBody.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Listing/withQuerystringResults.jsx","webpack:///external \"react-side-effect\"","webpack:///external \"lodash/uniq\"","webpack:///./node_modules/@plone/volto/src/reducers/userSession/userSession.js","webpack:///external \"lodash/union\"","webpack:///./node_modules/@plone/volto/src/helpers/Loadable/index.js","webpack:///./node_modules/@plone/volto/src/icons/upload.svg","webpack:///./node_modules/@plone/volto/src/icons/paste.svg","webpack:///./node_modules/@plone/volto/src/icons/sort-down.svg","webpack:///./node_modules/@plone/volto/src/icons/sort-up.svg","webpack:///./node_modules/@plone/volto/src/icons/add-document.svg","webpack:///./node_modules/@plone/volto/src/icons/file.svg","webpack:///./node_modules/@plone/volto/src/icons/pen.svg","webpack:///./node_modules/@plone/volto/src/icons/add-user.svg","webpack:///external \"lodash/split\"","webpack:///external \"react-animate-height\"","webpack:///./node_modules/@plone/volto/src/icons/circle-plus.svg","webpack:///./node_modules/@plone/volto/src/icons/unlink.svg","webpack:///./node_modules/@plone/volto/src/icons/show.svg","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Image/block-image.svg","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Listing/schema.js","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Video/Body.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/HeroImageLeft/schema.js","webpack:///./node_modules/@plone/volto/src/icons/globe.svg","webpack:///./node_modules/@plone/volto/src/icons/videocamera.svg","webpack:///./node_modules/@plone/volto/src/icons/text.svg","webpack:///./node_modules/@plone/volto/src/icons/subtext.svg","webpack:///./node_modules/@plone/volto/src/icons/megaphone.svg","webpack:///external \"debug\"","webpack:///external \"lodash/memoize\"","webpack:///external \"fs\"","webpack:///external \"locale\"","webpack:///external \"path\"","webpack:///external \"redux-localstorage-simple\"","webpack:///external \"@sentry/node\"","webpack:///./node_modules/@plone/volto/src/icons/settings.svg","webpack:///./node_modules/@plone/volto/src/config/Widgets.jsx","webpack:///external \"serialize-javascript\"","webpack:///external \"react-share\"","webpack:///./node_modules/@plone/volto/src/icons/translate.svg","webpack:///./node_modules/@plone/volto/src/icons/circle-bottom.svg","webpack:///./node_modules/@plone/volto/src/icons/circle-top.svg","webpack:///external \"lodash/reverse\"","webpack:///external \"lodash/sortBy\"","webpack:///./node_modules/@plone/volto/src/icons/forbidden.svg","webpack:///external \"lodash/fromPairs\"","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/QuerystringWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/TokenWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/UrlWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/NumberWidget.jsx","webpack:///external \"decorate-component-with-props\"","webpack:///external \"http-proxy-middleware\"","webpack:///external \"@loadable/server\"","webpack:///./node_modules/@plone/volto/src/components/theme/AppExtras/AppExtras.jsx","webpack:///./src/customizations/components/theme/Header/Header.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Logo/Logo.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Anontools/Anontools.jsx","webpack:///./src/customizations/components/theme/Breadcrumbs/Breadcrumbs.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/SearchWidget/SearchWidget.jsx","webpack:///./src/customizations/components/theme/Footer/Footer.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Title/Title.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Pagination/Pagination.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Tags/Tags.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/OutdatedBrowser/OutdatedBrowser.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/LanguageSelector/LanguageSelector.js","webpack:///./node_modules/@plone/volto/src/components/theme/SkipLinks/SkipLinks.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Error/Error.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Avatar/Avatar.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/ConditionalLink/ConditionalLink.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/LinkMore/LinkMore.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/ContactForm/ContactForm.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Login/Login.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Logout/Logout.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Sitemap/Sitemap.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Search/Search.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Comments/Comments.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/SocialSharing/SocialSharing.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Register/Register.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/PasswordReset/PasswordReset.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/PasswordReset/RequestPasswordReset.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Preferences/ChangePassword.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Multilingual/CreateTranslation.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Multilingual/TranslationObject.jsx","webpack:///./node_modules/@plone/volto/node_modules/connected-react-router/esm/middleware.js","webpack:///./node_modules/@plone/volto/src/components/manage/Multilingual/CompareLanguages.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Actions/Actions.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Add/Add.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/AddonsControlpanel.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Contents/circle.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/DatabaseInformation.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/Controlpanel.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/Controlpanels.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/ContentTypes.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/ContentType.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/ContentTypeLayout.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/ContentTypeSchema.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/ContentTypesActions.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/Users/UsersControlpanel.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/Groups/GroupsControlpanel.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/ModerateComments.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/VersionOverview.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Delete/Delete.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Diff/Diff.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Edit/Edit.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Form/ModalForm.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/History/History.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Sharing/Sharing.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Messages/Messages.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/BlockChooser/BlockChooser.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/BlockChooser/BlockChooserButton.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Sidebar/Sidebar.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Sidebar/SidebarPortal.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Toast/Toast.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Multilingual/ManageTranslations.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Form/Form.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Form/BlocksToolbar.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Form/UndoToolbar.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Search/SearchTags.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Comments/CommentEditModal.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Contents/ContentsBreadcrumbs.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Contents/ContentsIndexHeader.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Contents/ContentsItem.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Contents/ContentsUploadModal.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Contents/ContentsPropertiesModal.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Contents/ContentsRenameModal.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Contents/ContentsWorkflowModal.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Contents/ContentsTagsModal.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/Users/RenderUsers.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/Groups/RenderGroups.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Diff/DiffField.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/DragDropList/DragDropList.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Form/BlockDataForm.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/SchemaWidgetFieldset.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Maps/MapsSidebar.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Video/VideoSidebar.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/LeadImage/LeadImageSidebar.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Block/Style.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Block/Settings.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/ContentMetadataTags/ContentMetadataTags.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/FormattedDate/FormattedDate.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/FormattedDate/FormattedRelativeDate.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Component/Component.jsx","webpack:///external \"react-dates/initialize\"","webpack:///./node_modules/react-dates/lib/css/_datepicker.css","webpack:///external \"react-simple-code-editor\"","webpack:///external \"react-image-gallery\"","webpack:///external \"prettier/standalone\"","webpack:///external \"prettier/parser-html\"","webpack:///external \"prismjs/components/prism-core\"","webpack:///external \"react-window\"","webpack:///external \"react-sortable-hoc\"","webpack:///external \"react-select-async-paginate\"","webpack:///external \"react-select/async\"","webpack:///external \"react-select/creatable\"","webpack:///external \"react-select/async-creatable\"","webpack:///external \"diff\"","webpack:///external \"moment\"","webpack:///external \"react-dates\"","webpack:///external \"react-dnd\"","webpack:///external \"react-dnd-html5-backend\"","webpack:///external \"immutable\"","webpack:///external \"draft-js\"","webpack:///external \"draft-js/lib/isSoftNewlineEvent\"","webpack:///external \"draftjs-filters\"","webpack:///external \"draft-js-inline-toolbar-plugin\"","webpack:///external \"draft-js-import-html\"","webpack:///external \"draft-js-block-breakout-plugin\"","webpack:///external \"draft-js-buttons/lib/utils/createInlineStyleButton\"","webpack:///external \"draft-js-buttons/lib/utils/createBlockStyleButton\"","webpack:///external \"draft-js-plugins-utils\"","webpack:///external \"rc-time-picker\"","webpack:///./node_modules/@plone/volto/src/config/NonContentRoutes.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/LeadImage/View.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Table/View.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/LeadImage/Edit.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Listing/DefaultTemplate.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Listing/SummaryTemplate.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Table/Edit.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/hocs/withSearch.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/SearchBlockView.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/utils.js","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/schema.js","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/SearchBlockEdit.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SearchDetails.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/components/Facets.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SelectStyling.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/components/base.js","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SelectFacet.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/components/CheckboxFacet.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/components/DateRangeFacet.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SearchInput.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/components/FilterList.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SortOn.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/components/ToggleFacet.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SelectFacetFilterListEntry.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/components/ToggleFacetFilterListEntry.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/components/DateRangeFacetFilterListEntry.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/layout/RightColumnFacets.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/layout/LeftColumnFacets.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/layout/TopSideFacets.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Listing/getAsyncData.js","webpack:///./node_modules/@plone/volto/src/config/Blocks.jsx","webpack:///./node_modules/@plone/volto/src/config/Components.jsx","webpack:///./node_modules/@plone/volto/src/config/Sentry.jsx","webpack:///./node_modules/@plone/volto/src/config/ContentIcons.jsx","webpack:///./node_modules/@plone/volto/src/config/ControlPanels.js","webpack:///./node_modules/@plone/volto/src/config/RichTextEditor/ToHTML.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/AnchorPlugin/components/Link/index.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/AnchorPlugin/utils/EditorUtils.js","webpack:///./node_modules/@plone/volto/src/components/manage/AnchorPlugin/components/LinkButton/AddLinkForm.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/AnchorPlugin/components/LinkButton/index.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/AnchorPlugin/linkStrategy.js","webpack:///./node_modules/@plone/volto/src/components/manage/AnchorPlugin/index.jsx","webpack:///./node_modules/@plone/volto/src/config/RichTextEditor/Plugins.jsx","webpack:///./node_modules/@plone/volto/src/config/RichTextEditor/Styles.jsx","webpack:///./node_modules/@plone/volto/src/config/RichTextEditor/FromHTML.jsx","webpack:///./node_modules/@plone/volto/src/config/RichTextEditor/index.js","webpack:////private/var/folders/nk/871hwn1j52l2q091vzfv37nm0000gn/T/tmp-16581-1lJaXnfgh3J7-.js","webpack:///./node_modules/@plone/volto/src/config/index.js","webpack:///./node_modules/@plone/volto/src/config/RichTextEditor/Blocks.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Navigation/NavItem.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/Navigation/NavItems.jsx","webpack:///./src/customizations/components/theme/Navigation/Navigation.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/Users/UserGroupMembershipListing.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/Users/UserGroupMembershipMatrix.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Controlpanels/Users/UserGroupMembershipControlPanel.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/View/EventDatesInfo.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/EventDetails/EventDetails.jsx","webpack:///./node_modules/@plone/volto/src/constants/Indexes.js","webpack:///./node_modules/@plone/volto/src/components/manage/Contents/Contents.jsx","webpack:///./node_modules/@plone/volto/src/constants/Layouts.js","webpack:///./node_modules/@plone/volto/src/components/manage/Display/Display.jsx","webpack:///./node_modules/@plone/volto/src/constants/Workflows.js","webpack:///./node_modules/@plone/volto/src/components/manage/Workflow/Workflow.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Toolbar/StandardWrapper.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Toolbar/Toolbar.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Block/EditBlockWrapper.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Block/BlocksForm.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Image/ImageSizeWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Image/ImageSidebar.jsx","webpack:///./node_modules/@plone/volto/src/start-server.js","webpack:///external \"http\"","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/AlignWidget.jsx","webpack:///./src/customizations/components/theme/Logo/Logo.svg","webpack:///external \"react-fast-compare\"","webpack:///external \"object-assign\"","webpack:///external \"lodash/identity\"","webpack:///external \"tlds\"","webpack:///external \"prepend-http\"","webpack:///external \"zlib\"","webpack:///external \"lodash/omitBy\"","webpack:///external \"lodash/transform\"","webpack:///external \"undoo\"","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Listing/default-image.svg","webpack:///external \"redux-thunk\"","webpack:///./node_modules/@plone/volto/node_modules/redux-devtools-extension/developmentOnly.js","webpack:///external \"lodash/startsWith\"","webpack:///external \"pretty-bytes\"","webpack:///./node_modules/@plone/volto/src/icons/open.svg","webpack:///./node_modules/@plone/volto/src/icons/tag.svg","webpack:///./node_modules/@plone/volto/src/icons/rename.svg","webpack:///./node_modules/@plone/volto/src/icons/semaphore.svg","webpack:///./node_modules/@plone/volto/src/icons/properties.svg","webpack:///./node_modules/@plone/volto/src/icons/checkbox-indeterminate.svg","webpack:///./node_modules/@plone/volto/src/icons/configuration-app.svg","webpack:///external \"lodash/difference\"","webpack:///external \"lodash/toNumber\"","webpack:///./node_modules/@plone/volto/src/icons/remove.svg","webpack:///./node_modules/@plone/volto/src/icons/circle-dismiss.svg","webpack:///./node_modules/@plone/volto/src/icons/log-out.svg","webpack:///./node_modules/@plone/volto/src/icons/unlock.svg","webpack:///./node_modules/@plone/volto/src/icons/info.svg","webpack:///./node_modules/@plone/volto/src/icons/error.svg","webpack:///./node_modules/@plone/volto/src/icons/warning.svg","webpack:///external \"lodash/reduce\"","webpack:///./node_modules/@plone/volto/src/icons/undo.svg","webpack:///./node_modules/@plone/volto/src/icons/redo.svg","webpack:///./node_modules/@plone/volto/src/icons/move-up.svg","webpack:///./node_modules/@plone/volto/src/icons/move-down.svg","webpack:///external \"filesize\"","webpack:///external \"lodash/values\"","webpack:///external \"redux-mock-store\"","webpack:///./node_modules/@plone/volto/src/icons/blank.svg","webpack:///external \"react-anchor-link-smooth-scroll\"","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Video/block-video.svg","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Maps/block-maps.svg","webpack:///./node_modules/@plone/volto/src/icons/indent.svg","webpack:///./node_modules/@plone/volto/src/icons/image-left.svg","webpack:///./node_modules/@plone/volto/src/icons/image-right.svg","webpack:///./node_modules/@plone/volto/src/icons/image-fit.svg","webpack:///./node_modules/@plone/volto/src/icons/image-full.svg","webpack:///external \"lodash/trim\"","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/QueryWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/QuerySortOnWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/EmailWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/ImageSizeWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/VocabularyTermsWidget.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Search/widgets/SelectMetadataField.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Widgets/SelectAutoComplete.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/View/LinkView.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/ConnectionRefused/ConnectionRefused.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/CorsError/CorsError.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/RequestTimeout/RequestTimeout.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Table/Cell.jsx","webpack:///./node_modules/@plone/volto/src/icons/row-before.svg","webpack:///./node_modules/@plone/volto/src/icons/row-after.svg","webpack:///./node_modules/@plone/volto/src/icons/column-before.svg","webpack:///./node_modules/@plone/volto/src/icons/column-after.svg","webpack:///./node_modules/@plone/volto/src/icons/row-delete.svg","webpack:///./node_modules/@plone/volto/src/icons/column-delete.svg","webpack:///./node_modules/@plone/volto/src/icons/description.svg","webpack:///./node_modules/@plone/volto/src/icons/hero.svg","webpack:///./node_modules/@plone/volto/src/icons/table.svg","webpack:///./node_modules/@plone/volto/src/components/manage/Blocks/Listing/ImageGallery.jsx","webpack:///./node_modules/@plone/volto/src/icons/play.svg","webpack:///./node_modules/@plone/volto/src/icons/pause.svg","webpack:///./node_modules/@plone/volto/src/icons/fullscreen.svg","webpack:///./node_modules/@plone/volto/src/icons/back-down.svg","webpack:///external \"lodash/isFunction\"","webpack:///./node_modules/@plone/volto/src/config/Loadables.jsx","webpack:///external \"@sentry/integrations\"","webpack:///./node_modules/@plone/volto/src/icons/content-existing.svg","webpack:///./node_modules/@plone/volto/src/icons/page.svg","webpack:///./node_modules/@plone/volto/src/icons/content.svg","webpack:///./node_modules/@plone/volto/src/icons/language.svg","webpack:///./node_modules/@plone/volto/src/icons/email.svg","webpack:///./node_modules/@plone/volto/src/icons/world.svg","webpack:///./node_modules/@plone/volto/src/icons/discussion.svg","webpack:///./node_modules/@plone/volto/src/icons/security.svg","webpack:///./node_modules/@plone/volto/src/icons/group.svg","webpack:///./node_modules/@plone/volto/src/icons/add-on.svg","webpack:///./node_modules/@plone/volto/src/icons/bold.svg","webpack:///./node_modules/@plone/volto/src/icons/italic.svg","webpack:///./node_modules/@plone/volto/src/icons/list-numbered.svg","webpack:///./node_modules/@plone/volto/src/icons/quote.svg","webpack:///external \"querystring\"","webpack:///external \"detect-browser\"","webpack:///external \"universal-cookie-express\"","webpack:///./node_modules/@plone/volto/src/sentry.js","webpack:///./src/index.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///external \"@sentry/browser\"","webpack:///./node_modules/react-image-gallery/styles/css/image-gallery.css","webpack:///./src/config.js","webpack:///./node_modules/rc-time-picker/assets/index.css","webpack:///external \"prismjs/components/prism-markup\"","webpack:///./node_modules/@plone/volto/src/express-middleware/images.js","webpack:///./node_modules/@plone/volto/src/express-middleware/files.js","webpack:///./node_modules/@plone/volto/src/express-middleware/robotstxt.js","webpack:///./node_modules/@plone/volto/src/express-middleware/sitemap.js","webpack:///./node_modules/@plone/volto/src/express-middleware/devproxy.js","webpack:///./node_modules/@plone/volto/src/config/server.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","e","Promise","resolve","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","oe","err","process","nextTick","s","require","EventView","loadable","DatetimeWidget","RecurrenceWidget","methods","Api","constructor","req","cookies","Cookies","forEach","method","this","path","params","data","type","headers","checkUrl","request","promise","reject","authToken","superagent","settings","config","APISUFIX","legacyTraverse","startsWith","adjustedPath","apiPath","internalApiPath","formatUrl","query","universalCookies","set","keys","send","end","response","url","xhr","stripQuerystring","responseURL","length","code","status","body","text","getAPIResourceWithAuth","maxResponseSize","responseType","then","catch","ATTRIBUTE_NAMES","TAG_NAMES","BASE","BODY","HEAD","HTML","LINK","META","NOSCRIPT","SCRIPT","STYLE","TITLE","TAG_PROPERTIES","map","REACT_TAG_MAP","accesskey","charset","class","contenteditable","contextmenu","itemprop","tabindex","HELMET_PROPS","HTML_TAG_MAP","reduce","obj","SELF_CLOSING_TAGS","encodeSpecialCharacters","str","encode","String","replace","getTitleFromPropsList","propsList","innermostTitle","getInnermostProperty","innermostTemplate","Array","isArray","join","innermostDefaultTitle","undefined","getOnChangeClientState","getAttributesFromPropsList","tagType","filter","props","tagAttrs","current","getBaseTagFromPropsList","primaryAttributes","reverse","innermostBaseTag","tag","lowerCaseAttributeKey","toLowerCase","indexOf","concat","getTagsFromPropsList","tagName","approvedSeenTags","warn","approvedTags","instanceTags","instanceSeenTags","primaryAttributeKey","attributeKey","push","tagUnion","objectAssign","rafPolyfill","clock","Date","now","callback","currentTime","setTimeout","cafPolyfill","id","clearTimeout","requestAnimationFrame","window","webkitRequestAnimationFrame","mozRequestAnimationFrame","global","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","msg","console","_helmetCallback","commitTagChanges","newState","cb","baseTag","bodyAttributes","htmlAttributes","linkTags","metaTags","noscriptTags","onChangeClientState","scriptTags","styleTags","title","titleAttributes","updateAttributes","updateTitle","tagUpdates","updateTags","addedTags","removedTags","newTags","oldTags","flattenArray","possibleArray","attributes","document","elementTag","getElementsByTagName","helmetAttributeString","getAttribute","helmetAttributes","split","attributesToRemove","attributeKeys","attribute","setAttribute","indexToSave","splice","removeAttribute","tags","headElement","head","querySelector","tagNodes","querySelectorAll","slice","indexToDelete","newElement","createElement","innerHTML","styleSheet","cssText","appendChild","createTextNode","some","existingTag","index","isEqualNode","parentNode","removeChild","generateElementAttributesAsString","attr","convertElementAttributestoReactProps","initProps","getMethodsForTag","toComponent","React","generateTitleAsReactComponent","toString","attributeString","flattenedTitle","generateTitleAsString","mappedTag","mappedAttribute","content","dangerouslySetInnerHTML","__html","generateTagsAsReactComponent","attributeHtml","string","tagContent","isSelfClosing","generateTagsAsString","mapStateOnServer","base","link","meta","noscript","script","style","HelmetSideEffects","withSideEffect","defer","HelmetExport","Component","canUseDOM","shouldComponentUpdate","nextProps","isEqual","mapNestedChildrenToProps","child","nestedChildren","Error","flattenArrayTypeChildren","arrayTypeChildren","newChildProps","mapObjectTypeChildren","newProps","mapArrayTypeChildrenToProps","newFlattenedProps","arrayChildName","warnOnInvalidChildren","mapChildrenToProps","children","Children","initAttributes","convertReactPropstoHtmlAttributes","render","peek","mappedState","rewind","renderStatic","BodyClass","only","defaultProps","className","classList","includes","contains","add","env_obj","env","assign","runtimeConfig","loadReducers","state","initialReducersBlacklist","Html","extractor","markup","store","criticalCss","publicURL","Helmet","bodyClass","lang","charSet","serialize","rel","href","sizes","getLinkElements","elem","cloneElement","crossOrigin","as","getStyleElements","role","aria-label","getState","extractScripts","getScriptElements","persistAuthToken","currentValue","handleChange","initial","previousValue","userSession","token","getCookieOptions","expires","jwtDecode","exp","getTime","dispatch","loginRenew","router","location","pathname","remove","subscribe","generateSitemap","_req","error","result","items","item","toPublicURL","modified","zlib","gzip","Buffer","from","_err","buffer","generateRobots","nestContent","nestedProps","behavior","values","getLayoutFieldname","getContentIcon","isFolderish","contentIcons","Folder","File","getLanguageIndependentFields","schema","properties","field","ScrollToTop","componentDidUpdate","prevProps","scrollTo","withRouter","langmap","Proxy","ach","nativeName","englishName","ady","af","ak","ar","az","bg","bn","br","bs","ca","cak","cs","cy","da","de","dsb","el","en","eo","es","et","eu","fa","ff","fi","fr","ga","gd","gl","gv","he","hi","hr","hsb","ht","hu","is","it","ja","km","kab","kn","ko","kw","la","lb","lt","lv","mai","mk","ml","mr","ms","mt","my","no","nb","ne","nl","oc","pa","pl","pt","ro","ru","sh","sk","sl","sq","sr","su","sv","sw","ta","te","tg","th","tl","tlh","tr","uk","ur","uz","vi","yi","zh","toUpperCase","messages","defineMessages","addBlock","required","minLength","maxLength","minimum","maximum","uniqueItems","save","isNumber","isInteger","isValidEmail","isValidURL","cancel","thereWereSomeErrors","searchUsers","searchGroups","filterByGroups","back","deleteUserConfirmTitle","deleteGroupConfirmTitle","addUserButtonTitle","addGroupsButtonTitle","addUserFormTitle","addGroupsFormTitle","addUserFormUsernameTitle","addGroupsFormTitleTitle","addUserFormFullnameTitle","addUserGroupNameTitle","addGroupsFormGroupNameTitle","addGroupsFormDescriptionTitle","addUserFormEmailTitle","addGroupsFormEmailTitle","addUserFormPasswordTitle","addUserFormRolesTitle","updateRoles","updateGroups","addGroupsFormRolesTitle","success","userCreated","groupCreated","users","usergroup","usergroupmemberbership","noUserFound","pleaseSearchOrFilterUsers","addUsersToGroup","removeUsersFromGroup","groups","copyBlocks","cutBlocks","pasteBlocks","deleteBlocks","showAllUserButton","showAllUserText","addJoinedGroups","validationMessage","isValid","maxCriterion","valueToCompare","intlFunc","len","isMaxPropertyValid","minCriterion","isMinPropertyValid","widgetValidation","email","emailValue","emailObj","test","urlValue","urlObj","password","passwordValue","passwordObj","itemObj","maxLengthj","number","isNaN","integer","validateFieldsPerFieldset","formData","formatMessage","touchedField","errors","fields","requiredField","widget","isEmpty","readonly","requiredFieldName","validateRequiredFields","fieldId","fieldWidgetType","widgetValidationCriteria","fieldData","fieldErrors","widgetCriterion","uniqueErrors","hasUniqueItems","giveServerErrorsToCorrespondingFields","requestError","errorsList","requestItem","resultObj","JSON","parse","tryParseJSON","errorItem","message","FormValidation","fieldsets","activeIndex","fieldSet","foundfield","getIndexOfFirstTabWithErrors","userHasRoles","user","roles","useDetectClickOutside","onTriggered","disableClick","disableKeys","allowAnyKey","triggerKeys","ref","useRef","keyListener","useCallback","clickListener","doesNodeContainClick","useEffect","addEventListener","removeEventListener","usePagination","defaultPage","previousQuery","usePrevious","currentPage","setCurrentPage","useState","useDeepCompareEffect","useUndoManager","onUndoRedo","maxUndoLevels","enableHotKeys","canUndo","setCanUndo","canRedo","setCanRedo","manager","Undoo","callbackRef","doUndo","undo","nextUndo","nextRedo","doRedo","redo","handleKeys","event","keyName","ctrlKey","metaKey","preventDefault","stopPropagation","options","secure","otherOptions","secureOption","protocol","cookieExpires","ADD_COMMENT","ADD_MESSAGE","SET_APIERROR","RESET_APIERROR","COPY","COPY_CONTENT","CREATE_CONTENT","CREATE_GROUP","CREATE_USER","CUT","DELETE_COMMENT","DELETE_CONTENT","DELETE_GROUP","DELETE_USER","EMAIL_NOTIFICATION","EMAIL_SEND","EXPAND_TOOLBAR","INITIAL_PASSWORD","GET_BREADCRUMBS","GET_CONTENT","POST_CONTROLPANEL","GET_CONTROLPANEL","DELETE_CONTROLPANEL","UPDATE_CONTROLPANEL","GET_DIFF","GET_GROUP","GET_HISTORY","GET_NAVIGATION","GET_QUERYSTRING","GET_QUERYSTRING_RESULTS","GET_SCHEMA","POST_SCHEMA","PUT_SCHEMA","UPDATE_SCHEMA","GET_SHARING","GET_TRANSLATION_LOCATOR","LINK_TRANSLATION","DELETE_TRANSLATION","GET_TYPES","GET_USER","GET_VOCABULARY","GET_VOCABULARY_TOKEN_TITLE","GET_WORKFLOW","GET_WORKFLOW_MULTIPLE","UPDATECOLUMNS_CONTENT","INSTALL_ADDON","LIST_ACTIONS","LIST_ADDONS","LIST_COMMENTS","LIST_MORE_COMMENTS","LIST_CONTROLPANELS","LIST_GROUPS","LIST_FILTER_GROUPS","LIST_ROLES","AUTH_ROLE","LIST_USERS","LOGIN","LOGIN_RENEW","LOGOUT","ORDER_CONTENT","MOVE_CONTENT","REMOVE_MESSAGE","PURGE_MESSAGES","RESET_SEARCH_CONTENT","RESET_CONTENT","RESET_PASSWORD","REVERT_HISTORY","SEARCH_CONTENT","SET_SIDEBAR_TAB","TRANSITION_WORKFLOW","UNINSTALL_ADDON","UPDATE_CONTENT","UPDATE_COMMENT","UPDATE_GROUP","UPDATE_PASSWORD","UPDATE_SHARING","UPDATE_USER","UPGRADE_ADDON","SYSTEM_INFORMATION","DATABASE_INFORMATION","SET_BLOCKS_CLIPBOARD","RESET_BLOCKS_CLIPBOARD","LOAD_LAZY_LIBRARY","GET_CONTEXT_NAVIGATION","CREATE_WORKING_COPY","APPLY_WORKING_COPY","REMOVE_WORKING_COPY","LOCK_CONTENT","UNLOCK_CONTENT","Config","instance","_data","registry","blocks","views","widgets","addonReducers","addonRoutes","appExtras","slots","components","component","register","freeze","listActions","op","getBreadcrumbs","setExpandedToolbar","isExpanded","copyContent","source","target","moveContent","copy","urls","cut","listAddons","installAddon","uninstallAddon","upgradeAddon","addComment","commentId","listComments","listMoreComments","deleteComment","updateComment","createContent","subrequest","deleteContent","updateContent","orderContent","parent","delta","subset","ordering","obj_id","subset_ids","sortContent","on","order","sort","getContent","version","page","fullobjects","bbb_getContentFetchesFullobjects","b_start","defaultPageSize","b_size","isMultilingual","expand","qs","updateColumnsContent","indexcolumns","lockContent","unlockContent","force","getControlpanel","postControlpanel","deleteControlpanel","listControlpanels","updateControlpanel","getSystemInformation","getDatabaseInformation","getDiff","one","two","emailNotification","subject","createGroup","deleteGroup","listGroups","query_group_filter","updateGroup","getHistory","revertHistory","removeMessage","purgeMessages","getNavigation","depth","listRoles","getSchema","putSchema","updateSchema","updateSharing","sharing","getSharing","search","getTypes","createUser","deleteUser","getUser","listUsers","groups_filter","limit","searchParams","URLSearchParams","append","searchParamsToString","filterarg","stringify","arrayFormat","updateUser","updatePassword","oldPassword","newPassword","old_password","new_password","setInitialPassword","reset_token","resetPassword","login","username","logout","getVocabulary","vocabNameOrURL","start","size","vocabulary","getVocabName","queryString","getVocabularyTokenTitle","tokens","getWorkflow","transitionWorkflow","include_children","flattenToAppURL","getQuerystring","getQueryStringResults","requestData","q","v","sort_order","setSidebarTab","getTranslationLocator","linkTranslation","deleteLinkTranslation","language","setBlocksClipboard","payload","b","resetBlocksClipboard","loadLazyLibrary","libName","libModule","lazyLibraries","authenticatedRole","changeLanguage","locale","cookieOptions","normalizeLanguageName","changeLanguageCookies","updateIntl","createWorkingCopy","applyWorkingCopy","removeWorkingCopy","validateLibs","maybeLibs","x","loadables","lazyBundles","flattenLazyBundle","maybeNames","val","useLazyLibs","libraries","shouldRerender","useDispatch","globalLoadedLibraries","useSelector","left","right","shallowEqual","loaded","names","loadedLibraries","LoadableLibrary","load","preloadLazyLibs","forwardRef","WrappedComponent","PreloadLoadables","displayName","getDisplayName","forwardedRef","hoistNonReactStatics","injectLazyLibs","WithLoadables","isLoaded","MenuList","FixedSizeList","List","reactWindow","maxHeight","getValue","initialOffset","height","itemCount","itemSize","initialScrollOffset","SortableMultiValue","MultiValue","reactSelect","SortableElement","reactSortableHOC","innerProps","onMouseDown","SortableComponent","SortableMultiValueLabel","MultiValueLabel","SortableHandle","Option","label","isFocused","isSelected","checkSVG","color","DropdownIndicator","selectProps","menuIsOpen","upSVG","downSVG","ClearIndicator","clearSVG","selectTheme","Group","theme","borderRadius","colors","primary25","primary","customSelectStyles","control","styles","border","borderBottom","boxShadow","borderBottomStyle","minHeight","menu","top","marginTop","zIndex","indicatorSeparator","width","valueContainer","paddingLeft","dropdownIndicator","paddingRight","clearIndicator","option","backgroundColor","display","justifyContent","alignItems","padding","isDisabled","svg","flex","v4","v6seg","v6","trim","ipRegex","opts","exact","RegExp","getBaseUrl","adjustedUrl","nonContentRoutes","acc","getParentUrl","substring","lastIndexOf","getId","getView","view","isCmsUi","currentPathname","fullPath","route","flattenHTMLToAppURL","html","addAppURL","expandToBackendURL","isInternalURL","charAt","isUrl","_opts","strict","regex","tlds","a","urlRegex","normalizeUrl","prependHttp","removeProtocol","URLUtils","normalizeTelephone","tel","normaliseMail","isTelephone","isMail","checkAndNormalizeUrl","res","Icon","onClick","xmlns","viewBox","fill","context","createContext","Pluggable","maxCount","reversed","pluggables","ctx","useContext","usePluggable","useMemo","Fragment","R","Plug","pluggable","dependencies","renderer","pluggableContext","setPlug","removePlug","extra","pluggableName","usePlug","PluggablesProvider","initialPluggables","setPluggables","prevState","Provider","Schema","placeholder","description","fixed","disableNewBlocks","readOnly","getBlocksFieldname","getBlocksLayoutFieldname","hasBlocksData","blockHasValue","blockType","check","blocksConfig","getBlocks","blocksFieldName","blocksLayoutFieldname","moveBlock","destination","move","deleteBlock","blockId","blocksFieldname","newFormData","defaultBlockType","uuid","idTrailingBlock","totalItems","insert","selected","mutateBlock","trailId","insertBlock","newBlockId","changeBlock","nextBlockId","currentBlock","currentIndex","newIndex","previousBlockId","newindex","visitBlocks","queue","blockdata","shift","applyBlockDefaults","intl","rest","block_type","blockSchema","applySchemaEnhancer","accumulator","currentField","default","applySchemaDefaults","difference","withServerErrorCode","staticContext","error_code","safeColors","namedColors","getInitials","getColor","namedColor","pop","Math","floor","random","parseDateTime","format","moment","defineLocale","localeData","_config","datetime","match","normalizedLang","hasApiExpander","expander","apiExpanders","matchPath","LOCATION_CHANGE","onLocationChanged","action","isFirstRendering","arguments","CALL_HISTORY_METHOD","updateLocation","_len","args","_key","resolveExtension","extensions","selectedExtension","findIndex","conf","isDefault","withBlockExtensions","resolvedExtensions","variations","extensionName","variation","find","resolveBlockExtensions","browse","select","ObjectBrowserNav","currentSearchResults","handleClickOnItem","handleDoubleClickOnItem","navigateTo","isSelectable","useIntl","ret","_item","is_folderish","cx","disabled","imageObjects","onDoubleClick","homeSVG","trigger","rightArrowSVG","basic","icon","SearchInputPlaceholder","SelectedItems","of","getParentURL","ObjectBrowserBody","super","currentSelected","selectedImage","selectedHref","searchContent","sort_on","metadata_fields","block","currentFolder","setState","parentFolder","showSearchInput","searchInputRef","focus","SearchableText","dataName","onChangeBlock","onSelectItem","getURL","alt","currentImageFolder","currentLinkFolder","updateState","selectableTypes","maximumSelectionSize","closeObjectBrowser","contextURL","createRef","componentDidMount","initialSearch","raised","folderSVG","linkSVG","backSVG","onChange","onSearch","defaultMessage","toggleSearchInput","searchSVG","secondary","vertical","Section","Divider","searchSubrequests","image","compose","injectIntl","connect","subrequests","withObjectBrowser","overlay","propDataName","currentPath","isObjectBrowserOpen","openObjectBrowser","SidebarPopup","open","onClose","beginGlobalLoad","endGlobalLoad","loadSuccess","loadFail","getBoolean","getVocabFromHint","widgetOptions","getVocabFromField","getVocabFromItems","center","full","align","onAlignBlock","active","imageLeftSVG","imageRightSVG","imageFitSVG","imageFullSVG","DAY","HOUR","short_date_format","year","month","day","short_date_and_time_format","dateStyle","timeStyle","long_date_format","toDate","formatDate","date","long","includeTime","formatToParts","formatter","Intl","DateTimeFormat","formatRelativeDate","relativeTo","deltaMiliTime","absDeltaMiliTime","abs","deltas","MINUTE","SECOND","pos","round","RelativeTimeFormat","numeric","View","hasObjectButtons","isClient","defaultView","contentTypesViews","layoutViews","dirtyDisplayName","versionId","UNSAFE_componentWillReceiveProps","actions","object_buttons","objectButtons","redirect","to","connectionRefused","FoundView","errorViews","corsError","RenderedView","getViewByType","getViewByLayout","getViewDefault","cleanViewName","history","showTags","subjects","allow_discussion","node","getElementById","inner","apiError","apierror","multilingualRoutes","supportedLanguages","Sitemap","Search","ContactForm","ChangePassword","Register","RequestPasswordReset","PasswordReset","defaultRoutes","Login","Logout","Controlpanels","ContentTypeLayout","ContentTypeSchema","ContentType","ContentTypes","AddonsControlpanel","DatabaseInformation","ModerateComments","UsersControlpanel","UserGroupMembershipControlPanel","GroupsControlpanel","Controlpanel","Add","Edit","Contents","Sharing","CreateTranslation","Delete","Diff","History","ManageTranslations","NotFound","App","externalRoutes","routes","locales","reactIntlErrorHandler","debug","langFileName","supported","Locales","languages","server","express","disable","use","static","BUILD_DIR","cookiesMiddleware","middleware","expressMiddleware","all","next","api","defaultLanguage","best","initialState","defaultLocale","createMemoryHistory","initialEntries","configureStore","RAZZLE_API_PATH","host","locals","detectedHost","errorHandler","errorPage","onError","renderToString","browserdetect","detect","form","buildDir","ChunkExtractor","statsFile","entrypoints","originalUrl","parseUrl","loadOnServer","contentLang","resetServerContext","helpers","readCriticalCss","serverConfig","defaultReadCriticalCss","errorPages","criticalCssPath","existsSync","lstatSync","isFile","readFileSync","encoding","devProxyToApiPath","queryArray","arrayOptions","querystring","resetSearchContent","edit","delete","ObjectBrowserWidgetComponent","manualLinkInput","validURL","pattern_options","exists","_index","resultantItem","selectedItemAttrs","allowedItemKeys","return","validateManualLink","allowExternals","resp","onSubmitManualLink","ev","selectedItemsRef","placeholderRef","showObjectBrowser","renderLabel","blankSVG","removeItem","navTreeSVG","iconAction","aria-labelledby","handleSelectedItemsRefClick","onKeyDown","tabIndex","onKeyDownManualLink","onManualLinkInput","aheadSVG","FieldSet","idx","defaultValue","objectvalue","field2","fieldvalue","ObjectWidget","createTab","fieldset","menuItem","Pane","panes","unknownBlock","metadata","CustomTag","Block","blockData","webpackAsyncContext","ids","site_actions","document_actions","portal_tabs","loading","installedAddons","availableAddons","upgradableAddons","addonsSorter","titleA","titleB","statusCode","root","os","update","list","items_total","getRequestKey","actionType","updatecolumns","lock","unlock","post","controlpanel","controlpanels","systeminformation","databaseinformation","entries","revert","group","getRecursiveItems","indexes","sortable_indexes","total","batching","put","available_roles","inherit","tab","types","update_password","reset","transition","transitions","multiple","expanded","loadState","info","apply","reducers","intlReducer","reduxAsyncConnect","addons","is_installed","upgrade_info","available","breadcrumbs","comments","clipboard","diff","emailSend","filter_groups","level","show","navigation","querystringsearch","definitions","sidebar","authRole","vocabularies","vocabState","subrequestState","itemsTotal","workflow","toolbar","blocksClipboard","contextNavigation","workingCopy","socket","addExpandersToPath","expandersFromConfig","expandMerge","stringifiedExpand","stringifiedQuery","sendOnSocket","readyState","CONNECTING","OPEN","Sentry","crashReporter","__SENTRY__","RAZZLE_SENTRY_DSN","withScope","scope","setExtras","captureException","blacklistRoutes","apiHelper","stack","routerMiddleware","thunk","actionPromise","prevPromise","actions_raising_api_errors","reqres","websockets","WebSocket","onmessage","packet","crossDomain","storeExtenders","extender","middlewares","composeWithDevTools","applyMiddleware","createStore","combineReducers","connectRouter","no_value","convertValueToVocabQuery","f","normalizeSingleSelectOption","normalizeChoices","normalizeValue","choices","choiceMap","TimePicker","time","PrevIcon","position","leftKey","NextIcon","rightKey","defaultTimeDateOnly","hour","minute","second","DatetimeWidgetComponent","isDateOnly","getDateOnly","getInternalValue","dateValue","toISOString","hours","minutes","seconds","focused","utc","dateOnly","resettable","reactDates","noPastDates","SingleDatePicker","onDateChange","numberOfMonths","isOutsideRange","onFocusChange","noBorder","displayFormat","longDateFormat","navPrev","navNext","onTimeChange","allowEmpty","showSecond","use12Hours","focusOnOpen","placement","onResetDates","memo","bulleted","Item","_typeof","iterator","structure","getIn","toJS","getRouter","getLocation","getAction","getSearch","getHash","createMatchSelector","lastPathname","lastMatch","isExact","_extends","_defineProperties","descriptor","configurable","writable","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","_slicedToArray","arr","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","done","_iterableToArrayLimit","TypeError","_nonIterableRest","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","injectQuery","searchQuery","currentQuery","_currentQuery$split2","fromJS","merge","initialRouterState","_ref","ConnectedRouter","_PureComponent","_this","Constructor","_classCallCheck","inTimeTravelling","unsubscribe","_getLocation","pathnameInStore","searchInStore","hashInStore","hash","stateInStore","_history$location","pathnameInHistory","searchInHistory","hashInHistory","stateInHistory","handleLocationChange","unlisten","listen","noInitialPop","protoProps","staticProps","subClass","superClass","_inherits","_this$props","propTypes","shape","func","isRequired","basename","oneOfType","bool","ConnectedRouterWithContext","Context","Consumer","plain","stackTrace","useHistory","fontFamily","fontSize","flexDirection","textAlign","goBack","src","scales","thumb","download","floated","remoteUrl","no_options","compareOption","inputValue","accessors","candidate","optionValue","getOptionValue","optionLabel","getOptionLabel","ArrayWidget","selectedOption","oldIndex","newValue","array","slicedArray","arrayMove","vocabBaseUrl","normalizeArrayValue","CreatableSelect","reactSelectCreateable","SortableContainer","Select","SortableSelect","creatable","useDragHandle","axis","onSortEnd","distance","getHelperDimensions","getBoundingClientRect","classNamePrefix","noValueOption","isValidNewOption","selectValue","selectOptions","isClearable","isMulti","imageMimetypes","Dropzone","releaseDrag","editFile","fileDrag","replaceFile","addNewFile","FileWidget","fileType","setFileType","imgsrc","onDrop","files","file","readAsDataURL","filename","reader","FileReader","onload","getRootProps","getInputProps","isDragActive","deleteSVG","reservedId","invalidCharacters","IdWidget","reservedIds","handleBlur","fieldValidation","onBlur","onEdit","onDelete","PasswordWidget","autoComplete","isPromise","Function","mapSeries","iterable","results","iterateOverResults","identity","arg","immutableStateFunc","mutableStateFunc","getMutableState","loadAsyncConnect","layered","matchRoutes","routeParams","asyncItems","asyncItemsArr","asyncPropsItems","asyncPropItem","innerPromiseOrResult","promiseOrResult","finalResults","AsyncConnect","previousLocation","mounted","loadDataCounter","loadAsyncData","reloadOnPropsChange","componentWillUnmount","reduxConnectStore","otherProps","loadResult","loadDataCounterOriginal","renderRoutes","applyExtenders","asyncPropsExtenders","extend","asyncConnect","mapStateToProps","mapDispatchToProps","mergeProps","connects","wrapWithDispatch","ownProps","foundAsyncItems","mutableState","asyncStateToProps","getImmutableState","ReduxAsyncConnect","ReactReduxContext","pt_BR","document_view","DefaultView","summary_view","SummaryView","tabular_view","TabularView","listing_view","ListingView","link_redirect_view","LinkView","album_view","AlbumView","NewsItemView","FileView","Image","ImageView","Event","NotFoundView","Unauthorized","Forbidden","RequestTimeout","ECONNREFUSED","ConnectionRefused","CorsError","EventTextfieldView","Column","blocks_layout","display_as","Days","MO","RRule","TU","WE","TH","FR","SA","SU","WEEKLY_DAYS","MONDAYFRIDAY_DAYS","FREQUENCES","DAILY","MONDAYFRIDAY","WEEKDAYS","WEEKLY","MONTHLY","YEARLY","OPTIONS","frequences","rrule","interval","byday","bymonth","byyear","rrulei18n","every","until","for","times","weekdays","weekday","days","in","week","weeks","months","years","the","and","or","at","last","st","nd","rd","dateFormat","strings","k","dayNames","monthNames","dateFormatter","IntervalField","labelAfter","Field","inline","Row","stretched","htmlFor","parseInt","ByDayField","momentlib","weekdaysShort","dayName","byweekday","recurrenceEnds","recurrenceEndsCount","recurrenceEndsUntil","occurrences","EndField","count","checked","bymonthDay","ofTheMonth","ByMonthDayField","hideAfterLabel","SelectInput","inlineSelectStyles","minWidth","getDefaultValue","element","bymonthDayNumber","first","third","fourth","ORDINAL_NUMBERS","WeekdayOfTheMonthIndexField","weekdayOfTheMonthIndexList","weekdayOfTheMonthList","ByMonthField","bymonthday","weekdayOfTheMonthIndex","weekdayOfTheMonth","MonthOfTheYearField","monthList","ByYearField","monthOfTheYear","selected_dates","start_of_recurrence","additional_date","other_items","no_occurences","exclude","include","Occurences","rruleSet","undoExclude","showTitle","editOccurences","isAdditional","dateISO","additional","rdates","exdates","others","divided","verticalAlign","excluded","ex","isExcluded","Content","trashSVG","addSVG","pointing","PropTypes","any","editRecurrence","repeat","daily","mondayfriday","weekly","monthly","yearly","repeatEvery","repeatOn","interval_daily","interval_weekly","interval_monthly","interval_yearly","add_date","select_date_to_add_to_recurrence","NoRRuleOptions","setRecurrenceStartEnd","_start","getUTCDate","startOf","formValues","getFormValues","updateRruleSet","dimmer","freq","w","changeField","rrules","getFreq","getWeekday","SMONTHLY","opt","rruleOptions","formValuesToRRuleOptions","dstart","dtstart","RRuleSet","exdate","rdate","tomorrow","nextWeek","nextMonth","nextYear","origOptions","currWeekday","currMonth","startMonth","startWeekday","defaultMonthDay","getDefaultUntil","nth","week_day","onChangeRule","simpleDate","close","rrulestr","compatible","forceset","RRULE_LANGUAGE","toText","editingSVG","closeIcon","Header","scrolling","Description","addDate","Actions","saveSVG","_addField","unshift","addExtensionFieldToSchema","insertFieldToOrder","_","hasDefaultExtension","originalSchema","schemaEnhancer","activeItemName","activeItem","withVariationSchemaEnhancer","FormComponent","PreviewImage","image_field","DefaultImageSVG","site_admin","error_message","useLocation","UniversalLink","openLinkInNewTab","getRemoteUrl","downloadableObjects","viewableInBrowserObjects","isBlacklisted","isExternal","isDownload","isDisplayFile","checkedURL","personalPreferences","languageDescription","saved","PersonalPreferences","onCancel","onSubmit","toast","closeMenu","withCookies","personalInformation","fullnameTitle","fullnameDescription","emailTitle","emailDescription","portraitTitle","portraitDescription","homePageTitle","homePageDescription","locationTitle","locationDescription","PersonalInformation","userId","fullname","portrait","home_page","sub","subtitle","preview","prettybytes","mini","image_caption","celled","padded","HeaderCell","Body","Cell","review_state","openIndex","closeModal","nextImage","prevImage","doubling","stackable","columns","fitted","openSVG","centered","margin","personalTools","manageContent","CreateWorkingCopy","viewWorkingCopy","workingAppliedTitle","workingCopyAppliedBy","workingCopyRemovedTitle","workingCopyErrorUnauthorized","workingCopyGenericError","More","openManageTranslations","pushed","selector","loadComponent","handleClickOutside","erroredAction","errorStatus","toastId","autoClose","editAction","historyAction","sharingAction","dateOptions","theToolbar","userSVG","hasWorkingCopySupport","working_copy","working_copy_of","creator","creator_name","created","applySVG","removeSVG","preferences","profile","userAvatar","PersonalTools","unloadComponent","hasActions","pull","logoutSVG","cameraSVG","currentLanguage","translations","contentTypeToAdd","addContentTypeRoute","translationsLeft","Boolean","translationOf","asideElement","timeout","classNames","unmountOnExit","overflowY","getWidgetDefault","UnconnectedField","Widget","frontendOptions","getWidgetByChoices","getWidgetByVocabularyFromHint","factory","widgetProps","getWidgetPropsFromTaggedValues","onOrder","DropTarget","DragSource","reactDnd","WrappedWidget","hover","monitor","dragOrder","getItem","hoverOrder","connectDropTarget","dropTarget","beginDrag","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","DndConnectedField","editValues","InlineForm","onChangeField","headerActions","footer","focusIndex","defaultFieldset","other","objectSchema","initialData","currentActiveFieldset","setCurrentActiveFieldset","handleCurrentActiveFieldset","blockProps","negative","attached","header","fluid","styled","Title","animateOpacity","duration","blockNode","manage","sidebarTab","editable","showEditBlocksInBabelView","BlockSettingsSchema","blockHasOwnFocusManagement","isMultipleSelection","shiftKey","onSelectBlock","handleKeyDown","multiSelected","outline","language_independent","FormFieldWrapper","wrapped","draggable","noForInFieldLabel","multilingual_options","wdg","aria-hidden","evt","CheckboxWidget","no_results_found","ReferenceWidget","onRemove","onSearchChange","novalue","selection","noResultsMessage","addField","addFieldset","parentFieldSet","editField","editFieldset","idTitle","idDescription","richtext","checkbox","deleteFieldset","deleteField","fieldsetSchema","getItemStyle","draggableStyle","userSelect","background","formatTextareaToArray","textarea","formatTextareaToChoices","SchemaWidget","onChangeDefaultValue","onAddField","onAddFieldset","onEditField","onEditFieldset","onDeleteFieldset","onDeleteField","onShowAddField","onShowAddFieldset","onShowEditFieldset","onShowEditField","onShowDeleteFieldset","onShowDeleteField","onSetCurrentFieldset","onOrderField","onOrderFieldset","onDragEnd","currentFieldset","currentFieldsetFields","newFieldsetFields","oldfieldId","newfieldId","newParentFieldsetIndex","indexOfChangeNote","fieldsetsWithoutField","fieldsOfNewFieldset","moveToFieldsetWithNewName","formattedValues","prop","parseFloat","fieldValue","fieldMerge","propsMerge","droppableId","reactBeautifulDnd","Draggable","DragDropContext","Droppable","nonUserCreatedFields","hasChangeNote","userCreatedFieldsStartingIndex","lastUserCreatedFieldsIndex","makeUserFields","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","canAddFields","direction","isDraggingOver","flexWrap","isDraggable","makeNonUserFields","changeNote","listOfFieldsets","onConfirm","SelectWidget","normalizedValue","isSearchable","customOptionStyling","SelectWidgetComponent","TextareaWidget","lengthError","setlengthError","remlength","onhandleChange","TextWidget","Editor","WysiwygWidgetComponent","stateFromHTML","draftJsImportHtml","EditorState","draftJs","draftJsInlineToolbarPlugin","draftConfig","richtextEditorSettings","editorState","convertToRaw","mockStore","ReactDOMServer","renderToStaticMarkup","redraft","getCurrentContent","richtextViewSettings","ToHTMLRenderers","ToHTMLOptions","WysiwygWidget","Preloader","setLoaded","labelRemoveItem","labelCollapseItem","labelShowItem","emptyObjectList","ObjectListWidget","schemaExtender","activeColumn","setActiveColumn","handleChangeColumn","compact","addMessage","forwardedAriaLabelledBy","childList","onMoveItem","childId","draginfo","visibility","dragSVG","fv","newvalue","_onBlur","_onFocus","contentState","createWithContent","createEmpty","getPlainText","EditComponent","convertFromRaw","selectionState","getSelection","getStartOffset","getEndOffset","moveFocusToEnd","nextState","shouldFilterPaste","getLastChangeType","filterEditorState","draftJsFilters","filteredState","entities","whitespacedCharacters","detached","ImageBlockInputPlaceholder","uploading","dragging","onSubmitUrl","large","medium","small","noClick","onDragEnter","onDragLeave","indeterminate","imageBlockSVG","uploadSVG","onUploadImage","onKeyDownVariantMenuForm","onChangeUrl","onFocus","resetSubmitUrl","isEditMode","ListingData","schemaListing","VideoFormDescription","VideoBlockInputPlaceholder","videoBlockSVG","MapsBlockInputPlaceholder","GoogleMapsEmbeddedBlock","getSrc","embed","iframe","DOMParser","parseFromString","frameBorder","allowFullScreen","mapsBlockSVG","prettier","clear","prettierStandalone","parser","plugins","prettierParserHtml","onChangeCode","editor","_input","selectionStart","selectionEnd","savedSelection","isPreview","onPreview","onCodeEditor","restoreSelectionAndFocus","codeEditorRef","getSnapshotBeforeUpdate","codeSVG","showSVG","onPrettify","indentSVG","onValueChange","highlight","prismCore","ignoreTabKey","withPrismMarkup","cancelled","EmbededGoogleMaps","WithQueryString","MultilingualRedirector","useCookies","redirectToLanguage","thisIsAWorkingCopyOf","workingCopyIs","workingCopyCreatedBy","WorkingCopyToastsFactory","toastMessage","toastTitle","isActive","closeButton","dismiss","thisItemIsLocked","unlockItem","LockingToastsFactory","locked","stealable","hasError","errorInfo","componentDidCatch","isCmsUI","ConnectionRefusedView","siteroot","contentLanguage","componentStack","POSITION","BOTTOM_CENTER","hideProgressBar","Slide","async","promises","getAsyncData","allSettled","fetchContent","navDepth","Map","immutableLib","onChangeTitle","onChangeDescription","titleEditor","titleEditorState","descriptionEditorState","currentFocused","descriptionEditor","ListingBody","WithQuerystringResults","initialPath","adaptedQuery","querystringResults","folderItems","hasQuery","hasLoaded","listingItems","showAsFolderListing","showAsQueryListing","totalPages","ceil","prevBatch","prev","nextBatch","isImageGallery","template","onPaginationChange","activePage","batch_size","isFolderContentsListing","withQuerystringResults","ListingBodyTemplate","defaultVariation","listingRef","onPageChange","scrollIntoView","firstItem","lastItem","prevItem","paginationLeftSVG","nextItem","paginationRightSVG","inverted","listing","more","LinkTitle","LinkTo","showLinkMore","linkTitle","linkHref","preview_image","videoID","listID","embedSettings","defaultActive","autoplay","aspectRatio","onKeyPress","nativeEvent","keyCode","handleClick","controls","poster","schemaHero","widgetMapping","TokenWidget","QuerystringWidget","recurrence","UrlWidget","AlignWidget","EmailWidget","QueryWidget","query_sort_on","QuerySortOnWidget","object_browser","ObjectBrowserWidget","object_list","vocabularyterms","VocabularyTermsWidget","image_size","ImageSizeWidget","select_querystring_field","SelectMetadataWidget","autocomplete","SelectAutoComplete","boolean","NumberWidget","defaultWidget","Criteria","SortOn","reversedOrder","itemBatchSize","NoSelection","sort_order_boolean","adaptedValue","vocabLoading","vocabLoaded","defaultOptions","noOptionsMessage","inputId","setValue","isInvalid","setIsInvalid","onChangeValue","_value","min","max","AppExtras","reg","extraProps","Insert","site","plonesite","Logo","LogoImage","Anontools","showSelfRegistration","home","BreadcrumbsComponent","searchSite","SearchWidget","onChangeText","encodeURIComponent","transparent","zoomSVG","copyright","Pagination","pageSize","pageSizes","onChangePage","onChangePageSize","Menu","leftChevron","rightChevron","Tags","OutdatedBrowser","notSupportedBrowsers","marginBottom","browsername","browserversion","switchLanguageTo","LanguageSelector","currentLang","translation","onClickAction","mainView","SkipLinks","Avatar","radius","y","textAnchor","dy","ConditionalLink","condition","LinkMore","contactForm","messageSent","ContactFormComponent","submitLabel","resetAfterSubmit","hideDefaultViewButtons","loginName","loginFailed","loginFailedContent","forgotPassword","onLogin","returnUrl","getElementsByName","autoFocus","clearing","Link","return_url","renderItems","doSearch","searchableText","term","onSortChange","handleQueryPaginationChange","use_site_search_settings","comment","commentDescription","reply","hideReplies","showReplies","loadMoreComments","makeFormSchema","Comments","onEditOk","onEditCancel","setReplyTo","showEdit","editId","editText","replyTo","collapsedComments","addRequest","deleteRequest","hideReply","hasComment","addRepliesAsChildrenToComments","allCommentsWithCildren","comment_id","in_reply_to","allPrimaryComments","commentElement","author_image","author_name","author_username","Author","Metadata","creation_date","fromNow","Text","Action","is_editable","is_deletable","collapsed","onOk","threaded","successRegisterCompletedTitle","successRegisterCompletedBody","usernameTitle","usernameDescription","passwordTitle","passwordDescription","passwordRepeatTitle","passwordsDoNotMatch","mailDoNotMatch","passwordRepeatDescription","setMyPassword","successRedirectToLoginTitle","successRedirectToLoginBody","passwordReset","isSuccessful","identifierField","useEmailAsLogin","identifierTitle","identifierDescription","passwordRepeat","sendEmail","usernameRequired","emailRequired","identifierRequiredMessage","changePassword","oldPasswordTitle","oldPasswordDescription","newPasswordTitle","newPasswordDescription","newPasswordRepeatTitle","newPasswordRepeatDescription","newPasswordRepeat","translationLocation","setTranslationLocation","translationObject","setTranslationObject","languageFrom","TranslationObject","visual","isFormSelected","onSelectForm","setLocales","loadingLocale","setLoadingLocale","activeMenu","setActiveMenu","handleMenuClick","createBrowserHistory","__data","tabular","hideActions","_toConsumableArray","arr2","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","_action$payload","compare_to","stop_compare","CompareLanguagesMenu","comparingLanguage","setComparingLanguage","CompareLanguages","toolbarRef","viewMenu","setViewMenu","translationsObject","translateSVG","paste","rename","messageCopied","messageCut","messageDeleted","messagePasted","onRenameOk","onRenameCancel","showRename","translateTo","initialBlocks","initialBlocksLayout","formSelected","createRequest","textContent","translation_of","schemaRequest","schemaBlocks","schemaBlocksLayout","newUid","originalBlocks","lifData","lif","pageAdd","activateAndDeactivate","addAddons","addonsSettings","availableVersion","installed","installedVersion","noUninstallProfile","updatesAvailable","updateInstalledAddons","uninstall","onAccordionClick","onInstall","onUninstall","onUpgrade","circular","circleTopSVG","circleBottomSVG","uninstall_profile_id","warning","Circle","marginRight","databaseInformation","db_name","database_size","db_size","cache_size","cache_length","cache_length_bytes","cache_detail_length","connection","ngsize","changesSaved","updateRequest","sitesetup","versionoverview","moderatecomments","usersandgroups","controlpanelsRequest","controlPanelsIcons","icons","systemInformation","yes","addTypeFormTitle","addTypeButtonTitle","addTypeFormTitleTitle","addTypeFormDescriptionTitle","typeCreated","deleteConfirmTitle","typeDeleted","onAddTypeSubmit","onAddTypeError","onAddTypeSuccess","onLayout","onSchema","onDeleteCancel","onDeleteOk","onDeleteTypeSuccess","showAddType","addTypeError","showDelete","typeToDelete","cpanelRequest","addTypeSetFormDataCallback","cancelButton","confirmButton","typename","submitError","singleLine","striped","filter_content_types","allowed_content_types","isEditForm","enable","readOnlyBehavior","onEnableBlocks","onDisableBlocksBehavior","blocksBehavior","strong","chunks","isAdminForm","settingsTab","documentTab","layouts","contentType","readOnlyFields","isEditable","userCreatedFields","contentTypeSchema","makeSchemaList","schemaData","makeSchemaData","editSVG","layoutSVG","userData","onChangeSearch","onAddUserSubmit","onAddUserError","onAddUserSuccess","updateUserRole","showAddUser","showAddUserErrorConfirm","addUserError","userToDelete","fetchData","loadRolesRequest","getUserFromProps","itemsToDelete","addUserToGroup","addUserSetFormDataCallback","entry","usernameToDelete","plone_svg","ploneSVG","unstackable","data-user","inheritedRole","updateUserRoleSubmit","addUserSvg","bindActionCreators","groupEntries","onSearchGroups","onAddGroupSubmit","onAddGroupError","onAddGroupSuccess","updateGroupRole","addGroupError","groupToDelete","showAddGroup","deleteGroupRequest","createGroupRequest","getGroupFromProps","addGroupSetFormDataCallback","groupNameToDelete","groupname","data-group","updateGroupRoleSubmit","portal_type","no_addons","VersionOverview","cmf_version","debug_mode","pil_version","plone_version","plone_restapi_version","python_version","zope_version","addonsInfo","voltoVersion","addon","ok","unified","onChangeOne","onChangeTwo","onSelectView","versions","historyEntries","actor","contentOne","contentTwo","getRequest","compareTo","lock_token","content_id","editPermission","objectActions","pageEdit","ModalForm","currentTab","isFormPristine","selectTab","onBlurField","onClickInput","setFormDataCallback","state_errors","loadingMessage","onRevert","revertRequest","state_title","prev_state_title","selectable","transition_title","searchForUserOrGroup","globalRole","inheritedValue","permissionsUpdated","permissionsUpdatedSuccessfully","SharingComponent","onToggleInherit","principal","inherited","Messages","onDismiss","fold","unfold","BlockChooser","onInsertBlock","onMutateBlock","allowedBlocks","showRestricted","blockChooserRef","useAllowedBlocks","filteredBlocksConfig","restricted","blocksAvailable","mostUsedBlocks","mostUsed","groupedBlocks","groupBlocksOrder","setActiveIndex","titleProps","groupName","ButtonComponent","onShowBlockChooser","BlockChooserButton","buttonComponent","addNewBlockOpened","setAddNewBlockOpened","shrinkSidebar","expandSidebar","Sidebar","onToggleExpanded","onToggleFullSize","onTabChange","showFull","showFullToolbarExpanded","resetFullSizeSidebar","sidebarContainer","getElementsByClassName","toolbarExpanded","stopImmediatePropagation","expandSVG","collapseSVG","renderActiveOnly","pane","blockTab","forbiddenSVG","SidebarPortal","setIsClient","Toast","infoSVG","successSVG","errorSVG","warningSVG","getIcon","linked","unlinked","unlink","ManageTranslationsTitle","currentSelectedItem","shadowedError","collapsing","onDeleteTranslation","unlinkSVG","__CLIENT__","Form","fieldsModified","initialFormData","newSchema","layoutFieldsetIndex","layoutFields","selectedBlock","initialBlocksFocus","b_key","showFirstTabWithErrors","onChangeFormData","isBoolean","anchor","getOnlyFormModifiedValues","removeBlocksLayoutFields","selectedBlocks","onChangeBlocks","newBlockData","onSetSelectedBlocks","blockIds","isMainForm","verticalFormTabs","grid","paneWidth","tabWidth","FormIntl","BlocksToolbarComponent","copyBlocksToClipboard","cutBlocksToClipboard","loadFromStorage","states","blocksData","cloneWithIds","blockConfig","cloneData","selectedIndex","cutSVG","copySVG","pasteSVG","UndoToolbar","undoLevels","undoSVG","redoSVG","SearchTags","terms","editComment","CommentEditModal","ContentsBreadcrumbs","breadcrumb","nav_title","widthValues","ContentsIndexHeaderComponent","opacity","cursor","DndConnectedContentsIndexHeader","onOrderIndex","private","published","intranet","draft","no_workflow_state","none","ContentsItemComponent","onCut","onCopy","onMoveToTop","onMoveToBottom","checkboxCheckedSVG","checkboxUncheckedSVG","ExpirationDate","moreSVG","moveUpSVG","moveDownSVG","DndConnectedContentsItem","onOrderItem","drop","startOrder","dropOrder","upload","SUBREQUEST","ContentsUploadModal","onRemoveFile","noDragEventsBubbling","lastModifiedDate","filesize","effectiveTitle","effectiveDescription","expiresTitle","expiresDescription","rightsTitle","rightsDescription","creatorsTitle","creatorsDescription","excludeFromNavTitle","excludeFromNavDescription","ContentsPropertiesModal","effective","rights","creators","exclude_from_nav","renameItems","shortName","shortNameDescription","ContentsRenameModal","stateTitle","includeChildrenTitle","stateDescription","ContentsWorkflowModal","workflows","tagsToRemove","tagsToAdd","ContentsTagsModal","tags_to_add","tags_to_remove","Set","currentSetTags","flat","RenderUsers","RenderGroups","roleId","isAuthGroup","diffLib","readable_date_format","diffWords","oneStr","twoStr","parts","oneArray","twoArray","j","data-testid","colSpan","part","removed","added","getPlaceholder","draggedDOM","sourceIndex","destinationIndex","childrenArray","parentRect","prevNode","nextNode","bottom","prevRect","clientY","clientHeight","clientX","getComputedStyle","clientWidth","placeholderProps","setPlaceholderProps","uid","timer","onDragStart","domQuery","onDragUpdate","AsDomComponent","droppableProps","BlockDataForm","MapsURL","globeSVG","videoURL","Preview_image","activeAccIndex","setActiveAccIndex","videoSVG","Origin","AltText","Align","NoImageSelected","externalURL","imageSVG","ContentMetadataTags","opengraph_title","opengraph_description","seo_title","seo_description","seo_canonical_url","contentImageInfo","contentMetadataTagsImageField","opengraph_image","contentHasImage","getContentImageInfo","FormattedDate","relative","dateTime","FormattedRelativeDate","live","refresh","liveRelativeTo","setLiveRelativeTo","setInterval","clearInterval","componentName","table","rows","row","cells","cell","DefaultTemplate","SummaryTemplate","pow","valueToDraft","entityRanges","inlineStyleRanges","entityMap","emptyCell","emptyRow","initialTable","insertRowBefore","insertRowAfter","deleteRow","insertColBefore","insertColAfter","deleteCol","headerCell","onSelectCell","onInsertRowBefore","onInsertRowAfter","onInsertColBefore","onInsertColAfter","onDeleteRow","onDeleteCol","onChangeCell","toggleCellType","toggleBool","toggleFixed","toggleCompact","toggleBasic","toggleCelled","toggleStriped","rowBeforeSVG","rowAfterSVG","rowDeleteSVG","colBeforeSVG","colAfterSVG","colDeleteSVG","rowIndex","cellIndex","isTableBlockSelected","onAddBlock","SEARCH_ENDPOINT_FIELDS","PAQO","useSearchBlockState","uniqueId","hashState","setHashState","oldState","searchData","newParams","changed","useHashState","internalState","setInternalState","serializeQuery","kvp","withSearch","inputDelay","WithSearch","locationSearchData","setLocationSearchData","urlQuery","urlSearchText","searchText","setSearchText","configuredFacets","facets","facet","multiFacets","setFacets","sortOn","setSortOn","sortOrder","setSortOrder","setSearchData","facetWidgetTypes","facetWidgets","facetSettings","valueToQuery","getInitialState","timeoutRef","onTriggerSearch","toSearchText","toSearchFacets","toSortOn","toSortOrder","normalizeState","getSearchFields","searchedText","_filtered","isfunc","blockPropsAreChanged","SearchBlockViewComponent","Layout","listingBodyVariation","listingBodyTemplate","getListingBodyVariation","listingBodyData","defaultQuery","applyDefaults","withQueryString","NONVALUE_OPERATIONS","DATE_OPERATIONS","hasNonValueOperation","ops","has","hasDateOperation","searchBlock","baseSearchQuery","sectionTitle","headline","searchInputPrompt","showSearchButtonTitle","showSearchButtonDescription","searchButtonLabel","searchButtonPlaceholder","showSortOn","sortOnLabel","sortOnOptions","multipleChoices","hideFacetTitle","hideFacetDescription","facetWidget","enhanceSchema","FacetSchema","filterOptions","operations","hidden","showSearchButton","facetsTitle","listingSchemaEnhancer","searchResults","searchedFor","SearchDetails","El","Facets","facetWrapper","FacetWrapper","query_to_values","localeCompare","sensitivity","selectedValue","FacetWidget","stateToValue","rewriteOptions","showFacet","paddingTop","sortOnSelectStyles","selectFacetStateToValue","selectFacetSchemaEnhancer","selectFacetValueToQuery","SelectFacet","CheckboxFacet","facetValue","radio","startDate","endDate","CloseIcon","DateRangeFacet","DateRangePicker","setFocused","startDateId","startDatePlaceholderText","endDateId","endDatePlaceholderText","showClearDates","customCloseIcon","focusedInput","onDatesChange","SearchInput","isLive","loupeSVG","currentFilters","clearFilters","FilterList","definedFacets","isOpened","setIsOpened","totalFilters","filterListComponent","FilterListComponent","noSelection","ascending","descending","activeSortOn","ToggleFacet","toggle","SelectFacetFilterListEntry","ToggleFacetFilterListEntry","filteredFacets","DateRangeFacetFilterListEntry","searchButtonText","RightColumnFacets","mobile","tablet","computer","flushSync","LeftColumnFacets","TopSideFacets","toc","video","hero","maps","leadimage","media","common","summary","imageGallery","facetsRightSide","facetsLeftSide","facetsTopSide","titleSVG","ViewTitleBlock","EditTitleBlock","security","addPermission","descriptionSVG","ViewDescriptionBlock","EditDescriptionBlock","textSVG","ViewTextBlock","EditTextBlock","TextSettingsSchema","ViewImageBlock","EditImageBlock","ImageSettingsSchema","ViewLeadImageBlock","EditLeadImageBlock","listBulletSVG","ViewListingBlock","EditListingBlock","ListingBlockSchema","DefaultListingBlockTemplate","ImageGalleryListingBlockTemplate","SummaryListingBlockTemplate","ViewVideoBlock","EditVideoBlock","tocSVG","ViewToCBlock","EditToCBlock","ToCSettingsSchema","heroSVG","ViewHeroImageLeftBlock","EditHeroImageLeftBlock","HeroImageLeftBlockSchema","ViewMapBlock","EditMapBlock","ViewHTMLBlock","EditHTMLBlock","tableSVG","ViewTableBlock","EditTableBlock","SearchBlockView","SearchBlockEdit","SearchBlockSchema","sentryOptions","integrations","CaptureConsole","levels","Document","pageSVG","contentExistingSVG","calendarSVG","fileSVG","settingsSVG","contentSVG","languageSVG","mail","emailSVG","navSVG","worldSVG","socialmedia","megaphoneSVG","editing","imaging","discussionSVG","securitySVG","groupSVG","addonSVG","codeBlock","addBreaklinesInline","BOLD","ITALIC","UNDERLINE","CODE","addBreaklines","splitBySoftLines","splitSoftLinesOfLists","subchild","subchildren","getList","ordered","unstyled","chunk","processChildren","atomic","blockquote","callout","LinkEntity","targetUrl","renderers","IMAGE","entity","entityKey","getEditorState","getEntity","entityData","createLinkAtSelection","createEntity","getLastCreatedEntityKey","withLink","RichUtils","toggleLink","forceSelection","removeLinkAtSelection","getCurrentEntityKey","anchorKey","getAnchorKey","anchorBlock","getBlockForKey","isBackward","focusOffset","anchorOffset","getEntityAt","getCurrentEntity","hasEntity","entityType","getType","AddLinkForm","linkFormContainer","onOverrideContent","onRef","input","onClear","editorStateUrl","marginLeft","fillRule","LinkButton","ownTheme","EditorUtils","getData","setEditorState","DraftEditorUtils","draftJsPluginsUtils","hasLinkSelected","button","buttonWrapper","onAddLinkClick","matchesEntityType","strategy","contentBlock","findEntityRanges","character","unboundRemoveEntity","startKey","getStartKey","startOffset","entitySelection","newContentState","Modifier","applyEntity","breakOutOptions","doubleBreakoutBlocks","breakoutBlocks","draftJsBlockBreakoutPlugin","Separator","blockBreakoutPlugin","linkPlugin","defaultTheme","linkTarget","removeEntity","decorators","linkStrategy","decorateComponentWithProps","DefaultLink","onRemoveLinkAtSelection","createLinkPlugin","buttons","createInlineStyleButton","draftJsCreateInlineStyleButton","createBlockStyleButton","draftJsCreateBlockStyleButton","BoldButton","boldSVG","ItalicButton","italicSVG","HeadlineTwoButton","HeadlineThreeButton","subtextSVG","UnorderedListButton","unorderedListSVG","OrderedListButton","orderedListSVG","BlockquoteButton","blockquoteSVG","CalloutButton","calloutSVG","Styles","inlineToolbarButtons","cleanup","projectConfigLoader","addonLoaders","projectConfig","safeWrapper","port","PORT","RAZZLE_PUBLIC_URL","apiPathURL","hostname","getServerURL","RAZZLE_DEV_PROXY_API_PATH","proxyRewriteTarget","RAZZLE_PROXY_REWRITE_TARGET","RAZZLE_INTERNAL_API_PATH","RAZZLE_WEBSOCKETS","RAZZLE_LEGACY_TRAVERSE","Plugins","extendedBlockRenderMap","blockStyleFn","listBlockTypes","DefaultDraftBlockRenderMap","blockRenderMap","Blocks","richTextEditorPlugins","richTextEditorInlineToolbarButtons","FromHTMLCustomBlockFn","customStyleMap","listingPreviewImageField","persistentReducers","cms","draftEditor","requiredBlocks","applyAddonConfiguration","ConfigRegistry","NavItem","activeClassName","NavItems","closeMobileMenu","openMobileMenu","Navigation","toggleMobileMenu","isMobileMenuOpen","ListingTemplate","query_user","query_group","add_joined_groups","many_users","many_groups","userLimit","setUserLimit","show_users","labelA","labelB","matrix_options","show_matrix_options","onSelectAllHandler","mtxoption","identifier","elements","usersgroupmapping","matrix_option","selectedvalue","singleClick","onSelectOptionHandler","down_key","UserGroupMembershipMatrix","setQuery_user","setQuery_group","setQuery_group_filter","setGroups_filter","setAdd_joined_groups","filter_options","onReset","onChangeSearchUsers","onChangeSearchGroups","onChangeSearchGroupsFilter","defaultChecked","onToggleJoinedGroups","filter_option","groups_filter_set_new","UserGroupMembershipListing","UserGroupMembershipPanel","can_use_group_membership_panel","datesForDisplay","mStart","mEnd","sameDay","isSame","sameTime","startTime","endTime","When","whole_day","open_end","datesInfo","Recurrence","optionsToString","what","when","allDates","downloadEvent","where","contactName","contactPhone","attendees","website","visitWebsite","EventDetails","dividing","contact_name","contact_email","contact_phone","event_url","sortable_title","ModificationDate","EffectiveDate","CreationDate","Subject","getObjSize","last_comment_date","total_comments","Creator","UID","Type","defaultIndexes","contents","deleteConfirm","deleteError","messageUpdate","messageReorder","messageWorkflowUpdate","rearrangeBy","selectColumns","publicationDate","createdOn","expirationDate","reviewState","folder","excludedFromNavigation","objectSize","lastCommentedDate","totalComments","onDeselect","onSelect","onSelectAll","onSelectIndex","onSelectNone","onUploadOk","onUploadCancel","onTagsOk","onTagsCancel","onPropertiesOk","onPropertiesCancel","onWorkflowOk","onWorkflowCancel","onChangeFilter","onSortItems","onChangeSelected","fetchContents","orderTimeout","showUpload","showProperties","showWorkflow","Indexes","selectedCount","filterTimeout","clipboardRequest","toastify","searchRequest","orderRequest","indexValue","indexKey","filteredItems","selectedItem","itemIndex","backend","getFieldById","folderContentsAction","Dimmable","blurring","dimmed","Button","renameSVG","semaphoreSVG","tagSVG","propertiesSVG","upward","configurationSVG","downKeySVG","sortDownSVG","sortUpSVG","checkboxIndeterminateSVG","iconPosition","HTML5Backend","reactDndHtml5Backend","DndConnectedContents","event_listing","full_view","layout_view","menuList","DisplaySelect","layout","setLayout","layout_fieldname","getWorkflowMapping","mapping","publish","pending","send_back","retract","submit","messageUpdated","messageNoWorkflow","SingleValue","stateDecorator","Workflow","Placeholder","StandardWrapper","componentTitle","shrinkToolbar","collection","newsItem","toolbarComponents","wrapper","Types","contentAsProps","wrapperTitle","hideToolbarBody","Toolbar","showMenu","loadedComponents","menuStyle","pusher","menuComponents","unlockRequest","unlockAction","toolbarWindow","transform","ToolbarComponent","WrapperComponent","haveActions","componentIndex","isToolbarEmbedded","unlockSVG","penSVG","endsWith","toggleMenu","handleShrink","onDeleteBlock","visible","hideHandler","BlocksForm","blockList","disableEnter","disableArrowUp","disableArrowDown","onFocusPreviousBlock","onFocusNextBlock","blur","newId","selectPrev","previous","onMoveBlock","dragIndex","hoverIndex","editBlockWrapper","editBlock","dragProps","formTitle","formDescription","onImageSize","AltTextHint","AltTextHintLinkText","_name","AlignBlock","initSentry","http","createServer","app","bind_address","RAZZLE_BIND_ADDRESS","currentApp","log","hot","accept","removeListener","newApp","devToolsEnhancer","noop","AddCriteria","QuerystringWidgetComponent","getWidget","operators","step","maxWidth","enabled","curRow","curIndex","operation","termtitle","addTerm","removeTerm","clearTermTitle","termtitlelabel","termsWrapper","OW","termProps","TermsWrapper","vterm","editableToken","newtoken","newitems","titles","_updateTermsWithNewToken","setEditableToken","widgetvalue","toFocusId","setToFocusId","TermSchema","fromEntries","languageIdentifier","enhancedvocabularyterms","addTermHandler","fieldid","onChangeFieldHandler","previousOptions","hasMore","offset","dataValue","type_text","SEARCH_HOLDOFF","fetchAvailableChoices","searchLength","termsPairsCache","tokensQuery","SelectAsync","reactSelectAsync","cacheOptions","loadOptions","onInputChange","lineHeight","__DEVELOPMENT__","CellComponent","ImageGallery","renderLeftNav","galleryLeftSVG","renderRightNav","galleryRightSVG","renderPlayPauseButton","isPlaying","galleryPauseSVG","galleryPlaySVG","renderFullscreenButton","isFullscreen","galleryBackDownSVG","galleryFullScreenSVG","ImageGalleryTemplate","imagesInfo","original","thumbnail","lazyLoad","lib","ssr","reactSelectAsyncPaginate","reactSelectAsyncCreateable","draftJsLibIsSoftNewlineEvent","reserved_option_names","sentry_config","SENTRY_DSN","RAZZLE_SENTRY_BACKEND_CONFIG","SENTRY_CONFIG","RAZZLE_SENTRY_RELEASE","release","dsn","sentry_options","init","setTags","extras","originalModule","webpackPolyfill","applyConfig","HEADERS","imageMiddleware","resource","fileMiddleware","ploneRobots","robots","envRobots","VOLTO_ROBOTSTXT","sitemap","isBuffer","_env","getEnv","proxyURL","serverURL","instancePath","Router","devProxy","createProxyMiddleware","selfHandleResponse","onProxyRes","responseInterceptor","responseBuffer","proxyRes","onProxyReq","proxyReq","getHeader","writeBody","bodyData","setHeader","byteLength","write","pathRewrite","logLevel","DEBUG_HPM","changeOrigin","devProxyMiddleware","filesMiddleware","imagesMiddleware","robotstxtMiddleware","sitemapMiddleware"],"mappings":"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PxQ,UAAWwmB,KAEb,CACEjzC,KAAM,2CACNysB,UAAWymB,KAEb,CACElzC,KAAM,2CACNysB,UAAW0mB,KAEb,CACEnzC,KAAM,oCACNysB,UAAW2mB,KAEb,CACEpzC,KAAM,gCACNysB,UAAW4mB,KAEb,CACErzC,KAAM,uBACNysB,UAAW6mB,KAEb,CACEtzC,KAAM,yBACNysB,UAAW8mB,KAEb,CACEvzC,KAAM,kCACNysB,UAAW+mB,MAEb,CACExzC,KAAM,sBACNysB,UAAWgnB,MAEb,CACEzzC,KAAM,oCACNysB,UAAWinB,MAEb,CACE1zC,KAAM,uBACNysB,UAAWknB,MAEb,CACE3zC,KAAM,oBACNysB,UAAWmnB,KAEb,CACE5zC,KAAM,mBACNysB,UAAWimB,KAEb,CACE1yC,KAAM,OACNysB,UAAWonB,KAEb,CACE7zC,KAAM,QACNysB,UAAWqnB,KAEb,CACE9zC,KAAM,YACNysB,UAAWsnB,KAEb,CACE/zC,KAAM,WACNysB,UAAWunB,MAEb,CACEh0C,KAAM,UACNysB,UAAWonB,KAEb,CACE7zC,KAAM,yBACNysB,UAAWwnB,KAEb,CACEj0C,KAAM,eACNysB,UAAWsnB,KAEb,CACE/zC,KAAM,cACNysB,UAAWunB,MAEb,CACEh0C,KAAM,aACNysB,UAAWynB,KAEb,CACEl0C,KAAM,WACNysB,UAAW0nB,KAEb,CACEn0C,KAAM,WACNysB,UAAWqnB,KAEb,CACE9zC,KAAM,cACNysB,UAAW2nB,MAEb,CACEp0C,KAAM,cACNysB,UAAWunB,MAEb,CACEh0C,KAAM,0BACNysB,UAAW4nB,MAEb,CACEr0C,KAAM,YACNysB,UAAWsmB,MAEb,CACE/yC,KAAM,YACNysB,UAAWkmB,MAEb,CACE3yC,KAAM,kBACNysB,UAAWmmB,KACX3V,OAAO,GAET,CACEj9B,KAAM,yBACNysB,UAAWomB,KACX5V,OAAO,GAET,CACEj9B,KAAM,MACNysB,UAAW4jB,GAEb,CACErwC,KAAM,IACNysB,UAAW6nB,OAYAC,MAGL,UAAA3zC,IAAOD,gBAAP,eAAiB6zC,iBAAkB,IAAIlxC,IAAK06B,GAAD,GAAC,MAC3CA,EAAMmI,OADoC,IAE7C1Z,UAAW6nB,QAGT1zC,IAAOyrB,YACN,UAAAzrB,IAAOD,gBAAP,SAAiB8uB,eC/ObglB,OAZA,CACb,CACEz0C,KAAM,IACNysB,UAAW8nB,IACXE,OAAQ,IAEF7zC,IAAOyrB,aAAe,MACvBymB,M,koBCoBT,IAAI4B,GAAU,GAWd,SAASC,GAAsBhhC,GAC7BihC,IAAM,OAANA,CAAcjhC,GAVZ/S,IAAOD,UACTC,IAAOD,SAAS2xC,mBAAmBzyC,QAASwR,IAC1C,MAAMwjC,EAAe/e,YAAsBzkB,GAC3C,MAAO,KAAsBwjC,EAAe,SAAStyC,KAAMqzB,IACzD8e,GAAU,SAAKA,IAAR,IAAiB,CAACrjC,GAAOukB,EAAOiP,cAS7C,MAAMiQ,GAAY,IAAIlf,IAAOmf,QAAQ,IAAKC,MAAY,MAEhDC,GAASC,MACZC,QAAQ,gBACRC,IACCF,IAAQG,OACNt2C,QAAQwR,IAAI+kC,UACRt1C,IAAKgF,KAAKjG,QAAQwR,IAAI+kC,UAAW,UACjCv2C,mBAGP8L,KAAK,MAAM,SAAUnL,EAAK8/B,GAEzBA,EAAIh+B,KAAK,OAEV4zC,IAAIG,OAEDC,IAAc50C,IAAOD,SAAS80C,mBAAqB,IAAInwC,OAAQpI,GAAMA,GAE3E+3C,GAAOS,IAAI,KA+BX,SAAqBh2C,EAAK8/B,EAAKmW,GAC7B,MAAMC,EAAM,IAAIp2C,IAAIE,GAEd2R,EAAO,IAAIukB,IAAOmf,QACtBr1C,EAAI2B,iBAAiB1D,IAAI,kBACvBiD,IAAOD,SAASk1C,iBAChBn2C,EAAIU,QAAQ,oBAEb01C,KAAKhB,IACLtoC,WAGGupC,EAAe,CACnBzR,KAAM,CACJ0R,cAAe,KACfpgB,OAAQvkB,EACRkK,SAAUm5B,GAAQrjC,KAIhBugC,EAAUqE,8BAAoB,CAClCC,eAAgB,CAACx2C,EAAIiC,OAKjBqP,EAAQmlC,aAAeJ,EAAcnE,EAASgE,IA2B/C72C,QAAQwR,IAAI6lC,iBAAmB12C,EAAIU,QAAQi2C,OAC9C7W,EAAI8W,OAAOC,aAAgB,GACzB72C,EAAIU,QAAQ,sBAAwBV,EAAIwmB,cACpCxmB,EAAIU,QAAQi2C,OAClBz1C,IAAOD,SAASM,QAAUu+B,EAAI8W,OAAOC,aACrC31C,IAAOD,SAASuQ,UAAYsuB,EAAI8W,OAAOC,cAGzC/W,EAAI8W,OAAJ,SACK9W,EAAI8W,QADT,IAEEtlC,QACA4kC,MACAY,aArCF,SAAsB7iC,GACpB,MAAM8iC,EACJ,cAAC,WAAD,CAAUzlC,MAAOA,EAAO0lC,QAAS/B,GAAjC,SACE,cAAC,eAAD,CAAc7U,QAAS,GAAIzsB,SAAU3T,EAAIiC,IAAzC,SACE,cAAC,KAAD,CAAW0gB,QAAS1O,EAAM0O,cAKhCmd,EAAIl+B,IAAI,CACN,gBAAiB,qCAOG,CAAC,IAAK,IAAK,IAAK,KACnB6O,SAASwD,EAAM1R,SAASiG,QAAQyL,MAAMA,GAEzD6rB,EACGv9B,OAAO0R,EAAM1R,QAAU,KACvBT,KAAM,mBAAkBm1C,yBAAeF,OAkB5Cd,OAlGEH,GAAWzzC,QAAQkzC,GAAOG,IAAI,IAAKI,IAEvCP,GAAOG,KAAI,SAAUt2C,EAAKY,EAAK8/B,EAAKmW,GAClC,GAAI72C,EAAK,CACP,MAAM,MAAEkS,GAAUwuB,EAAI8W,OAChBG,EACJ,cAAC,WAAD,CAAUzlC,MAAOA,EAAO0lC,QAAS/B,GAAjC,SACE,cAAC,eAAD,CAAc7U,QAAS,GAAIzsB,SAAU3T,EAAIiC,IAAzC,SACE,cAAC,KAAD,CAAW0gB,QAASvjB,EAAIujB,cAK9Bmd,EAAIl+B,IAAI,CACN,gBAAiB,qCAOG,CAAC,IAAK,IAAK,IAAK,KACnB6O,SAASrR,EAAImD,SAASiG,QAAQyL,MAAM7U,GAEvD0gC,EACGv9B,OAAOnD,EAAImD,QAAU,KACrBT,KAAM,mBAAkBm1C,yBAAeF,QA2E9CxB,GAAOt3C,IAAI,KAAM,CAAC+B,EAAK8/B,KACrB,MAAM,aAAEgX,GAAiBhX,EAAI8W,OAEvBV,EAAM,IAAIp2C,IAAIE,GAEdk3C,EAAgBC,iBAAOn3C,EAAIU,QAAQ,eAEnCiR,EAAO,IAAIukB,IAAOmf,QACtBr1C,EAAI2B,iBAAiB1D,IAAI,kBACvBiD,IAAOD,SAASk1C,iBAChBn2C,EAAIU,QAAQ,oBAEb01C,KAAKhB,IACLtoC,WAEG/L,EAAYf,EAAI2B,iBAAiB1D,IAAI,cACrCo4C,EAAe,CACnBpjC,YAAa,SAAKA,gBAAP,IAAsBC,MAAOnS,IACxCq2C,KAAMp3C,EAAIwC,KACVoiC,KAAM,CACJ0R,cAAe,KACfpgB,OAAQvkB,EACRkK,SAAUm5B,GAAQrjC,IAEpBulC,iBAGIhF,EAAUqE,8BAAoB,CAClCC,eAAgB,CAACx2C,EAAIiC,OAIjBqP,EAAQmlC,aAAeJ,EAAcnE,EAASgE,GAEpDtjC,YAAiBtB,EAAOtR,GAGxB,MAAMq3C,EAAWh4C,QAAQwR,IAAI+kC,WAAa,QACpCxkC,EAAY,IAAIkmC,iBAAe,CACnCC,UAAWj3C,IAAK/C,QAAQ+C,IAAKgF,KAAK+xC,EAAU,wBAC5CG,YAAa,CAAC,YAGVv1C,EAAMjC,EAAIy3C,aAAez3C,EAAIiC,IAC7B0R,EAAW+jC,gBAASz1C,GAE1B01C,aAAa,CAAErmC,QAAOqC,WAAUohC,UAAQmB,QACrCrzC,KAAK,KAAM,QAIV,MAAM+0C,GACJ,UAAAtmC,EAAMmB,WAAWrF,QAAQ5M,YAAzB,mBAA+B+0B,gBAA/B,eAAyCriB,QACzChS,IAAOD,SAASk1C,iBAGhBn2C,EAAI2B,iBAAiB1D,IAAI,kBACzBiD,IAAOD,SAASk1C,iBAChBn2C,EAAIU,QAAQ,sBAEMk3C,GAClBtmC,EAAMkC,SAASyiB,YAAe2hB,EAAa5C,GAAQ4C,GAAc53C,IAGnE,MAAMogC,EAAU,GAChByX,+BACA,MAAMxmC,EAAS4lC,yBACb,cAAC,wBAAD,CAAuB7lC,UAAWA,EAAlC,SACE,cAAC,kBAAD,CAAiBnR,QAASD,EAAI2B,iBAA9B,SACE,cAAC,WAAD,CAAU2P,MAAOA,EAAO0lC,QAAS/B,GAAjC,SACE,cAAC,eAAD,CAAc7U,QAASA,EAASzsB,SAAU3T,EAAIiC,IAA9C,SACE,cAAC,KAAD,CAAmB8yC,OAAQA,GAAQ+C,QAAS5B,aAOhD6B,EACJ72C,IAAOD,SAAS+2C,aAAaD,iBAAmBE,GAElD,GAAI7X,EAAQn+B,IACV69B,EAAIyR,SAAS3c,YAAgBwL,EAAQn+B,WAChC,GAAIm+B,EAAQoF,WAAY,OAC7B1F,EAAIl+B,IAAI,CACN,gBAAiB,aAGnBk+B,EAAIv9B,OAAO69B,EAAQoF,YAAY1jC,KAC5B,kCACKm1C,yBACA,cAAC,IAAD,CACE7lC,UAAWA,EACXC,OAAQA,EACRC,MAAOA,EACPoB,gBACE,UAAAxR,IAAOD,SAAS+2C,aAAatlC,sBAA7B,eAA6CwlC,cAC7C74C,EAEFkS,YAAawmC,EAAgB/3C,GAC7BuB,QAASu+B,EAAI8W,OAAOC,cAAgB31C,IAAOD,SAASM,QACpDiQ,UACEsuB,EAAI8W,OAAOC,cAAgB31C,IAAOD,SAASuQ,mCAOvDsuB,EAAIv9B,OAAO,KAAKT,KACb,kCACKm1C,yBACA,cAAC,IAAD,CACE7lC,UAAWA,EACXC,OAAQA,EACRC,MAAOA,EACPC,YAAawmC,EAAgB/3C,GAC7BuB,QAASu+B,EAAI8W,OAAOC,cAAgB31C,IAAOD,SAASM,QACpDiQ,UACEsuB,EAAI8W,OAAOC,cAAgB31C,IAAOD,SAASuQ,+BAOxDslC,GACFh0C,MAAMg0C,KAGJ,MAAMmB,GAAyB,KACpC,MAAM,gBAAEE,GAAoBj3C,IAAOD,SAAS+2C,aAG5C,IADUI,qBAAWD,GACb,OAGR,OADUE,oBAAUF,GACbG,SAEAC,uBAAaJ,EAAiB,CAAEK,SAAU,eAFjD,GAMFjD,GAAOh0C,QAAUL,IAAOD,SAASM,QACjCg0C,GAAOkD,kBAAoBv3C,IAAOD,SAASw3C,kBAC3ClD,GAAO/jC,UAAYtQ,IAAOD,SAASuQ,UAEpB+jC,c,qPCvSR,SAASnL,EAAcnoC,EAAKmkB,EAASqI,EAAa,MACvD,IAAIiqB,EAAa,GACjBtyB,EAAU,IAAOA,EAAP,KACV,MAAMuyB,EAAe,IAAOvyB,EAAUhS,GAAS,IAAQA,IAEvDskC,EAAa,IACXA,EACAtyB,EACI,IACE,IAAI,IAAQ,IAAOA,EAAUhS,IAAU,IAAQA,KAAUA,IACvC,mBAAZA,EAAK,KAEPA,EAAK,GAAQA,EAAK,GAAP,KAEN,IAAKA,EAAM,OAEpB,KAEF,IAGNskC,EAAa,IACXA,EACAC,EACI,IACE,IAAI,IAAOA,GAAe,CAACvkC,EAAMzV,IAC/B,IACEyV,EAAKxQ,IAAKvF,GAAW,GAAEM,UAAYN,KACnC,MAGJ,KAEF,IAGN,MAAMu6C,EAAc,IAAK,IAAQF,GAAa,KAE9C,MAAO,CACLj4C,KAAMoqB,KACN4D,aACA7tB,QAAS,CACPusB,GAAI,MACJ7sB,KAAO,GAAE2B,YAAc22C,EAAe,IAAGA,EAAgB,OAWxD,SAASC,EAAmBpqB,EAAa,MAC9C,MAAO,CACLhuB,KAAMgqB,KACNgE,gB,03BCvDJ,MAAM5S,EAAWC,yBAAe,CAC9BkmB,YAAa,CAAF,2DAIX8W,KAAM,CAAF,iCAIJC,OAAQ,CAAF,qCAINzL,kBAAmB,CAAF,iEAWZ,MAAM0L,UAAqCxqC,YA4ChDzO,YAAY8F,GACVmkC,MAAMnkC,GADW,iBALX,CACNozC,gBAAiB,GACjBC,UAAU,IAGO,sBA2CL9kC,IACZ,IAAI/V,EAAQ,IAAIgC,KAAKwF,MAAMxH,OAC3B,IAAOA,GAAO,SAAU2qC,GACtB,OAAOA,EAAM,SAAW50B,EAAK,UAE/B/T,KAAKwF,MAAMqmC,SAAS7rC,KAAKwF,MAAMgC,GAAIxJ,KAhDlB,oBAmDP+V,IAAS,QACnB,IAAI/V,EAA4B,aAApBgC,KAAKwF,MAAMtH,KAAsB,IAAI8B,KAAKwF,MAAMxH,OAAS,GACrEA,EAAQA,EAAMuH,OAAQwO,GAAiB,MAARA,GAGf,MADd,UAAA/T,KAAKwF,MAAMmoC,qBAAX,mBAA0BmL,uBAA1B,eAA2C3N,wBAAyB,IAChC,IAAjBntC,EAAMgE,SACzBhE,EAAQ,IAEV,IAAI+6C,GAAS,EACTltC,GAAS,EAUb,GATA7N,EAAM8B,QAAQ,CAAC6oC,EAAOqQ,KAChBzkB,YAAgBoU,EAAM,UAAYpU,YAAgBxgB,EAAK,UACzDglC,GAAS,EACTltC,EAAQmtC,KAMPD,EA4BH/6C,EAAM0M,OAAOmB,EAAO,GACpB7L,KAAKwF,MAAMqmC,SAAS7rC,KAAKwF,MAAMgC,GAAIxJ,OA7BxB,CAGX,IAAIi7C,EAAgBllC,EACpB,GAAI/T,KAAKwF,MAAM0zC,kBAAmB,CAChC,MAAMC,EAAkB,IACnBn5C,KAAKwF,MAAM0zC,kBAEd,MACA,SAEFD,EAAgBx7C,OAAO+D,KAAKuS,GACzBxO,OAAQjH,GAAQ66C,EAAgB/oC,SAAS9R,IACzC4F,OAAO,CAACC,EAAK7F,KACZ6F,EAAI7F,GAAOyV,EAAKzV,GACT6F,GACN,IAGP80C,EAAgB,EAAH,KAAQA,GAAR,IAAuB,MAAOllC,EAAK,SAChD/V,EAAM6I,KAAKoyC,GACe,WAAtBj5C,KAAKwF,MAAM4zC,OACbp5C,KAAKwF,MAAMqmC,SAAS7rC,KAAKwF,MAAMgC,GAAIxJ,EAAM,IAEzCgC,KAAKwF,MAAMqmC,SAAS7rC,KAAKwF,MAAMgC,GAAIxJ,MA9FtB,6BAuGEhB,IACnBgD,KAAKoqC,SAAS,CAAEwO,gBAAiB57C,EAAEowB,OAAOpvB,QACtCgC,KAAKq5C,mBAAmBr8C,EAAEowB,OAAOpvB,OACnCgC,KAAKoqC,SAAS,CAAEyO,UAAU,IAE1B74C,KAAKoqC,SAAS,CAAEyO,UAAU,MA5GX,8BAgHGj3C,GAChB5B,KAAKwF,MAAM8zC,eACN9a,YAAM58B,GAEN08B,YAAc18B,IApHN,8BAwHE,KACnB,GAAI5B,KAAKq5C,mBAAmBr5C,KAAK4Q,MAAMgoC,iBAAkB,CACvD,GAAIta,YAAct+B,KAAK4Q,MAAMgoC,iBAAkB,CAC7C,MAAMlrC,EAAO1N,KAAK4Q,MAAMgoC,gBAExB54C,KAAKwF,MACFukC,cACC,IACA,CACE,aAAcxV,YAAgBv0B,KAAK4Q,MAAMgoC,iBACzC,aAAc,IACd5O,QAAS,yBACTC,gBAAiB,OACjBxa,OAAQ,KAET,GAAEzvB,KAAKwF,MAAM0kC,SAASlqC,KAAKwF,MAAMtH,QAEnCsE,KAAM+2C,IAAS,OACV,UAAAA,EAAKzlC,aAAL,eAAY9R,QAAS,EACvBhC,KAAK6rC,SAAS0N,EAAKzlC,MAAM,IAEzB9T,KAAKwF,MAAMqmC,SAAS7rC,KAAKwF,MAAMgC,GAAI,CACjC,CACE,MAAO+sB,YAAgB7mB,GACvBzE,MAAOg2B,YAAevxB,aAMhC1N,KAAKwF,MAAMqmC,SAAS7rC,KAAKwF,MAAMgC,GAAI,CACjC,CACE,MAAOu3B,YAAa/+B,KAAK4Q,MAAMgoC,iBAC/B3vC,MAAOg2B,YAAej/B,KAAK4Q,MAAMgoC,oBAIvC54C,KAAKoqC,SAAS,CAAEyO,UAAU,EAAMD,gBAAiB,QA7JlC,+BAiKI57C,IACP,UAAVA,EAAEsB,KACJtB,EAAE6oB,iBACF7oB,EAAE8oB,kBACF9lB,KAAKw5C,sBACc,WAAVx8C,EAAEsB,MACXtB,EAAE6oB,iBACF7oB,EAAE8oB,qBAxKa,6BA6KE2zB,IAAO,YAC1BA,EAAG5zB,iBACH7lB,KAAKwF,MAAMynC,kBAAkB,CAC3B/uC,KAAM8B,KAAKwF,MAAMtH,KACjB6uC,YAAa/sC,KAAKwF,MAAM8N,SAASC,SACjCu5B,aAAc,QACdlC,aAAc,CAAChpC,EAAKmS,KAClB/T,KAAK6rC,SAAS93B,IAEhBm3B,gBAAe,UAAElrC,KAAKwF,MAAMmoC,qBAAb,iBAAE,EAA0BmL,uBAA5B,aAAE,EACb5N,gBACJC,qBAAoB,UAAEnrC,KAAKwF,MAAMmoC,qBAAb,iBAAE,EAA0BmL,uBAA5B,aAAE,EAClB3N,yBAzLW,uCA6LYnuC,IACzBgD,KAAKwF,MAAMi3B,aAKbz/B,EAAEowB,OAAO/c,SAASrQ,KAAK05C,iBAAiBh0C,UACxC1I,EAAEowB,OAAO/c,SAASrQ,KAAK25C,eAAej0C,WAEtC1F,KAAK45C,kBAAkB58C,KApMzBgD,KAAK05C,iBAAmBntC,IAAM++B,YAC9BtrC,KAAK25C,eAAiBptC,IAAM++B,YAE9BuO,YAAY9lC,GACV,MAAMrC,EAAOqC,EAAK,OAClB,OACE,cAAC,QAAD,CAEEhH,QACE,sBAAKe,MAAO,CAAEuuB,QAAS,QAAvB,UACGiC,YAAc5sB,GACb,cAAC,IAAD,CAAMpU,KAAM2rC,IAASnV,KAAK,SAE1B,cAAC,IAAD,CAAMx2B,KAAMw8C,IAAUhmB,KAAK,SAJ/B,IAOGS,YAAgB7iB,MAGrBw3B,QACE,eAAC,QAAD,WACE,qBAAKh5B,UAAU,aAAf,SAA6B6D,EAAK9K,QAClC,8BACuB,aAApBjJ,KAAKwF,MAAMtH,MACV,cAAC,IAAD,CACEZ,KAAMk9B,IACN1G,KAAK,OACL5jB,UAAU,QACVyvB,QAAUla,IACRA,EAAMI,iBACN7lB,KAAK+5C,WAAWhmC,YAvBvBwgB,YAAgB7iB,IAsM3BhC,SAAS,QACP,MAAM,GACJlI,EADI,YAEJo6B,EAFI,SAGJlf,EAHI,MAIJ1kB,EAJI,KAKJE,EALI,SAMJ2tC,EANI,WAOJpP,GACEz8B,KAAKwF,MAET,IAAIsO,EAAQ,KAAS,IAAQ9V,IAAUA,EAAQ,CAACA,GAASA,GAAS,IAE9DqrC,EACO,aAATnrC,GAAwC,IAAjB4V,EAAM9R,OAAeg4C,IAAaxf,IACvDyf,EACO,aAAT/7C,GAAwC,IAAjB4V,EAAM9R,OACzBhC,KAAK45C,kBACJ58C,IACCA,EAAE6oB,iBACFgmB,EAASrkC,EAA0B,WAAtBxH,KAAKwF,MAAM4zC,OAAsB,KAAO,KAG7D,OACE,cAAC,IAAD,OACMp5C,KAAKwF,OADX,IAEE0K,UAAW0xB,EAAc,YAAc,OAFzC,SAIE,sBACE1xB,UAAU,sBACVgqC,kBAAkB,YAChBx3B,GAAY,yBACElb,IAJlB,UAME,sBACE0I,UAAU,kBACVyvB,QAAS3/B,KAAKm6C,4BACdC,UAAWp6C,KAAKm6C,4BAChBjoC,KAAK,YACLmoC,SAAU,EACV/2B,IAAKtjB,KAAK05C,iBANZ,UAQG5lC,EAAMvQ,IAAKwQ,GAAS/T,KAAK65C,YAAY9lC,IAEpB,IAAjBD,EAAM9R,QAAoC,aAApBhC,KAAKwF,MAAMtH,MAChC,qBAAKgS,UAAU,cAAcoT,IAAKtjB,KAAK25C,eAAvC,mBACG35C,KAAKwF,MAAMm8B,mBADd,QAEI3hC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmmB,eAG5C3hC,KAAKwF,MAAM8zC,gBACO,IAAjBxlC,EAAM9R,QACc,aAApBhC,KAAKwF,MAAMtH,MACT,uBACEk8C,UAAWp6C,KAAKs6C,oBAChBzO,SAAU7rC,KAAKu6C,kBACfv8C,MAAOgC,KAAK4Q,MAAMgoC,gBAClBjX,YAAW,UACT3hC,KAAKwF,MAAMm8B,mBADF,QAET3hC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmmB,kBAKhD3hC,KAAK4Q,MAAMgoC,iBAAmB,IAAQ9kC,IACrC,eAAC,SAAO4mB,MAAR,WACE,cAAC,SAAD,CACE0O,OAAK,EACLl5B,UAAU,SACVyvB,QAAU3iC,IACRA,EAAE8oB,kBACF9lB,KAAKoqC,SAAS,CAAEwO,gBAAiB,MALrC,SAQE,cAAC,IAAD,CAAMt7C,KAAMk9B,IAAU1G,KAAK,OAAOmG,MAAM,cAE1C,cAAC,SAAD,CACEmP,OAAK,EACLrO,SAAO,EACP+N,UAAW9oC,KAAK4Q,MAAMioC,SACtBlZ,QAAU3iC,IACRA,EAAE8oB,kBACF9lB,KAAKw5C,sBANT,SASE,cAAC,IAAD,CAAMl8C,KAAMk9C,IAAU1mB,KAAK,eAI/B9zB,KAAK4Q,MAAMgoC,iBACX,cAAC,SAAD,CACEzmC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,EAASyxB,mBAEXtN,QAASsa,EACT/pC,UAAU,SACV44B,SAAUrM,EANZ,SAQE,cAAC,IAAD,CAAMn/B,KAAM+rC,EAAMvV,KAAK,kB,IA7VxB6kB,E,eA6BW,CACpB/W,YAAa,KACbjmB,UAAU,EACV/H,MAAO,GACP5V,MAAO,GACPE,KAAM,WACNk7C,OAAQ,WACRE,gBAAgB,IA0UL9M,sBACbC,aACAG,IACAj3B,aACA+2B,kBAAQ,KAAM,CAAE3C,oBAJHyC,CAKbmM,I,8uBClZF,MAAM8B,EAAW,EACfvQ,QACA/pC,OACA0L,QACAuJ,SACApX,QACA6iB,SACAgrB,WACAlB,gBACAnjC,QAEOrH,EAAK2gB,OAAOvd,IAAI,CAAC+R,EAAOolC,KAAQ,MACrC,MAAM9lB,GAAI52B,aAAA,EAAAA,EAAQsX,KAAUF,EAAOC,WAAWC,GAAOqlC,aACrD,OACE,wBAAC,IAAD,OACMvlC,EAAOC,WAAWC,IADxB,IAEE9N,GAAK,GAAE8N,KAASolC,KAAOlzC,IACvBkb,SAAUviB,EAAK8I,MAAMhD,cACrBikC,MAAOA,EACPlsC,MAAO42B,EACPgmB,YAAa58C,EACb2d,UAA+C,KAArC,UAAAvG,EAAOuG,gBAAP,eAAiBzV,QAAQoP,IACnCu2B,SAAU,CAACgP,EAAQC,IACVjP,EAASrkC,EAAD,OAAUxJ,GAAV,IAAiB,CAACsX,GAAQwlC,KAE3Cx8C,IAAKgX,EACL1B,MAAOiN,aAAF,EAAEA,EAASvL,GAChBrM,MAAOmM,EAAOC,WAAWC,GAAOrM,MAChC0hC,cAAeA,OAcjBoQ,EAAe,IAQf,IARgB,MACpB7Q,EADoB,OAEpB90B,EAFoB,MAGpBpX,EAHoB,SAIpB6tC,EAJoB,OAKpBhrB,EAAS,GALW,GAMpBrZ,GAEI,WACJ,MAAMwzC,EAAYzuC,IAAMkX,YACtB,CAACw3B,EAAUpvC,KACF,CACLqvC,SAAUD,EAAShyC,MACnByG,OAAQ,IACN,cAAC,MAAIyrC,KAAL,UACE,cAACV,EAAD,CACEvQ,MAAOA,EACP/pC,KAAM86C,EACNpvC,MAAOA,EACPuJ,OAAQA,EACRyL,OAAQA,EACR7iB,MAAOA,EACP6tC,SAAUA,EACVrkC,GAAIA,QAMd,CAAC0iC,EAAOrpB,EAAQrZ,EAAIqkC,EAAUz2B,EAAQpX,IAGxC,OAAmC,IAA5BoX,EAAOoN,UAAUxgB,OACtB,mCACE,cAACy4C,EAAD,CACEvQ,MAAOA,EACP/pC,KAAMiV,EAAOoN,UAAU,GACvB3W,MAAO,EACPuJ,OAAQA,EACRyL,OAAQA,EACR7iB,MAAOA,EACP6tC,SAAUA,EACVrkC,GAAIA,MAIR,cAAC,MAAD,CAAK4zC,MAAOhmC,EAAOoN,UAAUjf,IAAIy3C,MAsBrCD,EAAa9qC,aAAe,CAC1BjS,MAAO,MAGM+8C,O,cC1Ifp+C,EAAOD,QAAUyC,QAAQ,e,cCAzBxC,EAAOD,QAAUyC,QAAQ,wB,cCAzBxC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,oN,qFCWjI,MAAM8e,EAAWC,yBAAe,CAC9B4/B,aAAc,CAAF,6DAkDC5O,yBA5COjnC,IACpB,MAAM,SAAE8N,EAAF,KAAYixB,EAAZ,QAAkBx3B,EAAlB,SAA2BuuC,GAAa91C,EACxCu9B,EAAkBf,YAAmBj1B,GACrC01B,EAAwBR,YAAyBl1B,GACjDu1B,EAAe98B,EAAM88B,cAAgBzhC,IAAOqrB,OAAOoW,aACnDiZ,EAAa,IAAE/1C,EAAMwM,IAAM,OAEjC,OAAOkwB,YAAcn1B,GACnB,cAACwuC,EAAD,UACG,IAAIxuC,EAAQ01B,GAAuB3uB,MAAQo2B,IAAU,cACpD,MAAMsR,EAAK,UACTlZ,EAAY,UAACv1B,EAAQg2B,UAAT,iBAAC,EAA2BmH,UAA5B,aAAC,EAAoC,iBADxC,aACT,EAA4DrM,KAExD4d,EAAYnX,YAAmB,CACnCnkC,KAAM4M,EAAQg2B,GAAiBmH,GAC/B3F,OACA+W,WACAjmC,WAAYtI,IAGd,OAAOyuC,EACL,cAACA,EAAD,CAEEh0C,GAAI0iC,EACJoR,SAAUA,EACVjmC,WAAYtI,EACZ5M,KAAMs7C,EACNx7C,KAAMm9B,aAAW9pB,aAAA,EAAAA,EAAUC,WAAY,IACvC+uB,aAAcA,GANT4H,GASP,8BACG3F,EAAK5jB,cAAcnF,EAAS6/B,aAAc,CACzCnR,MAAK,UAAEn9B,EAAQg2B,UAAV,iBAAE,EAA2BmH,UAA7B,aAAE,EAAoC,YAFrCA,OAShB,M,cC1DJvtC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,6Q,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,utB,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,0G,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,kyC,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,oS,cCAjIC,EAAOD,QAAUyC,QAAQ,mB,cCAzBxC,EAAOD,QAAUyC,QAAQ,gB,cCAzBxC,EAAOD,QAAUyC,QAAQ,gB,cCAzBxC,EAAOD,QAAUyC,QAAQ,qB,gBCAzB,IAAIoE,EAAM,CACT,YAAa,CACZ,IACA,GAED,YAAa,CACZ,IACA,GAED,YAAa,CACZ,IACA,GAED,YAAa,CACZ,IACA,GAED,YAAa,CACZ,IACA,GAED,YAAa,CACZ,IACA,GAED,YAAa,CACZ,IACA,GAED,YAAa,CACZ,IACA,GAED,YAAa,CACZ,IACA,GAED,eAAgB,CACf,IACA,GAED,YAAa,CACZ,IACA,IAGF,SAASm4C,EAAoB/7C,GAC5B,IAAInD,EAAoBgB,EAAE+F,EAAK5D,GAC9B,OAAO1C,QAAQC,UAAUsF,MAAK,WAC7B,IAAIxF,EAAI,IAAI2R,MAAM,uBAAyBhP,EAAM,KAEjD,MADA3C,EAAEiF,KAAO,mBACHjF,KAIR,IAAI2+C,EAAMp4C,EAAI5D,GAAM6H,EAAKm0C,EAAI,GAC7B,OAAOn/C,EAAoBQ,EAAE2+C,EAAI,IAAIn5C,MAAK,WACzC,OAAOhG,EAAoByB,EAAEuJ,EAAI,MAGnCk0C,EAAoBl6C,KAAO,WAC1B,OAAO/D,OAAO+D,KAAK+B,IAEpBm4C,EAAoBl0C,GAAK,GACzB7K,EAAOD,QAAUg/C,G,cChEjB/+C,EAAOD,QAAUyC,QAAQ,Q,cCAzBxC,EAAOD,QAAUyC,QAAQ,mB,cCAzBxC,EAAOD,QAAUyC,QAAQ,Y,cCAzBxC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,uqB,cCAjIC,EAAOD,QAAUyC,QAAQ,e,cCAzBxC,EAAOD,QAAUyC,QAAQ,qB,ssBCOzB,MAAM62C,EAAe,CACnBpiC,MAAO,KACPm9B,QAAS,CACPtyC,OAAQ,GACRuyC,eAAgB,GAChB4K,aAAc,GACd94B,KAAM,GACN+4B,iBAAkB,GAClBC,YAAa,IAEfxkB,QAAQ,EACRykB,SAAS,G,ikBCPX,MAAM/F,EAAe,CACnBpiC,MAAO,KACPooC,gBAAiB,GACjBC,gBAAiB,GACjBC,iBAAkB,GAClB5kB,QAAQ,EACRykB,SAAS,GAUX,SAASI,EAAatd,EAAGxJ,GACvB,MAAM+mB,EAASvd,EAAE51B,MAAMsS,cACjB8gC,EAAShnB,EAAEpsB,MAAMsS,cACvB,OAAI6gC,EAASC,GACH,EACCD,EAASC,EACX,EAEF,E,ikBCzBT,MAAMrG,EAAe,CACnBpiC,MAAO,KACP0oC,WAAY,KACZlL,mBAAmB,EACnB9uB,QAAS,M,6lBCJX,MAAM0zB,EAAe,CACnBpiC,MAAO,KACPE,MAAO,GACPyoC,KAAM,KACNjlB,QAAQ,EACRykB,SAAS,GCfX,MAAM/F,EAAe,CAAE14C,KAAM,KAAM6xB,QAAS,KAAMqtB,GAAI,M,ikBCatD,MAAMxG,EAAe,CACnB1lC,IAAK,CACHgnB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAET8kC,OAAQ,CACNphB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAET6oC,OAAQ,CACNnlB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAET8oC,KAAM,CACJplB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAETE,MAAO,GACP6oC,YAAa,KACb/G,KAAM,MASR,SAASgH,EAAcC,GACrB,OAAOA,EAAWzyC,MAAM,KAAK,GAAGnE,c,wmBCzBlC,MAAM+vC,EAAe,CACnB33C,OAAQ,CACNi5B,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAET8kC,OAAQ,CACNphB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAEThW,IAAK,CACH05B,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAETob,MAAO,CACLsI,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAET6oC,OAAQ,CACNnlB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAETkpC,cAAe,CACbxlB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAETmpC,KAAM,CACJzlB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAETopC,OAAQ,CACN1lB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAETzT,KAAM,KACNwsC,YAAa,IASf,SAASiQ,EAAcC,GACrB,OAAOA,EAAWzyC,MAAM,KAAK,GAAGnE,c,ikBC1DlC,MAAM+vC,EAAe,CACnBp4C,IAAK,CACH05B,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAET8oC,KAAM,CACJplB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAET6oC,OAAQ,CACNnlB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAETqpC,KAAM,CACJ3lB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAET8kC,OAAQ,CACNphB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAETspC,aAAc,KACdC,cAAe,GACfC,kBAAmB,KACnBC,oBAAqB,MASvB,SAAST,EAAcC,GACrB,OAAOA,EAAWzyC,MAAM,KAAK,GAAGnE,c,ikBC1ClC,MAAM+vC,EAAe,CACnBpP,OAAQ,KACRzZ,OAAQ,KACR5sB,QAAS,CACP+2B,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,O,ikBCXX,MAAMoiC,EAAe,CACnBpiC,MAAO,KACPzT,KAAM,GACNm3B,QAAQ,EACRykB,SAAS,G,kkBCJX,MAAM/F,GAAe,CACnBpiC,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,G,qkBCHX,MAAM/F,GAAe,CACnBpiC,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,GCJX,MAAM/F,GAAe,G,qkBCIrB,MAAMA,GAAe,CACnBsH,QAAS,GACT1/C,IAAK,CACHgW,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,GAEXwB,OAAQ,CACN3pC,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,IAUb,SAASa,GAAcC,GACrB,OAAOA,EAAWzyC,MAAM,KAAK,GAAGnE,c,qkBCjBlC,MAAM+vC,GAAe,CACnB33C,OAAQ,CACNi5B,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAET8kC,OAAQ,CACNphB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAEThW,IAAK,CACH05B,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAET8oC,KAAM,CACJplB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAET6oC,OAAQ,CACNnlB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAET6K,OAAQ,GACR++B,MAAO,IAST,SAASZ,GAAcC,GACrB,OAAOA,EAAWzyC,MAAM,KAAK,GAAGnE,c,inBCvClC,MAAM+vC,GAAe,CACnBx6B,SAAU,I,qkBCHZ,MAAMw6B,GAAe,CACnBpiC,MAAO,KACPE,MAAO,GACPwjB,QAAQ,EACRykB,SAAS,GAUX,SAAS0B,GAAkB3pC,GACzB,OAAO,IAAIA,EAAQC,GAAD,IAChB9K,MAAO8K,EAAK9K,MACZrH,IAAK2yB,YAAgBxgB,EAAK,SACtBA,EAAKD,OAAS,CAAEA,MAAO2pC,GAAkB1pC,EAAKD,U,qkBCrBtD,MAAMkiC,GAAe,CACnBpiC,MAAO,KACP8pC,QAAS,GACTC,iBAAkB,GAClBrmB,QAAQ,EACRykB,SAAS,G,qkBCTX,MAGM/F,GAAe,CACnBpiC,MAAO,KACPE,MAAO,GACP8pC,MAAO,EACPtmB,QAAQ,EACRykB,SAAS,EACT8B,SAAU,GACVlR,YAAa,I,qkBCNf,MAAMqJ,GAAe,CACnBpiC,MAAO,KACPmP,MAAO,GACPuU,QAAQ,EACRykB,SAAS,G,+qBCGX,MAAM/F,GAAe,CACnBpiC,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,EACT3mC,OAAQ,KACR6nC,KAAM,CACJ3lB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAET6oC,OAAQ,CACNnlB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAETkqC,IAAK,CACHxmB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,OAUX,SAASgpC,GAAcC,GACrB,OAAOA,EAAWzyC,MAAM,KAAK,GAAGnE,c,qkBC9BlC,MAAM+vC,GAAe,CACnBpiC,MAAO,KACPE,MAAO,GACP8pC,MAAO,EACPtmB,QAAQ,EACRykB,SAAS,EACT8B,SAAU,GACVlR,YAAa,I,qkBCVf,MAAMqJ,GAAe,CACnByG,OAAQ,CACNnlB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAEThW,IAAK,CACH05B,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAETzT,KAAM,CACJ49C,gBAAiB,GACjBT,QAAS,GACTU,QAAS,OAUb,SAASpB,GAAcC,GACrB,OAAOA,EAAWzyC,MAAM,KAAK,GAAGnE,c,qkBC5BlC,MAAM+vC,GAAe,CACnBiI,IAAK,G,qkBCDP,MAAMjI,GAAe,CACnBpiC,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,EACTmC,MAAO,I,8lBCOT,MAAMlI,GAAe,CACnBlzB,KAAM,GACN5E,MAAO,GACP7f,OAAQ,CACNuV,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,GAEXn+C,IAAK,CACHgW,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,GAEXW,KAAM,CACJ9oC,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,GAEXrD,OAAQ,CACN9kC,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,GAEXU,OAAQ,CACN7oC,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,GAEXoC,gBAAiB,CACfvqC,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,GAEX97B,SAAU,CACRrM,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,GAEXrpC,QAAS,CACPkB,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,GAEXqC,MAAO,CACLxqC,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,IAUb,SAASa,GAAcC,GACrB,OAAI,KAAWA,EAAY,mBAClB,kBAEFA,EAAWzyC,MAAM,KAAK,GAAGnE,c,qkBC5ElC,MAAM+vC,GAAe,CACnBrgB,kBAAmB,M,mlBCOrB,MAAMqgB,GAAe,G,qkBCCrB,MAAMA,GAAe,CACnBp4C,IAAK,CACH05B,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAETyqC,WAAY,CACV/mB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAETi+B,QAAS,GACTyM,YAAa,GACbC,SAAU,IASZ,SAAS3B,GAAcC,GACrB,OAAOA,EAAWzyC,MAAM,KAAK,GAAGnE,cC3BlC,MAAM+vC,GAAe,CACnBwI,UAAU,G,+NCHZ,MAAMxI,GAAe,G,qkBCHrB,MAAMA,GAAe,G,0oCCFrB,MAAMA,GAAe,CACnB1e,QAAQ,EACRmnB,UAAW,I,qkBCUb,MAAMzI,GAAe,CACnB0I,KAAM,GACNC,MAAO,CACLrnB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAETvV,OAAQ,CACNi5B,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,MAETJ,OAAQ,CACN8jB,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,OAUX,SAASgpC,GAAcC,GACrB,OAAOA,EAAWzyC,MAAM,KAAK,GAAGnE,c,+NCnBnB24C,O,mWALE,ICqCA,CACfra,KAAMsa,cACNC,kBHhDa,SAAsBluC,EAAQolC,GAAcpP,EAAS,IAClE,MAAM,IAAEtoC,EAAF,KAAO6B,EAAP,MAAayT,GAAUgzB,EAC7B,OAAQA,EAAOxmC,MACb,IAAK,gCACH,gBACKwQ,GADL,IAEE0mB,QAAQ,IAEZ,IAAK,8BACH,gBACK1mB,GADL,IAEE0mB,QAAQ,IAEZ,IAAK,mBACH,gBACK1mB,GADL,IAEE6tC,UAAW,SACN7tC,EAAM6tC,WADF,IAEP,CAACngD,GAAM,CACLy9C,SAAS,EACTzkB,QAAQ,OAIhB,IAAK,2BACH,gBACK1mB,GADL,IAEE6tC,UAAW,SACN7tC,EAAM6tC,WADF,IAEP,CAACngD,GAAM,CACLy9C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGX,CAACtV,GAAM6B,IAEX,IAAK,wBACH,gBACKyQ,GADL,IAEE6tC,UAAW,SACN7tC,EAAM6tC,WADF,IAEP,CAACngD,GAAM,CACLy9C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOA,OAIf,IAAK,oBACH,gBACKhD,GADL,IAEE6tC,UAAW,SACN7tC,EAAM6tC,WADF,IAEP,CAACngD,GAAM,CACLy9C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGX,CAACtV,GAAM,OAKb,OAAOsS,GGhBPmgC,QnC1Ba,SAAiBngC,EAAQolC,EAAcpP,EAAS,IAC7D,OAAQA,EAAOxmC,MACb,KAAQ+oB,IAAF,WACJ,cACKvY,GADL,IAEEgD,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,IAEb,KAAQ5yB,IAAF,WACJ,cACKvY,GADL,IAEEgD,MAAO,KACPm9B,QAASnK,EAAO/yB,OAChByjB,QAAQ,EACRykB,SAAS,IAEb,KAAQ5yB,IAAF,QACJ,cACKvY,GADL,IAEEgD,MAAOgzB,EAAOhzB,MACdm9B,QAAS,GACTzZ,QAAQ,EACRykB,SAAS,IAEb,QACE,OAAOnrC,ImCCXmuC,OlCVa,SAAgBnuC,EAAQolC,EAAcpP,EAAS,IAC5D,OAAQA,EAAOxmC,MACb,KAAQ8oB,IAAF,WACN,KAAQE,IAAF,WACN,KAAQuB,KAAF,WACJ,cACK/Z,GADL,IAEEgD,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,IAEb,KAAQ3yB,IAAF,WACJ,cACKxY,GADL,IAEEgD,MAAO,KACPooC,gBAAiBpV,EAAO/yB,OAAOC,MAC5BvO,OAAQsM,IAA+B,IAAtBA,EAAKmtC,cACtB/vB,KAAKktB,GACRF,gBAAiBrV,EAAO/yB,OAAOC,MAC5BvO,OAAQsM,IAA+B,IAAtBA,EAAKmtC,cACtB/vB,KAAKktB,GACRD,iBAAkBtV,EAAO/yB,OAAOC,MAC7BvO,OAAQsM,IAAyC,IAAhCA,EAAKotC,aAAaC,WACnCjwB,KAAKktB,GACR7kB,QAAQ,EACRykB,SAAS,IAEb,KAAQ7yB,IAAF,WACN,KAAQyB,KAAF,WACJ,cACK/Z,GADL,IAEEgD,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,IAEb,KAAQ7yB,IAAF,QACN,KAAQE,IAAF,QACN,KAAQuB,KAAF,QACJ,cACK/Z,GADL,IAEEgD,MAAOgzB,EAAOhzB,MACdooC,gBAAiB,GACjBC,gBAAiB,GACjBC,iBAAkB,GAClB5kB,QAAQ,EACRykB,SAAS,IAEb,QACE,OAAOnrC,IkCrCXyhC,SjChCa,SAAkBzhC,EAAQolC,EAAcpP,EAAS,IAC9D,OAAQA,EAAOxmC,MACb,KAAKmmB,KACH,cACK3V,GADL,IAEEgD,MAAOgzB,EAAOhzB,MACd0oC,WAAY1V,EAAO0V,WACnBh6B,QAASskB,EAAOtkB,QAChB8uB,kBAAmBxK,EAAOwK,oBAE9B,KAAK5qB,KACH,cACK5V,GADL,IAEEgD,MAAO,KACP0oC,WAAY,KACZh6B,QAAS,KACT8uB,mBAAmB,IAEvB,QACE,OAAOxgC,IiCcXuuC,YhChCa,SAAqBvuC,EAAQolC,EAAcpP,EAAS,IACjE,OAAQA,EAAOxmC,MACb,KAAQmnB,IAAF,WACJ,cACK3W,GADL,IAEEgD,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,IAEb,KAAQx0B,IAAF,WACJ,cACK3W,GADL,IAEEgD,MAAO,KACPE,MAAO,IAAI8yB,EAAO/yB,OAAOC,MAAQC,IAAD,CAC9B9K,MAAO8K,EAAK9K,MACZrH,IAAK2yB,YAAgBxgB,EAAK,WAE5BwoC,KAAMhoB,YAAgBqS,EAAO/yB,OAAO0oC,MACpCjlB,QAAQ,EACRykB,SAAS,IAEb,KAAQx0B,IAAF,QACJ,cACK3W,GADL,IAEEgD,MAAOgzB,EAAOhzB,MACdE,MAAO,GACPwjB,QAAQ,EACRykB,SAAS,IAEb,QACE,OAAOnrC,IgCGXimC,c/BjDa,SAAuBjmC,EAAQolC,EAAcpP,EAAS,IACnE,OAAOh2B,G+BiDPwuC,S9BHa,SAAkBxuC,EAAQolC,EAAcpP,EAAS,IAAI,QAClE,OAAQA,EAAOxmC,MACb,KAAQimB,IAAF,WACN,KAAQU,IAAF,WACN,KAAQ8D,KAAF,WACN,KAAQxB,IAAF,WACN,KAAQC,IAAF,WACJ,cACK1Y,GADL,IAEE,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQyV,IAAF,WACJ,cACKzY,GADL,IAEEkD,MAAO8yB,EAAO/yB,OAAOC,MACrB8hC,KAAI,UAAEhP,EAAO/yB,OAAOgqC,gBAAhB,aAAE,EAAwBjI,KAC9B+G,YAAa/V,EAAO/yB,OAAO8oC,YAC3B,CAACC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQ0V,IAAF,WACJ,cACK1Y,GADL,IAEEkD,MAAO,IAAIlD,EAAMkD,SAAU8yB,EAAO/yB,OAAOC,OACzC8hC,KAAI,UAAEhP,EAAO/yB,OAAOgqC,gBAAhB,aAAE,EAAwBjI,KAC9B,CAACgH,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQyS,IAAF,WACN,KAAQU,IAAF,WACN,KAAQ8D,KAAF,WACJ,cACKja,GADL,IAEE,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQyV,IAAF,QACJ,cACKzY,GADL,IAEEkD,MAAO,GACP6oC,YAAa,KACb/G,KAAM,KACN,CAACgH,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,KAAQ0V,IAAF,QACN,KAAQjD,IAAF,QACJ,cACKzV,GADL,IAEE,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,QACE,OAAOhD,I8BpEX7D,Q7BuBa,SAAiB6D,EAAQolC,EAAcpP,EAAS,IAAI,YACjE,IAAI,OAAE/yB,GAAW+yB,EACjB,OAAQA,EAAOxmC,MACb,IAAM,GAAE6oB,KACN,cACKrY,GADL,IAEE,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,KACP8mC,IAAK9T,EAAO9W,gBAGlB,KAAQnJ,IAAF,WACN,KAAQiF,KAAF,WACN,KAAQ5E,IAAF,WACN,KAAQ6E,KAAF,WACN,KAAQjB,KAAF,WACN,KAAQpD,IAAF,WACN,KAAQwC,KAAF,WACJ,OAAO4c,EAAOxY,WAAP,OAEExd,GAFF,IAGD+7B,YAAa,OACR/7B,EAAM+7B,aADA,IAET,CAAC/F,EAAOxY,YAAR,OACMxd,EAAM+7B,YAAY/F,EAAOxY,aAAe,CAC1CjuB,KAAM,OAFV,IAIEm3B,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,WAXV,OAgBEhD,GAhBF,IAiBD,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGjB,KAAQ+S,IAAF,WACA9S,EAAO,sBACT,IAAIA,EAAO,qBAAuBc,IAChCd,EAAS,OACJ,IAAKA,EAAQc,IACb,IAAQd,EAAOc,GAAW,CAAC3W,EAAOM,IAAS,GAAEqW,KAAYrW,QAIlE,MAAM6B,EAAOymC,EAAOxY,YAChBrpB,MAAMC,QAAQ6O,GACZA,EAAOtQ,IAAKwQ,GAAD,EAAC,KACPA,GADM,IAETnS,IAAK2yB,YAAgBxgB,EAAK,WAJrB,OAiBJF,GAjBI,IAkBPC,MACE8yB,EAAO/yB,QACP+yB,EAAO/yB,OAAOC,OACd8yB,EAAO/yB,OAAOC,MAAMvQ,IAAKwQ,GAAD,EAAC,KACpBA,GADmB,IAEtBnS,IAAK2yB,YAAgBxgB,EAAK,aAGpC,OAAO6yB,EAAOxY,WAAP,OAEExd,GAFF,IAGD+7B,YAAa,OACR/7B,EAAM+7B,aADA,IAET,CAAC/F,EAAOxY,YAAa,CACnB2tB,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,KACPzT,YATH,OAcEyQ,GAdF,IAeDzQ,OACA,CAACy8C,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGjB,KAAQ4T,IAAF,WASJ,OARI3T,EAAO,sBACT,IAAIA,EAAO,qBAAuBc,IAChCd,EAAS,OACJ,IAAKA,EAAQc,IACb,IAAQd,EAAOc,GAAW,CAAC3W,EAAOM,IAAS,GAAEqW,KAAYrW,QAI3DsoC,EAAOxY,WAAP,OAEExd,GAFF,IAGD+7B,YAAa,OACR/7B,EAAM+7B,aADA,IAET,CAAC/F,EAAOxY,YAAa,CACnB2tB,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,KACPzT,KAAM,OACD0T,GADD,IAEFC,MACE8yB,EAAO/yB,QACP+yB,EAAO/yB,OAAOC,OACd8yB,EAAO/yB,OAAOC,MAAMvQ,IAAKwQ,GAAD,EAAC,KACpBA,GADmB,IAEtBnS,IAAK2yB,YAAgBxgB,EAAK,kBAhBnC,OAuBEnD,GAvBF,IAwBDzQ,KAAM,OACD0T,GADD,IAEFC,MACE8yB,EAAO/yB,QACP+yB,EAAO/yB,OAAOC,OACd8yB,EAAO/yB,OAAOC,MAAMvQ,IAAKwQ,GAAD,EAAC,KACpBA,GADmB,IAEtBnS,IAAK2yB,YAAgBxgB,EAAK,aAGhC,CAAC6oC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGjB,KAAQoT,IAAF,WACN,KAAQgD,KAAF,WACJ,cACKpZ,GADL,IAEE,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,KACPqb,KAAM,CACJF,GAAE,UAAE6X,EAAO3X,YAAT,aAAE,EAAaF,GACjBC,MAAK,UAAE4X,EAAO3X,YAAT,aAAE,EAAaD,OAEtBnjB,MAAO+6B,EAAO/6B,SAGpB,KAAQggB,KAAF,WACJ,cACKjb,GADL,IAEE,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,MAETzT,KAAM,OACDyQ,EAAMzQ,MADP,IAEF48C,KAAM,KACDlpC,OAIX,KAAQ+W,KAAF,WACJ,cACKha,GADL,IAEE,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,KACPqb,KAAM,CACJF,GAAE,UAAE6X,EAAO3X,YAAT,aAAE,EAAaF,GACjBC,MAAK,UAAE4X,EAAO3X,YAAT,aAAE,EAAaD,UAI5B,KAAQpD,KAAF,WACJ,cACKhb,GADL,IAEE,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,MAETzT,KAAM,OACDyQ,EAAMzQ,MADP,IAEF48C,KAAM,KACDlpC,OAIX,KAAQ8S,IAAF,QACN,KAAQiF,KAAF,QACN,KAAQ5E,IAAF,QACN,KAAQ6E,KAAF,QACN,KAAQrE,IAAF,QACN,KAAQwC,KAAF,QACJ,OAAO4c,EAAOxY,WAAP,OAEExd,GAFF,IAGD+7B,YAAa,OACR/7B,EAAM+7B,aADA,IAET,CAAC/F,EAAOxY,YAAa,CACnBjuB,KAAM,KACN47C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,WATjB,OAcEhD,GAdF,IAeDzQ,KAAM,KACN,CAACy8C,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGxB,KAAQgX,KAAF,QACJ,OAAOgc,EAAOxY,WAAP,OAEExd,GAFF,IAGD+7B,YAAa,OACR/7B,EAAM+7B,aADA,IAET,CAAC/F,EAAOxY,YAAa,CACnB2tB,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,WARjB,OAaEhD,GAbF,IAcD,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGxB,KAAKyW,KACH,OAAOuc,EAAOxY,WAAP,OAEExd,GAFF,IAGD+7B,YAAa,IAAK/7B,EAAM+7B,YAAa/F,EAAOxY,cAH3C,OAMExd,GANF,IAODzQ,KAAM,OAEd,QACE,OAAOyQ,I6BjSXusC,c5BGa,SAAuBvsC,EAAQolC,EAAcpP,EAAS,IACnE,OAAQA,EAAOxmC,MACb,KAAQsnB,IAAF,WACN,KAAQ6B,IAAF,WACN,KAAQ4B,KAAF,WACN,KAAQC,IAAF,WACJ,cACKxa,GADL,IAEEssC,aAAc,KACd,CAACN,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQ6T,KAAF,WACN,KAAQG,KAAF,WACN,KAAQD,IAAF,WACJ,cACK/W,GADL,IAEE,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQ8T,IAAF,WACJ,cACK9W,GADL,IAEEssC,aAAc,OACTtW,EAAO/yB,QADA,IAEV,MAAO0gB,YAAgBqS,EAAO/yB,OAAO,UAEvC,CAAC+oC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQ6T,KAAF,WACN,KAAQG,KAAF,WACN,KAAQD,IAAF,WACJ,cACK/W,GADL,IAEE,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQ2V,IAAF,WACJ,cACK3Y,GADL,IAEE,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,MAETupC,cAAevW,EAAO/yB,SAE1B,KAAQsX,KAAF,WACJ,cACKva,GADL,IAEE,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,MAETwpC,kBAAmBxW,EAAO/yB,SAG9B,KAAQsX,KAAF,QACJ,cACKva,GADL,IAEE,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAIpB,KAAQwX,IAAF,WACJ,cACKxa,GADL,IAEE,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,MAETypC,oBAAqBzW,EAAO/yB,SAGhC,KAAQuX,IAAF,QACJ,cACKxa,GADL,IAEE,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAIpB,KAAQ8T,IAAF,QACJ,cACK9W,GADL,IAEEssC,aAAc,KACd,CAACN,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,KAAQ2V,IAAF,QACJ,cACK3Y,GADL,IAEEusC,cAAe,GACf,CAACP,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,KAAQ6T,KAAF,QACN,KAAQG,KAAF,QACN,KAAQD,IAAF,QACJ,cACK/W,GADL,IAEE,CAACgsC,EAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,QACE,OAAOhD,I4BxIXyuC,U3BjCa,SAAmBzuC,EAAQolC,EAAcpP,EAAS,IAC/D,OAAQA,EAAOxmC,MACb,KAAKqmB,IACH,cACK7V,GADL,IAEEg2B,OAAQ,OACRzZ,OAAQyZ,EAAOzZ,SAEnB,KAAKrG,IACH,cACKlW,GADL,IAEEg2B,OAAQ,MACRzZ,OAAQyZ,EAAOzZ,SAEnB,KAAQzG,IAAF,WACN,KAAQuD,KAAF,WACJ,cACKrZ,GADL,IAEErQ,QAAS,CACPw7C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQ8S,IAAF,WACN,KAAQuD,KAAF,WACJ,cACKrZ,GADL,IAEErQ,QAAS,CACPw7C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQ8S,IAAF,QACN,KAAQuD,KAAF,QACJ,cACKrZ,GADL,IAEErQ,QAAS,CACPw7C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,QACE,OAAOhD,I2BXX0uC,K1B1Ca,SAAc1uC,EAAQolC,EAAcpP,EAAS,IAC1D,OAAQA,EAAOxmC,MACb,KAAQynB,IAAF,WACJ,cACKjX,GADL,IAEEgD,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,IAEb,KAAQl0B,IAAF,WACJ,cACKjX,GADL,IAEEgD,MAAO,KACPzT,KAAMymC,EAAO/yB,OACbyjB,QAAQ,EACRykB,SAAS,IAEb,KAAQl0B,IAAF,QACJ,cACKjX,GADL,IAEEgD,MAAOgzB,EAAOhzB,MACdzT,KAAM,GACNm3B,QAAQ,EACRykB,SAAS,IAEb,QACE,OAAOnrC,I0BiBXggB,kBzB5Ca,SAA2BhgB,EAAQolC,GAAcpP,EAAS,IACvE,OAAQA,EAAOxmC,MACb,KAAQ+mB,IAAF,WACJ,gBACKvW,GADL,IAEEgD,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,IAEb,KAAQ50B,IAAF,WACJ,gBACKvW,GADL,IAEEgD,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,IAEb,KAAQ50B,IAAF,QACJ,gBACKvW,GADL,IAEEgD,MAAOgzB,EAAOhzB,MACd0jB,QAAQ,EACRykB,SAAS,IAEb,QACE,OAAOnrC,IyBqBX2uC,UxB7Ca,SAAmB3uC,EAAQolC,GAAcpP,EAAS,IAC/D,OAAQA,EAAOxmC,MACb,KAAQgnB,IAAF,WACJ,gBACKxW,GADL,IAEEgD,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,IAEb,KAAQ30B,IAAF,WACJ,gBACKxW,GADL,IAEEgD,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,IAEb,KAAQ30B,IAAF,QACJ,gBACKxW,GADL,IAEEgD,MAAOgzB,EAAOhzB,MACd0jB,QAAQ,EACRykB,SAAS,IAEb,QACE,OAAOnrC,IwBsBXmmC,KvBpDa,SAAcnmC,EAAQolC,IACnC,OAAOplC,GuBoDP6N,OrBNa,SAAgB7N,EAAQolC,GAAcpP,EAAS,IAC5D,OAAQA,EAAOxmC,MACb,KAAQwmB,IAAF,WACN,KAAQK,IAAF,WACN,KAAQa,IAAF,WACN,KAAQ0B,IAAF,WACN,KAAQC,IAAF,WACN,KAAQqB,KAAF,WACJ,gBACKla,GADL,IAEE,CAACgsC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQkU,IAAF,WACJ,gBACKlX,GADL,IAEE4sC,MAAO5W,EAAO/yB,OACd,CAAC+oC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQ4V,IAAF,WACJ,gBACK5Y,GADL,IAEE6N,OAAQmoB,EAAO/yB,OACf,CAAC+oC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQ6V,IAAF,WACJ,gBACK7Y,GADL,IAEE4uC,cAAe5Y,EAAO/yB,OACtB,CAAC+oC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQgT,IAAF,WACN,KAAQK,IAAF,WACN,KAAQ6D,KAAF,WACJ,gBACKla,GADL,IAEE,CAACgsC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQgT,IAAF,QACN,KAAQK,IAAF,QACN,KAAQ6D,KAAF,QACJ,gBACKla,GADL,IAEE,CAACgsC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,KAAQkU,IAAF,QACJ,gBACKlX,GADL,IAEE4sC,MAAO,GACP,CAACZ,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,KAAQ4V,IAAF,QACJ,gBACK5Y,GADL,IAEE6N,OAAQ,GACR,CAACm+B,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,KAAQ6V,IAAF,QACJ,gBACK7Y,GADL,IAEE4uC,cAAe,GACf,CAAC5C,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,QACE,OAAOhD,IqB5FXihC,QtB3Ba,SAAiBjhC,EAAQolC,GAAcpP,EAAS,IAC7D,OAAQA,EAAOxmC,MACb,KAAQ2nB,IAAF,WACN,KAAQwC,KAAF,WACJ,gBACK3Z,GADL,IAEE,CAACgsC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQmU,IAAF,WACJ,gBACKnX,GADL,IAEE0sC,QAAS1W,EAAO/yB,OAChB,CAAC+oC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQ2W,KAAF,WACJ,gBACK3Z,GADL,IAEE,CAACgsC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQmU,IAAF,QACN,KAAQwC,KAAF,QACJ,gBACK3Z,GADL,IAEE0sC,QAAS,GACT,CAACV,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,QACE,OAAOhD,IsBfX4K,SpB9Ca,SAAkB5K,EAAQolC,GAAcpP,EAAS,IAC9D,OAAQA,EAAOxmC,MACb,KAAKkmB,IACH,MAAO,CACL9K,SAAU,KACR,CACE,CACEhU,GAAIo/B,EAAOp/B,GACXyB,MAAO29B,EAAO39B,MACd9G,KAAMykC,EAAOzkC,KACbs9C,MAAO7Y,EAAO6Y,MACdC,KAAM9Y,EAAO8Y,OAGjB9uC,EAAM4K,WAGZ,KAAK0O,KACH,MAAO,CACL1O,SAAU,KAAO5K,EAAM4K,SAAU,CAAC8G,EAASzW,KACvB,IAAlB+6B,EAAO/6B,MACHA,IAAU+E,EAAM4K,SAASxZ,OAAS,EAClC6J,IAAU+6B,EAAO/6B,QAG3B,KAAKse,KACH,MAAO,CACL3O,SAAU,IACR,KAAO5K,EAAM4K,SAAW8G,GAAYA,EAAQo9B,MAC3Cp9B,GAAD,GAAC,MACIA,GADL,IAEEo9B,MAAM,MAId,QACE,OAAO9uC,IoBWX+uC,WnB/Ba,SAAoB/uC,EAAQolC,GAAcpP,EAAS,IAChE,OAAQA,EAAOxmC,MACb,KAAQ4nB,IAAF,WACJ,gBACKpX,GADL,IAEEgD,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,IAEb,KAAQ/zB,IAAF,WACJ,gBACKpX,GADL,IAEEgD,MAAO,KACPE,MAAO2pC,GAAkB7W,EAAO/yB,OAAOC,OACvCwjB,QAAQ,EACRykB,SAAS,IAEb,KAAQ/zB,IAAF,QACJ,gBACKpX,GADL,IAEEgD,MAAOgzB,EAAOhzB,MACdE,MAAO,GACPwjB,QAAQ,EACRykB,SAAS,IAEb,QACE,OAAOnrC,ImBMX2nC,YlBjDa,SAAqB3nC,EAAQolC,GAAcpP,EAAS,IACjE,OAAQA,EAAOxmC,MACb,KAAQ6nB,IAAF,WACJ,gBACKrX,GADL,IAEEgD,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,IAEb,KAAQ9zB,IAAF,WACJ,gBACKrX,GADL,IAEEgD,MAAO,KACP8pC,QAAS9W,EAAO/yB,OAAO6pC,QACvBC,iBAAkB/W,EAAO/yB,OAAO8pC,iBAChCrmB,QAAQ,EACRykB,SAAS,IAEb,KAAQ9zB,IAAF,QACJ,gBACKrX,GADL,IAEEgD,MAAOgzB,EAAOhzB,MACd8pC,QAAS,GACTC,iBAAkB,GAClBrmB,QAAQ,EACRykB,SAAS,IAEb,QACE,OAAOnrC,IkBsBXgvC,kBjBjDa,SAA2BhvC,EAAQolC,GAAcpP,EAAS,IACvE,OAAQA,EAAOxmC,MACb,IAAM,kCACJ,OAAOwmC,EAAOxY,WAAP,SAEExd,GAFF,IAGD+7B,YAAa,SACR/7B,EAAM+7B,aADA,IAET,CAAC/F,EAAOxY,YAAR,SACMxd,EAAM+7B,YAAY/F,EAAOxY,aAAe,CAC1Cta,MAAO,GACP8pC,MAAO,EACPC,SAAU,KAJd,IAME/pC,MAAO,GACP8pC,MAAO,EACPhqC,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,QAfZ,SAoBEnrC,GApBF,IAqBDgD,MAAO,KACPmoC,SAAS,EACTzkB,QAAQ,IAEhB,IAAM,kCACJ,OAAOsP,EAAOxY,WAAP,SAEExd,GAFF,IAGD+7B,YAAa,SACR/7B,EAAM+7B,aADA,IAET,CAAC/F,EAAOxY,YAAa,CACnBxa,MAAO,KACPE,MAAO,IAAI8yB,EAAO/yB,OAAOC,MAAQC,GAAD,GAAC,MAC5BA,GAD2B,IAE9B,MAAOwgB,YAAgBxgB,EAAK,WAE9B6pC,MAAOhX,EAAO/yB,OAAO8oC,YACrBrlB,QAAQ,EACRykB,SAAS,EACT8B,SAAU,MAAKjX,EAAO/yB,OAAOgqC,eAdhC,SAmBEjtC,GAnBF,IAoBDgD,MAAO,KACPE,MAAO,IAAI8yB,EAAO/yB,OAAOC,MAAQC,GAAD,GAAC,MAC5BA,GAD2B,IAE9B,MAAOwgB,YAAgBxgB,EAAK,WAE9B6pC,MAAOhX,EAAO/yB,OAAO8oC,YACrBrlB,QAAQ,EACRykB,SAAS,EACT8B,SAAU,MAAKjX,EAAO/yB,OAAOgqC,YAErC,IAAM,+BACJ,OAAOjX,EAAOxY,WAAP,SAEExd,GAFF,IAGD+7B,YAAa,SACR/7B,EAAM+7B,aADA,IAET,CAAC/F,EAAOxY,YAAa,CACnBxa,MAAOgzB,EAAOhzB,MACdE,MAAO,GACP8pC,MAAO,EACP7B,SAAS,EACTzkB,QAAQ,EACRumB,SAAU,QAXb,SAgBEjtC,GAhBF,IAiBDgD,MAAOgzB,EAAOhzB,MACdE,MAAO,GACP8pC,MAAO,EACP7B,SAAS,EACTzkB,QAAQ,EACRumB,SAAU,KAElB,IAvG8B,4BAwG5B,OAAOjX,EAAOxY,WAAP,SAEExd,GAFF,IAGD+7B,YAAa,IAAK/7B,EAAM+7B,YAAa,CAAC/F,EAAOxY,eAH5C,SAMExd,GANF,IAODgD,MAAO,KACPE,MAAO,GACP8pC,MAAO,EACP7B,SAAS,EACTzkB,QAAQ,EACRumB,SAAU,KAElB,QACE,OAAOjtC,IiBlDXmS,MhBpDa,SAAenS,EAAQolC,GAAcpP,EAAS,IAC3D,OAAQA,EAAOxmC,MACb,KAAQspB,IAAF,WACJ,gBACK9Y,GADL,IAEEgD,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,IAEb,KAAQryB,IAAF,WACJ,gBACK9Y,GADL,IAEEgD,MAAO,KACPmP,MAAO6jB,EAAO/yB,OACdyjB,QAAQ,EACRykB,SAAS,IAEb,KAAQryB,IAAF,QACJ,gBACK9Y,GADL,IAEEgD,MAAOgzB,EAAOhzB,MACdmP,MAAO,GACPuU,QAAQ,EACRykB,SAAS,IAEb,QACE,OAAOnrC,IgB2BXwE,OfrBa,SAAgBxE,EAAQolC,GAAcpP,EAAS,IAC5D,OAAQA,EAAOxmC,MAEb,KAAQ+nB,IAAF,WACJ,gBACKvX,GADL,IAEEgD,MAAO,KACPmoC,SAAS,EACTzkB,QAAQ,IAEZ,KAAQlP,KAAF,WACN,KAAQC,KAAF,WACN,KAAQC,KAAF,WACJ,gBACK1X,GADL,IAEE,CAACgsC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAKb,KAAQuU,IAAF,WACJ,gBACKvX,GADL,IAEEgD,MAAO,KACPmoC,SAAS,EACTzkB,QAAQ,EACRliB,OAAQ,SACHwxB,EAAO/yB,QADN,IAEJ8H,SAAU,IACLirB,EAAO/yB,OAAO8H,YACd,KACD,IAAI,KAAK,KAAOirB,EAAO/yB,OAAOwB,WAArB,OAA6C4lC,GACpD,IACErU,EAAO/yB,OAAOgsC,YAAY5E,GAAUt/B,SACnCA,GAAc,GAAEs/B,KAAYt/B,QAKrCtG,WAAY,SACPuxB,EAAO/yB,OAAOwB,YACd,QACE,IACD,KAAK,KAAOuxB,EAAO/yB,OAAOwB,WAArB,OACJ4lC,GACC,IACErU,EAAO/yB,OAAOgsC,YAAY5E,GAAU5lC,WACpC,CAACrX,EAAOM,IAAS,GAAE28C,KAAY38C,YAO/C,KAAQ8pB,KAAF,WACN,KAAQC,KAAF,WACN,KAAQC,KAAF,WACJ,gBACK1X,GADL,IAEE,CAACgsC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAKb,KAAQuU,IAAF,QACJ,gBACKvX,GADL,IAEEgD,MAAOgzB,EAAOhzB,MACdmoC,SAAS,EACTzkB,QAAQ,EACRliB,OAAQ,OAEZ,KAAQgT,KAAF,QACN,KAAQC,KAAF,QACN,KAAQC,KAAF,QACJ,gBACK1X,GADL,IAEE,CAACgsC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,QACE,OAAOhD,IepEXohB,Od7Ca,SAAgBphB,EAAQolC,GAAcpP,EAAS,IAC5D,OAAQA,EAAOxmC,MACb,KAAQoqB,KAAF,WACJ,OAAOoc,EAAOxY,WAAP,SAEExd,GAFF,IAGD+7B,YAAa,SACR/7B,EAAM+7B,aADA,IAET,CAAC/F,EAAOxY,YAAR,SACMxd,EAAM+7B,YAAY/F,EAAOxY,aAAe,CAC1Cta,MAAO,GACP8pC,MAAO,EACPC,SAAU,KAJd,IAMEjqC,MAAO,KACP0jB,QAAQ,EACRykB,SAAS,QAbZ,SAkBEnrC,GAlBF,IAmBDgD,MAAO,KACPmoC,SAAS,EACTzkB,QAAQ,IAEhB,KAAQ9M,KAAF,WACJ,OAAOoc,EAAOxY,WAAP,SAEExd,GAFF,IAGD+7B,YAAa,SACR/7B,EAAM+7B,aADA,IAET,CAAC/F,EAAOxY,YAAa,CACnBxa,MAAO,KACPE,MAAO,IAAI8yB,EAAO/yB,OAAOC,MAAQC,GAAD,GAAC,MAC5BA,GAD2B,IAE9B,MAAOwgB,YAAgBxgB,EAAK,WAE9B6pC,MAAOhX,EAAO/yB,OAAO8oC,YACrBrlB,QAAQ,EACRykB,SAAS,EACT8B,SAAU,MAAKjX,EAAO/yB,OAAOgqC,eAdhC,SAmBEjtC,GAnBF,IAoBDgD,MAAO,KACPE,MAAO,IAAI8yB,EAAO/yB,OAAOC,MAAQC,GAAD,GAAC,MAC5BA,GAD2B,IAE9B,MAAOwgB,YAAgBxgB,EAAK,WAE9B6pC,MAAOhX,EAAO/yB,OAAO8oC,YACrBrlB,QAAQ,EACRykB,SAAS,EACT8B,SAAU,MAAKjX,EAAO/yB,OAAOgqC,YAErC,KAAQrzB,KAAF,QACJ,OAAOoc,EAAOxY,WAAP,SAEExd,GAFF,IAGD+7B,YAAa,SACR/7B,EAAM+7B,aADA,IAET,CAAC/F,EAAOxY,YAAa,CACnBxa,MAAOgzB,EAAOhzB,MACdE,MAAO,GACP8pC,MAAO,EACP7B,SAAS,EACTzkB,QAAQ,EACRumB,SAAU,QAXb,SAgBEjtC,GAhBF,IAiBDgD,MAAOgzB,EAAOhzB,MACdE,MAAO,GACP8pC,MAAO,EACP7B,SAAS,EACTzkB,QAAQ,EACRumB,SAAU,KAElB,KAAKzzB,KACH,OAAOwc,EAAOxY,WAAP,SAEExd,GAFF,IAGD+7B,YAAa,IAAK/7B,EAAM+7B,YAAa,CAAC/F,EAAOxY,eAH5C,SAMExd,GANF,IAODgD,MAAO,KACPE,MAAO,GACP8pC,MAAO,EACP7B,SAAS,EACTzkB,QAAQ,EACRumB,SAAU,KAElB,QACE,OAAOjtC,IcpDXkhB,Qb/Ba,SAAiBlhB,EAAQolC,GAAcpP,EAAS,IAC7D,OAAQA,EAAOxmC,MACb,KAAQ4qB,KAAF,WACN,KAAQzC,IAAF,WACJ,gBACK3X,GADL,IAEE,CAACgsC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQoX,KAAF,WACJ,gBACKpa,GADL,IAEE,CAACgsC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQ2U,IAAF,WACJ,gBACK3X,GADL,IAEEzQ,KAAMymC,EAAO/yB,OACb,CAAC+oC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQoX,KAAF,QACJ,gBACKpa,GADL,IAEE,CAACgsC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,KAAQ2U,IAAF,QACJ,gBACK3X,GADL,IAEEzQ,KAAM61C,GAAa71C,KACnB,CAACy8C,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,QACE,OAAOhD,IanBXkvC,QZ3Da,SAAiBlvC,EAAQolC,GAAcpP,EAAS,IAC7D,OAAQA,EAAOxmC,MACb,KAAKqqB,KACH,gBACK7Z,GADL,IAEEqtC,IAAKrX,EAAO/6B,QAEhB,QACE,OAAO+E,IYoDXstC,MXzDa,SAAettC,EAAQolC,GAAcpP,EAAS,IAC3D,OAAQA,EAAOxmC,MACb,KAAQuoB,IAAF,WACJ,gBACK/X,GADL,IAEEgD,MAAO,KACPmoC,SAAS,EACTzkB,QAAQ,IAEZ,KAAQ3O,IAAF,WACJ,gBACK/X,GADL,IAEEgD,MAAO,KACPmoC,SAAS,EACTzkB,QAAQ,EACR4mB,MAAOtX,EAAO/yB,SAElB,KAAQ8U,IAAF,QACJ,gBACK/X,GADL,IAEEgD,MAAOgzB,EAAOhzB,MACdmoC,SAAS,EACTzkB,QAAQ,EACR4mB,MAAO,KAEX,QACE,OAAOttC,IWgCXsN,MVSa,SAAetN,EAAQolC,GAAcpP,EAAS,IAC3D,OAAQA,EAAOxmC,MACb,KAAQymB,IAAF,WACN,KAAQK,IAAF,WACN,KAAQ0B,IAAF,WACN,KAAQgB,IAAF,WACN,KAAQqB,KAAF,WACN,KAAQF,KAAF,WACN,KAAQzD,IAAF,WACN,KAAQgD,KAAF,WACJ,gBACK1Z,GADL,IAEE,CAACgsC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQgV,IAAF,WACJ,gBACKhY,GADL,IAEEkS,KAAM8jB,EAAO/yB,OACb,CAAC+oC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQgW,IAAF,WACJ,gBACKhZ,GADL,IAEEsN,MAAO0oB,EAAO/yB,OACd,CAAC+oC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQiT,IAAF,WACN,KAAQK,IAAF,WACN,KAAQ+D,KAAF,WACN,KAAQF,KAAF,WACN,KAAQzD,IAAF,WACN,KAAQgD,KAAF,WACJ,gBACK1Z,GADL,IAEE,CAACgsC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQgV,IAAF,QACJ,gBACKhY,GADL,IAEEkS,KAAM,GACN,CAAC85B,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,KAAQgW,IAAF,QACJ,gBACKhZ,GADL,IAEEsN,MAAO,GACP,CAAC0+B,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,KAAQiT,IAAF,QACN,KAAQK,IAAF,QACN,KAAQ+D,KAAF,QACN,KAAQF,KAAF,QACN,KAAQzD,IAAF,QACN,KAAQgD,KAAF,QACJ,gBACK1Z,GADL,IAEE,CAACgsC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,QACE,OAAOhD,IU/FXmvC,STnEa,SAAkBnvC,EAAQolC,GAAcpP,EAAS,IAC9D,OAAQA,EAAOxmC,MACb,KAAKupB,IACH,gBACK/Y,GADL,IAEE+kB,kBAAmBiR,EAAO/yB,SAE9B,QACE,OAAOjD,IS4DXgC,iBACAotC,aR/Da,SAAsBpvC,EAAQolC,GAAcpP,EAAS,IAAI,UACtE,MAAMqZ,EAAarvC,EAAMg2B,EAAO7S,aAAe,GACzCmsB,EAAkBtZ,EAAOxY,aAC3B,UAAA6xB,EAAWtT,mBAAX,eAAyB/F,EAAOxY,cAChC,GACJ,OAAQwY,EAAOxmC,MACb,KAAQyoB,IAAF,WACN,KAAQC,IAAF,WACJ,OAAO8d,EAAOxY,WAAP,SAEExd,GAFF,IAGD,CAACg2B,EAAO7S,YAAR,SACKksB,GADL,IAEEtT,YAAa,SACRsT,EAAWtT,aADL,IAET,CAAC/F,EAAOxY,YAAR,SAMM8xB,GAAmB,CACrB//C,KAAM,OAPV,IASEm3B,QAAQ2oB,SAAA,UAAAA,EAAarZ,EAAOxY,mBAApB,eAAiCkJ,UAAU,EACnDykB,aACGkE,SAAA,UAAAA,EAAarZ,EAAOxY,mBAApB,eAAiC2tB,UAAW,GAAK,GAEpDnoC,MAAO,aApBZ,SA0BEhD,GA1BF,IA2BD,CAACg2B,EAAO7S,YAAR,SAMKksB,GANL,IAOErsC,MAAO,KACP0jB,OAAQ2oB,EAAW3oB,SAAU,EAC7BykB,YAAakE,EAAWlE,SAAW,GAAK,OAGlD,KAAQlzB,IAAF,WACJ,OAAO+d,EAAOxY,WAAP,SAEExd,GAFF,IAGD,CAACg2B,EAAO7S,YAAR,SACKksB,GADL,IAEEtT,YAAa,SACRsT,EAAWtT,aADL,IAET,CAAC/F,EAAOxY,YAAR,SACK8xB,GADL,IAEEtsC,MAAO,KACP0jB,QAAQ,EACRykB,WAAYmE,EAAgBnE,QAAU,GACtCjoC,MAAO,IACF8yB,EAAO/yB,OAAOC,MAAMvQ,IAAKwQ,IAAD,CACzB8lB,MAAO9lB,EAAK9K,MACZjL,MAAO+V,EAAKlB,UAGhBgrC,SAAUjX,EAAO/yB,OAAOgqC,SACxBsC,WAAYvZ,EAAO/yB,OAAO8oC,oBAnB/B,SAyBE/rC,GAzBF,IA0BD,CAACg2B,EAAO7S,YAAR,SACKksB,GADL,IAEErsC,MAAO,KACP0jB,QAAQ,EACRykB,WAAYkE,EAAWlE,QAAU,GACjCjoC,MAAO,IACF8yB,EAAO/yB,OAAOC,MAAMvQ,IAAKwQ,IAAD,CACzB8lB,MAAO9lB,EAAK9K,MACZjL,MAAO+V,EAAKlB,UAGhBgrC,SAAUjX,EAAO/yB,OAAOgqC,SACxBsC,WAAYvZ,EAAO/yB,OAAO8oC,gBAGpC,KAAQ9zB,IAAF,QACN,KAAQC,IAAF,QACJ,OAAO8d,EAAOxY,WAAP,SAEExd,GAFF,IAGD,CAACg2B,EAAO7S,YAAa,CACnB4Y,YAAa,SACRsT,EAAWtT,aADL,IAET,CAAC/F,EAAOxY,YAAa,CACnBxa,MAAOgzB,EAAOhzB,MACd0jB,QAAQ,EACRykB,WAAYmE,EAAgBnE,QAAU,SAT3C,SAeEnrC,GAfF,IAgBD,CAACg2B,EAAO7S,YAAa,CACnBngB,MAAOgzB,EAAOhzB,MACd0jB,QAAQ,EACRykB,WAAYkE,EAAWlE,QAAU,MAG3C,KAAQjzB,IAAF,WACJ,OAAO8d,EAAOxY,WAAP,SAEExd,GAFF,IAGD,CAACg2B,EAAO7S,YAAR,SACKksB,GADL,IAEEtT,YAAa,SACRsT,EAAWtT,aADL,IAET,CAAC/F,EAAOxY,YAAR,YACK8xB,GADL,IAEEtsC,MAAO,KACP0jB,QAAQ,EACRykB,WAAYmE,EAAgBnE,QAAU,IAClCnV,EAAO/zB,OAAS,CAClB,CAAC+zB,EAAO/zB,OAAQ+zB,EAAO/yB,OAAOC,MAAM,GAAG7K,QAErC29B,EAAOzS,QAAU,CACnBrgB,MAAO,IACF8yB,EAAO/yB,OAAOC,MAAMvQ,IAAKwQ,IAAD,CACzB8lB,MAAO9lB,EAAK9K,MACZjL,MAAO+V,EAAKlB,kBAnBvB,SA4BEjC,GA5BF,IA6BD,CAACg2B,EAAO7S,YAAR,SACKksB,GADL,IAEErsC,MAAO,KACP0jB,QAAQ,EACRykB,WAAYkE,EAAWlE,QAAU,GACjC,CAACnV,EAAO/zB,OAAQ+zB,EAAO/yB,OAAOC,MAAM,GAAG7K,UAGjD,QACE,OAAO2H,IQxFXwvC,SPvCa,SAAiBxvC,EAAQolC,GAAcpP,EAAS,IAC7D,OAAQA,EAAOxmC,MACb,KAAQ2oB,IAAF,WACN,KAAQC,IAAF,WACN,KAAQ0B,KAAF,WACJ,gBACK9Z,GADL,IAEE,CAACgsC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQmV,IAAF,WACN,KAAQ2B,KAAF,WACJ,gBACK9Z,GADL,IAEEihC,QAASjL,EAAO/yB,OAAOg+B,QAAUjL,EAAO/yB,OAAOg+B,QAAUjhC,EAAMihC,QAC/DyM,YAAa1X,EAAO/yB,OAAOyqC,YACvB1X,EAAO/yB,OAAOyqC,YACd1tC,EAAM0tC,YACV,CAAC1B,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQoV,IAAF,WACJ,gBACKpY,GADL,IAEE2tC,SAAU3X,EAAO/yB,OACjB,CAAC+oC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQmV,IAAF,QACN,KAAQ2B,KAAF,QACJ,gBACK9Z,GADL,IAEEihC,QAAS,GACTyM,YAAa,GACb,CAAC1B,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,KAAQoV,IAAF,QACJ,gBACKpY,GADL,IAEE2tC,SAAU,GACV,CAAC3B,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,SAGpB,QACE,OAAOhD,IOpBXyvC,QNlEa,SAAiBzvC,EAAQolC,GAAcpP,EAAS,IAC7D,OAAQA,EAAOxmC,MACb,KAAKinB,IACH,MAAO,CACLm3B,SAAU5X,EAAO3Z,YAErB,QACE,OAAOrc,IM4DX0vC,gBL9Ea,SAAgB1vC,EAAQolC,GAAcpP,EAAS,IAC5D,OAAQA,EAAOxmC,MACb,KAAKkrB,KACH,OAAO0qB,GACT,KAAK3qB,KACH,O,mWAAA,IACK5tB,OAAOgT,OACR,GACAm2B,EAAOpZ,IAAM,CAAEA,IAAKoZ,EAAOpZ,KAAQ,GACnCoZ,EAAOtZ,KAAO,CAAEA,KAAMsZ,EAAOtZ,MAAS,KAM9C,OAAO1c,GKgEP8kB,cJlFa,SAAuB9kB,EAAQolC,GAAcpP,EAAS,IACnE,OAAQA,EAAOxmC,MACb,KAAKmrB,KACH,MAAM,QAAEiK,EAAF,UAAWC,GAAcmR,EAC/B,gBACKh2B,GADL,IAEE,CAAC4kB,GAAUC,IAEf,QACE,OAAO7kB,II0EX2vC,kBC9Ea,SAAiB3vC,EAAQ,GAAIg2B,EAAS,IACnD,IAAI,OAAE/yB,EAAF,IAAUjS,GAAQglC,EAEtB,OAAQA,EAAOxmC,MACb,KAAQorB,IAAF,WACJ,gBACK5a,GADL,IAEE,CAAChP,GAAD,SACKgP,EAAMhP,IADX,IAEEm6C,SAAS,EACTzkB,QAAQ,EACR1jB,WAAOzO,MAGb,KAAQqmB,IAAF,WACJ,gBACK5a,GADL,IAEE,CAAChP,GAAD,SACKgP,EAAMhP,IADX,IAEEm6C,SAAS,EACTzkB,QAAQ,EACR1jB,WAAOzO,EACPhF,KAAM0T,MAGZ,KAAQ2X,IAAF,QACJ,gBACK5a,GADL,IAEE,CAAChP,GAAD,SACKgP,EAAMhP,IADX,IAEEm6C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,UAMtB,OAAOhD,GDyCP4vC,YFxCa,SAAqB5vC,EAAQolC,GAAcpP,EAAS,IAAI,QACrE,OAAQA,EAAOxmC,MACb,KAAQqrB,IAAF,WACN,KAAQC,IAAF,WACN,KAAQC,KAAF,WACJ,gBACK/a,GADL,IAEE8tC,KAAM,GACN,CAAC9B,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQ6X,IAAF,WACJ,gBACK7a,GADL,IAEE8tC,KAAM,SACD9X,EAAO/yB,QADR,IAEF,MAAO0gB,YAAgBqS,EAAO/yB,OAAO,QACrC5K,MAAO29B,EAAO/yB,OAAO5K,QAEvB5K,OAAQ,CACN09C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQ8X,IAAF,WACN,KAAQC,KAAF,WACJ,gBACK/a,GADL,IAEE,CAACgsC,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQ6X,IAAF,QACN,KAAQC,IAAF,QACN,KAAQC,KAAF,QACJ,gBACK/a,GADL,IAEE8tC,KAAM,GACN,CAAC9B,GAAchW,EAAOxmC,OAAQ,CAC5B27C,SAAS,EACTzkB,QAAQ,EACR1jB,MAAK,UAAEgzB,EAAOhzB,aAAT,iBAAE,EAAcjS,gBAAhB,aAAE,EAAwBiS,SAGrC,QACE,OAAOhD,M,gwBI9Eb,IAAI6vC,GAAS,KAiBN,SAASC,GAAmBzgD,EAAMG,GACvC,MAAM,SAAEQ,GAAaC,KACf,aAAE2lC,EAAe,IAAO5lC,EAE9B,EAGIgvB,KAAGynB,SAASp3C,IAHV,IACJ2B,EACAP,OAAO,OAAEsuB,IAFX,EAEsBtuB,EAFtB,OAEEA,MAFF,IAKMs/C,EAAsBna,EACzBjhC,OAAQoqB,GAAW8W,qBAAU7kC,EAAK+tB,EAAOyW,QAAUzW,EAAOvvB,IAC1DmD,IAAKosB,GAAWA,EAAOvvB,IAEpBwgD,EAAc,KAAQ,KAAM,CAACjxB,KAAW,KAAQgxB,MAEhDE,EAAoBjxB,KAAGiD,UAC3B,CAAElD,OAAQixB,GACV,CACE9tB,YAAa,QACbvuB,QAAQ,IAINu8C,EAAmBlxB,KAAGiD,UAAUxxB,EAAO,CAC3CkD,QAAQ,IAGV,OAAIu8C,GAAoBD,EACd,GAAEj/C,KAAOi/C,KAAqBC,KAC5BA,GAAoBD,EACtB,GAAEj/C,KAAOi/C,IACRC,IAAqBD,EACtB,GAAEj/C,KAAOk/C,IAEVl/C,EAUX,SAASm/C,GAAaxgD,GACpB,OAAO,IAAItD,QAAQ,CAACC,EAASuD,KAC3B,OAAQggD,GAAOO,YACb,KAAKP,GAAOQ,WACVR,GAAO58B,iBAAiB,OAAQ,IAAM3mB,EAAQujD,KAC9CA,GAAO58B,iBAAiB,QAASpjB,GACjC,MACF,KAAKggD,GAAOS,KACVhkD,EAAQujD,IACR,MACF,QACEhgD,OAGH+B,KAAK,KACNi+C,GAAOh/C,KAAKygB,KAAK2Q,UAAUtyB,MCjG/B,MAAM4gD,GAEFhiD,EAAQ,KAuBGiiD,OArBQnwC,GAAW2kC,GAAUhP,IAC1C,IACE,OAAOgP,EAAKhP,GACZ,MAAOhzB,GAAO,YAcd,WAZEytC,GAAA,UACAriD,eADA,iBACA,EAASwR,WADT,OACA,EAAc8wC,mBADd,UAEA35C,cAFA,iBAEA,EAAQ6I,WAFR,OAEA,EAAa8wC,oBAEbH,GAAOI,UAAWC,IAChBA,EAAMC,UAAU,CACd7a,SACAh2B,MAAOK,EAAMmB,aAEf+uC,GAAOO,iBAAiB9tC,KAGtBA,ICSK+tC,OA3BS,EAAGxuC,WAAUf,cAAgBwjC,GAAUhP,IAC7D,GAAsB,mBAAXA,EACT,OAAOgP,EAAKhP,GAGd,OAAQA,EAAOxmC,MACb,IAAK,2BACH,MAAM,SAAEmT,GAAaqzB,EAAOxR,QAAQ9hB,UAC9B,eAAEmhC,EAAiB,IAAO5zC,IAAOD,SAEjCq9B,EAAQwW,EAAe1M,KAAM9J,GACjCwI,qBAAUlzB,EAAU0qB,EAAMmI,QAG5B,IAAKnI,EACH,OAAO2X,EAAKhP,GAEZj/B,OAAO2L,SAAS7O,QACdw5B,EAAMr8B,IAAMq8B,EAAMr8B,IAAIglC,EAAOxR,SAAW7hB,GAG5C,MACF,QACE,OAAOqiC,EAAKhP,K,qkBCmBHwP,IAlCQ,CAACJ,EAAcnE,EAAS+P,KAC7C,IAAIC,EAAQ,CACVF,GACAG,YAAiBjQ,GACjBuP,GACAW,OACIH,EAAY,EH0FJ/L,EG1FS+L,EH0FD,EAAGzuC,WAAUf,cAAgBwjC,GAAUhP,IAC7D,MAAM,SAAEhmC,GAAaC,IAErB,GAAsB,mBAAX+lC,EACT,OAAOA,EAAOzzB,EAAUf,GAG1B,MAAM,QAAE7R,EAAF,KAAWH,EAAX,KAAiBlC,EAAO,YAAwB0oC,EAATpC,EAA7C,KAAsDoC,EAAtD,KACM,WAAExY,GAAewY,EAEvB,IAAIob,EAEJ,OAAKzhD,GAILq1C,EAAK,SAAKpR,GAAN,IAAYpkC,KAASA,EAAF,cAEnBqgD,GACFuB,EAAgBj9C,MAAMC,QAAQzE,GAC1BtD,QAAQ04C,IACNp1C,EAAQgD,IAAKwQ,GACXgtC,GAAa,SACRhtC,GADO,IAEV9T,KAAMygD,GAAmB3sC,EAAK9T,KAAMG,GACpCoH,GAAIpH,OAIV2gD,GAAa,SACRxgD,GADO,IAEVN,KAAMygD,GAAmBngD,EAAQN,KAAMG,GACvCoH,GAAIpH,MAGV4hD,EAAgBj9C,MAAMC,QAAQzE,GACjB,WAATrC,EACEqC,EAAQ2D,OAAO,CAAC+9C,EAAaluC,IACpBkuC,EAAYz/C,KAAM+6B,GAChBsY,EAAI9hC,EAAK+Y,IAAI4zB,GAAmB3sC,EAAK9T,KAAMG,GAAO,CACvDD,KAAM4T,EAAK5T,KACXC,KAAM2T,EAAK3T,KACXC,QAAS0T,EAAK1T,QACdH,OAAQK,EAAQL,OAChBI,SAAUM,EAASshD,2BAA2B9xC,SAC5Cw2B,EAAOxmC,QAERoC,KAAM2/C,GACA,IAAI5kB,EAAK4kB,KAGnBllD,QAAQC,QAAQ,KACnBD,QAAQ04C,IACNp1C,EAAQgD,IAAKwQ,GACX8hC,EAAI9hC,EAAK+Y,IAAI4zB,GAAmB3sC,EAAK9T,KAAMG,GAAO,CAChDD,KAAM4T,EAAK5T,KACXC,KAAM2T,EAAK3T,KACXC,QAAS0T,EAAK1T,QACdH,OAAQK,EAAQL,OAChBI,SAAUM,EAASshD,2BAA2B9xC,SAC5Cw2B,EAAOxmC,UAKjBy1C,EAAIt1C,EAAQusB,IAAI4zB,GAAmBngD,EAAQN,KAAMG,GAAO,CACtDD,KAAMI,EAAQJ,KACdC,KAAMG,EAAQH,KACdC,QAASE,EAAQF,QACjBH,OAAQK,EAAQL,OAChBI,SAAUM,EAASshD,2BAA2B9xC,SAASw2B,EAAOxmC,QAEpE4hD,EAAcx/C,KACXqR,IACC,MAAM,SAAEjT,GAAaC,IAOrB,GANIuR,IAAWigC,SAASjB,mBACtBwE,EAAK,SACApR,GADD,IAEFpkC,KAAMomB,QAGNpmB,IAASonB,IAAa,OACxB,MAAMlW,EAAOuC,SAAH,UAAGA,EAAQqhB,gBAAX,aAAG,EAAkBriB,MAC/B,GAAIvB,GAAQc,IAAWmyB,KAAKrP,WAAa5jB,IAAS8c,EAAY,CAC5D,MAAM0mB,EAAe/e,YAAsBzkB,GAC3C,MAAO,KAAkBwjC,EAAe,SAAStyC,KAAMqzB,IACrD1iB,EAASyiB,aAAetkB,EAAMukB,EAAOiP,aAmC3C,OA/BI1kC,IAASypB,MAASjpB,EAASwhD,cACb,IAAIviD,MACZ0B,IACN,aACAsS,EAAOhB,MACPC,YAAiB,CACfC,QAAS,IAAI7L,KAAmC,IAA9B8L,KAAUa,EAAOhB,OAAOI,QAG9C4iC,EAAIj4C,IAAI,aAAa4E,KAAMi9B,IACzBghB,GAAS,IAAI4B,UACV,GAAEzhD,EAASM,QAAQuD,QAAQ,OAAQ,sBAClCg7B,EAAI5sB,SAGR4tC,GAAO6B,UAAahgC,IAClB,MAAMigC,EAASrgC,KAAKC,MAAMG,EAAQniB,MAC9BoiD,EAAO3uC,MACTT,EAAS,CACP/S,KAASmiD,EAAO/6C,GAAT,QACPoM,MAAO2uC,EAAO3uC,QAGhBT,EAAS,CACP/S,KAASmiD,EAAO/6C,GAAT,WACPqM,OAAQqO,KAAKC,MAAMogC,EAAOpiD,YAM7By1C,EAAK,SAAKpR,GAAN,IAAY3wB,SAAQzT,KAASA,EAAF,eAEvCwT,IAwBgE,QA4C/D,MAlEmB,iBAAfA,EAAM3R,KACR2zC,EAAK,SACApR,GADD,IAEF5wB,QACA0oC,WAAY1oC,EAAM3R,KAClBmvC,mBAAmB,EACnBhxC,KAAMmmB,QAKD3S,EAAM4uC,aACb5M,EAAK,SACApR,GADD,IAEF5wB,QACA0oC,WAAY,YACZlL,mBAAmB,EACnBhxC,KAAMmmB,QAKN3lB,EAASshD,2BAA2B9xC,SAASw2B,EAAOxmC,QAElB,OAAhCwT,SAAA,UAAAA,EAAOjS,gBAAP,eAAiB26C,YACnB1G,EAAK,SACApR,GADD,IAEF5wB,QACA0oC,WAAY1oC,EAAM3R,KAClBmvC,mBAAmB,EACnBhxC,KAAMmmB,QAKe,OAAhB3S,aAAA,EAAAA,EAAO3R,OAUS,OAAhB2R,aAAA,EAAAA,EAAO3R,MATd2zC,EAAK,SACApR,GADD,IAEF5wB,QACA0oC,WAAY1oC,EAAM3R,KAClBmvC,mBAAmB,EACnBhxC,KAAMmmB,QAc+B,OAAhC3S,SAAA,UAAAA,EAAOjS,gBAAP,eAAiB26C,aACxB1G,EAAK,SACApR,GADD,IAEF5wB,QACA0oC,WAAY1oC,EAAMjS,SAClB2gB,QAAS1O,EAAMjS,SAASQ,KAAKmgB,QAC7B8uB,mBAAmB,EACnBhxC,KAAMmmB,SAILqvB,EAAK,SAAKpR,GAAN,IAAY5wB,QAAOxT,KAASA,EAAF,cAKpC4hD,GAvLEpM,EAAKhP,MGvGuB,IH0FvBiP,MGrFdgM,EAAQhhD,IAAOD,SAAS6hD,eAAev+C,OACrC,CAACq5B,EAAKmlB,IAAaA,EAASnlB,GAC5BskB,GAEF,MAAMc,EAAcC,8BAAoBC,6BAAmBhB,IAgB3D,OAfciB,sBACZC,0BAAgB,OACd1vC,OAAQ2vC,YAAcnR,IACnB+M,IACA/9C,IAAOwrB,gBAJW,GAAC,MAOnB2pB,GAGC,IAEN2M,K,cCvCJhmD,EAAOD,QAAUyC,QAAQ,4B,yMCIzB,MAAMqc,EAAWC,yBAAe,CAC9BwnC,SAAU,CAAF,2CAaH,SAASC,EAAyBllD,GAAO,MAC9C,GAAI,IAASA,IAAU,IAAUA,GAAQ,MAAO,CAAE6U,MAAO7U,EAAMyO,YAE/D,IAAKzO,EAAO,MAAO,GAEnB,GAAI+G,MAAMC,QAAQhH,GAChB,MAAO,CACLm2B,OAAQn2B,EACLuF,IAAKqxB,IAAD,aACH,IAASA,GAAT,UACIA,EAAE52B,aADN,QACe42B,EAAE/hB,MACb,IAAS+hB,IAAM,IAAUA,GACzBA,EACA,OAELrvB,OAAQ49C,GAAY,OAANA,IAIrB,MAAMtwC,EAAK,UAAG7U,EAAMA,aAAT,QAAkBA,EAAM6U,MACnC,OAAO,IAASA,GAAS,CAAEA,SAAU,GAOhC,SAASuwC,EAA4BplD,EAAOumC,GAAM,cACvD,IAAKvmC,EAAO,OAAOA,EAEnB,GAAI+G,MAAMC,QAAQhH,GAAQ,CAExB,GAAqB,IAAjBA,EAAMgE,OACR,MAAO,CAAEhE,MAAOA,EAAM,GAAI67B,MAAO77B,EAAM,IAAMA,EAAM,IAErD,MAAM,IAAI2Q,MAAO,wCAAuC3Q,GAU1D,MAAO,CACLA,MARS,oBAAGA,EAAM6U,aAAT,QAAkB7U,EAAMA,aAAxB,QAAiC,WAS1C67B,MARS,8BACR77B,EAAMiL,OAAyB,SAAhBjL,EAAMiL,MAAmBjL,EAAMiL,WAAQ9D,SAD9C,QAETnH,EAAM67B,aAFG,QAGT77B,EAAM6U,aAHG,QAIT0xB,EAAK5jB,cAAcnF,EAASynC,WAQzB,MAAMI,EAAmB,CAACvvC,EAAOywB,IACtCzwB,EAAMvQ,IAAKwQ,GAASqvC,EAA4BrvC,EAAMwwB,IAWjD,SAAS+e,EAAeC,EAASvlD,EAAOumC,GAC7Cgf,EAAUF,EAAiBE,GAAW,GAAIhf,GAC1C,MAAMif,EAAY/lD,OAAOgT,OACvB,MACG8yC,EAAQhgD,IAAI,EAAGs2B,QAAO77B,YAAV,CACb,CAACA,GAAQ67B,MAIb,IAAK,IAAS77B,IAAU,IAAUA,GAAQ,CAGxC,MAAM67B,EAAQ2pB,EAAU/V,YAAWzvC,IACnC,OAAO67B,EACH,CACEA,QACA77B,SAEF,GAEN,MAAc,aAAVA,EACK,CACL67B,MAAO0K,EAAK5jB,cAAcnF,EAASynC,UACnCjlD,MAAO,iBAIGmH,IAAVnH,GAAwBA,GAA0B,IAAjBA,EAAMgE,OAEvC+C,MAAMC,QAAQhH,GAETA,EAAMuF,IAAKqxB,GAAM0uB,EAAeC,EAAS3uB,IAG9C,IAAS52B,GAEJolD,EAA4BplD,EAAOumC,GAIrC9mC,OAAO+D,KAAKgiD,GAAWpzC,SAASpS,GACnC,CAAE67B,MAAO2pB,EAAUxlD,GAAQA,SAC3B,CAAE67B,MAAO77B,EAAOA,SAf4C,O,cC5GlErB,EAAOD,QAAUyC,QAAQ,mB,cCAzBxC,EAAOD,QAAUyC,QAAQ,4B,q7BCuBzB,MAAMskD,EAAapkD,IAAS,CAAD,iIAAC,IAAM,6CAAP,qMAErBmc,EAAWC,yBAAe,CAC9B0zB,KAAM,CAAF,iCAIJuU,KAAM,CAAF,mCAMAC,EAAW,IACf,qBACE71C,MAAO,CACLmsB,MAAO,OACP9C,KAAM,OACNqF,QAAS,MACTonB,SAAU,WACVnoB,IAAK,QAGP4e,SAAS,IATX,SAWE,cAAC,KAAD,CAAM/8C,KAAMumD,IAAS/vB,KAAK,WAGxBgwB,EAAW,IACf,qBACEh2C,MAAO,CACLmsB,MAAO,OACP7C,MAAO,OACPoF,QAAS,MACTonB,SAAU,WACVnoB,IAAK,QAGP4e,SAAS,IATX,SAWE,cAAC,KAAD,CAAM/8C,KAAMymD,IAAUjwB,KAAK,WAIzBkwB,EAAsB,CAC1BC,KAAM,GACNC,OAAQ,EACRC,OAAQ,GAiBH,MAAMC,UAAgCj2C,YAO3CzO,YAAY8F,GAAO,MACjBmkC,MAAMnkC,GADW,wBAoCH2pC,IACd,GAAIA,EAAM,CACR,MAAMpJ,EAAS/lC,KAAKwF,MAAMugC,OAAOjB,QAC3Buf,EAAarkD,KAAKskD,cAClB72C,GAAQzN,KAAKukD,oBAAsBxe,KAAUxkC,IAArC,EAAD,CACXmtC,KAAMS,EAAKT,OACXC,MAAOQ,EAAKR,QACZQ,KAAMA,EAAKA,QACPkV,EAAaL,EAAsB,KAEnCQ,EAAYH,EACd52C,EAAKq4B,OAAO,cACZr4B,EAAKg3C,cACTzkD,KAAKwF,MAAMqmC,SAAS7rC,KAAKwF,MAAMgC,GAAIg9C,GAErCxkD,KAAKoqC,SAAS,CAAE3C,WAAW,MAnDV,wBA4DHic,IACd,MAAM3d,EAAS/lC,KAAKwF,MAAMugC,OAAOjB,QACjC,GAAI4e,EAAM,SACR,MAKMc,GALQxkD,KAAKukD,oBAAsBxe,KAAUxkC,IAAI,CACrDmjD,MAAK,UAAEhB,aAAF,EAAEA,EAAMgB,eAAR,QAAmB,EACxBC,QAAO,UAAEjB,aAAF,EAAEA,EAAMiB,iBAAR,QAAqB,EAC5BC,QAAS,IAEYH,cACvBzkD,KAAKwF,MAAMqmC,SAAS7rC,KAAKwF,MAAMgC,GAAIg9C,MArEpB,wBAyEJ,KACbxkD,KAAKoqC,SAAS,CAAE3C,WAAW,IAC3BznC,KAAKwF,MAAMqmC,SAAS7rC,KAAKwF,MAAMgC,GAAI,QA3ElB,yBAoFH,EAAGq9C,aAAc7kD,KAAKoqC,SAAS,CAAEya,aAlF/C7kD,KAAK+lC,OAASvgC,EAAMugC,OAAOjB,QAE3B9kC,KAAK4Q,MAAQ,CACXi0C,SAAS,EAETpd,WACE,UAAA5B,YACE7lC,KAAKwF,MAAM8L,KACXtR,KAAKwF,MAAMxH,WACXmH,EACAnF,KAAK+lC,eAJP,eAKG0e,iBAAkBzkD,KAAK+lC,SAAS+e,MAAML,eAI/CF,mBACE,OAAO1e,YACL7lC,KAAKwF,MAAM8L,KACXtR,KAAKwF,MAAMxH,WACXmH,EACAnF,KAAK+lC,QAITue,cACE,OAAOtkD,KAAKwF,MAAMu/C,UAAkC,SAAtB/kD,KAAKwF,MAAMwb,OA2D3CtR,SAAS,MACP,MAAM,GACJlI,EADI,WAEJw9C,EAFI,KAGJzgB,EAHI,WAIJ0gB,EAJI,cAKJtX,EALI,KAMJr8B,GACEtR,KAAKwF,MACH0/C,EACJllD,KAAKwF,MAAM0/C,cAAevX,SAA1B,UAA0BA,EAAemL,uBAAzC,aAA0B,EAAgCoM,aACtDnf,EAAS/lC,KAAKwF,MAAMugC,OAAOjB,QAC3BqB,EAAWnmC,KAAKukD,mBAChBQ,EAAW/kD,KAAKskD,eAChB,iBAAEa,GAAqBF,EAE7B,OACE,cAAC,KAAD,OAAsBjlD,KAAKwF,OAA3B,aACE,sBAAK0K,UAAU,2BAAf,UACE,qBACEA,UAAW24B,IAAG,sBAAuB,CACnC,eAAgB7oC,KAAK4Q,MAAM62B,YAF/B,SAKE,cAAC0d,EAAD,KACEhW,KAAMhJ,EACN2C,SAAU9oC,KAAKwF,MAAMi3B,WACrB2oB,aAAcplD,KAAKolD,aACnBP,QAAS7kD,KAAK4Q,MAAMi0C,QACpBQ,eAAgB,GACXH,EAAc,GAAK,CAAEI,eAAgB,KAAM,IANlD,IAOEC,cAAevlD,KAAKulD,cACpBC,UAAQ,EACRC,cAAe1f,EAAOE,WAAW30B,GAAMo0C,eAAe,KACtDC,QAAS,cAAChC,EAAD,IACTiC,QAAS,cAAC9B,EAAD,IACTt8C,GAAOA,EAAF,QACLm6B,YAAa4C,EAAK5jB,cAAcnF,EAAS2zB,YAG3C4V,GACA,qBACE70C,UAAW24B,IAAG,sBAAuB,CACnC,eAAgB7oC,KAAK4Q,MAAM62B,YAF/B,SAKE,cAACgc,EAAD,CACE3a,SAAU9oC,KAAKwF,MAAMi3B,WACrBke,aAAcxU,EACdnoC,MAAOmoC,EACP0F,SAAU7rC,KAAK6lD,aACfC,YAAY,EACZC,YAAY,EACZC,WAAqB,OAAT10C,EACZ9J,GAAOA,EAAF,QACLs+B,OAAQC,EAAOE,WAAW30B,GAAMo0C,eAAe,MAC/C/jB,YAAa4C,EAAK5jB,cAAcnF,EAASkoC,MACzCuC,aAAW,EACXC,UAAU,kBAIflB,GACC,wBACElc,SAAU9oC,KAAKwF,MAAMi3B,aAAe0J,EACpCxG,QAAS,IAAM3/B,KAAKmmD,eACpBj2C,UAAU,0BAHZ,SAKE,cAAC,KAAD,CAAM5S,KAAMk9B,IAAU1G,KAAK,OAAO5jB,UAAU,mBAiC1Dk0C,EAAwBn0C,aAAe,CACrC2xB,YAAa,KACbjmB,UAAU,EACV/H,MAAO,GACPmxC,UAAU,EACVG,aAAa,EACblnD,MAAO,KACPgnD,YAAY,GAGCxY,4BACbrU,YAAe,CAAC,aAAc,WAC9BuU,kBAAS97B,IAAD,CACNU,KAAMV,EAAM2zB,KAAK1O,UAEnB4W,aALaD,CAMb4X,I,yICxRF,MAAM5oC,EAAWC,yBAAe,CAC9BrZ,KAAM,CAAF,6DAsDSmK,QAAM65C,KAAK3Z,qBA3Cb,EAAGp3B,aAAYlV,OAAMokC,WAChC,MAAMxB,EAAkBf,YAAmB3sB,GACrCotB,EAAwBR,YAAyB5sB,GACjDssB,GAAcxhC,aAAA,EAAAA,EAAMwhC,cAAe4C,EAAK5jB,cAAcnF,EAASpZ,MACrE,OACE,sBAAK8N,UAAU,0BAAf,UACE,6BAAKyxB,IACL,cAAC,OAAD,CAAM0kB,UAAQ,EAAd,SACG,IACC,IACE,IACEhxC,EAAWotB,GAAuB3uB,MACjCtM,GAAO6N,EAAW0tB,GAAiBv7B,IAErC0iC,IAAD,YACqB,SAAnBA,EAAM,UAC4C,KAAlD,UAAAA,EAAM9nC,YAAN,eAAY8pB,OAAO,GAAG9rB,KAAK8F,QAAQ,cAEtCgkC,GACC,cAAC,OAAKoc,KAAN,CAEEp2C,UAAWg6B,EAAM9nC,KAAK8pB,OAAO,GAAG9rB,KAFlC,SAIE,cAAC,IAAD,CAAYsR,KAAO,IAAGw4B,EAAM9nC,KAAK8pB,OAAO,GAAG5tB,IAA3C,SACG4rC,EAAM9nC,KAAK8pB,OAAO,GAAG9pB,QAJnB8nC,EAAM9nC,KAAK8pB,OAAO,GAAG5tB,e,cCjDxC3B,EAAOD,QAAUyC,QAAQ,wB,cCAzBxC,EAAOD,QAAUyC,QAAQ,mB,cCAzBxC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,usC,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,qrB,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,8nB,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,0uD,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,kmB,cCAjIC,EAAOD,QAAUyC,QAAQ,oB,cCAzBxC,EAAOD,QAAUyC,QAAQ,Y,cCAzBxC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,iV,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,ye,8JCAjI,SAAS6pD,EAAQpiD,GAAmV,OAAtOoiD,EAArD,mBAAXzoD,QAAoD,iBAApBA,OAAO0oD,SAAmC,SAAiBriD,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAXrG,QAAyBqG,EAAIzE,cAAgB5B,QAAUqG,IAAQrG,OAAOa,UAAY,gBAAkBwF,IAAyBA,GAInX,IAsEe,EAtEO,SAAyBsiD,GAC7C,IAAIC,EAAQD,EAAUC,MAClBC,EAAOF,EAAUE,KAMjBC,EAAY,SAAmBh2C,GACjC,IAL+B5S,EAK3BqV,EAASszC,EAAKD,EAAM91C,EAAO,CAAC,YAEhC,GANgB,OADe5S,EAOjBqV,IAN6B,WAAnBkzC,EAAQvoD,KAAuB0oD,EAAM1oD,EAAO,CAAC,eAAgB0oD,EAAM1oD,EAAO,CAAC,WAOjG,KAAM,iFAGR,OAAOqV,GAGLwzC,EAAc,SAAqBj2C,GACrC,OAAO+1C,EAAKD,EAAME,EAAUh2C,GAAQ,CAAC,eAyCvC,MAAO,CACLi2C,YAAaA,EACbC,UAxCc,SAAmBl2C,GACjC,OAAO+1C,EAAKD,EAAME,EAAUh2C,GAAQ,CAAC,aAwCrCg2C,UAAWA,EACXG,UAtCc,SAAmBn2C,GACjC,OAAO+1C,EAAKD,EAAME,EAAUh2C,GAAQ,CAAC,WAAY,aAsCjDo2C,QAnCY,SAAiBp2C,GAC7B,OAAO+1C,EAAKD,EAAME,EAAUh2C,GAAQ,CAAC,WAAY,WAmCjDq2C,oBA7BwB,SAA6BhnD,GACrD,IAAIinD,EAAe,KACfC,EAAY,KAChB,OAAO,SAAUv2C,GACf,IACI2C,GADOszC,EAAYj2C,IAAU,IACb2C,SAEpB,GAAIA,IAAa2zC,EACf,OAAOC,EAGTD,EAAe3zC,EACf,IAAI6yB,EAAQ,oBAAU7yB,EAAUtT,GAOhC,OALKmmC,GAAU+gB,GAAa/gB,EAAMxkC,MAAQulD,EAAUvlD,KACjDwkC,EAAMghB,UAAYD,EAAUC,UAC7BD,EAAY/gB,GAGP+gB,MC5Db,SAAS,EAAQhjD,GAAmV,OAAtO,EAArD,mBAAXrG,QAAoD,iBAApBA,OAAO0oD,SAAmC,SAAiBriD,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAXrG,QAAyBqG,EAAIzE,cAAgB5B,QAAUqG,IAAQrG,OAAOa,UAAY,gBAAkBwF,IAAyBA,GAEnX,SAASkjD,IAA2Q,OAA9PA,EAAW5pD,OAAOgT,QAAU,SAAU2c,GAAU,IAAK,IAAIxwB,EAAI,EAAGA,EAAIkqC,UAAU9kC,OAAQpF,IAAK,CAAE,IAAIuwB,EAAS2Z,UAAUlqC,GAAI,IAAK,IAAI0B,KAAO6uB,EAAc1vB,OAAOkB,UAAUC,eAAe7B,KAAKowB,EAAQ7uB,KAAQ8uB,EAAO9uB,GAAO6uB,EAAO7uB,IAAY,OAAO8uB,IAA2BuxB,MAAM3+C,KAAM8mC,WAIhT,SAASwgB,EAAkBl6B,EAAQ5nB,GAAS,IAAK,IAAI5I,EAAI,EAAGA,EAAI4I,EAAMxD,OAAQpF,IAAK,CAAE,IAAI2qD,EAAa/hD,EAAM5I,GAAI2qD,EAAW5pD,WAAa4pD,EAAW5pD,aAAc,EAAO4pD,EAAWC,cAAe,EAAU,UAAWD,IAAYA,EAAWE,UAAW,GAAMhqD,OAAOC,eAAe0vB,EAAQm6B,EAAWjpD,IAAKipD,IAI7S,SAASG,EAA2BC,EAAM5qD,GAAQ,OAAIA,GAA2B,WAAlB,EAAQA,IAAsC,mBAATA,EAEpG,SAAgC4qD,GAAQ,QAAa,IAATA,EAAmB,MAAM,IAAIC,eAAe,6DAAgE,OAAOD,EAFbE,CAAuBF,GAAtC5qD,EAInI,SAAS+qD,EAAgBtqD,GAAwJ,OAAnJsqD,EAAkBrqD,OAAOsqD,eAAiBtqD,OAAOuqD,eAAiB,SAAyBxqD,GAAK,OAAOA,EAAEyqD,WAAaxqD,OAAOuqD,eAAexqD,KAA8BA,GAIxM,SAAS0qD,EAAgB1qD,EAAGqB,GAA+G,OAA1GqpD,EAAkBzqD,OAAOsqD,gBAAkB,SAAyBvqD,EAAGqB,GAAsB,OAAjBrB,EAAEyqD,UAAYppD,EAAUrB,IAA6BA,EAAGqB,GClBrK,SAASspD,EAAeC,EAAKxrD,GAAK,OAMlC,SAAyBwrD,GAAO,GAAIrjD,MAAMC,QAAQojD,GAAM,OAAOA,EANtBC,CAAgBD,IAIzD,SAA+BA,EAAKxrD,GAAK,KAAMkB,OAAO0oD,YAAY/oD,OAAO2qD,KAAgD,uBAAxC3qD,OAAOkB,UAAU8N,SAAS1P,KAAKqrD,GAAkC,OAAU,IAAIE,EAAO,GAAQC,GAAK,EAAUC,GAAK,EAAWC,OAAKtjD,EAAW,IAAM,IAAK,IAAiCujD,EAA7BC,EAAKP,EAAItqD,OAAO0oD,cAAmB+B,GAAMG,EAAKC,EAAG/S,QAAQgT,QAAoBN,EAAKzhD,KAAK6hD,EAAG1qD,QAAYpB,GAAK0rD,EAAKtmD,SAAWpF,GAA3D2rD,GAAK,IAAoE,MAAOxpD,GAAOypD,GAAK,EAAMC,EAAK1pD,EAAO,QAAU,IAAWwpD,GAAsB,MAAhBI,EAAW,QAAWA,EAAW,SAAO,QAAU,GAAIH,EAAI,MAAMC,GAAQ,OAAOH,EAJpcO,CAAsBT,EAAKxrD,IAE5F,WAA8B,MAAM,IAAIksD,UAAU,wDAFgDC,GAQlG,SAASC,EAAQvqD,EAAQwqD,GAAkB,IAAIznD,EAAO/D,OAAO+D,KAAK/C,GAAS,GAAIhB,OAAOyrD,sBAAuB,CAAE,IAAIC,EAAU1rD,OAAOyrD,sBAAsBzqD,GAAawqD,IAAgBE,EAAUA,EAAQ5jD,QAAO,SAAU6jD,GAAO,OAAO3rD,OAAO4rD,yBAAyB5qD,EAAQ2qD,GAAKzrD,eAAgB6D,EAAKqF,KAAK83C,MAAMn9C,EAAM2nD,GAAY,OAAO3nD,EAE9U,SAAS8nD,EAAcl8B,GAAU,IAAK,IAAIxwB,EAAI,EAAGA,EAAIkqC,UAAU9kC,OAAQpF,IAAK,CAAE,IAAIuwB,EAAyB,MAAhB2Z,UAAUlqC,GAAakqC,UAAUlqC,GAAK,GAAQA,EAAI,EAAKosD,EAAQvrD,OAAO0vB,IAAS,GAAMrtB,SAAQ,SAAUxB,GAAOirD,EAAgBn8B,EAAQ9uB,EAAK6uB,EAAO7uB,OAAsBb,OAAO+rD,0BAA6B/rD,OAAOgsD,iBAAiBr8B,EAAQ3vB,OAAO+rD,0BAA0Br8B,IAAmB67B,EAAQvrD,OAAO0vB,IAASrtB,SAAQ,SAAUxB,GAAOb,OAAOC,eAAe0vB,EAAQ9uB,EAAKb,OAAO4rD,yBAAyBl8B,EAAQ7uB,OAAe,OAAO8uB,EAE7gB,SAASm8B,EAAgBplD,EAAK7F,EAAKN,GAAiK,OAApJM,KAAO6F,EAAO1G,OAAOC,eAAeyG,EAAK7F,EAAK,CAAEN,MAAOA,EAAOL,YAAY,EAAM6pD,cAAc,EAAMC,UAAU,IAAkBtjD,EAAI7F,GAAON,EAAgBmG,EAQ3M,IAAIulD,EAAc,SAAqBp2C,GACrC,GAAIA,GAAYA,EAASjS,MAEvB,OAAOiS,EAGT,IAAIq2C,EAAcr2C,GAAYA,EAAS0e,OAEvC,GAA2B,iBAAhB23B,GAAmD,IAAvBA,EAAY3nD,OACjD,OAAOsnD,EAAc,GAAIh2C,EAAU,CACjCjS,MAAO,KAKX,IAIIA,EAJSsoD,EAAYlsB,UAAU,GAEdrzB,MAAM,KAEPlG,QAAO,SAAUq5B,EAAKqsB,GAExC,IACIC,EAAuB1B,EADDyB,EAAax/C,MAAM,KACkB,GAI/D,OAAOk/C,EAAc,GAAI/rB,EAAKgsB,EAAgB,GAH/BM,EAAqB,GACnBA,EAAqB,OAGrC,IACH,OAAOP,EAAc,GAAIh2C,EAAU,CACjCjS,MAAOA,KA4CI,EAxCW,SAA6BolD,GACrD,IAAIqD,EAASrD,EAAUqD,OACnBC,EAAQtD,EAAUsD,MAmCtB,OAjC0B,SAA6BlY,GACrD,IAAImY,EAAqBF,EAAO,CAC9Bx2C,SAAUo2C,EAAY7X,EAAQv+B,UAC9BszB,OAAQiL,EAAQjL,SAOlB,OAAO,WACL,IAAIh2B,EAAQk2B,UAAU9kC,OAAS,QAAsBmD,IAAjB2hC,UAAU,GAAmBA,UAAU,GAAKkjB,EAE5EC,EAAOnjB,UAAU9kC,OAAS,QAAsBmD,IAAjB2hC,UAAU,GAAmBA,UAAU,GAAK,GAC3E1mC,EAAO6pD,EAAK7pD,KACZg1B,EAAU60B,EAAK70B,QAEnB,GAAIh1B,IAAS,IAAiB,CAC5B,IAAIkT,EAAW8hB,EAAQ9hB,SACnBszB,EAASxR,EAAQwR,OACjBC,EAAmBzR,EAAQyR,iBAG/B,OAAOA,EAAmBj2B,EAAQm5C,EAAMn5C,EAAO,CAC7C0C,SAAUw2C,EAAOJ,EAAYp2C,IAC7BszB,OAAQA,IAIZ,OAAOh2B,KCtFb,SAAS,EAAQnS,EAAQwqD,GAAkB,IAAIznD,EAAO/D,OAAO+D,KAAK/C,GAAS,GAAIhB,OAAOyrD,sBAAuB,CAAE,IAAIC,EAAU1rD,OAAOyrD,sBAAsBzqD,GAAawqD,IAAgBE,EAAUA,EAAQ5jD,QAAO,SAAU6jD,GAAO,OAAO3rD,OAAO4rD,yBAAyB5qD,EAAQ2qD,GAAKzrD,eAAgB6D,EAAKqF,KAAK83C,MAAMn9C,EAAM2nD,GAAY,OAAO3nD,EAI9U,SAAS,EAAgB2C,EAAK7F,EAAKN,GAAiK,OAApJM,KAAO6F,EAAO1G,OAAOC,eAAeyG,EAAK7F,EAAK,CAAEN,MAAOA,EAAOL,YAAY,EAAM6pD,cAAc,EAAMC,UAAU,IAAkBtjD,EAAI7F,GAAON,EAAgBmG,EAG3M,IAYe,EAZC,CACd2lD,OAAQ,SAAgB9rD,GACtB,OAAOA,GAET0oD,MCVU,SAAe91C,EAAO3Q,GAChC,IAAK2Q,EACH,OAAOA,EAGT,IAAI5O,EAAS/B,EAAK+B,OAElB,GAAKA,EAAL,CAMA,IAFA,IAAI6R,EAASjD,EAEJhU,EAAI,EAAGA,EAAIoF,GAAY6R,IAAUjX,EACxCiX,EAASA,EAAO5T,EAAKrD,IAGvB,OAAOiX,IDNPk2C,MAAO,SAAen5C,EAAOwkB,GAC3B,OAXJ,SAAuBhI,GAAU,IAAK,IAAIxwB,EAAI,EAAGA,EAAIkqC,UAAU9kC,OAAQpF,IAAK,CAAE,IAAIuwB,EAAyB,MAAhB2Z,UAAUlqC,GAAakqC,UAAUlqC,GAAK,GAAQA,EAAI,EAAK,EAAQa,OAAO0vB,IAAS,GAAMrtB,SAAQ,SAAUxB,GAAO,EAAgB8uB,EAAQ9uB,EAAK6uB,EAAO7uB,OAAsBb,OAAO+rD,0BAA6B/rD,OAAOgsD,iBAAiBr8B,EAAQ3vB,OAAO+rD,0BAA0Br8B,IAAmB,EAAQ1vB,OAAO0vB,IAASrtB,SAAQ,SAAUxB,GAAOb,OAAOC,eAAe0vB,EAAQ9uB,EAAKb,OAAO4rD,yBAAyBl8B,EAAQ7uB,OAAe,OAAO8uB,EAWlgB,CAAc,GAAIxc,EAAO,GAAIwkB,IAEtCuxB,KAAM,SAAc3oD,GAClB,OAAOA,IEVA,EJqBiB,SAA+ByoD,GACzD,IACII,EADmB,EAAgBJ,GACJI,YAS/BqD,EAA+B,SAAUC,GAG3C,SAASD,EAAgB1kD,GACvB,IAAI4kD,GAtCV,SAAyBr+B,EAAUs+B,GAAe,KAAMt+B,aAAoBs+B,GAAgB,MAAM,IAAIvB,UAAU,qCAwC1GwB,CAAgBtqD,KAAMkqD,GAEtBE,EAAQ1C,EAA2B1nD,KAAM8nD,EAAgBoC,GAAiBntD,KAAKiD,KAAMwF,IACrF,IAAIyL,EAAQzL,EAAMyL,MACd4gC,EAAUrsC,EAAMqsC,QAChBlL,EAAoBnhC,EAAMmhC,kBAC9ByjB,EAAMG,kBAAmB,EAEzBH,EAAMI,YAAcv5C,EAAMwC,WAAU,WAElC,IAAIg3C,EAAe5D,EAAY51C,EAAMmB,YACjCs4C,EAAkBD,EAAal3C,SAC/Bo3C,EAAgBF,EAAaz4B,OAC7B44B,EAAcH,EAAaI,KAC3BC,EAAeL,EAAa75C,MAG5Bm6C,EAAoBlZ,EAAQv+B,SAC5B03C,EAAoBD,EAAkBx3C,SACtC03C,EAAkBF,EAAkB/4B,OACpCk5B,EAAgBH,EAAkBF,KAClCM,EAAiBJ,EAAkBn6C,MAEV,SAAzBpL,EAAMqsC,QAAQjL,QAAsBokB,IAAsBN,GAAmBO,IAAoBN,GAAiBO,IAAkBN,GAAeE,IAAiBK,IACtKf,EAAMG,kBAAmB,EAEzB1Y,EAAQhrC,KAAK,CACX0M,SAAUm3C,EACV14B,OAAQ24B,EACRE,KAAMD,EACNh6C,MAAOk6C,QAKb,IAAIM,EAAuB,SAA8B93C,EAAUszB,GACjE,IAAIC,EAAmBC,UAAU9kC,OAAS,QAAsBmD,IAAjB2hC,UAAU,IAAmBA,UAAU,GAGjFsjB,EAAMG,iBAGTH,EAAMG,kBAAmB,EAFzB5jB,EAAkBrzB,EAAUszB,EAAQC,IAgBxC,OATAujB,EAAMiB,SAAWxZ,EAAQyZ,OAAOF,GAE3B5lD,EAAM+lD,cAITH,EAAqBvZ,EAAQv+B,SAAUu+B,EAAQjL,QAAQ,GAGlDwjB,EA5Fb,IAAsBC,EAAamB,EAAYC,EAiH3C,OAzGJ,SAAmBC,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAI7C,UAAU,sDAAyD4C,EAAS/sD,UAAYlB,OAAOY,OAAOstD,GAAcA,EAAWhtD,UAAW,CAAEe,YAAa,CAAE1B,MAAO0tD,EAAUjE,UAAU,EAAMD,cAAc,KAAemE,GAAYzD,EAAgBwD,EAAUC,GAuB/WC,CAAU1B,EAAiBC,GA/BTE,EA+FLH,GA/FkBsB,EA+FD,CAAC,CAC7BltD,IAAK,uBACLN,MAAO,WACLgC,KAAKqrD,WACLrrD,KAAKwqD,gBAEN,CACDlsD,IAAK,SACLN,MAAO,WACL,IAAI6tD,EAAc7rD,KAAKwF,MACnBqsC,EAAUga,EAAYha,QACtBviC,EAAWu8C,EAAYv8C,SAC3B,OAAO,IAAMjE,cAAc,SAAQ,CACjCwmC,QAASA,GACRviC,QA7GmEg4C,EAAkB+C,EAAY1rD,UAAW6sD,GAAiBC,GAAanE,EAAkB+C,EAAaoB,GAiHzKvB,EAnF0B,CAoFjC,iBAEFA,EAAgB4B,UAAY,CAC1B76C,MAAO,IAAU86C,MAAM,CACrB35C,SAAU,IAAU45C,KAAKC,WACzBx4C,UAAW,IAAUu4C,KAAKC,aACzBA,WACHpa,QAAS,IAAUka,MAAM,CACvBnlB,OAAQ,IAAUx5B,OAAO6+C,WACzBX,OAAQ,IAAUU,KAAKC,WACvB34C,SAAU,IAAU7U,OAAOwtD,WAC3BplD,KAAM,IAAUmlD,KAAKC,aACpBA,WACHC,SAAU,IAAU9+C,OACpBkC,SAAU,IAAU68C,UAAU,CAAC,IAAUH,KAAM,IAAU/Z,OACzDtL,kBAAmB,IAAUqlB,KAAKC,WAClCV,aAAc,IAAUa,MAG1B,IAQIC,EAA6B,SAAoC7mD,GACnE,IAAI8mD,EAAU9mD,EAAMu6B,SAAW,oBAE/B,GAAe,MAAXusB,EACF,KAAM,mCAGR,OAAO,IAAMjhD,cAAcihD,EAAQC,SAAU,MAAM,SAAUtC,GAC3D,IAAIh5C,EAAQg5C,EAAKh5C,MACjB,OAAO,IAAM5F,cAAc6+C,EAAiB7C,EAAS,CACnDp2C,MAAOA,GACNzL,QAOP,OAHA6mD,EAA2BP,UAAY,CACrC/rB,QAAS,IAAUthC,QAEd,kBAAQ,MA1BU,SAA4B0U,GACnD,MAAO,CACLwzB,kBAAmB,SAA2BrzB,EAAUszB,EAAQC,GAC9D,OAAO1zB,EAAS,YAAmBG,EAAUszB,EAAQC,QAuBpD,CAAkCwlB,GIjKD,CAAsBG,GACrDxJ,EAA6B,EAAoBwJ,GAExD,EAAgC,EAAgBA,GAClC,EAAiB3F,YACnB,EAAiBC,UACnB,EAAiBE,QACf,EAAiBD,UACP,EAAiBE,qB,cCd3CtqD,EAAOD,QAAUyC,QAAQ,oB,cCAzBxC,EAAOD,QAAUyC,QAAQ,qB,cCAzBxC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,wH,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,uN,cCAjIC,EAAOD,QAAUyC,QAAQ,oB,6BCAzB,uCAeA,MAAMwP,EAAQ,EAAG2T,UAASmqC,iBACxB,IAAI5a,EAAU6a,uBAEd,OACE,sBACE5+C,MAAO,CACL6+C,WAAY,wBACZC,SAAU,OACVvwB,QAAS,OACTwwB,cAAe,SACfvwB,eAAgB,SAChBC,WAAY,UAPhB,UAWE,6BACE,cAAC,mBAAD,CACE/0B,GAAG,gDACHukC,eAAe,qDAGnB,wBAAQj+B,MAAO,CAAEmsB,MAAO,OAAxB,SAAkC3X,IAClC,8BAAMmqC,IACN,uBAAM3+C,MAAO,CAAEg/C,UAAW,UAA1B,UACE,4BACE,wBAAQntB,QAAS,IAAMkS,EAAQkb,SAA/B,SACE,cAAC,mBAAD,CACEvlD,GAAG,gBACHukC,eAAe,sBAIrB,4BACE,mBAAGr6B,KAAK,IAAR,SACE,cAAC,mBAAD,CACElK,GAAG,0BACHukC,eAAe,gCAIrB,4BACE,cAAC,mBAAD,CACEvkC,GAAG,2BACHukC,eAAe,sCAa3Bp9B,EAAMsB,aAAe,CACnBw8C,WAAY,MAGChgB,yBAAW99B,I,kGCvD1B,MAAM6M,EAAWC,yBAAe,CAC9B4/B,aAAc,CAAF,6DAoGC5O,yBAxFK,EAAG1/B,UAASw3B,OAAMjxB,eACpC,MAAMyvB,EAAkBf,YAAmBj1B,GACrC01B,EAAwBR,YAAyBl1B,GAEvD,OAAOm1B,YAAcn1B,GACnB,qBAAKvF,GAAG,gBAAgB0I,UAAU,eAAlC,SACG,IAAInD,EAAQ01B,GAAuB3uB,MAAQo2B,IAAU,cACpD,MAAMsR,GACJ,UAAA36C,IAAOqrB,OAAOoW,aAAd,UACEv1B,EAAQg2B,UADV,iBACE,EAA2BmH,UAD7B,aACE,EAAoC,iBADtC,sBAEe,KACjB,OAAiB,OAAVsR,EACL,cAACA,EAAD,CAEEh0C,GAAI0iC,EACJ70B,WAAYtI,EACZ5M,KAAM4M,EAAQg2B,GAAiBmH,GAC/BjqC,KAAMm9B,aAAW9pB,aAAA,EAAAA,EAAUC,WAAY,KAJlC22B,GAOP,8BACG3F,EAAK5jB,cAAcnF,EAAS6/B,aAAc,CACzCnR,MAAK,UAAEn9B,EAAQg2B,UAAV,iBAAE,EAA2BmH,UAA7B,aAAE,EAAoC,YAFrCA,OAShB,eAAC,YAAD,CAAW1iC,GAAG,gBAAd,UACE,oBAAI0I,UAAU,uBAAd,SAAsCnD,EAAQ9D,QAC7C8D,EAAQ60B,aACP,mBAAG1xB,UAAU,sBAAb,SAAoCnD,EAAQ60B,cAE7C70B,EAAQw/B,OACP,cAAC,QAAD,CACEr8B,UAAU,iBACV88C,IAAKjgD,EAAQw/B,MAAM0gB,OAAOC,MAAMC,SAChCC,QAAQ,UAGXrgD,EAAQsgD,WACP,wDAEE,mBAAG37C,KAAM3E,EAAQsgD,UAAjB,SAA6BtgD,EAAQsgD,eAGxCtgD,EAAQ3K,MACP,qBACE4K,wBAAyB,CACvBC,OAAQF,EAAQ3K,KAAKjC,c,suBClDjC,MAAMqb,EAAWC,yBAAe,CAC9BysB,OAAQ,CAAF,uCAIN+a,SAAU,CAAF,yCAIRqK,WAAY,CAAF,+CA4EZ,MAAMC,EAAgB,CAACC,EAAa,GAAIrxB,EAAQsxB,KAC9C,MAAMC,EAAYlpD,OAAOgpD,GACnBG,EAAcnpD,OAAOipD,EAAUG,eAAezxB,IAC9C0xB,EAAcrpD,OAAOipD,EAAUK,eAAe3xB,IACpD,OAAOwxB,IAAgBD,GAAaG,IAAgBH,GA0BtD,MAAMK,UAAoB5/C,YAyDxBzO,YAAY8F,GACVmkC,MAAMnkC,GADW,qBAuCP,CAACwoD,GAAkBC,WAAUlqB,eACvC,MAAMmqB,EArMV,SAAmBC,EAAO95C,EAAM88B,GAC9B,MAAMid,EAAcD,EAAMjjD,QAM1B,OALAkjD,EAAY1jD,OACVymC,EAAK,EAAIgd,EAAMnsD,OAASmvC,EAAKA,EAC7B,EACAid,EAAY1jD,OAAO2J,EAAM,GAAG,IAEvB+5C,EA8LYC,CAAUL,EAAgBC,EAAUlqB,GAErD/jC,KAAKyS,aAAay7C,KAvClBluD,KAAKyS,aAAezS,KAAKyS,aAAalU,KAAKyB,MAQ7CurC,oBAAoB,UAEhB,UAACvrC,KAAKwF,MAAMsO,aAAZ,iBAAC,EAAkByvC,eAAnB,OAAC,EAA2BvhD,QAC5B,UAAChC,KAAKwF,MAAM+9C,eAAZ,OAAC,EAAoBvhD,SACrBhC,KAAKwF,MAAM8oD,cAEXtuD,KAAKwF,MAAMmuB,cAAc,CACvBC,eAAgB5zB,KAAKwF,MAAM8oD,aAC3Bx6B,MAAO,EACP1F,WAAYpuB,KAAKwF,MAAM8L,OAY7BmB,aAAau7C,GACXhuD,KAAKwF,MAAMqmC,SACT7rC,KAAKwF,MAAMgC,GACXwmD,EAAiBA,EAAezqD,IAAKwQ,GAASA,EAAK/V,OAAS,MAehE0R,SAAS,YACP,MAAM6zC,EAhKV,SAA0BA,GACxB,OAAIx+C,MAAMC,QAAQu+C,IAAYA,EAAQvhD,QAAU+C,MAAMC,QAAQu+C,EAAQ,IAC7DA,EAAQhgD,IAAK44B,IAAD,CACjBn+B,MAAOm+B,EAAO,GACdtC,MAEgB,SAAdsC,EAAO,IAAiBA,EAAO,GAAKA,EAAO,GAAKA,EAAO,MAItDonB,EAsJWF,EAAiB,UAAArjD,KAAKwF,aAAL,eAAY+9C,UAAW,IAClDyK,EAvMV,SAA6BzK,EAASvlD,GACpC,OAAKA,GAAU+G,MAAMC,QAAQhH,GACR,IAAjBA,EAAMgE,OAAqBhE,EAEP,iBAAbA,EAAM,GAERA,EAAMuF,IAAKqxB,IAAM,MACtB,MAAO,CACLiF,OAAO,cAAK0pB,EAAUnmD,GAAMA,EAAEY,QAAU42B,UAAjC,eAAqCiF,QAASjF,EACrD52B,MAAO42B,KAMX,IAAS52B,EAAM,KACfP,OAAO+D,KAAKxD,EAAM,IAAIoS,SAAS,SAExBpS,EACJuF,IAAKqxB,IACJ,MAAM7gB,EAAO,IAAKwvC,EAAUnmD,GAAMA,EAAEY,QAAU42B,EAAE/hB,OAChD,OAAOkB,EACH,CACE8lB,MAAO9lB,EAAK8lB,OAAS9lB,EAAK9K,OAAS8K,EAAKlB,MACxC7U,MAAO42B,EAAE/hB,OAEX,CAEEgnB,MAAOjF,EAAEiF,MACT77B,MAAO42B,EAAE/hB,SAGhBtN,OAAQ49C,KAAQA,GAGd,GAlCqC,GAsMnBoL,CAAoBhL,EAASvjD,KAAKwF,MAAMxH,OAEzDwwD,EAAkBxuD,KAAKwF,MAAMipD,sBAAsB3pB,SACnD,kBAAE4pB,GAAsB1uD,KAAKwF,MAAM6zB,iBACnCs1B,EAAS3uD,KAAKwF,MAAM2zB,YAAY2L,QAChC8pB,EAeJ,UAAA5uD,KAAKwF,aAAL,UAAY+9C,SACX7V,YAAiB1tC,KAAKwF,QACtBxF,KAAKwF,MAAMqpD,UAERH,EAAkBF,GADlBE,EAAkBC,GAGxB,OACE,cAAC,KAAD,OAAsB3uD,KAAKwF,OAA3B,aACE,cAACopD,EAAD,CACEE,eAAa,EAEbC,KAAK,KACLC,UAAWhvD,KAAKgvD,UAChBC,SAAU,EAEVC,oBAAqB,EAAGjd,UAAWA,EAAKkd,wBACxC3nD,GAAK,SAAQxH,KAAKwF,MAAMgC,GAExBi1B,WAAYz8B,KAAKwF,MAAMsjC,UAAY9oC,KAAKwF,MAAMi3B,WAC9CvsB,UAAU,yBACVk/C,gBAAgB,eAChBrpC,QACE/lB,KAAKwF,MAAM8oD,aACP/K,EACAvjD,KAAKwF,MAAM+9C,QACX,IACKA,KACCvjD,KAAKwF,MAAM6pD,gBAAkBrvD,KAAKwF,MAAMs/B,QACxC,CACE,CACEjL,MAAO75B,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAASynC,UAEXjlD,MAAO,aAGX,IAEN,CACE,CACE67B,MAAO75B,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASynC,UAC9CjlD,MAAO,aAIjBk9B,OAAQF,IACRL,MAAOF,IACPhO,WAAU,QACJ,UAAAzsB,KAAKwF,MAAM+9C,eAAX,eAAoBvhD,QAAS,IAAM,CACrCs2B,eAFM,IAIRY,WAAYD,IACZS,gBAAiBD,IACjBS,sBACAK,mBACAX,aAEF57B,MAAOgwD,GAAkB,GACzBrsB,YAAW,UACT3hC,KAAKwF,MAAMm8B,mBADF,QAET3hC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS0sB,QAEzC2D,SAAU7rC,KAAKyS,aACf68C,iBAAkB,CAChB9B,EACA+B,EACAC,EACA/B,OAGGD,GACD+B,EAAY5jD,KAAMwwB,GAChBoxB,EAAcC,EAAYrxB,EAAQsxB,KAEpC+B,EAAc7jD,KAAMwwB,GAClBoxB,EAAcC,EAAYrxB,EAAQsxB,KAIxCgC,aAAW,EACXC,SAAO,GA/DF1vD,KAAKwF,MAAMgC,Q,IAlJpBumD,E,eAoCkB,CACpBnsB,YAAa,KACbjmB,UAAU,EACV7H,MAAO,CACLigB,WAAY,MAEd4Z,cAAe,CACb5Z,WAAY,MAEdngB,MAAO,GACP2vC,QAAS,GACTvlD,MAAO,KACP6wD,WAAW,IAwKqBpiB,qBAAWshB,GAEhCvhB,sBACbC,aACAtU,YAAe,CAAC,cAAe,wBAAyB,qBACxDuU,kBACE,CAAC97B,EAAOpL,KAAU,YAChB,MAAM8oD,EACJ5gB,YAAiBloC,IACjBooC,YAAkBpoC,IAClBqoC,YAAkBroC,GAEdy6C,EAAU,UACdrvC,EAAMovC,oBADQ,iBACd,EAAqBsO,UADP,iBACd,EAAoC3hB,mBADtB,aACd,EAAkD/7B,EAAM2zB,KAAK1O,QAI/D,iBAAIrwB,EAAMsO,aAAV,OAAI,EAAayvC,QACR,CACLA,QAAS/9C,EAAMsO,MAAMyvC,QACrBjyC,KAAMV,EAAM2zB,KAAK1O,QAEVoqB,EACF,CACLsD,QAAStD,EAAWnsC,MACpBw6C,eACAh9C,KAAMV,EAAM2zB,KAAK1O,QAGd,CAAEy4B,eAAch9C,KAAMV,EAAM2zB,KAAK1O,SAE1C,CAAElC,oBA7BS6Y,CA+BbuhB,I,owBC7XF,MAAM4B,EAAiB,CACrB,YACA,aACA,aACA,YACA,YACA,iBAEIC,EAAWvwD,IAAS,CAAD,iIAAC,IAAM,6CAAP,qMAEnBmc,EAAWC,yBAAe,CAC9Bo0C,YAAa,CAAF,+DAIXC,SAAU,CAAF,+GAIRC,SAAU,CAAF,+FAIRC,YAAa,CAAF,mEAIXC,WAAY,CAAF,qDA6BNC,EAAc1qD,IAClB,MAAM,GAAEgC,EAAF,MAAMxJ,EAAN,SAAa6tC,GAAarmC,GACzB2qD,EAAUC,GAAe7jD,IAAM8X,UAAS,GACzCkgB,EAAOkE,oBAEbl8B,IAAMqX,UAAU,KACV5lB,GAAS2xD,EAAev/C,SAASpS,EAAM,kBACzCoyD,GAAY,IAEb,CAACpyD,IAEJ,MAAMqyD,EAASryD,WAAOmvD,SACjB,GAAE54B,YAAgBv2B,aAAD,EAACA,EAAOmvD,gBAAgBjmD,KAAKC,QACvCnJ,WAAOmC,KACd,QAAOnC,EAAM,mBAAmBA,EAAMm6C,YAAYn6C,EAAMmC,OACzD,KAkCJ,OACE,eAAC,KAAD,OAAsBqF,GAAtB,cACE,cAACoqD,EAAD,CAAUU,OA5BEC,IACd,MAAMC,EAAOD,EAAM,GACnBE,wBAAcD,GAAMhuD,KAAMrC,IACxB,MAAM2gB,EAAS3gB,EAAKimC,MAAM,yBAC1ByF,EAASrkC,EAAI,CACXrH,KAAM2gB,EAAO,GACbq3B,SAAUr3B,EAAO,GACjB,eAAgBA,EAAO,GACvB4vC,SAAUF,EAAKlzD,SAInB,IAAIqzD,EAAS,IAAIC,WACjBD,EAAOE,OAAS,WACd,MAAM/vC,EAAS6vC,EAAO98C,OAAOuyB,MAAM,yBACnC,GAAIupB,EAAev/C,SAAS0Q,EAAO,IAAK,CACtCsvC,GAAY,GACOtmD,SAASooC,eAAgB,SAAQ1qC,WACvCwlD,IAAM2D,EAAO98C,YAE1Bu8C,GAAY,IAGhBO,EAAOF,cAAcF,EAAM,KAKzB,SACG,EAAGO,eAAcC,gBAAeC,kBAC/B,0BAAK9gD,UAAU,wBAA2B4gD,KAA1C,cACGE,GAAgB,cAAC,SAAD,CAAQ9iB,QAAM,IAC9BiiB,EACC,cAAC,QAAD,CACEjgD,UAAU,gBACV1I,GAAK,SAAQA,UACbssB,KAAK,QACLk5B,IAAKqD,IAGP,qBAAKngD,UAAU,uBAAf,SACG8gD,EACC,mBAAG9gD,UAAU,gBAAb,SACGq0B,EAAK5jB,cAAcnF,EAASq0C,eAE7B7xD,EACF,mBAAGkS,UAAU,gBAAb,SACGq0B,EAAK5jB,cAAcnF,EAASs0C,YAG/B,mBAAG5/C,UAAU,gBAAb,SACGq0B,EAAK5jB,cAAcnF,EAASu0C,cAMrC,uBAAO7/C,UAAU,0BAAjB,SACGlS,EACGumC,EAAK5jB,cAAcnF,EAASw0C,aAC5BzrB,EAAK5jB,cAAcnF,EAASy0C,cAElC,6BACMc,EAAc,CAChB3wD,KAAM,OACN0N,MAAO,CAAEuuB,QAAS,WAHtB,IAKE70B,GAAK,SAAQA,EACblK,KAAMkK,EACNpH,KAAK,gBAKb,sBAAK8P,UAAU,kBAAf,UACGlS,GAASA,EAAM0yD,SACf1yD,GACC,cAAC,SAAD,CACEqrC,MAAI,EACJD,OAAK,EACLl5B,UAAU,gBACViC,aAAW,cACXwtB,QAAS,KACPkM,EAASrkC,EAAI,MACb4oD,GAAY,IAPhB,SAUE,cAAC,KAAD,CAAM9yD,KAAM2zD,IAAWn9B,KAAK,mBAgCxCo8B,EAAWjgD,aAAe,CACxB2xB,YAAa,KACbjmB,UAAU,EACV/H,MAAO,GACP5V,MAAO,MAGMyuC,yBAAWyjB,I,myBC5M1B,MAAM10C,EAAWC,yBAAe,CAC9By1C,WAAY,CAAF,2GAIVC,kBAAmB,CAAF,mPAanB,MAAMC,UAAiBjjD,YA2DrBzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK4Q,MAAQ,CACXgD,MAAO,GACPy9C,YAAa,IACX,IACE,IACExwD,IAAOD,SAASywD,YAChB,IAAIxwD,IAAOD,SAAS08B,iBAAmBW,GACrCz5B,OAAOy5B,GAAOx5B,QAAQ,WAAY,SAO5CzE,KAAKyS,aAAezS,KAAKyS,aAAalU,KAAKyB,MAC3CA,KAAKsxD,WAAatxD,KAAKsxD,WAAW/yD,KAAKyB,MACvCA,KAAKuxD,gBAAkBvxD,KAAKuxD,gBAAgBhzD,KAAKyB,MAQnDurC,oBACMvrC,KAAKwF,MAAMglC,OACbxqC,KAAKiyC,KAAKzH,QAEZxqC,KAAKwF,MAAMgvB,iBACXx0B,KAAKuxD,gBAAgBvxD,KAAKwF,MAAMxH,OASlCuzD,gBAAgBvzD,GACd,MAAM4V,EAAQ,IAGiC,IAA3C5T,KAAK4Q,MAAMygD,YAAYnrD,QAAQlI,IACjC4V,EAAM/M,KAAK7G,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS01C,aAI/C,gBAAgBpxC,KAAK9hB,IACxB4V,EAAM/M,KAAK7G,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS21C,qBAIT,IAAvCnxD,KAAKwF,MAAMk4C,QAAQx3C,QAAQlI,IAC7B4V,EAAM/M,KAAK7G,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS01C,aAGpDlxD,KAAKoqC,SAAS,CAAEx2B,UASlBnB,cAAa,OAAE2a,IACbptB,KAAKuxD,gBAAgBnkC,EAAOpvB,OAC5BgC,KAAKwF,MAAMqmC,SACT7rC,KAAKwF,MAAMgC,GACM,KAAjB4lB,EAAOpvB,WAAemH,EAAYioB,EAAOpvB,OAU7CszD,YAAW,OAAElkC,IACXptB,KAAKuxD,gBAAgBnkC,EAAOpvB,OAC5BgC,KAAKwF,MAAMgsD,OACTxxD,KAAKwF,MAAMgC,GACM,KAAjB4lB,EAAOpvB,WAAemH,EAAYioB,EAAOpvB,OAS7C0R,SACE,MAAM,GACJlI,EADI,MAEJxJ,EAFI,QAGJ2hC,EAHI,KAIJ0J,EAJI,WAKJ4Q,EALI,UAMJr+B,EANI,UAOJC,EAPI,YAQJ8lB,GACE3hC,KAAKwF,MAEHA,EAAQ,EAAH,KACNxF,KAAKwF,OADC,IAEToO,MAAO,IAAO5T,KAAKwF,MAAMoO,MAAO5T,KAAK4Q,MAAMgD,SAG7C,OACE,eAAC,KAAD,OAAsBpO,GAAtB,IAA6B0K,UAAU,OAAvC,UACE,cAAC,QAAD,CACE1I,GAAK,SAAQA,EACblK,KAAMkK,EACNxJ,MAAOA,GAAS,GAChB8qC,SAAU9oC,KAAKwF,MAAMi3B,WACrB4M,KAAMA,GAAQ,KACd1H,YAAaA,EACbkK,SAAU7rC,KAAKyS,aACf++C,OAAQxxD,KAAKsxD,WACb3xB,QAAS,IAAMA,IACfrc,IAAM2uB,IACJjyC,KAAKiyC,KAAOA,GAEdr2B,UAAWA,GAAa,KACxBC,UAAWA,GAAa,OAEzBwtB,GAAQ4Q,GACP,wBAAQ/pC,UAAY,SAAQ1I,kBAAoBm4B,QAASsa,EAAzD,SACE,cAAC,KAAD,CAAM38C,KAAM+rC,EAAMvV,KAAK,gB,IA9L7Bs9B,E,eAoCkB,CACpBxvB,YAAa,KACbjmB,UAAU,EACV/H,MAAO,GACP5V,MAAO,KACP6tC,SAAU,OACV2lB,OAAQ,OACR7xB,QAAS,OACT8xB,OAAQ,KACRC,SAAU,KACVlnB,OAAO,EACPnB,KAAM,KACN4Q,WAAY,KACZr+B,UAAW,KACXC,UAAW,OAoJA2wB,sBACbC,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACEk4C,QAAS,IAAK9sC,EAAM2nC,YAAYmF,WAElC,CACElpB,qBAPSgY,CAUb4kB,I,2pBC5NF,MAAMO,EAAkBnsD,IACtB,MAAM,GACJgC,EADI,MAEJxJ,EAFI,SAGJ6tC,EAHI,OAIJ2lB,EAJI,QAKJ7xB,EALI,UAMJ/jB,EANI,UAOJC,EAPI,YAQJ8lB,GACEn8B,EAEJ,OACE,cAAC,KAAD,OAAsBA,GAAtB,aACE,cAAC,QAAD,CACEgC,GAAK,SAAQA,EACblK,KAAMkK,EACNpH,KAAK,WACL0oC,SAAUtjC,EAAMi3B,WAChBz+B,MAAOA,GAAS,GAChB2jC,YAAaA,EACbkK,SAAU,EAAGze,YACXye,EAASrkC,EAAqB,KAAjB4lB,EAAOpvB,WAAemH,EAAYioB,EAAOpvB,OAExDwzD,OAAQ,EAAGpkC,YACTokC,EAAOhqD,EAAqB,KAAjB4lB,EAAOpvB,WAAemH,EAAYioB,EAAOpvB,OAEtD2hC,QAAS,IAAMA,IACf/jB,UAAWA,GAAa,KACxBC,UAAWA,GAAa,KACxB+1C,aAAa,YA+BrBD,EAAe1hD,aAAe,CAC5B2xB,YAAa,KACbjmB,UAAU,EACV/H,MAAO,GACP5V,MAAO,KACP6tC,SAAU,OACV2lB,OAAQ,OACR7xB,QAAS,OACT/jB,UAAW,KACXC,UAAW,MAGE4wB,yBAAWklB,I,8LChGnB,SAASE,EAAU1tD,GACxB,MAAsB,iBAARA,GAAoBA,GAAOA,EAAI3B,gBAAgBsvD,SAGxD,MAAMC,EACX90D,QAAQ80D,WACR,SAA0BC,EAAUxL,GAClC,MAAM,OAAExkD,GAAWgwD,EACbC,EAAU,IAAIltD,MAAM/C,GAC1B,IAAIpF,EAAI,EAcR,OAZA,SAASs1D,IACP,OAAO1L,EAASwL,EAASp1D,GAAIA,EAAGo1D,GAAUxvD,KAAMqR,IAC9Co+C,EAAQr1D,GAAKiX,EACbjX,GAAK,EACDA,EAAIoF,EACCkwD,IAGFD,IAIJC,IAGLC,EAAYC,GAAQA,EAC1B,IAAIC,EAAqBF,EACrBG,EAAmBH,EAChB,MACMI,EAAmB3hD,GAAU0hD,EAAiB1hD,G,0oBChBpD,SAAS4hD,EAAT,GAKJ,IAL8B,SAC/Bl/C,EAD+B,OAE/BohC,EAAS,GAFsB,OAG/BnvC,EAAS,MAAM,IAEd,EADEi/B,EACF,SACD,MAAMiuB,EAA2BC,sBAAYhe,EAAQphC,EAASC,UAfhDrP,OAAO,CAAC2P,GAAUoqB,QAAOmI,YACjCnI,EAAMvR,WAAauR,EAAMvR,UAAUoyB,mBACrCjrC,EAAOhN,KAAK,CAACo3B,EAAMvR,UAAW,CAAEuR,QAAOmI,WAGlCvyB,GACN,IAWH,OAAuB,IAAnB4+C,EAAQzwD,OACH/E,QAAQC,UAKV60D,EAAUU,EAAS,EAAE/lC,EAAWimC,MACrC,GAAiB,MAAbjmC,EACF,OAAOzvB,QAAQC,UAIjB,MAAM+0D,EAAU,GACVW,EAAalmC,EAAUoyB,kBACvB+T,EAAgB,IAAInmC,EAAUoyB,mBAGpC8T,EAAW9yD,QAASiU,IAClB,GAAIxO,EAAOwO,EAAM2Y,GAAY,CAE3B,GAAiB,wBAAb3Y,EAAKzV,IAA+B,CACtC2zD,EAAQprD,KAAKkN,GACb,MAAM++C,EAAkB/+C,EAAKvT,QAAL,SACnBgkC,GACAmuB,GAFmB,IAGtBr/C,WACAohC,YAeF,OAbAme,EAAchsD,QAAQisD,QAEtBA,EAAgBhzD,QAASizD,IACvB,IAAIC,EACDD,GAAiBA,EAAcvyD,SAAYuyD,EAE1ClB,EAAUmB,KACZA,EAAuBA,EAAqBvwD,MAAOmR,IAAD,CAChDA,YAGJq+C,EAAQprD,KAAKmsD,KAMjB,IAAIC,EAAkBl/C,EAAKvT,QAAL,SACjBgkC,GACAmuB,GAFiB,IAGpBr/C,WACAohC,YAGEmd,EAAUoB,KACZA,EAAkBA,EAAgBxwD,MAAOmR,IAAD,CAAcA,YAGxDq+C,EAAQprD,KAAKosD,MAejB,OAAOh2D,QAAQ04C,IAAIsc,GAASzvD,KAVV0wD,GACTz1D,OAAOgT,OACZ,GACAyiD,EAAa3vD,IAAI,CAACsQ,EAAQ6mC,KACxB,MAAM,IAAEp8C,GAAQu0D,EAAcnY,GAC9B,OAAOp8C,EAAM,CAAE,CAACA,GAAMuV,GAAW,WASpC,SAASyjC,EAAapQ,GAC3B,OAAOsrB,EAAiBtrB,GAAM1kC,KAAK,KACjC0kC,EAAKj2B,MAAMkC,SAASm6B,iB,wnBC1FjB,MAAM6lB,UAAqBhlD,YAChCzO,YAAY8F,GACVmkC,MAAMnkC,GAENxF,KAAK4Q,MAAQ,CACXwiD,iBAAkBpzD,KAAKq4B,WAAa,KAAO7yB,EAAM8N,UAGnDtT,KAAKqzD,SAAU,EACfrzD,KAAKszD,gBAAkB,EAGzB/nB,oBACEvrC,KAAKqzD,SAAU,EACIrzD,KAAKq4B,YAItBr4B,KAAKuzD,cAAcvzD,KAAKwF,OAI5BsrC,iCAAiCxiC,GAE/B,MAAM,SAAEgF,EAAF,oBAAYkgD,GAAwBxzD,KAAKwF,MAC7B8N,IAAahF,EAAUgF,UAGxBkgD,EAAoBxzD,KAAKwF,MAAO8I,IAC/CtO,KAAKuzD,cAAcjlD,GAIvBmlD,uBACEzzD,KAAKqzD,SAAU,EAGjBh7B,WACE,MAAM,kBAAEq7B,GAAsB1zD,KAAKwF,MACnC,OAAO+sD,EAAgBmB,EAAkBthD,YAAY0sC,kBAClDxnB,OAGLi8B,cAAc,GAAsC,IAAtC,kBAAEG,GAAoC,EAAdC,EAAc,SAClD,MAAM,SAAErgD,EAAF,gBAAY+5B,EAAZ,cAA6BC,GAAkBttC,KAAKwF,MACpDouD,EAAapB,EAAiB,OAC/BmB,GAD8B,IAEjC1iD,MAAOyiD,KAQT,OALA1zD,KAAKoqC,SAAS,CAAEgpB,iBAAkB9/C,IAGlCtT,KAAKszD,iBAAmB,EACxBjmB,IACO,CAAEwmB,GACPD,EAAWpxD,KAAK,KAMZxC,KAAKszD,kBAAoBO,IACR,IAAjB7zD,KAAKqzD,SAELrzD,KAAKoqC,SAAS,CAAEgpB,iBAAkB,OAKpC9lB,MAfG,CAgBDttC,KAAKszD,iBAGb5jD,SACE,MAAM,iBAAE0jD,GAAqBpzD,KAAK4Q,OAC5B,SAAE0C,EAAF,OAAY5D,GAAW1P,KAAKwF,MAElC,OACE,cAAC,QAAD,CACE8N,SAAU8/C,GAAoB9/C,EAC9B5D,OAAQ,IAAMA,EAAO1P,KAAKwF,UAkBlC2tD,EAAaljD,aAAe,CAC1BwnC,QAAS,GACT+b,oBAAmB,KACV,EAET9jD,OAAM,EAAC,OAAEglC,KACAof,uBAAapf,I,ikBChGxB,MAuCMqf,EAAiB,CAACnB,EAAYr/C,KAClC,MAAM,oBAAEygD,EAAsB,IAAOnzD,IAAOD,SAe5C,OAdkB8xD,sBAAYsB,EAAqBzgD,GAEjBrP,OAChC,CAACq5B,EAAKmlB,IAAaA,EAASzkB,MAAMg2B,OAAO12B,GACzCq1B,GAGqC1uD,OAAO,CAAC26B,EAAGxhC,KAC3CwhC,EAAElzB,KAAMsL,GAAOA,EAAG3Y,MAAQjB,EAAEiB,MAC/BugC,EAAEh4B,KAAKxJ,GAEFwhC,GACN,KAqBE,SAASq1B,EACdtB,EACAuB,EACAC,EACAC,EACAtuC,GAEA,OAAQ5X,IACNA,EAAU2wC,kBAlFW,EAAC3wC,EAAWykD,EAAa,KACzC,CACL,CACEt0D,IAAK,sBACLkC,QAAUulB,IACR,MACE9U,OAAO,SAAEkC,GACTG,UAAU,SAAEC,IACVwS,EAIEuuC,EAFkBP,EAAenB,EAAYr/C,GAElBhQ,IAAKwQ,IACpC,MAAM,IAAEzV,GAAQyV,EAChB,IAAKzV,EAAK,OAAOyV,EACjB,MAAM6hC,EAAO7hC,EAAKvT,QAAQulB,GAW1B,OATI8rC,EAAUjc,IACZziC,EAASukB,YAAKp5B,IAEds3C,EACGpzC,KAAMrC,GAASgT,EAASo6B,YAAYjvC,EAAK6B,KACzCsC,MAAO1D,GAAQoU,EAASq6B,YAASlvC,EAAKS,MAChC62C,GACTziC,EAASo6B,YAAYjvC,EAAKs3C,IAE5B,OACK7hC,GADL,IAEEvT,QAASo1C,MAKb,OADAznC,EAAU2wC,kBAAoBwV,EACvBA,KAiDmBC,CAAiBpmD,EAAWykD,GA2B1D,OAAOlmB,kBAzBsB,CAAC97B,EAAO4jD,KACnC,MAAM,SAAEjhD,GAAa3C,EAAMyC,OAAOC,SAC5BmhD,EAAkBV,EAAenB,EAAYr/C,GAC7CmhD,EAAenC,EAAgB3hD,GAC/B+jD,EAAoBF,EAAgBvwD,OAAO,CAAC2P,GAAUvV,SACrDA,EAIL,OACKuV,GADL,IAEE,CAACvV,GAAMo2D,EAAa5V,kBAAkBxgD,KAL/BuV,EAOR,IAEH,MAA+B,mBAApBsgD,EACFQ,EAGT,OACKR,EH7FuBvjD,IAAUyhD,EAAmBzhD,GG6FpCgkD,CAAkBF,GAAeF,IACjDG,IAMLP,EACAC,EACAtuC,EAJK2mB,CAKLv+B,IAIC,MAAM0mD,EAAoBnoB,kBAAQ,KAAM,CAC7CW,oBACAC,mBAF+BZ,CAG9B/2B,qBDrBoC,IAAgC,IAA/B,QAAEoqB,GAA6B,EAAjB4zB,EAAiB,SACrE,MAAMrH,EAAUvsB,GAAW+0B,oBAE3B,GAAe,MAAXxI,EACF,MAAM,IAAI39C,MAAM,oCAGlB,OACE,cAAC29C,EAAQC,SAAT,UACG,EAAGt7C,MAAOyiD,KACT,cAAC,EAAD,GAAcA,kBAAmBA,GAAuBC,U,cEhIhEh3D,EAAOD,QAAUyC,QAAQ,2B,cCKzBxC,EAAOD,QAAU,CACfwa,GAAI,UACJH,GAAI,UACJ4C,GAAI,aACJK,GAAI,SACJzB,GAAI,MACJwB,GAAI,YACJg7C,MAAO,qBACP39C,GAAI,UACJkB,GAAI,UACJhB,GAAI,Y,cCfN3a,EAAOD,QAAUyC,QAAQ,iB,cCAzBxC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,yV,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,4vB,cCAjIC,EAAOD,QAAUyC,QAAQ,mB,6BCAzB,oSAkBA,MAAMC,EAAYC,IAAS,CAAD,8JAAC,IACzB,yCADwB,qMAKbsxC,EAAc,CACzBqkB,cAAeC,IACfC,aAAcC,IACdC,aAAcC,IACdC,aAAcC,IACdC,mBAAoBC,IACpBC,WAAYC,KAIDjlB,EAAoB,CAC/B,YAAaklB,IACb1gD,KAAM2gD,IACNC,MAAOC,IACPC,MAAO52D,GAIIqxC,EAAcwkB,IAEd3jB,EAAa,CACxB,IAAO2kB,IACP,IAAOC,IACP,IAAOC,IACP,IAAOC,IACPC,aAAcC,IACd/kB,UAAWglB,M,qrBCrCb,MAAMC,EAAqB,EAAGzpD,aAC5B,eAAC,IAAM0zB,SAAP,WACG1zB,EAAQ9D,OAAS,oBAAIiH,UAAU,uBAAd,SAAsCnD,EAAQ9D,QAC/D8D,EAAQ60B,aACP,mBAAG1xB,UAAU,sBAAb,SAAoCnD,EAAQ60B,cAE7C70B,EAAQw/B,OACP,cAAC,QAAD,CACEr8B,UAAU,iBACV88C,IAAKjgD,EAAQw/B,MAAM0gB,OAAOC,MAAMC,SAChCC,QAAQ,UAGXrgD,EAAQ3K,MACP,qBACE4K,wBAAyB,CACvBC,OAAQixB,YAAoBnxB,EAAQ3K,KAAKjC,YAwFpCf,UA3EIoG,IACjB,MAAM,QAAEuH,GAAYvH,EAEpB,OACE,qBAAKgC,GAAG,gBAAgB0I,UAAU,sCAAlC,SACE,eAAC,OAAD,WACE,cAAC,OAAKumD,OAAN,CAAa56B,MAAO,EAAG3rB,UAAU,gBAAjC,SACGgyB,YAAcn1B,GACb,cAAC,IAAD,KAAkBvH,IAElB,cAACgxD,EAAD,KAAwBhxD,MAG5B,cAAC,OAAKixD,OAAN,CAAa56B,MAAO,EAAG3rB,UAAU,gBAAjC,SACE,cAAC,IAAD,CAAcnD,QAASA,MAEzB,cAAC,OAAK0pD,OAAN,CAAa56B,MAAO,GAAI7rB,KAAK,SAA7B,SACGkyB,YAAcn1B,GACb,qCACE,cAAC,IAAD,OACMvH,GADN,IAEEuH,QAAO,OACFA,GADE,IAEL2pD,cAAe,CACb5iD,MAAOtO,EAAMuH,QAAQ2pD,cAAc5iD,MAAM5I,MAAM,EAAG,SAIxD,cAAC,IAAD,CAAc6B,QAASA,EAAS4pD,WAAW,QAC3C,cAAC,IAAD,OACMnxD,GADN,IAEEuH,QAAO,OACFA,GADE,IAEL2pD,cAAe,CACb5iD,MAAOtO,EAAMuH,QAAQ2pD,cAAc5iD,MAAM5I,MAAM,YAMvD,cAACsrD,EAAD,KAAwBhxD,a,+RC9E7B,MAAMoxD,EAAO,CAClBC,GAAIC,QAAMD,GACVE,GAAID,QAAMC,GACVC,GAAIF,QAAME,GACVC,GAAIH,QAAMG,GACVC,GAAIJ,QAAMI,GACVC,GAAIL,QAAMK,GACVC,GAAIN,QAAMM,IAGCC,EAAc,CAACT,EAAKC,GAAID,EAAKG,GAAIH,EAAKI,GAAIJ,EAAKK,GAAIL,EAAKM,IACxDI,EAAoB,CAACV,EAAKC,GAAID,EAAKM,IAEnCK,EAAa,CACxBC,MAAO,QACPC,aAAc,eACdC,SAAU,WACVC,OAAQ,SACRC,QAAS,UACTC,OAAQ,UAGGC,EAAU,CACrBC,WAAY,CACV,CAACR,EAAWC,OAAQ,CAAEQ,MAAOlB,QAAMU,MAAOS,UAAU,GACpD,CAACV,EAAWE,cAAe,CAAEO,MAAOlB,QAAMa,QAC1C,CAACJ,EAAWG,UAAW,CAAEM,MAAOlB,QAAMa,QACtC,CAACJ,EAAWI,QAAS,CAAEK,MAAOlB,QAAMa,OAAQM,UAAU,EAAMC,OAAO,GACnE,CAACX,EAAWK,SAAU,CACpBI,MAAOlB,QAAMc,QACbK,UAAU,EACVE,SAAS,GAEX,CAACZ,EAAWM,QAAS,CAAEG,MAAOlB,QAAMe,OAAQI,UAAU,EAAMG,QAAQ,KAI3D3T,EAAetV,GACnBA,EAAKsV,cAAcr6C,MAAM,KAAK,GAG1BiuD,EAAY,CAAC9zB,EAAMwB,EAAQz0B,KACtCy0B,EAAOlQ,OAAOvkB,GAEd,MAAMkK,EAAWC,yBAAe,CAC9B68C,MAAO,CAAF,yCACLC,MAAO,CAAF,yCACLC,IAAK,CAAF,qCACH9U,KAAM,CAAF,uCACJ+U,MAAO,CAAF,yCACL,2EAIAxU,KAAM,CAAF,uCACJS,MAAO,CAAF,yCACLC,QAAS,CAAF,6CAIP+T,SAAU,CAAF,+CAIRC,QAAS,CAAF,6CAIP/pB,IAAK,CAAF,qCACHgqB,KAAM,CAAF,uCACJC,GAAI,CAAF,mCACFC,KAAM,CAAF,uCACJC,MAAO,CAAF,yCACLpqB,MAAO,CAAF,yCAILqqB,OAAQ,CAAF,2CAINjqC,GAAI,CAAF,mCACF2f,KAAM,CAAF,uCACJuqB,MAAO,CAAF,yCACL,qDAIAC,IAAK,CAAF,qCACHC,IAAK,CAAF,qCACHC,GAAI,CAAF,mCACFC,GAAI,CAAF,mCACFC,KAAM,CAAF,uCACJC,GAAI,CAAF,mCACFC,GAAI,CAAF,mCACFC,GAAI,CAAF,mCACF5+C,GAAI,CAAF,mCACF6+C,WAAY,CAAF,gEAMZ,IAAIC,EAAU,GACdl8D,OAAO+D,KAAKga,GAAUjY,IACnBq2D,GAAOD,EAAQC,GAAKr1B,EAAK5jB,cAAcnF,EAASo+C,KAGnD,IAAIF,EAAaC,EAAQD,WACtBj1D,QAAQ,IAAI04B,OAAO,MAAO,KAAM,MAChC14B,QAAQ,IAAI04B,OAAO,MAAO,KAAM,KAanC,MANiB,CACf08B,SAAU9zB,EAAO2yB,WACjBoB,WAAY/zB,EAAOizB,SACnBW,QAASA,EACTI,cAToB,CAACrrB,EAAMC,EAAOC,IAClC8qB,EACGj1D,QAAQ,cAAeiqC,GACvBjqC,QAAQ,eAAgBkqC,GACxBlqC,QAAQ,aAAcmqC,K,WCzG7B,MAAMorB,EAAgB,EAAGngC,QAAOogC,aAAYj8D,QAAO6tC,cAE/C,cAAC,OAAKquB,MAAN,CAAYC,QAAM,EAACjqD,UAAU,OAA7B,SACE,cAAC,OAAD,UACE,eAAC,OAAKkqD,IAAN,CAAUC,WAAS,EAAnB,UACE,cAAC,OAAK5D,OAAN,CAAa56B,MAAM,IAAnB,SACE,qBAAK3rB,UAAU,UAAf,SACE,uBAAOoqD,QAAQ,WAAf,SAA2BzgC,QAG/B,cAAC,OAAK48B,OAAN,CAAa56B,MAAM,IAAnB,SACE,eAAC,OAAKq+B,MAAN,CAAYC,QAAM,EAAlB,UACE,cAAC,QAAD,CACE3yD,GAAG,WACHlK,KAAK,WACLU,MAAOA,GAAS,GAChB6tC,SAAU,EAAGze,aACXye,EACEze,EAAO5lB,GACU,KAAjB4lB,EAAOpvB,WAAemH,EAAYo1D,SAASntC,EAAOpvB,WAIvDi8D,GAAc,+BAAOA,gBA0BpCD,EAAc/pD,aAAe,CAC3B4pB,MAAO,KACPogC,WAAY,KACZpuB,SAAU,MAGGmuB,QCpDf,MAAMQ,EAAa,EAAG3gC,QAAO77B,QAAO6tC,WAAU9F,OAAQ00B,MACpD,MAAMnpD,EAAO4lB,sBAAatmB,GAAUA,EAAM2zB,KAAK1O,QACzCkQ,EAAS00B,EAAU31B,QACzBiB,EAAOlQ,OAAOvkB,GAed,OACE,cAAC,OAAK4oD,MAAN,CAAYC,QAAM,EAACjqD,UAAU,OAA7B,SACE,cAAC,OAAD,UACE,eAAC,OAAKkqD,IAAN,CAAUC,WAAS,EAAnB,UACE,cAAC,OAAK5D,OAAN,CAAa56B,MAAM,IAAnB,SACE,qBAAK3rB,UAAU,UAAf,SACE,uBAAOoqD,QAAQ,QAAf,SAAwBzgC,QAG5B,cAAC,OAAK48B,OAAN,CAAa56B,MAAM,IAAnB,SACE,cAAC,SAAOnB,MAAR,CAAc0O,OAAK,EAACl5B,UAAU,cAA9B,SACGzS,OAAO+D,KAAKo1D,GAAMrzD,IAAKlG,GACtB,cAAC,SAAD,CAEE6wC,QAAQlwC,aAAA,EAAAA,EAAOkI,QAAQ0wD,EAAKv5D,MAAO,EACnC+C,KAAK,SACL2M,QAASg5B,EAAO20B,cAAc9D,EAAKv5D,GAAGs7D,QAAU,GAChDh5B,QAAS,KA9BFg7B,IACjB/rB,EACAgsB,EAEAh+D,EAHAgyC,EAAMgoB,EA8BoBv5D,GA7B1Bu9D,EAAY58D,EAAQ,IAAIA,GAAS,IAEjCpB,EAAIg+D,EAAU10D,QAAQ0oC,KACjB,EACPgsB,EAAUlwD,OAAO9N,EAAG,GAEpBg+D,EAAU/zD,KAAK+nC,GAEjB/C,EAAS,YAAa+uB,KAgBHv9D,gBAiCvBm9D,EAAWvqD,aAAe,CACxB4pB,MAAO,KACP77B,MAAO,KACP6tC,SAAU,MAGG1T,kBAAe,CAAC,UAAhBA,CAA2BqiC,G,SC5E1C,MAAMh/C,EAAWC,yBAAe,CAC9Bo/C,eAAgB,CAAF,4CACdC,oBAAqB,CAAF,mDACnBC,oBAAqB,CAAF,6CACnBC,YAAa,CAAF,kDAOPC,EAAW,EAAGj9D,QAAOk9D,QAAO3C,QAAO1sB,WAAUtH,UAE/C,cAAC,OAAK21B,MAAN,CAAYC,QAAM,EAACjqD,UAAU,OAA7B,SACE,cAAC,OAAD,UACE,eAAC,OAAKkqD,IAAN,CAAUC,WAAS,EAAnB,UACE,cAAC,OAAK5D,OAAN,CAAa56B,MAAM,IAAnB,SACE,qBAAK3rB,UAAU,UAAf,SACE,uBAAOoqD,QAAQ,iBAAf,SACG/1B,EAAK5jB,cAAcnF,EAASq/C,sBAInC,eAAC,OAAKpE,OAAN,CAAa56B,MAAM,IAAnB,UACE,eAAC,OAAKnB,MAAN,CAAYy/B,QAAM,EAAlB,UACE,cAAC,OAAKD,MAAN,UACE,cAAC,QAAD,CACErgC,MAAM,GACNv8B,KAAK,iBACLkK,GAAG,sBACHxJ,MAAM,QACNm9D,QAAmB,UAAVn9D,EACT6tC,SAAU,CAAC7uC,GAAKgB,WAAY6tC,EAAS,iBAAkB7tC,OAG3D,cAAC,OAAKk8D,MAAN,CAAYpxB,SAAoB,UAAV9qC,EAAtB,SACGumC,EAAK5jB,cAAcnF,EAASs/C,uBAE/B,cAAC,OAAKZ,MAAN,CAAYpxB,SAAoB,UAAV9qC,EAAtB,SACE,cAAC,QAAD,CACEwJ,GAAG,QACHlK,KAAK,QACLU,MAAOk9D,GAAS,GAChBrvB,SAAU,EAAGze,aACXye,EACEze,EAAO5lB,GACU,KAAjB4lB,EAAOpvB,WAAemH,EAAYioB,EAAOpvB,YAKjD,cAAC,OAAKk8D,MAAN,CAAYpxB,SAAoB,UAAV9qC,EAAtB,SACGumC,EAAK5jB,cAAcnF,EAASw/C,kBAGjC,eAAC,OAAKtgC,MAAN,CAAYy/B,QAAM,EAAlB,UACE,cAAC,OAAKD,MAAN,UACE,cAAC,QAAD,CACE1yD,GAAG,sBACHqyB,MAAM,GACNv8B,KAAK,iBACLU,MAAM,QACNm9D,QAAmB,UAAVn9D,EACT6tC,SAAU,CAAC7uC,GAAKgB,WAAY6tC,EAAS,iBAAkB7tC,OAI3D,cAAC,OAAKk8D,MAAN,CAAYpxB,SAAoB,UAAV9qC,EAAtB,SACE,cAACsB,EAAA,QAAD,CACEkI,GAAG,QACHyB,MAAOs7B,EAAK5jB,cAAcnF,EAASu/C,qBACnChW,UAAU,EACV/mD,MAAOu6D,GAAS,GAChBvT,YAAY,EACZnZ,SAAU,CAACrkC,EAAIxJ,KACb6tC,EAASrkC,EAAc,KAAVxJ,OAAemH,EAAYnH,qBA6B5Di9D,EAAShrD,aAAe,CACtBjS,MAAO,KACPk9D,MAAO,KACP3C,MAAO,KACP1sB,SAAU,MAGGY,2BAAWwuB,GChH1B,MAAMz/C,EAAWC,yBAAe,CAC9B2/C,WAAY,CAAF,qCACVC,WAAY,CAAF,mDAONC,EAAkB,EACtBt9D,QACA8qC,WACA+C,WACA0vB,iBACAh3B,UAGE,qCACE,cAAC,OAAK21B,MAAN,CAAYC,QAAM,EAACrxB,SAAUA,EAA7B,SACGvE,EAAK5jB,cAAcnF,EAAS4/C,cAE/B,cAAC,OAAKlB,MAAN,CAAYC,QAAM,EAACrxB,SAAUA,EAA7B,SACE,cAAC,QAAD,CACE1oC,KAAK,SACLoH,GAAG,aACHlK,KAAK,aACLU,MAAOA,GAAS,GAChB6tC,SAAU,EAAGze,aACXye,EACEze,EAAO5lB,GACU,KAAjB4lB,EAAOpvB,WAAemH,EAAY,CAACo1D,SAASntC,EAAOpvB,eAKzDu9D,GACA,cAAC,OAAKrB,MAAN,CAAYC,QAAM,EAACrxB,SAAUA,EAA7B,SACGvE,EAAK5jB,cAAcnF,EAAS6/C,iBAwBvCC,EAAgBrrD,aAAe,CAC7B64B,UAAU,EACV9qC,MAAO,KACP6tC,SAAU,KACV0vB,gBAAgB,GAGH9uB,2BAAW6uB,G,gmBC1D1B,MAAME,GAAc,EAAGl+D,OAAMwrC,WAAU/iB,UAAS/nB,QAAO6tC,eACrD,MAAM4vB,EAAqB,GAAH,MACnBzgC,MADmB,IAEtBC,QAAS,CAACC,EAAQtqB,IAAT,SACJoqB,KAAmBC,QAAQC,EAAQtqB,IAD/B,IAEP8qD,SAAU,YAGRC,EAAkB,CAACpY,EAASvlD,KAChC,MAAM49D,EAAU,IAAKrY,EAAU/lD,GAAMA,EAAEQ,QAAUA,GACjD,OAAO49D,GAAoB,IAG7B,OACE,cAAC,IAAD,CACEn/B,WAAYqM,EACZthC,GAAIlK,EACJA,KAAMA,EACN4S,UAAU,yBACVk/C,gBAAgB,eAChBzU,aAAcghB,EAAgB51C,EAAS/nB,GACvCA,MAAO29D,EAAgB51C,EAAS/nB,GAChC+nB,QAASA,EACTmV,OAAQugC,EACR9gC,MAAOF,KACPhO,WAAY,CACVyN,uBACAN,aAEFiS,SAAW1rC,GAAS0rC,EAASvuC,EAAM6C,EAAKnC,UAuB9Cw9D,GAAYvrD,aAAe,CACzB3S,KAAM,SACNyoB,QAAS,GACT+iB,UAAU,EACV9qC,MAAO,KACP6tC,SAAU,MAGG2vB,U,qkBC9Df,MAAMhgD,GAAWC,yBAAe,CAC9BogD,iBAAkB,CAAF,8CAEhBC,MAAO,CAAF,mCACL3X,OAAQ,CAAF,qCACN4X,MAAO,CAAF,mCACLC,OAAQ,CAAF,qCACN1C,KAAM,CAAF,mCAGA2C,GAAkB,CACtB,EAAK,QACL,EAAK,SACL,EAAK,QACL,EAAK,SACL,KAAM,QAGR,MAAMC,WAAoC/tD,YAuBxCuB,SACE,MAAM,KAAE60B,EAAF,SAAQuE,GAAa9oC,KAAKwF,MAC1B22D,EAA6B,IAC9B,IAAI1+D,OAAO+D,KAAKy6D,IAAmB9/B,IAAD,CACnCn+B,MAAOu8D,SAASp+B,GAChBtC,MAAO0K,EAAK5jB,cAAcnF,GAASygD,GAAgB9/B,SAGvD,OACE,qCACE,cAAC,OAAK+9B,MAAN,CAAYpxB,SAAUA,EAAtB,SACGvE,EAAK5jB,cAAcnF,GAASqgD,oBAG/B,cAAC,OAAK3B,MAAN,CAAYpxB,SAAUA,EAAtB,SACE,cAAC,GAAD,IACExrC,KAAK,yBACLyoB,QAASo2C,GACLn8D,KAAKwF,c,IAzCf02D,G,eAiBkB,CACpBpzB,UAAU,EACV9qC,MAAO,KACP6tC,SAAU,OA6BCY,4BAAWyvB,I,qkBCzCX/jC,mBAAe,CAAC,UAAhBA,CAzBiB3yB,IAC9B,MAAM,SAAEsjC,GAAW,EAAO/C,OAAQ00B,GAAcj1D,EAC1C8L,EAAO4lB,sBAAatmB,GAAUA,EAAM2zB,KAAK1O,QAEzCkQ,EAAS00B,EAAU31B,QACzBiB,EAAOlQ,OAAOvkB,GAEd,MAAM8qD,EAAwB,IACzB,IAAI3+D,OAAO+D,KAAKo1D,GAAQv5D,IAAD,CACxBW,MAAO44D,EAAKv5D,GAAGs7D,QACf9+B,MAAOkM,EAAO2yB,SAAS9B,EAAKv5D,GAAGs7D,QAAU,OAI7C,OACE,cAAC,OAAKuB,MAAN,CAAYpxB,SAAUA,EAAtB,SACE,cAAC,GAAD,IACExrC,KAAK,oBACLyoB,QAASq2C,GACL52D,QCpBZ,MAAM62D,GAAe,EACnBxiC,QACA77B,QACAs+D,aACAC,yBACAC,oBACA3wB,WACAtH,UAGE,cAAC,OAAK21B,MAAN,CAAYC,QAAM,EAACjqD,UAAU,OAA7B,SACE,cAAC,OAAD,UACE,eAAC,OAAKkqD,IAAN,CAAUC,WAAS,EAAnB,UACE,cAAC,OAAK5D,OAAN,CAAa56B,MAAM,IAAnB,SACE,qBAAK3rB,UAAU,UAAf,SACE,uBAAOoqD,QAAQ,UAAf,SAA0BzgC,QAG9B,eAAC,OAAK48B,OAAN,CAAa56B,MAAM,IAAnB,UACE,eAAC,OAAKnB,MAAN,CAAYy/B,QAAM,EAAlB,UACE,cAAC,OAAKD,MAAN,UACE,cAAC,QAAD,CACErgC,MAAM,GACNv8B,KAAK,UACLkK,GAAG,qBACHxJ,MAAM,aACNm9D,QAAmB,eAAVn9D,EACT6tC,SAAU,CAAC7uC,GAAKgB,WAAY6tC,EAAS,UAAW7tC,OAGpD,cAAC,EAAD,CACEA,MAAOs+D,EACPxzB,SAAoB,eAAV9qC,EACV6tC,SAAUA,OAGd,eAAC,OAAKnR,MAAN,CAAYy/B,QAAM,EAAlB,UACE,cAAC,OAAKD,MAAN,UACE,cAAC,QAAD,CACErgC,MAAM,GACNv8B,KAAK,UACLkK,GAAG,oBACHxJ,MAAM,YACNm9D,QAAmB,cAAVn9D,EACT6tC,SAAU,CAAC7uC,GAAKgB,WAAY6tC,EAAS,UAAW7tC,OAIpD,cAAC,GAAD,CACE8qC,SAAoB,cAAV9qC,EACVA,MAAOu+D,EACP1wB,SAAUA,IAGZ,cAAC,GAAD,CACE/C,SAAoB,cAAV9qC,EACVA,MAAOw+D,EACP3wB,SAAUA,iBA6B1BwwB,GAAapsD,aAAe,CAC1B4pB,MAAO,KACP77B,MAAO,KACPs+D,WAAY,KACZC,uBAAwB,KACxBC,kBAAmB,KACnB3wB,SAAU,MAGGY,4BAAW4vB,IC/F1B,MAAMI,GAAsB,EAC1Bz+D,QACA8qC,WACAqxB,SACAtuB,WACA9F,OAAQ00B,MAER,MAAM10B,EAAS00B,EAAU31B,QACnBxzB,EAAO4lB,sBAAatmB,GAAUA,EAAM2zB,KAAK1O,QAC/CkQ,EAAOlQ,OAAOvkB,GACd,MAAMorD,EAAY,IACb,IAAI32B,EAAOizB,SAAU,CAAC77D,EAAGP,KAAJ,CACtBoB,MAAOpB,EAAI,EACXi9B,MAAO18B,MAIX,OACE,cAAC,OAAK+8D,MAAN,CAAYC,OAAQA,EAAQrxB,SAAUA,EAAtC,SACE,cAAC,GAAD,CACExrC,KAAK,iBACLwrC,SAAUA,EACV/iB,QAAS22C,EACT1+D,MAAOA,EACP6tC,SAAUA,OAuBlB4wB,GAAoBxsD,aAAe,CACjCjS,MAAO,KACP8qC,UAAU,EACVqxB,QAAQ,EACRtuB,SAAU,MAGG1T,mBAAe,CAAC,UAAhBA,CAA2BskC,IC1D1C,MAAMjhD,GAAWC,yBAAe,CAC9B4/C,WAAY,CAAF,mDAONsB,GAAc,EAClB9iC,QACA77B,QACAs+D,aACAM,iBACAL,yBACAC,oBACA3wB,WACAtH,UAGE,cAAC,OAAK21B,MAAN,CAAYC,QAAM,EAACjqD,UAAU,oBAA7B,SACE,cAAC,OAAD,UACE,eAAC,OAAKkqD,IAAN,CAAUC,WAAS,EAAnB,UACE,cAAC,OAAK5D,OAAN,CAAa56B,MAAM,IAAnB,SACE,qBAAK3rB,UAAU,UAAf,SACE,uBAAOoqD,QAAQ,SAAf,SAAyBzgC,QAG7B,eAAC,OAAK48B,OAAN,CAAa56B,MAAM,IAAnB,UACE,eAAC,OAAKnB,MAAN,CAAYy/B,QAAM,EAACjqD,UAAU,oBAA7B,UACE,cAAC,OAAKgqD,MAAN,UACE,cAAC,QAAD,CACErgC,MAAM,GACNv8B,KAAK,SACLU,MAAM,aACNwJ,GAAG,oBACH2zD,QAAmB,eAAVn9D,EACT6tC,SAAU,CAAC7uC,GAAKgB,WAAY6tC,EAAS,SAAU7tC,OAInD,cAAC,EAAD,CACEA,MAAOs+D,EACPxzB,SAAoB,eAAV9qC,EACV6tC,SAAUA,EACV0vB,gBAAgB,IAGlB,cAAC,GAAD,CACEv9D,MAAO4+D,EACP9zB,SAAoB,eAAV9qC,EACV6tC,SAAUA,OAGd,eAAC,OAAKnR,MAAN,CAAYy/B,QAAM,EAACjqD,UAAU,eAA7B,UACE,cAAC,OAAKgqD,MAAN,UACE,cAAC,QAAD,CACErgC,MAAM,GACNv8B,KAAK,SACLkK,GAAG,eACHxJ,MAAM,QACNm9D,QAAmB,UAAVn9D,EACT6tC,SAAU,CAAC7uC,GAAKgB,WAAY6tC,EAAS,SAAU7tC,OAInD,cAAC,GAAD,CACE8qC,SAAoB,UAAV9qC,EACVA,MAAOu+D,EACP1wB,SAAUA,IAGZ,cAAC,GAAD,CACE/C,SAAoB,UAAV9qC,EACVA,MAAOw+D,EACP3wB,SAAUA,IAGZ,cAAC,OAAKquB,MAAN,CAAYpxB,SAAoB,UAAV9qC,EAAtB,SACGumC,EAAK5jB,cAAcnF,GAAS6/C,cAG/B,cAAC,GAAD,CACEr9D,MAAO4+D,EACP9zB,SAAoB,UAAV9qC,EACV6tC,SAAUA,EACVsuB,QAAQ,iBA8BxBwC,GAAY1sD,aAAe,CACzB4pB,MAAO,KACP77B,MAAO,KACPs+D,WAAY,KACZM,eAAgB,KAChBL,uBAAwB,KACxBC,kBAAmB,KACnB3wB,SAAU,MAGGY,4BAAWkwB,I,qBCzH1B,MAAMnhD,GAAWC,yBAAe,CAC9BohD,eAAgB,CAAF,qDAIdC,oBAAqB,CAAF,uEAInBC,gBAAiB,CAAF,uDAIfC,YAAa,CAAF,qCAIXC,cAAe,CAAF,2DAIbC,QAAS,CAAF,qEAIPC,QAAS,CAAF,uEAMHjuB,GAAa,CAAC7xC,EAAG0oC,KACrB,MAAM5oC,EAAI4oC,EAAO1oC,GACjB,OAAOF,EAAE2oC,OAAO,QAAU,KAAO3oC,EAAE2oC,OAAO,OAyI/Bs3B,GAAajlC,YAAe,CAAC,UAAhBA,CAjIN,EAClBklC,WACAH,UACAI,cACA/4B,OACAg5B,YACAC,iBACAz3B,OAAQ00B,MAER,MAAM10B,EAAS00B,EAAU31B,QACnBxzB,EAAO4lB,sBAAatmB,GAAUA,EAAM2zB,KAAK1O,QAC/CkQ,EAAOlQ,OAAOvkB,GACd,IAAIqkC,EAAM,GACV,MAYM8nB,EAAgBtuB,IACpB,IAAIuuB,EAAUjZ,EAAYtV,GACtBwuB,GAAa,EAOjB,OANAN,EAASO,SAAS99D,QAASzC,IAChBonD,EAAYpnD,KACVqgE,IACTC,GAAa,KAGVA,GAGLN,IACF1nB,EAAM0nB,EAAS1nB,MAEf0nB,EAASQ,UAAU/9D,QAASqvC,IACtBwG,EAAIzvC,QAAQipC,GAAQ,GACtBwG,EAAI9uC,KAAKsoC,KAGbwG,EAAI1mB,KAAK,CAAC4P,EAAGxJ,IACJwJ,EAAIxJ,EAAI,GAAK,IAIxB,MAAMyoC,EAASnoB,EAAIjrC,OAAO,KAE1B,OACE,sBAAKwF,UAAU,aAAf,UACkB,IAAfylC,EAAI3zC,QAAgB,mCAAGuiC,EAAK5jB,cAAcnF,GAASyhD,iBACnDM,GACC,cAAC,SAAD,CAAQvrD,GAAG,KAAX,SAAiBuyB,EAAK5jB,cAAcnF,GAASqhD,kBAG/C,eAAC,OAAD,CAAMkB,SAAO,EAACC,cAAc,SAA5B,UACGroB,EAAIpyC,IAAI,CAAC4rC,EAAMtjC,KACd,MAAMoyD,EAhDM9uB,KAClB,IAAIuuB,EAAUjZ,EAAYtV,GACtB8uB,GAAW,EAOf,OANAZ,EAASQ,UAAU/9D,QAASo+D,IACdzZ,EAAYyZ,KACVR,IACZO,GAAW,KAGRA,GAuCgBE,CAAWhvB,GAC5B,OACE,eAAC,OAAKmX,KAAN,WACGkX,GACC,cAAC,OAAKY,QAAN,CAAchR,QAAQ,QAAtB,SACGvhD,EAAQ,EACP,sCACIoyD,GACA,cAAC,SAAD,CACE70B,OAAK,EACLC,MAAI,EACJn5B,UAAU,iBACVyvB,QAAS,KACPu9B,EAAQ/tB,IAEVh9B,aAAYoyB,EAAK5jB,cAAcnF,GAAS0hD,SAP1C,SASE,cAAC,KAAD,CAAM5/D,KAAM+gE,IAAUvqC,KAAK,WAG9BmqC,GACC,cAAC,SAAD,CACE70B,OAAK,EACLC,MAAI,EACJn5B,UAAU,iBACVyvB,QAAS,KACP29B,EAAYnuB,IAEdh9B,aAAYoyB,EAAK5jB,cAAcnF,GAAS2hD,SAP1C,SASE,cAAC,KAAD,CAAM7/D,KAAMghE,KAAQxqC,KAAK,cAK/ByQ,EAAK5jB,cAAcnF,GAASshD,uBAIlC,eAAC,OAAKsB,QAAN,CAAcluD,UAAW24B,IAAG,CAAEo1B,SAAUA,IAAxC,UACG/uB,GAAWC,EAAMpJ,GACjB03B,EAAatuB,IACZ,cAAC,QAAD,CACEovB,SAAS,OACTzqC,KAAK,QACLmG,MAAOgkC,EAAW,OAAS,QAH7B,SAKG15B,EAAK5jB,cAAcnF,GAASuhD,wBA7CrB5tB,EAAK1iC,cAoDxBqxD,EAAO97D,OAAS,GACf,cAAC,OAAKskD,KAAN,UACE,cAAC,OAAK8X,QAAN,UACI,OAAM75B,EAAK5jB,cAAcnF,GAASwhD,gBAClCc,EAAO97D,qBAiBvBo7D,GAAWtR,UAAY,CACrBuR,SAAUmB,IAAUC,IACpBlB,UAAWiB,IAAUpS,KACrBoR,eAAgBgB,IAAUpS,MAQ5BgR,GAAWntD,aAAe,CACxBotD,SAAU,KACVE,WAAW,EACXC,gBAAgB,GAGH/wB,4BAAW2wB,I,qkBCpK1B,MAAM5hD,GAAWC,yBAAe,CAC9BijD,eAAgB,CAAF,uDAIdziD,KAAM,CAAF,4CAIJzI,OAAQ,CAAF,gDAINmrD,OAAQ,CAAF,qCAINC,MAAO,CAAF,mCAILC,aAAc,CAAF,2DAKZnG,SAAU,CAAF,uCAIRoG,OAAQ,CAAF,qCAINC,QAAS,CAAF,uCAIPC,OAAQ,CAAF,qCAKNC,YAAa,CAAF,iDAIXC,SAAU,CAAF,2CAKRC,eAAgB,CAAF,2CAIdC,gBAAiB,CAAF,+CAIfC,iBAAkB,CAAF,iDAIhBC,gBAAiB,CAAF,+CAIfC,SAAU,CAAF,yCAIRC,iCAAkC,CAAF,+FAM5BC,GAAiB,CACrB,iBACA,UACA,yBACA,oBACA,SACA,iBACA,SACA,WACA,WACA,cACA,UACA,UAOF,MAAMlgE,WAAyB4O,YAmC7BzO,YAAY8F,EAAO++B,GACjBoF,MAAMnkC,GADiB,0BA0DR,KACfxF,KAAK0/D,0BA3DkB,iCA8DD,KAAM,MAC5B,MAAM7rC,EAAK,UAAG7zB,KAAKwF,MAAMkb,gBAAd,aAAG,EAAqBmT,MAEnC,IAAI8rC,EAAS3/D,KAAK4/D,WAAW/rC,GAAOgsC,QAAQ,OAAO5wB,SAEnDjvC,KAAKoqC,SAAU5I,IACb,IAAI67B,EAAW77B,EAAU67B,SACzB,MAAMyC,EAAa9/D,KAAK+/D,cAAc1C,GAGtC,OADAA,EAAWr9D,KAAKggE,eAAe3C,EAAUyC,EAAY,UAAWH,GAChE,SACKn+B,GADL,IAEE67B,WACAyC,mBA3EmB,sBAgFX3wB,GACLA,EAAK/I,MAAM,kBACdpmC,KAAK+lC,OAAOoJ,GAAM2V,MAClB9kD,KAAK+lC,OAAUoJ,EAAF,KAAW2V,OAnFL,gBAsFjBmb,GAAW,KACjBjgE,KAAKoqC,SAAS,CAAE61B,SAAQ9yB,MAAM,IAC9BntC,KAAK0+D,mBAxFkB,iBA0FjB,IAAM1+D,KAAKoqC,SAAS,CAAE+C,MAAM,KA1FX,mBA4Ff,CAAC7sB,EAAQo4C,KACjB,IAAIwH,EAAO3I,EAAWC,MAWtB,OAVA/5D,OAAO6/C,QAAQwa,EAAQC,YAAYj4D,QAAQ,EAAEqjD,EAAG3lD,MAC1CA,EAAEw6D,QAAU13C,IACd4/C,EAAO/c,KAGP+c,IAAS3I,EAAWI,QAAUe,GAC5B,IAAQA,EAASzpC,OAAQooC,EAAY9zD,IAAK48D,GAAMA,EAAExH,SAAS1pC,UAC7DixC,EAAO3I,EAAWG,UAGfwI,IAxGgB,sBA2GX5/C,IACZ,IAAIsuB,EAAM,KACV,MAAMpwC,GAAgB,IAAZ8hB,EAAgB,EAAIA,EAM9B,OALA7iB,OAAO+D,KAAKo1D,GAAM92D,QAASzC,IACrBu5D,EAAKv5D,GAAGs7D,UAAYn6D,IACtBowC,EAAMgoB,EAAKv5D,MAGRuxC,IAnHgB,yBAyHRyuB,IAAa,MAE5B,IAAIyC,EAAa,CACfI,KAAM3I,EAAWC,MACjBS,SAAU,GAGZ6H,EAAa9/D,KAAKogE,YAChBN,EACA,iBACA,UAAA9/D,KAAKwF,MAAMkb,gBAAX,SAAqBhf,IAAM,QAAU,SAGvC,MAAMs2D,EAAQqF,EAASgD,SAAS,GAEhC,GAAIrI,EAAO,CACT,IAAIkI,EAAOlgE,KAAKsgE,QAAQtI,EAAMjyC,QAAQm6C,KAAMlI,EAAMjyC,QAAQ60C,WAG1Dn9D,OAAO6/C,QAAQ0a,EAAMjyC,SAASjmB,QAAQ,EAAEq8B,EAAQn+B,MAC9C,OAAQm+B,GACN,IAAK,OACH2jC,EAAW3jC,GAAU+jC,EACrB,MACF,IAAK,QACU,MAATliE,IACF8hE,EAAU,eAAqB3jC,EAC/B2jC,EAAW3jC,GAAUn+B,GAEvB,MACF,IAAK,QACU,MAATA,IACF8hE,EAAU,eAAqB3jC,EAC/B2jC,EAAW3jC,GAAUsoB,EAAYzmD,IAEnC,MACF,IAAK,YACCA,GAASA,EAAMgE,OAAS,IACtB,IAAQhE,EAAOq5D,KACjByI,EAAU,KAAWvI,EAAWG,UAE9B,IAAQ15D,EAAOs5D,KACjBwI,EAAU,KAAWvI,EAAWE,eAGpCqI,EAAW3jC,GAAUn+B,EACjBA,EAAMuF,IAAKlG,GACF2C,KAAKugE,WAAWljE,IAEzB,GACJ,MACF,IAAK,aACCW,GAASA,EAAMgE,OAAS,GACtBk+D,IAAS3I,EAAWK,UACtBkI,EAAU,QAAc3jC,GAEtB+jC,IAAS3I,EAAWM,SACtBiI,EAAU,OAAa3jC,KAGrB+jC,IAAS3I,EAAWK,UACtBkI,EAAU,QAAc,MAEtBI,IAAS3I,EAAWM,SACtBiI,EAAU,OAAa,OAG3BA,EAAW3jC,GAAUn+B,EACrB,MACF,IAAK,aACCA,GAASA,EAAMgE,OAAS,IAGtBk+D,IAAS3I,EAAWiJ,WACtBV,EAAU,QAAc,aAEtBI,IAAS3I,EAAWM,SACtBiI,EAAU,OAAa,SAEzBA,EAAU,kBAAwB9hE,EAAM,GAAG,GAC3C8hE,EAAU,uBAA6B9hE,EAAM,GAAG,IAElD,MACF,IAAK,UACCkiE,IAAS3I,EAAWM,SACtBiI,EAAU,OAAa,SAEzBA,EAAU,eAAqB9hE,EAAQA,EAAM,GAAK,KAClD,MAEF,QACE8hE,EAAW3jC,GAAUn+B,KAI7B,OAAO8hE,IAxNgB,oCA2NGA,IAC1B,IAAIlrD,EAASnX,OAAOgT,OAAO,GAAIqvD,GAgC/B,OA7BAL,GAAe3/D,QAAS2gE,WACf7rD,EAAO6rD,KAIhBhjE,OAAO+D,KAAKoT,GAAQ9U,QAASwV,IAC3B,IAAItX,EAAQ4W,EAAOU,GACnB,OAAQA,GACN,IAAK,OACCtX,IACFA,EAAQ85D,EAAQC,WAAW/5D,GAAOg6D,OAEpC,MACF,IAAK,QACHh6D,EAAQA,EAAQgC,KAAK+lC,OAAO,IAAI7+B,KAAKlJ,IAAQ8mD,MAAM7V,SAAW,KAM9DjxC,EAEF4W,EAAOU,GAAStX,SAGT4W,EAAOU,KAIXV,IA5PgB,0BA+PR,CAACyoD,EAAUyC,EAAYxqD,EAAOtX,KAC7C,IAAI0iE,EAAe1gE,KAAK2gE,yBAAyBb,GAC7Cc,EACQ,YAAVtrD,EACItX,EACAq/D,EAASwD,UACTxD,EAASwD,UACT7gE,KAAK+lC,SAAS+e,MAAM7V,SACtB4uB,EACQ,YAAVvoD,EAAsBtX,EAAQP,OAAOgT,OAAO,GAAI4sD,EAASQ,WAEvDD,EACQ,WAAVtoD,EAAqBtX,EAAQP,OAAOgT,OAAO,GAAI4sD,EAASO,UAE1D8C,EAAaG,QAAUD,EAEvB,IAAIr/D,EAAM,IAAIu/D,WAOd,OALAv/D,EAAIy2D,MAAM,IAAIlB,QAAM4J,IAEpB7C,EAAQt6D,IAAK26D,GAAO38D,EAAIw/D,OAAO7C,IAC/BN,EAAOr6D,IAAK1F,GAAM0D,EAAIy/D,MAAMnjE,IAErB0D,IAtRgB,2BAyRN2+D,IAAS,MAC1B,MAAMn6B,EAAS/lC,KAAK+lC,OACpB,IAAIrkC,EAAM,UAAA1B,KAAKwF,MAAMkb,gBAAX,SAAqBhf,IAC3B+iD,EAAYzkD,KAAK4/D,WAAW5/D,KAAKwF,MAAMkb,SAAShf,KAAKutC,UACrD,KACAgyB,EAAWxc,EAAY1e,IAASz1B,IAAI,EAAG,QAAQw0C,MAAM7V,UACrDiyB,EAAWzc,EAAY1e,IAASz1B,IAAI,EAAG,QAAQw0C,MAAM7V,UACrDkyB,EAAY1c,EAAY1e,IAASz1B,IAAI,EAAG,UAAUw0C,MAAM7V,UACxDmyB,EAAW3c,EAAY1e,IAASz1B,IAAI,EAAG,SAASw0C,MAAM7V,UAEtDspB,EAAQ72D,EACZ,OAAQw+D,GACN,KAAK3I,EAAWC,MACde,EAAQ72D,GAAYu/D,EACpB,MACF,KAAK1J,EAAWI,OAGhB,KAAKJ,EAAWG,SAGhB,KAAKH,EAAWE,aACdc,EAAQ72D,GAAYw/D,EACpB,MACF,KAAK3J,EAAWK,QACdW,EAAQ72D,GAAYy/D,EACpB,MACF,KAAK5J,EAAWM,OACdU,EAAQ72D,GAAY0/D,EAMxB,OAAO7I,IA3TgB,uBA8TX,CAACuH,EAAYxqD,EAAOtX,KAAU,cAG1C,MAAM+nC,EAAS/lC,KAAK+lC,OACd60B,GACJ,UAAA56D,KAAK4Q,aAAL,mBAAYysD,gBAAZ,eAAsBgD,SAASr+D,QAAS,EACpChC,KAAK4Q,MAAMysD,SAASgD,SAAS,GAAGgB,YAAYzG,UAC5C,KACA0G,EAActhE,KAAKugE,WAAWx6B,IAAS6I,MAAQ,GAC/C2yB,EAAYx7B,IAAS4I,QAAU,EAE/B6yB,EAAa,UAAAxhE,KAAKwF,MAAMkb,gBAAX,SAAqBmT,MACpCkS,EAAO/lC,KAAKwF,MAAMkb,SAASmT,OAAO8a,QAAU,EAC5C4yB,EAEEE,EAAe,UAAAzhE,KAAKwF,MAAMkb,gBAAX,SAAqBmT,MACtC7zB,KAAKugE,WAAWx6B,EAAO/lC,KAAKwF,MAAMkb,SAASmT,OAAO+a,MAAQ,GAC1D0yB,EACJxB,EAAWxqD,GAAStX,EAEpB,MAAM0jE,EAAkB,UAAA1hE,KAAKwF,MAAMkb,gBAAX,SAAqBmT,MACzCkS,EAAO/lC,KAAKwF,MAAMkb,SAASmT,OAAOsb,OAClCpJ,IAASoJ,OAEb,OAAQ75B,GACN,IAAK,OACHwqD,EAAW7H,SAAW,EAmBtB,OAlBgBH,EAAQC,WAAW/5D,GAGtBi6D,WACX6H,EAAW7H,SAAW,MAGxB6H,EAAa9/D,KAAKogE,YAAYN,EAAY,YAAa,MACvDA,EAAa9/D,KAAKogE,YAAYN,EAAY,SAAU,MACpDA,EAAa9/D,KAAKogE,YAAYN,EAAY,aAAc,MACxDA,EAAa9/D,KAAKogE,YAAYN,EAAY,YAAa,OACvDA,EAAa9/D,KAAKogE,YAAYN,EAAY,iBAAkB,OAE5CvH,QACduH,EAAWvH,MAAQv4D,KAAK2hE,gBAAgB3jE,IAIlCA,GACN,KAAKu5D,EAAWC,MACd,MACF,KAAKD,EAAWG,SACdoI,EAAa9/D,KAAKogE,YAAYN,EAAY,YAAazI,GACvD,MACF,KAAKE,EAAWE,aACdqI,EAAa9/D,KAAKogE,YAChBN,EACA,YACAxI,GAEF,MACF,KAAKC,EAAWI,OACdmI,EAAa9/D,KAAKogE,YAAYN,EAAY,YAAa,CACrD2B,IAGF,MACF,KAAKlK,EAAWK,QACdkI,EAAa9/D,KAAKogE,YAAYN,EAAY,UAAW,cAErD,MACF,KAAKvI,EAAWM,OACdiI,EAAa9/D,KAAKogE,YAAYN,EAAY,SAAU,cAMxD,MAEF,IAAK,iBACW,UAAV9hE,IACF8hE,EAAW5E,MAAQ,EACnB4E,EAAWvH,MAAQ,MAEP,UAAVv6D,IACF8hE,EAAWvH,MAAQv4D,KAAK2hE,gBAAgB7B,EAAWI,MACnDJ,EAAW5E,MAAQ,MAErB,MAEF,IAAK,YACH4E,EAAWlF,UAAY58D,EAEnBu5D,EAAWI,SAAWmI,EAAWI,MACnCJ,EAAWtD,kBAAoBx+D,EAAQA,EAAM,GAAG26D,QAAU,KAC1DmH,EAAWvD,uBAAyBv+D,EAAQA,EAAM,GAAGQ,EAAI,cAElDshE,EAAWtD,yBACXsD,EAAWvD,wBAGpB,MACF,IAAK,oBACH,IAAI5D,EAAU34D,KAAKugE,WAAWviE,GAC1BQ,EAAIo8D,EAAYA,EAAU,GAAGp8D,EAAI,EAErCshE,EAAWlF,UAAYjC,EAAU,CAACA,EAAQiJ,IAAIpjE,IAAM,KACpD,MACF,IAAK,yBACH,IAAIqjE,EAAWjH,EAAYA,EAAU,GAAK0G,EAE1CxB,EAAWlF,UAAY58D,EAAQ,CAAC6jE,EAASD,IAAI5jE,IAAU,KACvD,MAEF,IAAK,iBACCA,eACK8hE,EAAW3H,QAElB2H,EAAW3H,QAAU,CAACn6D,GAExB,MAEF,IAAK,UACW,eAAVA,IACF8hE,EAAWxD,WAAa,CAACoF,GACzB5B,EAAa9/D,KAAKogE,YAAYN,EAAY,YAAa,OAE3C,cAAV9hE,IACF8hE,EAAWxD,WAAa,KACxBwD,EAAa9/D,KAAKogE,YAAYN,EAAY,YAAa,CACrDwB,EAAYM,IAAI,MAGN,OAAV5jE,IACF8hE,EAAa9/D,KAAKogE,YAAYN,EAAY,aAAc,MACxDA,EAAa9/D,KAAKogE,YAAYN,EAAY,YAAa,OAEzD,MACF,IAAK,SACW,eAAV9hE,IAEF8hE,EAAWxD,WAAa,CAACoF,GAEzB5B,EAAa9/D,KAAKogE,YAChBN,EACA,iBACA0B,GAEF1B,EAAa9/D,KAAKogE,YAAYN,EAAY,YAAa,OAE3C,UAAV9hE,IACF8hE,EAAa9/D,KAAKogE,YAAYN,EAAY,aAAc,MACxDA,EAAa9/D,KAAKogE,YAAYN,EAAY,YAAa,CACrD2B,EAAaG,IAAI,KAEnB9B,EAAa9/D,KAAKogE,YAChBN,EACA,iBACA0B,IAOR,OAAO1B,IAjegB,wBAoeV,CAACxqD,EAAOtX,KACrB,IAAI8hE,EAAariE,OAAOgT,OAAO,GAAIzQ,KAAK4Q,MAAMkvD,YAC9CA,EAAa9/D,KAAKogE,YAAYN,EAAYxqD,EAAOtX,GAEjDgC,KAAKoqC,SAAU5I,IACb,IAAI67B,EAAW77B,EAAU67B,SAEzB,OADAA,EAAWr9D,KAAKggE,eAAe3C,EAAUyC,EAAYxqD,EAAOtX,GAC5D,SACKwjC,GADL,IAEE67B,WACAyC,mBA9emB,mBAmfd3wB,IACT,IAAIuN,EAAO18C,KAAK4Q,MAAMysD,SAASQ,UAAU3yD,MAAM,GAC/CwxC,EAAK71C,KAAKsoC,GACVnvC,KAAK8hE,aAAa,UAAWplB,KAtfN,uBAyfVvN,IACb,IAAIuN,EAAO18C,KAAK4Q,MAAMysD,SAASQ,UAAU3yD,MAAM,GAC/C,IAAOwxC,EAAO1/C,GACLA,EAAEkW,YAAci8B,EAAKj8B,WAE9BlT,KAAK8hE,aAAa,UAAWplB,KA9fN,mBAigBdvN,IACT,MAAMpJ,EAAS/lC,KAAK+lC,OACpB,IAAI4P,EAAM,IAAO31C,KAAK4Q,MAAMysD,SAAS1nB,MAAO31C,KAAK4Q,MAAMysD,SAASQ,WAEhE,IAAIkE,EAAah8B,EAAO,IAAI7+B,KAAKioC,IAAO0wB,QAAQ,OAAO5wB,SAAS/7B,UAKhE,IAJa,IAAKyiC,EAAM34C,GACd+oC,EAAO/oC,GAAG6iE,QAAQ,OAAO5wB,SAAS/7B,YAC7B6uD,GAEF,CACX,IAAIrlB,EAAO18C,KAAK4Q,MAAMysD,SAASO,SAAS1yD,MAAM,GAC9CwxC,EAAK71C,KAAK,IAAIK,KAAKioC,IACnBnvC,KAAK8hE,aAAa,SAAUplB,MA7gBP,gBAihBlB,KACL,IAAI1+C,EAAQgC,KAAK4Q,MAAMysD,SAAS5wD,WAChCzM,KAAKwF,MAAMqmC,SAAS7rC,KAAKwF,MAAMgC,GAAIxJ,GACnCgC,KAAKgiE,UAphBkB,kBAuhBhB,KACPhiE,KAAKwF,MAAMqmC,SAAS7rC,KAAKwF,MAAMgC,GAAI,MACnC,IAAI61D,EAAW,IAAIyD,WACnB9gE,KAAKoqC,SAAS,CACZizB,SAAUA,EACVyC,WAAY9/D,KAAK+/D,cAAc1C,OAzhBjCr9D,KAAK+lC,OAAS/lC,KAAKwF,MAAMugC,OAAOjB,QAChC9kC,KAAK+lC,OAAOlQ,OAAO71B,KAAKwF,MAAM8L,MAE9B,IAAI+rD,EAAWr9D,KAAKwF,MAAMxH,MACtBikE,mBAASz8D,EAAMxH,MAAO,CACpBkkE,YAAY,EACZC,UAAU,IAOZ,IAAIrB,WAER9gE,KAAK4Q,MAAQ,CACXu8B,MAAM,EACNkwB,SAAUA,EACVyC,WAAY9/D,KAAK+/D,cAAc1C,GAC/B+E,eAAgB/J,EAAUr4D,KAAKwF,MAAM++B,KAAMvkC,KAAK+lC,OAAQ/lC,KAAKwF,MAAM8L,OAIvEi6B,oBACMvrC,KAAKwF,MAAMxH,OACbgC,KAAK0/D,wBAITlqD,mBAAmBC,GACK,QAAtB,GAAIzV,KAAKwF,MAAMxH,QACT,UAAAyX,EAAUiL,gBAAV,eAAoBmT,UAApB,UAA8B7zB,KAAKwF,MAAMkb,gBAAzC,aAA8B,EAAqBmT,OAAO,OAC5D,IAAIA,EAAQ7zB,KAAK4/D,WAAL,UAAgB5/D,KAAKwF,MAAMkb,gBAA3B,aAAgB,EAAqBmT,OAC9CgsC,QAAQ,OACR5wB,SAEHjvC,KAAKoqC,SAAU5I,IACb,IAAI67B,EAAW77B,EAAU67B,SASzB,OAPAA,EAAWr9D,KAAKggE,eACd3C,EACA77B,EAAUs+B,WACV,UACAjsC,GAGF,SACK2N,GADL,IAEE67B,gBA6eV3tD,SAAS,MACP,MAAM,KAAEy9B,EAAF,OAAQ8yB,EAAR,SAAgB5C,EAAhB,WAA0ByC,EAA1B,eAAsCsC,GAAmBpiE,KAAK4Q,OAE9D,GACJpJ,EADI,MAEJyB,EAFI,SAGJ0S,EAHI,YAIJimB,EAJI,MAKJhuB,EALI,SAMJ8O,EANI,KAOJ6hB,GACEvkC,KAAKwF,MAET,OACE,cAAC,OAAK00D,MAAN,CACEC,QAAM,EACNx+C,SAAUA,EACV/H,MAAOA,EAAM5R,OAAS,EACtBkO,UAAW24B,IAAG,oBAAqBjH,EAAc,OAAS,IAC1Dp6B,GAAK,GAAEkb,GAAY,WAAWlb,IALhC,SAOE,eAAC,OAAD,WACE,eAAC,OAAK4yD,IAAN,CAAUC,WAAS,EAAnB,UACE,cAAC,OAAK5D,OAAN,CAAa56B,MAAM,IAAnB,SACE,qBAAK3rB,UAAU,UAAf,SACE,uBAAOoqD,QAAU,SAAQ9yD,EAAzB,SAAgCyB,QAGpC,eAAC,OAAKwtD,OAAN,CAAa56B,MAAM,IAAnB,UACGwhC,EAASgD,SAAS,IACjB,qCACE,cAAC,QAAD,oBACGhD,EAASgD,SAAS,UADrB,aACG,EAAsBgC,OACpBpkE,GACQmkE,EAAezI,QAAQ17D,GAEhCmkE,EACAA,EAAerI,iBAInB,cAAC,UAAD,UACE,cAAC,GAAD,CACEsD,SAAUA,EACVH,QAASl9D,KAAKk9D,QACdI,YAAat9D,KAAKs9D,YAClBC,WAAW,EACXC,gBAAgB,SAKxB,gCACE,cAAC,SAAD,CACEp0B,OAAK,EACLN,SAAU9oC,KAAKwF,MAAMi3B,WACrBxC,MAAM,OACN/pB,UAAU,kBACVyvB,QAAS3/B,KAAK0/C,KAAK,YACnBt/C,KAAK,SACL+R,aAAYoyB,EAAK5jB,cAAcnF,GAASkjD,gBAP1C,SASE,cAAC,KAAD,CACEphE,KAAMglE,IACNxuC,KAAK,OACL7qB,MAAOs7B,EAAK5jB,cAAcnF,GAASkjD,oBAGtC1+D,KAAKwF,MAAMxH,OACV,cAAC,SAAD,CACEorC,OAAK,EACLnP,MAAM,OACN/pB,UAAU,oBACVyvB,QAAS,KACP3/B,KAAKwT,UAEPpT,KAAK,SACL+R,aAAYoyB,EAAK5jB,cAAcnF,GAAShI,QAR1C,SAUE,cAAC,KAAD,CACElW,KAAM+gE,IACNvqC,KAAK,OACL7qB,MAAOs7B,EAAK5jB,cAAcnF,GAAShI,eAK3C,eAAC,QAAD,CACEysD,OAAQA,EACR9yB,KAAMA,EACNC,QAASptC,KAAKgiE,MACd9xD,UAAU,kBACVqyD,WAAS,EALX,UAOE,eAAC,QAAMC,OAAP,WACGj+B,EAAK5jB,cAAcnF,GAASkjD,gBAAiB,OAEhD,cAAC,QAAMN,QAAP,CAAeqE,WAAS,EAAxB,SACGpF,EAASgD,SAASr+D,OAAS,GAC1B,eAAC,QAAM0gE,YAAP,WACE,cAAC,UAAD,UACE,eAAC,OAAD,WACE,cAAC,KAAD,CACEl7D,GAAG,OACHyB,MAAOs7B,EAAK5jB,cAAcnF,GAASmjD,QACnChrC,cAAe,OACfO,wBAAyB,OACzBqvB,QAAS9lD,OAAO+D,KAAKs2D,EAAQC,YAAYx0D,IACtCtF,GACQ,CAACA,EAAGsmC,EAAK5jB,cAAcnF,GAASvd,MAG3CD,MAAO8hE,EAAWI,KAClBr0B,SAAU7rC,KAAK8hE,eAEhBhK,EAAQC,WAAW+H,EAAWI,MAAMjI,UACnC,cAAC,EAAD,CACEp+B,MAAO0K,EAAK5jB,cAAcnF,GAASyjD,aACnChF,WACE6F,EAAWI,MACX37B,EAAK5jB,cACHnF,GAAS,YAAcskD,EAAWI,OAGtCliE,MAAO8hE,EAAW7H,SAClBpsB,SAAU7rC,KAAK8hE,eAKlBhK,EAAQC,WAAW+H,EAAWI,MAAMhI,OACnC,cAAC,EAAD,CACEr+B,MAAO0K,EAAK5jB,cAAcnF,GAAS0jD,UACnClhE,MAAO8hE,EAAWlF,UAClB/uB,SAAU7rC,KAAK8hE,eAKlBhK,EAAQC,WAAW+H,EAAWI,MAAM/H,SACnC,cAAC,GAAD,CACEt+B,MAAO0K,EAAK5jB,cAAcnF,GAAS0jD,UACnClhE,MAAO8hE,EAAWf,QAClBzC,WAAYwD,EAAWxD,WACvBC,uBACEuD,EAAWvD,uBAEbC,kBAAmBsD,EAAWtD,kBAC9B3wB,SAAU7rC,KAAK8hE,eAKlBhK,EAAQC,WAAW+H,EAAWI,MAAM9H,QACnC,cAAC,GAAD,CACEv+B,MAAO0K,EAAK5jB,cAAcnF,GAAS0jD,UACnClhE,MAAO8hE,EAAWd,OAClB1C,WAAYwD,EAAWxD,WACvBM,eAAgBkD,EAAWlD,eAC3BL,uBACEuD,EAAWvD,uBAEbC,kBAAmBsD,EAAWtD,kBAC9B3wB,SAAU7rC,KAAK8hE,eAKnB,cAAC,EAAD,CACE9jE,MAAO8hE,EAAWjF,eAClBK,MAAO4E,EAAW5E,MAClB3C,MAAOuH,EAAWvH,MAClB1sB,SAAU7rC,KAAK8hE,oBAIrB,cAAC,UAAD,UACE,cAAC,GAAD,CACEzE,SAAUA,EACVH,QAASl9D,KAAKk9D,QACdI,YAAat9D,KAAKs9D,gBAGtB,eAAC,UAAD,WACE,cAAC,SAAD,CAAQtrD,GAAG,KAAX,SACGuyB,EAAK5jB,cAAcnF,GAAS+jD,YAG/B,cAAC,IAAD,CACE/3D,GAAG,UACHyB,MAAOs7B,EAAK5jB,cACVnF,GAASgkD,kCAEXza,UAAU,EACVG,aAAa,EACbrZ,SAAU,CAACrkC,EAAIxJ,KACbgC,KAAK2iE,QAAkB,KAAV3kE,OAAemH,EAAYnH,cAOpD,cAAC,QAAM4kE,QAAP,UACE,cAAC,SAAD,CACE1yD,UAAU,OACVk5B,OAAK,EACLzJ,QAAS,KACP3/B,KAAKic,QAEP9J,aAAYoyB,EAAK5jB,cAAcnF,GAASS,MAN1C,SAQE,cAAC,KAAD,CACE3e,KAAMulE,IACN3yD,UAAU,UACV4jB,KAAK,OACL7qB,MAAOs7B,EAAK5jB,cAAcnF,GAASS,eAK1C,IAAIrI,EAAQ0O,GACX,cAAC,QAAD,CAAqB8mB,OAAK,EAACnP,MAAM,MAAMskC,UAAQ,EAA/C,SACGj8C,GADSA,UAMjBsf,GACC,cAAC,OAAKw4B,IAAN,CAAUC,WAAS,EAAnB,SACE,cAAC,OAAK5D,OAAN,CAAa4D,WAAS,EAACx+B,MAAM,KAA7B,SACE,mBAAG3rB,UAAU,OAAb,SAAqB0xB,c,IA1yB/BriC,G,eAsBkB,CACpBqiC,YAAa,KACbjmB,UAAU,EACV/H,MAAO,GACP5V,MAAO,OA0xBIwuC,4BACbrU,YAAe,CAAC,WAChBuU,kBAAS97B,IAAD,CACNU,KAAMV,EAAM2zB,KAAK1O,UAEnB4W,aALaD,CAMbjtC,K,qwBCr8BF,MAAMic,EAAWC,yBAAe,CAC9BqsB,UAAW,CAAF,6CASX,SAASg7B,EAAU1tD,EAAQ9X,IACyB,IAA9C8X,EAAOoN,UAAU,GAAG1B,OAAO5a,QAAQ5I,IACrC8X,EAAOoN,UAAU,GAAG1B,OAAOiiD,QAAQzlE,GAOhC,MAAM0lE,EAA4B,EACvC5tD,SACA9X,OACAwW,QACAywB,OACAt7B,QACA24B,cACAqhC,qBAAqBH,MAErB,MAAMI,EAAI3+B,EAAK5jB,cAEfsiD,EAAmB7tD,EAAQ9X,GAE3B,MAAM6lE,GACJrvD,aAAA,EAAAA,EAAOyzB,UAAU,EAAGE,eAAgBA,KAAc,EAmBpD,OAjBK07B,GAEHh7D,QAAQ5B,KAAK,uDAAwDjJ,GAGvE8X,EAAOC,WAAW/X,GAAQ,CACxB2L,MAAOi6D,EAAEj6D,GACTs6C,QAASzvC,aAAF,EAAEA,EAAOvQ,IAAI,EAAGiE,KAAIyB,WAAY,CACrCzB,EACA07D,EAAE,CAAE17D,GAAIyB,EAAO8iC,eAAgB9iC,MAEjComD,eAAe,EACfvqB,QAASq+B,EACLrvD,aADwB,EACxBA,EAAOi0B,KAAMh0B,GAASA,EAAK0zB,WAAWjgC,GACtC,MAGC4N,GAsHIuvB,EAAsB,EACjCvvB,OAAQguD,EACR1iD,WACA6jB,WACI,YACJ,IAAInvB,EAAQiuD,EACZ,MAAM,OAAEn3C,GAAWrrB,IAEbuhC,EAAY1hB,EAAS,SACrBknB,GAAa1b,SAAA,UAAAA,EAAQoW,aAAaF,UAArB,eAAiCwF,aAAc,GAErC,QAA7B,GAA0B,IAAtBA,EAAW5lC,OAUb,OAPAqhE,EAAc,UAAGn3C,EAAOoW,oBAAV,iBAAG,EAAsBF,UAAzB,aAAG,EAAkCihC,eAC/CA,IACFjuD,EAASiuD,EAAe,CACtBjuD,OAAQ,IAAUguD,GAClB1iD,WACA6jB,UAEGnvB,GAAUguD,EAGnB,MAAME,EAAiB5iD,aAAH,EAAGA,EAAUonB,UACjC,IAAIy7B,EAAa37B,EAAWG,KAAMh0B,GAASA,EAAKvM,KAAO87D,GAavD,OAZKC,IAAYA,EAAa37B,EAAWG,KAAMh0B,GAASA,EAAK0zB,YAE7D47B,EAAc,UAAGE,SAAH,aAAG,iBAEjBnuD,EAASiuD,EACLA,EAAe,CAAEjuD,OAAQ,IAAUguD,GAAiB1iD,WAAU6jB,SAC9D,IAAU6+B,GAGdC,EAAc,UAAGn3C,EAAOoW,oBAAV,iBAAG,EAAsBF,UAAzB,aAAG,EAAkCihC,eAC/CA,IAAgBjuD,EAASiuD,EAAe,CAAEjuD,SAAQsL,WAAU6jB,UAEzDnvB,GAAUguD,GAUNI,EAA+BC,GAAmBj+D,IAAU,MACvE,MAAM,SAAEkb,EAAUtL,OAAQguD,GAAmB59D,EACvC++B,EAAOkE,qBAEP,OAAEvc,GAAWrrB,IAEbuhC,EAAY1hB,EAAS,SACrBknB,GAAa1b,SAAA,UAAAA,EAAQoW,aAAaF,UAArB,eAAiCwF,aAAc,GAElE,IAAIxyB,EAASuvB,EAAoB,CAAEvvB,OAAQguD,EAAgB1iD,WAAU6jB,SAarE,OAXIqD,EAAW5lC,OAAS,GACtBghE,EAA0B,CACxB5tD,SACA9X,KAAM,YACNwW,MAAO8zB,EACPrD,OACAt7B,MAAOuS,EAASssB,UAChBm7B,mBAAoBH,IAIjB,cAACW,EAAD,OAAmBj+D,GAAnB,IAA0B4P,OAAQA,O,2WCzN5BsuD,IAlBf,SAAsBl+D,GACpB,MAAM,KAAEuO,EAAF,KAAQ+f,EAAO,UAAf,IAA0BgX,GAAiBtlC,EAATg/B,EAAxC,IAAiDh/B,EAAjD,GACMwnD,EAAMj5C,EAAK4vD,YACbpvC,YAAiB,GAAExgB,EAAK,mBAAmBA,EAAK4vD,eAAe7vC,KAC/D8vC,IAEJ,OAAO,oB,iWAAA,EAAK5W,IAAKA,EAAKliB,IAAKA,UAAO/2B,EAAK9K,OAAWu7B,M,6BCjBpD,8CAoDeS,gBAAoB,IAApBA,CApCE,IACf,eAAC,YAAD,CAAW/0B,UAAU,eAArB,UACE,6BACE,cAAC,mBAAD,CACE1I,GAAG,oCACHukC,eAAe,wCAGnB,mBAAG77B,UAAU,cAAb,SACE,cAAC,mBAAD,CACE1I,GAAG,4KACHukC,eAAe,gLAGnB,4BACE,cAAC,mBAAD,CACEvkC,GAAG,sHACHukC,eAAe,sHACfn3B,OAAQ,CACNivD,WACE,cAAC,OAAD,CAAM1yB,GAAG,gBAAT,SACE,cAAC,mBAAD,CACE3pC,GAAG,sBACHukC,eAAe,+BAO3B,4BACE,cAAC,mBAAD,CAAkBvkC,GAAG,aAAaukC,eAAe,sB,6BC/CvD,sCA4Be9G,gBAAoB,IAApBA,CAdG,IAChB,eAAC,YAAD,CAAW/0B,UAAU,eAArB,UACE,6BACE,cAAC,mBAAD,CAAkB1I,GAAG,YAAYukC,eAAe,gBAElD,mBAAG77B,UAAU,cAAb,SACE,cAAC,mBAAD,CACE1I,GAAG,uFACHukC,eAAe,gG,6BCtBvB,6DAgEe9G,gBAAoB,IAApBA,CA9CM,KACnB,MAAM6+B,EAAgB5sC,sBAAatmB,IAAD,uBAAWA,EAAMyhC,gBAAjB,aAAW,EAAgB/vB,UAC7D,IAAIhP,EAAWywD,wBAEf,OACE,eAAC,YAAD,CAAW7zD,UAAU,eAArB,UACE,6BACE,cAAC,mBAAD,CAAkB1I,GAAG,eAAeukC,eAAe,mBAErD,6BAAK+3B,IACL,mBAAG5zD,UAAU,cAAb,SACE,cAAC,mBAAD,CACE1I,GAAG,uEACHukC,eAAe,uEACfn3B,OAAQ,CACN4e,MACE,cAAC,OAAD,CAAM2d,GAAO/T,YAAW9pB,EAASC,UAAtB,SAAX,SACE,cAAC,mBAAD,CAAkB/L,GAAG,SAASukC,eAAe,kBAMvD,4BACE,cAAC,mBAAD,CACEvkC,GAAG,sHACHukC,eAAe,sHACfn3B,OAAQ,CACNivD,WACE,cAAC,OAAD,CAAM1yB,GAAG,gBAAT,SACE,cAAC,mBAAD,CACE3pC,GAAG,sBACHukC,eAAe,+BAO3B,4BACE,cAAC,mBAAD,CAAkBvkC,GAAG,aAAaukC,eAAe,uB,mxBCmG1Ci4B,IA3IO,IAShB,YATiB,KACrBtyD,EADqB,KAErBqC,EAAO,KAFc,iBAGrBkwD,EAHqB,SAIrB9W,GAAW,EAJU,SAKrB79C,EALqB,UAMrBY,EAAY,KANS,MAOrBjH,EAAQ,MAEJ,EADDzD,EACC,SACJ,MAAMqN,EAAQqkB,sBAAatmB,IAAD,uBAAWA,EAAMgC,mBAAjB,aAAW,EAAmBC,QAExD,IAAIjR,EAAM8P,EACV,IAAKA,GAAQqC,EACX,GAAKA,EAAK,OASH,CAELnS,EAAM2yB,YAAgBxgB,EAAK,QAG3B,IAAIs5C,EAAYt5C,EAAKs5C,WAAat5C,EAAKmwD,cAClCrxD,GAASw6C,IACZzrD,EAAMyrD,IAKLx6C,GACDhS,IAAOD,SAASujE,oBAAoB/zD,SAAS2D,EAAK,YAElDnS,GAAO,qBAINiR,GACDhS,IAAOD,SAASwjE,yBAAyBh0D,SAAS2D,EAAK,YAEvDnS,GAAO,6BA7BTuG,QAAQyL,MACN,uCACAG,EACAvO,EACA8J,GAEF1N,EAAM,IA4BV,MAAMyiE,GACJ,qBAACxjE,IAAOD,SAAS6zC,sBAAjB,QAAmC,IAAI1M,KAAM9J,GAC3CwI,oBAAUlS,YAAgB3yB,GAAMq8B,EAAMmI,eADxC,eAEGpkC,QAAS,EACRsiE,GAAchmC,YAAc18B,IAAQyiE,EACpCE,GAAeD,GAAc1iE,EAAIwO,SAAS,eAAkB+8C,EAC5DqX,GACFF,GAAc1iE,EAAIwO,SAAS,oBAAsB,EAE/Cq0D,EAAavlC,IAASM,qBAAqB59B,GAEjDA,EAAM6iE,EAAW7iE,IAEjB,IAAImE,EACF,cAAC,OAAD,KACEorC,GAAI5c,YAAgB3yB,GACpBwrB,OAAQ62C,WAA4B,SAAW,KAC/Ch7D,MAAOA,EACPiH,UAAWA,GACP1K,GALN,aAOG8J,KAiDL,OA7CIg1D,EACFv+D,EACE,uBACE2L,KAAM9P,EACNqH,MAAOA,EACPmkB,OACGq3C,EAAWllC,QACXklC,EAAWnlC,cACW,IAArB2kC,EAEE,KADA,SAGNxyD,IAAI,sBACJvB,UAAWA,GACP1K,GAZN,aAcG8J,KAGIi1D,EACTx+D,EACE,uBACE2L,KAAM6iB,YAAgB3yB,GACtBurD,UAAQ,EACRlkD,MAAOA,EACPiH,UAAWA,GACP1K,GALN,aAOG8J,KAGIk1D,IACTz+D,EACE,uBACE2L,KAAM6iB,YAAgB3yB,GACtBqH,MAAOA,EACPmkB,OAAO,SACP3b,IAAI,sBACJvB,UAAWA,GACP1K,GANN,aAQG8J,MAIAvJ,I,8KCtHT,MAAMyV,EAAWC,yBAAe,CAC9BipD,oBAAqB,CAAF,iEAInB5/B,QAAS,CAAF,uCAIP5P,SAAU,CAAF,yCAIRyvC,oBAAqB,CAAF,uEAInBC,MAAO,CAAF,mDAILjoD,KAAM,CAAF,iCAIJoB,QAAS,CAAF,yCAWT,MAAM8mD,UAA4B12D,YAiBhCzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK8kE,SAAW9kE,KAAK8kE,SAASvmE,KAAKyB,MACnCA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MASrC+kE,SAAS5kE,GACP,IAAI+0B,EAAW/0B,EAAK+0B,UAAY,KAChC,GAAIr0B,IAAOD,SAAS2xC,mBAAmBniC,SAAS8kB,GAAW,CACzD,MAAM4f,EAAe/e,YAAsBb,GAC3C,MAAO,KAAsB4f,EAAe,SAAStyC,KAAMqzB,IACzD71B,KAAKwF,MAAMowB,eAAeV,EAAUW,EAAOiP,WAG/CkgC,QAAMjnD,QACJ,cAAC,KAAD,CAAOA,SAAO,EAAC9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASopD,UAE/D5kE,KAAKwF,MAAMy/D,YAQbH,WACE9kE,KAAKwF,MAAMy/D,YAQbv1D,SACE,MAAM,QAAE9P,GAAYI,KAAKwF,MACzB,OACE,cAAC,KAAD,CACEkb,SAAU,CAAEwU,SAAUt1B,EAAQhC,IAAI,kBAAoB,IACtDwX,OAAQ,CACNoN,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASspB,SAC9ChkB,OAAQ,CAAC,cAGbzL,WAAY,CACV6f,SAAU,CACR0M,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAASmpD,qBAEX17D,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS0Z,UAC9C90B,KAAM,SACNmjD,QAAS,IAAI,IAAKtO,KAAa3jC,GAAS,CAACA,EAAM2jC,IAAU3jC,OAG7DqK,SAAU,IAEZopD,SAAU/kE,KAAK+kE,SACfD,SAAU9kE,KAAK8kE,YAMRt4B,sBACbC,aACAy4B,cACAx4B,kBAAQ,KAAM,CAAE9W,qBAHH4W,CAIbq4B,I,6BCrJF,wFAgBA,MAAMrpD,EAAWC,yBAAe,CAC9B0pD,oBAAqB,CAAF,iEAInBrgC,QAAS,CAAF,uCAIPsgC,cAAe,CAAF,2CAIbC,oBAAqB,CAAF,2FAInBC,WAAY,CAAF,qCAIVC,iBAAkB,CAAF,mJAKhBC,cAAe,CAAF,yCAIbC,oBAAqB,CAAF,yEAInBC,cAAe,CAAF,2CAIbC,oBAAqB,CAAF,mIAInBC,cAAe,CAAF,yCAIbC,oBAAqB,CAAF,yNAMnBjB,MAAO,CAAF,mDAILjoD,KAAM,CAAF,iCAIJoB,QAAS,CAAF,yCAWT,MAAM+nD,UAA4B33D,YA2BhCzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK8kE,SAAW9kE,KAAK8kE,SAASvmE,KAAKyB,MACnCA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MAGrCurC,oBACEvrC,KAAKwF,MAAM4sB,QAAQpyB,KAAKwF,MAAMugE,QAShChB,SAAS5kE,UAIAA,EAAKqH,UACLrH,EAAKszB,gBACLtzB,EAAK4iB,MACZ/iB,KAAKwF,MAAMutB,WAAW/yB,KAAKwF,MAAMugE,OAAQ5lE,GACzC6kE,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASopD,UAGpD5kE,KAAKwF,MAAMy/D,YAQbH,WACE9kE,KAAKwF,MAAMy/D,YAQbv1D,SACE,OACE,cAAC,KAAD,CACEgR,SAAU1gB,KAAKwF,MAAMsd,KACrB1N,OAAQ,CACNoN,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASspB,SAC9ChkB,OAAQ,CACN,WACA,QACA,WACA,YACA,cAINzL,WAAY,CACV2wD,SAAU,CACRpkC,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAAS6pD,qBAEXp8D,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS4pD,eAC9ChlE,KAAM,UAERuf,MAAO,CACLiiB,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAAS+pD,kBAEXt8D,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS8pD,YAC9CllE,KAAM,UAER6lE,SAAU,CACRrkC,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAASiqD,qBAEXx8D,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASgqD,eAC9CplE,KAAM,UAER8lE,UAAW,CACTtkC,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAASmqD,qBAEX18D,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASkqD,eAC9CtlE,KAAM,UAERkT,SAAU,CACRsuB,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAASqqD,qBAEX58D,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASoqD,eAC9CxlE,KAAM,WAGVub,SAAU,CAAC,UAEbopD,SAAU/kE,KAAK+kE,SACfD,SAAU9kE,KAAK8kE,SACf/oB,QAAS/7C,KAAKwF,MAAMu2C,WAMbvP,sBACbC,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACEsd,KAAMlS,EAAMsN,MAAM4E,KAClBijD,OAAQn1D,EAAMgC,YAAYC,MACtBG,IAAUpC,EAAMgC,YAAYC,OAAOszD,IACnC,GACJ7uC,OAAQ1mB,EAAMsN,MAAMtgB,IAAI05B,OACxBykB,QAASnrC,EAAMsN,MAAMu+B,OAAOV,UAE9B,CAAE3pB,YAASW,kBAXAyZ,CAabs5B,I,6BChPF,oCAkDejQ,IAjCE,EAAG9oD,cAAH,aACf,eAAC,YAAD,CAAWmD,UAAU,eAArB,UACE,qBAAIA,UAAU,uBAAd,UACGnD,EAAQ9D,MACR8D,EAAQq5D,UAAa,MAAKr5D,EAAQq5D,YAEpCr5D,EAAQ60B,aACP,mBAAG1xB,UAAU,sBAAb,SAAoCnD,EAAQ60B,eAE7C,UAAA70B,EAAQyjD,YAAR,eAAcrD,WACb,mBAAGz7C,KAAM6iB,YAAgBxnB,EAAQyjD,KAAKrD,UAAtC,SACGpgD,EAAQyjD,KAAKE,gB,6BC5BtB,6DAsEeqF,IAnDG,EAAGhpD,cAAH,aAChB,eAAC,YAAD,CAAWmD,UAAU,eAArB,UACE,qBAAIA,UAAU,uBAAd,UACGnD,EAAQ9D,MACR8D,EAAQq5D,UAAa,MAAKr5D,EAAQq5D,YAEpCr5D,EAAQ60B,aACP,mBAAG1xB,UAAU,sBAAb,SAAoCnD,EAAQ60B,eAE7C70B,SAAA,UAAAA,EAASw/B,aAAT,eAAgB4gB,WACf,oBAAGz7C,KAAM6iB,YAAgBxnB,EAAQw/B,MAAM4gB,UAAvC,UACE,qBACEriB,IAAK/9B,EAAQ9D,MACb+jD,IAAKz4B,YAAgBxnB,EAAQw/B,MAAM0gB,OAAOoZ,QAAQlZ,YAEpD,uCACE,cAAC,mBAAD,CACE3lD,GAAG,eACHukC,eAAe,eACfn3B,OAAQ,CAAEkf,KAAMwyC,IAAYv5D,EAAQw/B,MAAMzY,SAJ9C,QAOE,cAAC,mBAAD,CACEtsB,GAAG,qCACHukC,eAAe,kD,6BC3C3B,4CA2Ee6pB,IAtDM,EAAG7oD,aACtBm1B,YAAcn1B,GACZ,qBAAKvF,GAAG,gBAAgB0I,UAAU,sCAAlC,SACE,cAAC,IAAD,CAAcnD,QAASA,MAGzB,eAAC,YAAD,CAAWmD,UAAU,eAArB,UACGnD,EAAQ9D,OACP,qBAAIiH,UAAU,uBAAd,UACGnD,EAAQ9D,MACR8D,EAAQq5D,UAAa,MAAKr5D,EAAQq5D,YAGtCr5D,EAAQ60B,aACP,mBAAG1xB,UAAU,sBAAb,SAAoCnD,EAAQ60B,cAE7C70B,EAAQw/B,OACP,cAAC,QAAD,CACEr8B,UAAU,gBACV46B,IAAK/9B,EAAQ9D,MACbA,MAAO8D,EAAQ9D,MACf+jD,IACoC,kBAAlCjgD,EAAQw/B,MAAM,gBACVhY,YAAgBxnB,EAAQw/B,MAAM4gB,UAC9B54B,YAAgBxnB,EAAQw/B,MAAM0gB,OAAOsZ,KAAKpZ,UAEhDC,QAAQ,UAGXrgD,EAAQ3K,MACP,qBACE4K,wBAAyB,CACvBC,OAAQixB,YAAoBnxB,EAAQ3K,KAAKjC,a,6BCrDrD,oCAiEeo1D,IAjDK,EAAGxoD,aACrB,cAAC,YAAD,CAAWvF,GAAG,YAAd,SACE,yBAASA,GAAG,eAAZ,SACGuF,EAAQ+G,MAAMvQ,IAAKwQ,GAClB,eAAC,UAAD,CAAwB7D,UAAU,eAAlC,UACE,eAAC,YAAD,WACE,6BACE,cAAC,KAAD,CAAe6D,KAAMA,EAAM9K,MAAO8K,EAAK,SAAvC,SACGA,EAAK9K,UAGT8K,EAAK6tB,aAAe,4BAAI7tB,EAAK6tB,iBAE/B7tB,EAAK4vD,aACJ,cAAC,KAAD,CACE5vD,KAAMA,EACN+f,KAAK,QACLgX,IAAK/2B,EAAKyyD,cAAgBzyD,EAAKyyD,cAAgBzyD,EAAK9K,MACpDiH,UAAU,eAdF6D,EAAKnS,W,6BCpB3B,oDA4GeuzD,IA1FK,EAAGpoD,aACrB,cAAC,YAAD,CAAWmD,UAAU,4BAArB,SACE,0BAAS1I,GAAG,UAAZ,UACE,mCACE,oBAAI0I,UAAU,uBAAd,SAAsCnD,EAAQ9D,QAC7C8D,EAAQ60B,aACP,mBAAG1xB,UAAU,sBAAb,SAAoCnD,EAAQ60B,iBAGhD,yBAASp6B,GAAG,eAAZ,SACGuF,EAAQ+G,MAAMvQ,IAAKwQ,GAClB,oCACE,6BACE,cAAC,KAAD,CAAeA,KAAMA,EAAM9K,MAAO8K,EAAK,SAAvC,SACGA,EAAK9K,UAGT8K,EAAK4vD,aACJ,cAAC,IAAD,CACE5vD,KAAMA,EACN+2B,IAAK/2B,EAAKyyD,cAAgBzyD,EAAKyyD,cAAgBzyD,EAAK9K,MACpD6qB,KAAK,QACL5jB,UAAU,iCAGb6D,EAAK6tB,aAAe,4BAAI7tB,EAAK6tB,cAC9B,4BACE,cAAC,KAAD,CAAe7tB,KAAMA,EAArB,SACE,cAAC,mBAAD,CAAkBvM,GAAG,aAAaukC,eAAe,qBAjBzCh4B,EAAKnS,c,6BC7B7B,2CAuHeyzD,IAtGK,EAAGtoD,aACrB,cAAC,YAAD,CAAWmD,UAAU,eAArB,SACE,0BAAS1I,GAAG,UAAZ,UACE,mCACE,oBAAI0I,UAAU,uBAAd,SAAsCnD,EAAQ9D,QAC7C8D,EAAQ60B,aACP,mBAAG1xB,UAAU,sBAAb,SAAoCnD,EAAQ60B,iBAGhD,yBAASp6B,GAAG,eAAZ,SACE,eAAC,QAAD,CAAOi/D,QAAM,EAACC,QAAM,EAApB,UACE,cAAC,QAAMlE,OAAP,UACE,eAAC,QAAMpI,IAAP,WACE,cAAC,QAAMuM,WAAP,UACE,cAAC,mBAAD,CAAkBn/D,GAAG,QAAQukC,eAAe,YAE9C,cAAC,QAAM46B,WAAP,UACE,cAAC,mBAAD,CACEn/D,GAAG,cACHukC,eAAe,kBAGnB,cAAC,QAAM46B,WAAP,UACE,cAAC,mBAAD,CAAkBn/D,GAAG,OAAOukC,eAAe,WAE7C,cAAC,QAAM46B,WAAP,UACE,cAAC,mBAAD,CAAkBn/D,GAAG,QAAQukC,eAAe,iBAIlD,cAAC,QAAM66B,KAAP,UACG75D,EAAQ+G,MAAMvQ,IAAKwQ,GAClB,eAAC,QAAMqmD,IAAP,WACE,cAAC,QAAMyM,KAAP,UACE,cAAC,KAAD,CACE9yD,KAAMA,EACN7D,UAAU,cACVjH,MAAO8K,EAAK,SAHd,SAKGA,EAAK9K,UAGV,cAAC,QAAM49D,KAAP,UAAa9yD,EAAK6tB,cAClB,cAAC,QAAMilC,KAAP,UAAa9yD,EAAK,WAClB,cAAC,QAAM8yD,KAAP,UAAa9yD,EAAK+yD,iBAZJ/yD,EAAKnS,mB,6BCjDnC,qGAqBA,MAAM+zD,UAAkBxnD,YACtBzO,YAAY8F,GACVmkC,MAAMnkC,GAENxF,KAAK4Q,MAAQ,CACXm2D,eAAW5hE,GAGbnF,KAAKgnE,WAAahnE,KAAKgnE,WAAWzoE,KAAKyB,MACvCA,KAAKinE,UAAYjnE,KAAKinE,UAAU1oE,KAAKyB,MACrCA,KAAKknE,UAAYlnE,KAAKknE,UAAU3oE,KAAKyB,MAGvCgnE,aACEhnE,KAAKoqC,SAAS,CACZ28B,WAAY,IAIhBE,YACE,MAAMF,GACH/mE,KAAK4Q,MAAMm2D,UAAY,GAAK/mE,KAAKwF,MAAMuH,QAAQ+G,MAAM9R,OACxDhC,KAAKoqC,SAAS,CACZ28B,cAIJG,YACE,MAAMH,GACH/mE,KAAK4Q,MAAMm2D,UAAY,GAAK/mE,KAAKwF,MAAMuH,QAAQ+G,MAAM9R,OACxDhC,KAAKoqC,SAAS,CACZ28B,cAIJr3D,SACE,MAAM,QAAE3C,GAAY/M,KAAKwF,MACzB,OACE,cAAC,YAAD,CAAW0K,UAAU,eAArB,SACE,0BAAS1I,GAAG,UAAZ,UACE,mCACE,oBAAI0I,UAAU,uBAAd,SAAsCnD,EAAQ9D,QAC7C8D,EAAQ60B,aACP,mBAAG1xB,UAAU,sBAAb,SAAoCnD,EAAQ60B,iBAGhD,yBAASp6B,GAAG,eAAZ,SACE,cAAC,OAAD,CAAM2/D,UAAQ,EAACC,WAAS,EAACC,QAAS,EAAlC,SACGt6D,EAAQ+G,OACP/G,EAAQ+G,MAAMvQ,IAAI,CAACwQ,EAAMlI,IACvB,cAAC,IAAM40B,SAAP,UACG1sB,EAAK4vD,aACJ,eAAC,QAAD,CACEzzD,UAAU,UACVk9B,QAASptC,KAAKgnE,WACd75B,KAAMntC,KAAK4Q,MAAMm2D,YAAcl7D,EAC/Bq9B,QACE,cAAC,OAAKutB,OAAN,UACE,cAAC,UAAD,CAASvmD,UAAU,cAAnB,SACE,cAAC,KAAD,CACE6D,KAAMA,EACN+2B,IACE/2B,EAAKyyD,cACDzyD,EAAKyyD,cACLzyD,EAAK9K,MAEX02B,QAAS,KACP3/B,KAAKoqC,SAAS,CACZ28B,UAAWl7D,KAGfqE,UAAU,gCAKlBqyD,WAAS,EAxBX,UA0BE,cAAC,QAAMC,OAAP,UACE,cAAC,OAAD,UACE,eAAC,OAAKpI,IAAN,WACE,cAAC,aAAD,CAAYv+B,MAAO,GAAnB,SAAwB9nB,EAAK9K,QAC7B,cAAC,aAAD,CAAY4yB,MAAO,EAAGixB,UAAU,QAAhC,SACE,cAAC,KAAD,CACEp7C,KAAMqC,EAAKnS,IACXqH,MAAO8K,EAAK,SACZ4rB,QAAS3/B,KAAKgnE,WAHhB,SAKE,cAAC,KAAD,CAAMlzC,KAAK,OAAOwzC,QAAM,EAAChqE,KAAMiqE,iBAMzC,cAAC,OAAD,CAAMC,UAAQ,EAACxJ,cAAc,SAA7B,SACE,eAAC,OAAK5D,IAAN,WACE,cAAC,OAAK3D,OAAN,CAAa56B,MAAO,EAAGixB,UAAU,SAAjC,SACE,cAAC,SAAD,CACE58C,UAAU,mBACVyvB,QAAS3/B,KAAKinE,UACdn5D,MAAO,CAAE25D,OAAQ,GAHnB,SAKE,cAAC,KAAD,CACEnqE,KAAMsuC,IACN17B,UAAU,UACV4jB,KAAK,OACLhmB,MAAO,CAAE25D,OAAQ,SAIvB,cAAC,OAAKhR,OAAN,CAAa56B,MAAO,EAApB,SACE,eAAC,QAAMuiC,QAAP,CAAe7xB,OAAK,EAApB,UACE,cAAC,KAAD,CACEx4B,KAAMA,EACN+2B,IACE/2B,EAAKyyD,cACDzyD,EAAKyyD,cACLzyD,EAAK9K,MAEX02B,QAAS,KACP3/B,KAAKoqC,SAAS,CACZ28B,UAAWl7D,KAGfioB,KAAK,QACL5jB,UAAU,aAGZ,cAAC,QAAMwyD,YAAP,UACE,4BAAI3uD,EAAK6tB,qBAIf,cAAC,OAAK60B,OAAN,CAAa56B,MAAO,EAAGixB,UAAU,SAAjC,SACE,cAAC,SAAD,CACEntB,QAAS3/B,KAAKinE,UACd/2D,UAAU,mBACVpC,MAAO,CAAE25D,OAAQ,GAHnB,SAKE,cAAC,KAAD,CACEnqE,KAAMk9C,IACNtqC,UAAU,UACV4jB,KAAK,OACLhmB,MAAO,CAAE25D,OAAQ,kBA7FZ1zD,EAAKnS,gBAmK7B+zD,O,kPC5Mf,MAAMn6C,EAAWC,yBAAe,CAC9BisD,cAAe,CAAF,qDAIb71B,QAAS,CAAF,uCAIP/f,QAAS,CAAF,uCAIPwiB,mBAAoB,CAAF,+DAIlBqzB,cAAe,CAAF,uDAIbC,kBAAmB,CAAF,+DAIjBzxC,iBAAkB,CAAF,6DAIhBC,kBAAmB,CAAF,+DAIjByxC,gBAAiB,CAAF,2DAIfC,oBAAqB,CAAF,wDAInBC,qBAAsB,CAAF,qMAMpBC,wBAAyB,CAAF,qFAIvB9R,aAAc,CAAF,iDAIZ+R,6BAA8B,CAAF,sGAI5Bt5D,MAAO,CAAF,mCAILu5D,wBAAyB,CAAF,oGAWzB,MAAMC,UAAah6D,YAAU,+CA2BnB,CACNi6D,wBAAwB,EACxBC,QAAQ,IA7BiB,gBAgCnBC,IACNtoE,KAAKoqC,SAAS,KAAM,CAClBi+B,QAAQ,KAEVroE,KAAKwF,MAAM+iE,cAAcD,GACzBx+D,SAASga,oBAAoB,YAAa9jB,KAAKwoE,oBAAoB,KAGrEhzD,mBAAmBC,EAAW+rB,GAC5B,IAAIinC,EAAgB,GAkBpB,GAhBEhzD,EAAU+qC,YAAY7B,MAAM5C,SAC5B/7C,KAAKwF,MAAMg7C,YAAY7B,MAAM/qC,MAE7B60D,EAAgB,QAEhBhzD,EAAU+qC,YAAYniD,OAAO09C,SAC7B/7C,KAAKwF,MAAMg7C,YAAYniD,OAAOuV,MAE9B60D,EAAgB,SAEhBhzD,EAAU+qC,YAAYhtC,OAAOuoC,SAC7B/7C,KAAKwF,MAAMg7C,YAAYhtC,OAAOI,QAE9B60D,EAAgB,UAGdA,EAAe,CACjB,MAAMC,EAAc1oE,KAAKwF,MAAMg7C,YAAYioB,GAAe70D,MAAM1R,OAC5C,MAAhBwmE,GAAuC,MAAhBA,EACzB1D,QAAMpxD,MACJ,cAAC,KAAD,CACEA,OAAK,EACL3K,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS06C,cAC9CnpD,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,EAASysD,gCAGb,CACEU,QAAS,+BACTC,UAAW,MAIf5D,QAAMpxD,MACJ,cAAC,KAAD,CACEA,OAAK,EACL3K,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS7M,OAC9C5B,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,EAAS0sD,2BAGb,CACES,QAAS,0BACTC,UAAW,OAYrBl5D,SACE,MAAMzP,EAAOm9B,YAAWp9B,KAAKwF,MAAM+N,UAC7Bs1D,EAAa,IAAK7oE,KAAKwF,MAAMurC,QAAQtyC,OAAQ,CAAE+I,GAAI,SACnDshE,EAAgB,IAAK9oE,KAAKwF,MAAMurC,QAAQtyC,OAAQ,CAAE+I,GAAI,YACtDuhE,EAAgB,IAAK/oE,KAAKwF,MAAMurC,QAAQtyC,OAAQ,CACpD+I,GAAI,iBAEA,QAAEuF,EAAF,KAAWw3B,EAAX,KAAiBjzB,GAAStR,KAAKwF,MAC/BwjE,EAAc,CAClBt6B,KAAM,UACNC,MAAO,OACPC,IAAK,WAGP,OACE,sBACE1+B,UAAU,2BACVpC,MAAO,CACL6uB,KAAM38B,KAAKwF,MAAMyjE,WAAWvjE,QACvB,OACC1F,KAAKwF,MAAMyjE,WAAWvjE,QAAQypD,wBAAwBtzB,UAExD,MAPR,UAUE,mCACE,6BAAK77B,KAAKwF,MAAMuH,QAAQ9D,QACxB,wBACEiH,UAAU,YACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASksD,eACnD/nC,QAAS,IAAM3/B,KAAK6G,KAAK,iBACzBwzC,SAAU,EAJZ,SAME,cAAC,KAAD,CACE/8C,KAAM4rE,IACNp1C,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASksD,sBAIpD,qBAAKx3D,UAAU,sBAAf,SACE,+BACE,cAAC,IAAD,CAAW5S,KAAK,2BAChB,cAAC,IAAD,CAAMsjC,UAAU,yBAAyBp5B,GAAG,QAA5C,SACmC,eAAhCxH,KAAKwF,MAAMuH,QAAQ,UAElB,oBAAImD,UAAU,eAAd,SACE,cAAC,KAAD,CAAUqD,SAAUtT,QAI1B,cAAC,IAAD,CAAM2gC,UAAU,yBAAyBp5B,GAAG,OAA5C,SACmC,eAAhCxH,KAAKwF,MAAMuH,QAAQ,UAElB,oBAAImD,UAAU,iBAAd,SACG24D,GAAc,cAAC,IAAD,CAASt1D,SAAUtT,QAIxC,cAAC,IAAD,CAAM2gC,UAAU,yBAAyBp5B,GAAG,UAA5C,SACmC,eAAhCxH,KAAKwF,MAAMuH,QAAQ,UAElB,6BACE,eAAC,OAAD,CAAMokC,GAAOlxC,EAAF,WAAX,UACE,gCACE,sBAAMiQ,UAAU,uBAAhB,UACG44D,aAAA,EAAAA,EAAe7/D,QACdjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASq2B,WAE3C,sBAAM3hC,UAAU,4BAElB,cAAC,KAAD,CAAM5S,KAAM6rC,IAAerV,KAAK,gBAKxC,cAAC,IAAD,CAAM8M,UAAU,yBAAyBp5B,GAAG,UAA5C,SACGuhE,GACC,6BACE,eAAC,OAAD,CAAM53B,GAAOlxC,EAAF,WAAX,UACGD,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASsW,SACxC,cAAC,KAAD,CAAMx0B,KAAM6rC,IAAerV,KAAK,qBAO5C,cAAC,IAAD,CAAWx2B,KAAK,8BAAhB,SACI8iC,GACA,mCACGA,EAAWp+B,OAAS,GACnB,qCACE,iCACE,6BACGhC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmsD,mBAG5C,qBAAKz3D,UAAU,sBAAf,SACE,6BACGkwB,EAAW78B,IAAK1E,GACf,mCAAGA,kBASlBgC,IAAOD,SAASuoE,uBACiB,eAAhCnpE,KAAKwF,MAAMuH,QAAQ,UACjB,sCACI/M,KAAKwF,MAAMuH,QAAQq8D,cACnB,cAAC,IAAD,CAAMxoC,UAAU,8BAA8Bp5B,GAAG,cAAjD,SACE,6BACE,yBACE2K,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,EAASosD,mBAEXjoC,QAAS,KACP3/B,KAAKwF,MAAM0wB,kBAAkBj2B,GAAMuC,KAAMb,IACvC3B,KAAKwF,MAAMqsC,QAAQhrC,KACjB0tB,YAAgB5yB,EAAS,SAE3B3B,KAAKwF,MAAMy/D,eATjB,UAaGjlE,KAAKwF,MAAM++B,KAAK5jB,cACfnF,EAASosD,mBAGX,cAAC,KAAD,CAAMtqE,KAAM6rC,IAAerV,KAAK,gBAKvC9zB,KAAKwF,MAAMuH,QAAQq8D,cAClBppE,KAAKwF,MAAMuH,QAAQs8D,iBACjB,eAAC,IAAD,CACEzoC,UAAU,8BACVp5B,GAAG,cAFL,UAIE,6BACE,yBACE2K,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,EAAS2a,kBAEXwJ,QAAS,KACP3/B,KAAKwF,MAAM2wB,iBAAiBl2B,GAAMuC,KAAMb,IAAa,QACnD3B,KAAKwF,MAAMqsC,QAAQhrC,KACjB0tB,YACEv0B,KAAKwF,MAAMuH,QAAQs8D,gBAAgB,SAGvCrpE,KAAKwF,MAAMy/D,YACXD,QAAMtmB,KACJ,cAAC,KAAD,CACEA,MAAI,EACJz1C,MAAOs7B,EAAK5jB,cACVnF,EAASssD,qBAEX/6D,QAASw3B,EAAK5jB,cACZnF,EAASusD,qBACT,CACEuB,QAAO,UAAEv8D,EAAQq8D,oBAAV,aAAE,EAAsBG,aAC/Bp6B,KAAM,IAAIK,KAAKC,eACbn+B,EACA03D,GACAljC,OACA3jB,gBAAK,UAACpV,EAAQq8D,oBAAT,aAAC,EAAsBI,cAKpC,CACEb,QAAS,uBACTC,UAAW,SAjCrB,UAuCG5oE,KAAKwF,MAAM++B,KAAK5jB,cACfnF,EAAS2a,kBAGX,cAAC,KAAD,CACE74B,KAAMmsE,IACN31C,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAAS2a,yBAKjB,6BACE,yBACEhkB,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,EAAS4a,mBAEXuJ,QAAS,KACP3/B,KAAKwF,MACF4wB,kBAAkBn2B,GAClBuC,KAAMb,IACL3B,KAAKwF,MAAMqsC,QAAQhrC,KACjB0tB,YACEv0B,KAAKwF,MAAMuH,QAAQs8D,gBAAgB,SAGvCrpE,KAAKwF,MAAMy/D,YACXD,QAAMtmB,KACJ,cAAC,KAAD,CACEA,MAAI,EACJz1C,MAAOs7B,EAAK5jB,cACVnF,EAASwsD,2BAGb,CACEW,QAAS,2BACTC,UAAW,SAvBvB,UA6BG5oE,KAAKwF,MAAM++B,KAAK5jB,cACfnF,EAAS4a,mBAGX,cAAC,KAAD,CACE94B,KAAMosE,IACN51C,KAAK,OACLmG,MAAM,UACNhxB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAAS4a,6BAOtBp2B,KAAKwF,MAAMuH,QAAQq8D,eACjBppE,KAAKwF,MAAMuH,QAAQs8D,iBAClB,cAAC,IAAD,CACEzoC,UAAU,8BACVp5B,GAAG,cAFL,SAIE,6BACE,eAAC,OAAD,CACE2pC,GAAI5c,YACFv0B,KAAKwF,MAAMuH,QAAQq8D,aAAa,QAElCzpC,QAAS,IAAM3/B,KAAKwF,MAAMy/D,YAJ5B,UAMGjlE,KAAKwF,MAAM++B,KAAK5jB,cACfnF,EAASqsD,iBAEX,cAAC,KAAD,CAAMvqE,KAAM6rC,IAAerV,KAAK,mBAO/C+0C,GAAchoE,IAAOD,SAAS8uB,gBAC7B,cAAC,IAAD,CAAMkR,UAAU,8BAA8Bp5B,GAAG,eAAjD,SACE,6BACE,eAAC,OAAD,CAAM2pC,GAAOlxC,EAAF,uBAAX,UACGD,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS84B,oBAExC,cAAC,KAAD,CAAMh3C,KAAM6rC,IAAerV,KAAK,oB,IAlX1Cq0C,E,eAuBkB,CACpBp3B,QAAS,KACThkC,QAAS,OAmWEy/B,sBACbC,aACA92B,aACA+2B,kBACE,CAAC97B,EAAOpL,KAAR,CACEurC,QAASngC,EAAMmgC,QAAQA,QACvBx9B,SAAU/N,EAAM+N,SAChBxG,QAAS6D,EAAM7D,QAAQ5M,KACvBmR,KAAMV,EAAM2zB,KAAK1O,OACjB2qB,YAAa5vC,EAAM4vC,cAErB,CAAErqB,qBAAkBD,sBAAmBE,yBAX5BoW,CAab27B,I,mOC3dF,MAAM3sD,EAAWC,yBAAe,CAC9BkB,KAAM,CAAF,iCAIJ+W,OAAQ,CAAF,qCAINi2C,YAAa,CAAF,+CAIXC,QAAS,CAAF,uCAIPC,WAAY,CAAF,iDAWZ,MAAMC,UAAsB37D,YAAU,8CAsB5Bm6D,IACNtoE,KAAKoqC,SAAS,KAAM,CAClBi+B,QAAQ,KAEVroE,KAAKwF,MAAM+iE,cAAcD,KA1BS,gBA6B7B,KACLtoE,KAAKwF,MAAMukE,oBAZbx+B,oBACEvrC,KAAKwF,MAAM4sB,QAAQpyB,KAAKwF,MAAMugE,QAmBhCr2D,SACE,OACE,sBACEQ,UAAW24B,IAAG,gCAAiC,CAC7C,oBAAqB7oC,KAAKwF,MAAMwkE,aAElCl8D,MAAO,CACL6uB,KAAM38B,KAAKwF,MAAMyjE,WAAWvjE,QACvB,OACC1F,KAAKwF,MAAMyjE,WAAWvjE,QAAQypD,wBAAwBtzB,UAExD,MATR,UAYE,yBAAQ3rB,UAAU,SAAlB,UACE,wBAAQA,UAAU,OAAOyvB,QAAS3/B,KAAKiqE,KAAvC,SACE,cAAC,KAAD,CACE3sE,KAAMsuC,IACN9X,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmB,UAGlD,qBAAKzM,UAAU,qBACf,6BACGlQ,KAAKwF,MAAMsd,KAAKkjD,SACbhmE,KAAKwF,MAAMsd,KAAKkjD,SAChBhmE,KAAKwF,MAAMsd,KAAK2Q,WAEtB,cAAC,OAAD,CAAMjsB,GAAG,iBAAiB2pC,GAAG,UAA7B,SACE,cAAC,KAAD,CACEjhC,UAAU,SACV5S,KAAM4sE,IACNp2C,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASkY,eAIpD,qBAAKxjB,UAAW24B,IAAG,SAAU,CAAE/D,SAAU9kC,KAAKwF,MAAMsd,KAAKmjD,WAAzD,SACGjmE,KAAKwF,MAAMsd,KAAKmjD,SACf,qBACEjZ,IAAKhtD,KAAKwF,MAAMsd,KAAKmjD,SACrBn7B,IAAK9qC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASquD,cAG9C,cAAC,KAAD,CAAMvsE,KAAM6sE,IAAWr2C,KAAK,WAIhC,qBAAK5jB,UAAU,sBAAf,SAEE,+BACE,6BACE,yBACEiC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASouD,SACnDjqC,QAAS,IAAM3/B,KAAK6G,KAAK,WAF3B,UAIE,cAAC,mBAAD,CAAkBW,GAAG,UAAUukC,eAAe,YAC9C,cAAC,KAAD,CAAMzuC,KAAM6rC,IAAerV,KAAK,cAGpC,6BACE,yBACE3hB,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmuD,aACnDhqC,QAAS,IAAM3/B,KAAK6G,KAAK,eAF3B,UAIE,cAAC,mBAAD,CACEW,GAAG,cACHukC,eAAe,gBAEjB,cAAC,KAAD,CAAMzuC,KAAM6rC,IAAerV,KAAK,cAInCjR,aAAa7iB,KAAKwF,MAAMsd,KAAM,CAC7B,qBACA,aAEA,6BACE,eAAC,OAAD,CAAMquB,GAAG,gBAAT,UACE,cAAC,mBAAD,CACE3pC,GAAG,aACHukC,eAAe,eAEjB,cAAC,KAAD,CAAMzuC,KAAM6rC,IAAerV,KAAK,cAItC,cAAC,IAAD,CAAWx2B,KAAK,+BAQbmvC,yBACbC,kBACG97B,IAAD,CACEkS,KAAMlS,EAAMsN,MAAM4E,KAClBijD,OAAQn1D,EAAMgC,YAAYC,MACtBG,IAAUpC,EAAMgC,YAAYC,OAAOszD,IACnC,KAEN,CAAE/zC,aAPJsa,CAQEo9B,K,8JCvEWp9B,sBACZ97B,IAAD,CACEstC,MAAO,IAAOttC,EAAMstC,MAAMA,MAAO,WACjCksB,gBAAiBx5D,EAAM2zB,KAAK1O,SAE9B,GALa6W,CAhHD,EAAGwR,QAAO3qC,WAAUxG,UAASq9D,sBACzC,MAAM,SAAExpE,GAAaC,IACrB,OAAOq9C,EAAMl8C,OAAS,GACnBpB,EAAS8uB,gBAAkB3iB,EAAQ,eAAes9D,aACnD,sBAAKn6D,UAAU,2BAAf,UACGguC,EAAMl8C,OAAS,GACd,qCACE,iCACE,cAAC,mBAAD,CAAkBwF,GAAG,cAAcukC,eAAe,mBAEpD,qBAAK77B,UAAU,sBAAf,SACE,6BACG,IAAI,IAAOguC,GAASnqC,IAEnB,MAAMu2D,EAAmBv2D,EAAK,OAAO3J,MAAM,WAAW,GAMhDmgE,EAAuB,GAJTh3D,EACjB9O,QAAQ,cAAe,IACvBA,QAAQ,MAAO,gBAEqC6lE,IACvD,OACE,6BACE,cAAC,OAAD,CACEn5B,GAAIo5B,EACJ/iE,GAAK,eAAcuM,EAAK,OACrB3J,MAAM,WAAW,GACjBnE,cACAxB,QAAQ,IAAK,KAChByL,UAAU,OANZ,SASE,cAAC,mBAAD,CAAkB1I,GAAIuM,EAAK9K,SAFtB8K,EAAK9K,QARL8K,EAAK,iBAmBzBnT,EAAS8uB,gBACR3iB,EAAQ,eAAes9D,cACvB,MACE,MAAMG,EAAmB,IACvB5pE,EAAS2xC,mBACRjhC,IACEm5D,QACC19D,EAAQ,eAAes9D,cACrB,IAAKt9D,EAAQ,eAAes9D,aAAav2D,MAAO,CAC9CohB,SAAU5jB,MAEX84D,IAAoB94D,GAG7B,OACG,IAAQk5D,IACP,qCACE,iCACE,cAAC,mBAAD,CACEhjE,GAAG,mBACHukC,eAAe,uBAGnB,qBAAK77B,UAAU,sBAAf,SACE,6BACG,IAAIs6D,EAAmBl5D,GACtB,6BACE,cAAC,OAAD,CACE6/B,GAAI,CACF59B,SAAaA,EAAF,sBACX3C,MAAO,CACLxQ,KAAM2M,EAAQ,SACd29D,cAAen2C,YAAgBxnB,EAAQ,QACvCmoB,SAAU5jB,IAGdpB,UAAU,OATZ,SAWE,cAAC,mBAAD,CACE1I,GAAG,sBACHukC,eAAe,sBACfn3B,OAAQ,CACNtD,KAAMsE,IAAQtE,GAAMyE,WAAW9P,oBAhB9BqL,YAxBvB,MAsDJ,4B,6BC1GJ,4DAMA,MAEM47B,EAAgB1nC,IAAU,MAC9B,MAAM,SAAE8J,EAAF,KAAY69B,EAAZ,QAAkBC,EAAlB,QAA2BP,GAAYrnC,EAEvCmlE,EAAep+D,IAAM++B,YAErBk9B,EAAsBxrE,IACtB2tE,GAAgBhnD,+BAAqBgnD,EAAajlE,QAAS1I,IAC/DowC,KAUF,OAPA7gC,IAAMqX,UAAU,KACd9Z,SAAS+Z,iBAAiB,YAAa2kD,GAAoB,GACpD,KACL1+D,SAASga,oBAAoB,YAAa0kD,GAAoB,MAKhE,qCACG37B,GACC,cAAC,gBAAD,CACEgsB,GAAI1rB,EACJy9B,QAxBc,IAyBdC,WAAW,oBACXC,eAAa,EAJf,SAME,cAAC,SAAD,CAAQ74B,KAAI,UAAEnoC,gBAAF,aAAE,EAAU3H,KAAxB,SACE,qBAAK+N,UAAU,0BAIrB,cAAC,gBAAD,CACE2oD,GAAI1rB,EACJy9B,QAnCgB,IAoChBC,WAAW,oBACXC,eAAa,EAJf,SAME,cAAC,SAAD,UACE,uBACE54D,KAAK,eACLytB,QAAU3iC,IACRA,EAAE8oB,mBAEJs0B,UAAYp9C,IACVA,EAAE8oB,mBAEJxC,IAAKqnD,EAELz6D,UAAU,oBACVpC,MAAO,CAAEi9D,UAAW,QAXtB,SAaGz7D,GAJG,wBAkBhB49B,EAAaj9B,aAAe,CAC1Bk9B,MAAM,EACNC,QAAS,OACTP,SAAS,GAGIK,O,ovBCpEf,MAMM89B,EAAmB,IAAMnqE,IAAOurB,QAAQ0Y,QAoIxCmmC,EAAmB,CAACzlE,GAAS++B,WACjC,MAAM2mC,GA7HoB1jE,EA8HLhC,EAAMgC,GA9HM3G,IAAOurB,QAAQ5kB,GAAGA,IAAO,OAqCR,iBAA3CmmC,OAD0BA,EA2FLnoC,EAAMmoC,gBA1FlC,UAAOA,EAAew9B,uBAAtB,aAAO,EAAgCnqD,QACnCngB,IAAOurB,QAAQpL,OAAO2sB,EAAcw9B,gBAAgBnqD,QACpD,QArBc,iBADKA,EA+GLxb,EAAMwb,QA7GpBngB,IAAOurB,QAAQpL,OAAOA,IAAWgqD,IACjC,OA2EsBxlE,IACtBA,EAAM+9C,SAIN/9C,EAAMuuB,WAHDlzB,IAAOurB,QAAQm3B,QAUjB,KAsBL6nB,CAAmB5lE,MA/DQuuB,EAgELvuB,EAAMuuB,aA/DhBA,EAAW,OACrBlzB,IAAOurB,QAAQ2H,WACbA,EAAW,OAAOtvB,QAAQ,uBAAwB,KAEpD,OAQiCe,IACrCA,EAAMmoC,eAAiBnoC,EAAMmoC,cAAc5Z,WACvClzB,IAAOurB,QAAQ2H,WACbvuB,EAAMmoC,cAAc5Z,WAAW,OAAOtvB,QACpC,uBACA,KAGJ,KA4CF4mE,CAA8B7lE,KA3HN8lE,EA4HL9lE,EAAM8lE,SA3H3B,UAAAzqE,IAAOurB,QAAQk/C,eAAf,eAAyBA,KAAY,QA2GdlrE,EAiBLoF,EAAMpF,KAjBQS,IAAOurB,QAAQhsB,KAAKA,IAAS,OAkB3D4qE,KAlBqB5qE,MA5GGkrE,EAAD,EA0DIv3C,EAjDN/S,EAmBU2sB,EAAD,EApCNnmC,EAwI1B,GAtJkB,WAsJdhC,EAAMtH,KACR,OAAO,KAIT,MAAMqtE,EAAc,EAAH,KACZ/lE,GAvFiCmoC,KAAD,YACkB,iBAAhDA,SAAP,UAAOA,EAAew9B,uBAAtB,aAAO,EAAgCI,aACnC59B,EAAcw9B,gBAAgBI,YAC9B,MAqFCC,CAA+BhmE,EAAMmoC,gBAG1C,GAAInoC,EAAMimE,QAAS,CACjB,MAAM,WAAEC,EAAF,WAAcC,GAAenmE,EAAMomE,SACnCC,EAAgBH,EACpB,QACA,CACEI,MAAMz2D,EAAY02D,GAChB,MAAMC,EAAYD,EAAQE,UAAUj9C,MAC9Bk9C,EAAa72D,EAAW2Z,MAE1Bg9C,IAAcE,IAGlB72D,EAAWo2D,QAAQO,EAAWE,EAAaF,GAE3CD,EAAQE,UAAUj9C,MAAQk9C,KAG7Bx/B,IAAD,CACEy/B,kBAAmBz/B,EAAQ0/B,eAhBTV,CAmBpBC,EACE,QACA,CACEU,UAAUh3D,IACD,CACL7N,GAAI6N,EAAWwkB,MACf7K,MAAO3Z,EAAW2Z,SAIxB,CAAC0d,EAASq/B,KAAV,CACEO,kBAAmB5/B,EAAQ6/B,aAC3BC,mBAAoB9/B,EAAQ+/B,cAC5BC,WAAYX,EAAQW,eAbxBf,CAgBE,QAAC,kBACCQ,EADD,kBAECG,EAFD,mBAGCE,GAHF,EAIKhoC,EAJL,gBAME2nC,EACEG,EACEE,EACE,8BACE,cAACtB,EAAD,KAAY1mC,YAO1B,OAAO,cAACqnC,EAAD,KAAmBN,IAE5B,OAAO,cAACL,EAAD,KAAYK,KAGfoB,EAAoBx0C,YAAe,CAAC,YAAhBA,CAA6B8yC,GAEjD/Q,EAAS10D,GACbA,EAAMimE,QACJ,cAACkB,EAAD,KAAuBnnE,IAEvB,cAACylE,EAAD,KAAsBzlE,IAuB1B00D,EAAMjqD,aAAe,CACnB+Q,OAAQ,KACR+S,WAAY,KACZwvB,QAAS,KACTnjD,KAAM,SACNoqC,OAAO,EACPihC,QAAS,MAGIh/B,yBAAWytB,I,6wBChQ1B,MAAM1+C,EAAWC,yBAAe,CAC9BmxD,WAAY,CAAF,+CAIVh5D,MAAO,CAAF,mCAIL2I,oBAAqB,CAAF,uEAMfswD,EAAcrnE,IAClB,MAAM,MACJ0kC,EADI,YAEJtI,EAFI,MAGJhuB,EAHI,OAIJiN,EAAS,GAJL,SAKJH,EALI,cAMJosD,EANI,OAOJ13D,EAPI,MAQJnM,EARI,KASJogC,EATI,cAUJ0jC,EAVI,OAWJC,EAXI,WAYJC,EAZI,KAaJ1oC,GACE/+B,EACE09D,EAAI3+B,EAAK5jB,cACTusD,EAAkB93D,EAAOoN,UAAUulB,KAAMvqC,GAAe,YAATA,EAAEgK,IACjD2lE,EAAQ/3D,EAAOoN,UAAUjd,OAAQ/H,GAAe,YAATA,EAAEgK,IAE/C+E,IAAMqX,UAAU,KAGd,MAAMwpD,EAAiC,mBAAXh4D,EAAwBA,EAAO5P,GAAS4P,EAC9Di4D,EAAc,EAAH,KACZ5vE,OAAO+D,KAAK4rE,EAAa/3D,YAAYnR,OACtC,CAAC0gC,EAAaC,IACLuoC,EAAa/3D,WAAWwvB,GAAcC,QAAtC,OAEEF,GAFF,IAGD,CAACC,GAAeuoC,EAAa/3D,WAAWwvB,GAAcC,UAExDF,EAEN,KAEClkB,GAGLjjB,OAAO+D,KAAK6rE,GAAavtE,QAAS85D,IAC3B,IAAQyT,EAAYzT,GAAIl5C,aAAxB,EAAwBA,EAAWk5C,KACtCkT,EAAclT,EAAGyT,EAAYzT,OAIhC,IAEH,MAAO0T,EAAuBC,GAA4BhhE,IAAM8X,SAAS,GACzE,SAASmpD,EAA4BxwE,EAAGywE,GACtC,MAAM,MAAE5hE,GAAU4hE,EAGlBF,EAFiBD,IAA0BzhE,GAAS,EAAIA,GAK1D,OACE,sBAAKqE,UAAU,UAAf,UACGjH,GACC,yBAAQiH,UAAU,gBAAlB,UACGm5B,EACD,6BAAKpgC,GAASi6D,EAAE1nD,EAASoxD,cACxBG,KAGJnrC,GACC,cAAC,UAAD,CAASsK,WAAS,EAACh8B,UAAU,WAA7B,SACG0xB,IAGJ,IAAK/gB,GAAQ7e,OAAS,GACrB,cAAC,UAAD,CACEqnC,KAAK,UACLqkC,UAAQ,EACRC,UAAQ,EACRC,OAAQ1K,EAAE1nD,EAAS5H,OACnB7G,QAASm2D,EAAE1nD,EAASe,uBAGvB3I,GACC,cAAC,UAAD,CACEy1B,KAAK,UACLqkC,UAAQ,EACRC,UAAQ,EACRC,OAAQ1K,EAAE1nD,EAAS5H,OACnB7G,QAAS6G,EAAM0O,UAInB,qBAAK9a,GAAK,sBAAqB0lE,EAAgB1lE,GAA/C,SACE,cAAC,UAAD,CAAS0I,UAAU,gBAAnB,SACG,IAAIg9D,EAAgBpsD,OAAQ,CAACxL,EAAOzJ,IACnC,wBAAC,IAAD,OACMuJ,EAAOC,WAAWC,IADxB,IAEE9N,GAAI8N,EACJoN,SAAUwqD,EAAgBjkE,MAAMhD,cAChCukC,MAAO3+B,IAAUohE,EACjBjvE,MAAO0iB,EAASpL,GAChBqG,UAA8C,IAApCvG,EAAOuG,SAASzV,QAAQoP,GAClCu2B,SAAU,CAACrkC,EAAIxJ,KACb8uE,EAActlE,EAAIxJ,IAEpBM,IAAKgX,EACL1B,MAAOiN,EAAOvL,GACd40B,MAAOA,UAMdijC,EAAM5pE,IAAI,CAAC03C,EAAUpvC,IACpB,cAAC,YAAD,CAAWgiE,OAAK,EAACC,QAAM,EAAC59D,UAAU,OAAlC,SACE,sBAAuB1I,GAAK,sBAAqByzC,EAASzzC,GAA1D,UACE,eAAC,YAAUumE,MAAX,CACE7/B,OAAQo/B,IAA0BzhE,EAClCA,MAAOA,EACP8zB,QAAS6tC,EAHX,UAKGvyB,EAAShyC,OAAS,mCAAGgyC,EAAShyC,QAC9BqkE,IAA0BzhE,EACzB,cAAC,KAAD,CAAMvO,KAAM+8B,IAAOvG,KAAK,SAExB,cAAC,KAAD,CAAMx2B,KAAMg9B,IAASxG,KAAK,YAG9B,cAAC,YAAUsqC,QAAX,CAAmBlwB,OAAQo/B,IAA0BzhE,EAArD,SACE,cAAC,IAAD,CACEmiE,gBAAc,EACdC,SAAU,IACVp1C,OAAQy0C,IAA0BzhE,EAAQ,OAAS,EAHrD,SAKE,cAAC,UAAD,CAASqE,UAAU,WAAnB,SACG,IAAI+qC,EAASn6B,OAASxL,GACrB,wBAAC,IAAD,OACMF,EAAOC,WAAWC,IADxB,IAEE9N,GAAI8N,EACJtX,MAAO0iB,EAASpL,GAChBqG,UAA8C,IAApCvG,EAAOuG,SAASzV,QAAQoP,GAClCu2B,SAAU,CAACrkC,EAAIxJ,KACb8uE,EAActlE,EAAIxJ,IAEpBM,IAAKgX,EACL1B,MAAOiN,EAAOvL,GACd40B,MAAOA,cA/BT+Q,EAASzzC,KADyByzC,EAASzzC,KAyCxDwlE,MAKPH,EAAW58D,aAAe,CACxBi6B,MAAO,KACPtI,YAAa,KACblhB,SAAU,KACVosD,cAAe,KACfl5D,MAAO,KACPiN,OAAQ,GACRzL,OAAQ,GACR63D,WAAY,MA2BCxgC,yBAAWogC,EAAY,CAAEj1C,YAAY,K,6tBCpMpD,MAAMpc,EAAWC,yBAAe,CAC9B4/B,aAAc,CAAF,6DAWP,MAAMtH,UAAa5lC,YAAU,mDA2EtB5B,IAAM++B,aA5ClBC,oBAAoB,QAClB,MAAM,KAAEnrC,GAASJ,KAAKwF,OAChB,aAAE88B,EAAezhC,IAAOqrB,OAAOoW,cAAiBtiC,KAAKwF,SAGzD88B,SAAA,UAAAA,EAAeliC,UAAf,4CAAwD,OAGxDJ,KAAKwF,MAAM89B,UACXtjC,KAAKkuE,UAAUxoE,SAEf1F,KAAKkuE,UAAUxoE,QAAQ8kC,QAEzB,MAAMyT,EAAMj+C,KAAKwF,MAAM2oE,OAAS,GAAI7rC,SAAA,UAAAA,EAAeliC,UAAf,eAAsBguE,aAAc,EACpEpuE,KAAKwF,MAAM89B,UAAYtjC,KAAKwF,MAAM6oE,UACpCruE,KAAKwF,MAAMsvB,cAAcmpB,GAI7BnN,iCAAiCxiC,GAAW,MAC1C,MAAM,aAAEg0B,EAAezhC,IAAOqrB,OAAOoW,cAAiBtiC,KAAKwF,OACrD,SAAE89B,EAAF,KAAYljC,GAASJ,KAAKwF,MAWhC,MATE88B,SAAA,UAAAA,EAAeliC,UAAf,4CAAwD,OAGxDkO,EAAUg1B,UACVA,IAAah1B,EAAUg1B,UACvBtjC,KAAKkuE,UAAUxoE,SAEf1F,KAAKkuE,UAAUxoE,QAAQ8kC,UAGpBxqC,KAAKwF,MAAM89B,UAAYh1B,EAAUg1B,UAClCljC,IAASkO,EAAUlO,OACrBJ,KAAKwF,MAAM6oE,SACX,OACA,MAAMpwB,EAAMj+C,KAAKwF,MAAM2oE,OACnB,GACA7rC,SAAA,UAAAA,EAAeh0B,EAAUlO,aAAzB,eAAgCguE,aAAc,EAClDpuE,KAAKwF,MAAMsvB,cAAcmpB,IAW7BvuC,SAAS,cACP,MAAM,aAAE4yB,EAAezhC,IAAOqrB,OAAOoW,cAAiBtiC,KAAKwF,OACrD,SAAE6oE,EAAF,KAAYjuE,GAASJ,KAAKwF,MAE1Bs8B,EAAgB,UAAG9hC,KAAKwF,MAAMrF,YAAd,aAAG,EAAiB2hC,iBAE1C,IAAI0Z,GAAQlZ,SAAA,UAAAA,EAAeliC,UAAf,sBAAkC,KAI5C,OAFA,UAAAJ,KAAKwF,MAAMrF,YAAX,SAAiB4hC,WACfssC,IAAaxtE,IAAOqrB,OAAOoiD,6BAE7B9yB,GAAQlZ,SAAA,UAAAA,EAAeliC,UAAf,sBAAkC,MAE5C,MAAMgV,GAASktB,SAAA,UAAAA,EAAeliC,UAAf,wBAAoCmuE,IAC7CC,GACJlsC,SAAA,UAAAA,EAAeliC,UAAf,4CAAwD,KAE1D,OACE,mCACa,OAAVo7C,EACC,sBACEtpC,KAAK,eACLytB,QAAU3iC,IACR,MAAMyxE,EAAsBzxE,EAAE0xE,UAAY1xE,EAAE2oB,SAAW3oB,EAAE4oB,SACxD5lB,KAAKwF,MAAM89B,UACVtjC,KAAKwF,MAAMmpE,cACT3uE,KAAKwF,MAAMgC,IACXxH,KAAKwF,MAAM89B,UAAmBmrC,EAC9BzxE,IAGNo9C,UACIo0B,GAA8B1sC,EAQ5B,KAPC9kC,GACCgD,KAAKwF,MAAMopE,cACT5xE,EACAgD,KAAKwF,MAAMqG,MACX7L,KAAKwF,MAAMgC,GACXxH,KAAKkuE,UAAUxoE,SAIzBwK,UAAW24B,IAAI,SAAQzoC,EAAQ,CAC7BkjC,SAAUtjC,KAAKwF,MAAM89B,UAAYtjC,KAAKwF,MAAMqpE,cAC5CA,cAAe7uE,KAAKwF,MAAMqpE,gBAE5B/gE,MAAO,CAAEghE,QAAS,QAClBxrD,IAAKtjB,KAAKkuE,UAGV7zB,SAAWm0B,EAAkC,MAAJ,EA9B3C,UAgCE,cAAChzB,EAAD,OACMx7C,KAAKwF,OADX,IAEE0oE,UAAWluE,KAAKkuE,UAChB/tE,KAAMmkC,YAAmBtkC,KAAKwF,UAE/BxF,KAAKwF,MAAM2oE,QACV,cAAC,KAAD,CACE7qC,SAAUtjC,KAAKwF,MAAM89B,SACrB2a,IAAI,mBAFN,SAIE,cAAC,IAAD,OAA0Bj+C,KAAKwF,OAA/B,IAAsC4P,OAAQA,UAKpD,qBACElD,KAAK,eACLytB,QAAS,KACN3/B,KAAKwF,MAAM89B,UAAYtjC,KAAKwF,MAAMmpE,cAAc3uE,KAAKwF,MAAMgC,IAE9D4yC,UACIo0B,GAA8B1sC,EAQ5B,KAPC9kC,GACCgD,KAAKwF,MAAMopE,cACT5xE,EACAgD,KAAKwF,MAAMqG,MACX7L,KAAKwF,MAAMgC,GACXxH,KAAKkuE,UAAUxoE,SAIzBwK,UAAW24B,IAAI,SAAQzoC,EAAQ,CAAEkjC,SAAUtjC,KAAKwF,MAAM89B,WACtDx1B,MAAO,CAAEghE,QAAS,QAClBxrD,IAAKtjB,KAAKkuE,UAEV7zB,UAAW,EApBb,SAsBGr6C,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS6/B,aAAc,CACpDnR,MAAO9pC,S,IA5KR2zC,E,eA0BW,CACpBo6B,QAAQ,EACRE,UAAU,IAyJC7hC,sBACbC,aACAG,IACAF,kBAAQ,KAAM,CAAE5X,qBAHH0X,CAIbuH,I,uHChNF,MAAMv4B,EAAWC,yBAAe,CAC9Bg9B,KAAM,CAAF,iCAIJC,OAAQ,CAAF,qCAINq2B,qBAAsB,CAAF,iFAUtB,MAAMC,UAAyB7gE,YA4C7BuB,SACE,MAAM,GACJlI,EADI,MAEJyB,EAFI,YAGJ24B,EAHI,SAIJlf,EAJI,SAKJ/G,EALI,MAMJ/H,EANI,QAOJq7D,EAPI,QAQJ5H,EARI,UASJ6H,EATI,OAUJzd,EAVI,UAWJvhD,EAXI,WAYJusB,EAZI,SAaJi1B,EAbI,KAcJntB,EAdI,kBAeJ4qC,EAfI,qBAgBJC,GACEpvE,KAAKwF,MACH6pE,EACJ,qCACGrvE,KAAKwF,MAAM8J,SAEX,IAAIsE,EAAQ0O,GACX,cAAC,QAAD,CAAqB8mB,OAAK,EAACnP,MAAM,MAAMskC,UAAQ,EAA/C,SACGj8C,GADSA,OAOlB,OAAO2sD,EACL,cAAC,OAAK/U,MAAN,CACEC,QAAM,EACNx+C,SAAUA,EACV/H,MAAOA,EAAM5R,OAAS,EACtBkO,UAAW24B,IACTjH,EAAc,OAAS,GACvB1xB,EACC,iBAAgB1I,EACjB4nE,WAAsBL,qBAClB,6BACA,MAVR,SAaE,eAAC,OAAD,WACE,eAAC,OAAK3U,IAAN,CAAUC,WAAS,EAAnB,UACe,IAAZgN,GACC,cAAC,OAAK5Q,OAAN,CAAa56B,MAAM,IAAnB,SACE,qBAAK3rB,UAAU,UAAf,SACE,wBACE1I,GAAK,YAAWkb,iBAAwBlb,IACxC8yD,QAAS6U,EAAoB,KAAQ,SAAQ3nE,EAF/C,UAIG0nE,GAAazd,GACZ,mBACE6d,cAAY,OACZp/D,UAAU,+BAGbjH,SAKT,eAAC,OAAKwtD,OAAN,CAAa56B,MAAmB,IAAZwrC,EAAgB,EAAI,GAAxC,UACG5V,IAAWh1B,GACV,sBAAKvsB,UAAU,UAAUpC,MAAO,CAAE6tB,OAAQ,KAA1C,UACE,wBACExpB,aAAYoyB,EAAK5jB,cAAcnF,EAASi9B,MACxCvoC,UAAU,0BACVyvB,QAAU4vC,IACRA,EAAI1pD,iBACJ4rC,EAAOjqD,IALX,SAQE,cAAC,OAAD,CAASlK,KAAK,eAAew2B,KAAK,QAAQmG,MAAM,WAElD,wBACE9nB,aAAYoyB,EAAK5jB,cAAcnF,EAASk9B,QACxCxoC,UAAU,0BACVyvB,QAAU4vC,IACRA,EAAI1pD,iBACJ6rC,EAASlqD,IALb,SAQE,cAAC,OAAD,CAASlK,KAAK,QAAQw2B,KAAK,QAAQmG,MAAM,aAI9Co1C,QAGJztC,GACC,cAAC,OAAKw4B,IAAN,CAAUC,WAAS,EAAnB,SACE,cAAC,OAAK5D,OAAN,CAAa4D,WAAS,EAACx+B,MAAM,KAA7B,SACE,oBAAG3rB,UAAU,OAAb,UACGlQ,KAAKwF,MAAM4pE,qBACL7qC,EAAK5jB,cAAcnF,EAASuzD,sBAA9B,IACD,KACHntC,cAQb,mCAAGytC,K,IAxJHL,E,eA2BkB,CACpBptC,YAAa,KACbjmB,UAAU,EACV/H,MAAO,GACPq7D,SAAS,EACT5H,QAAS,EACT3V,SAAU,KACVntB,KAAM,KACN9H,WAAY,KACZyyC,UAAW,OAyHAziC,yBAAWuiC,I,2pBCjK1B,MAAMQ,EAAkBhqE,IACtB,MAAM,GAAEgC,EAAF,MAAMyB,EAAN,MAAajL,EAAb,SAAoB6tC,EAApB,WAA8BpP,GAAej3B,EAEnD,OACE,cAAC,KAAD,OAAsBA,GAAtB,IAA6B6hE,QAAS,EAAtC,SACE,qBAAKn3D,UAAU,UAAf,SACE,cAAC,WAAD,CACE5S,KAAO,SAAQkK,EACf2zD,QAASn9D,IAAS,EAClB8qC,SAAUrM,EACVoP,SAAU,CAACpmB,GAAS01C,cAClBtvB,EAASrkC,EAAI2zD,IAEfthC,MAAO,uBAAOygC,QAAU,SAAQ9yD,EAAzB,SAAgCyB,YA8BjDumE,EAAev/D,aAAe,CAC5B2xB,YAAa,KACbjmB,UAAU,EACV/H,MAAO,GACP5V,MAAO,KACP6tC,SAAU,KACV4lB,OAAQ,KACRC,SAAU,MAGGjlB,yBAAW+iC,I,myBC9D1B,MAAMh0D,EAAWC,yBAAe,CAC9Bg0D,iBAAkB,CAAF,2DAIhBxsB,SAAU,CAAF,2CAWV,MAAMysB,UAAwBvhE,YAmD5BzO,YAAY8F,GACVmkC,MAAMnkC,GADW,uBA4GL,CAACuO,EAAMlI,EAAOoE,IAExB,cAAC,QAAD,CAEElD,QACE,qCACE,cAAC,OAAD,CAAMzP,KAAK,SADb,IACwByW,EAAK/V,SAG/BkrC,QACEj5B,GACE,eAAC,QAAD,CAAOi+B,OAAQj+B,EAAai+B,OAA5B,UACGn6B,EAAK8lB,MAAM9sB,QACZ,cAAC,OAAD,CACEzP,KAAK,SACLqiC,QAAUla,IACRxV,EAAa0/D,SAASlqD,EAAOxV,UAblC8D,EAAK/V,QA7GdgC,KAAK4vE,eAAiB5vE,KAAK4vE,eAAerxE,KAAKyB,MAE/CA,KAAK4Q,MAAQ,CACX2yC,QAAS/9C,EAAMxH,MACXwH,EAAM+4C,SACJ,IACE,IAAI/4C,EAAMxH,MAAQA,GAAU,CAC1BA,EAAM,OACN,CACEM,IAAKN,EAAM,OACXoE,KAAMmyB,YAAgBv2B,EAAM,QAC5BA,MAAOA,EAAM,OACb67B,MAAO,CACL9sB,QAAS/O,EAAMiL,OAEjB9I,KAAMnC,MAIZ,CACE,CAACwH,EAAMxH,MAAM,QAAS,CACpBM,IAAKkH,EAAMxH,MAAM,OACjBoE,KAAMmyB,YAAgB/uB,EAAMxH,OAC5BA,MAAOwH,EAAMxH,MAAM,OACnB67B,MAAO,CACL9sB,QAASvH,EAAMxH,MAAMiL,OAEvB9I,KAAMqF,EAAMxH,OAEd6xE,QAAS,CACPvxE,IAAK,UACL8D,KAAMpC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASynC,UAC7CjlD,MAAO,UACPmC,KAAM,OAGZ,IAIRorC,oBACEvrC,KAAKwF,MAAMgzC,qBASb1H,iCAAiCxiC,GAC/BtO,KAAKoqC,SAAS,CACZmZ,QAAS,EAAF,KACF,IACD,IACE,IACE,IACE,IAAQ,IAAOj1C,EAAUtQ,MAAOsQ,EAAU0jB,SACzCje,GAAD,OACKA,GADL,IAEE,MAAOwgB,YAAgBxgB,EAAK,WAGhC,OAED/V,GAAU,CACTA,EAAM,OACN,CACEM,IAAKN,EAAM,OACXoE,KAAMmyB,YAAgBv2B,EAAM,QAC5BA,MAAOA,EAAM,OACb67B,MAAO,CACL9sB,QAAS/O,EAAMiL,OAEjB9I,KAAMnC,OAtBT,IA2BL6xE,QAAS,CACPvxE,IAAK,UACL8D,KAAMpC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASynC,UAC7CjlD,MAAO,UACPmC,KAAM,UAcdyvE,eAAenqD,EAAOtlB,GAChBA,EAAKwpD,aAAoC,KAArBxpD,EAAKwpD,YAC3B3pD,KAAKwF,MAAMukC,cAAc,GAAI,CAC3BgkC,MAAQ,IAAG5tE,EAAKwpD,iBAGlB3pD,KAAKwF,MAAMgzC,qBAkCf9oC,SACE,MAAM,GAAElI,EAAF,MAAMyB,EAAN,MAAajL,EAAb,SAAoBugD,EAApB,SAA8B1S,GAAa7rC,KAAKwF,MAEtD,OACE,cAAC,KAAD,OAAsBxF,KAAKwF,OAA3B,aACE,cAAC,WAAD,CACEugB,QAAS,IAAO/lB,KAAK4Q,MAAM2yC,SAC3B5hB,YAAa14B,EACb+oB,QAAM,EACN89C,WAAS,EACTjC,OAAK,EACLkC,iBAAkB/vE,KAAKwF,MAAM++B,KAAK5jB,cAChCnF,EAASi0D,kBAEXlxB,SAAUA,EACVvgD,MACEugD,EACIvgD,EACE,IAAIA,EAAQ+V,GACVA,GAAQA,EAAK,OAASwgB,YAAgBxgB,EAAK,QAAUA,GAEvD,GACF/V,EACAu2B,YAAgBv2B,EAAM,QACtB,GAEN6tC,SAAU,CAACpmB,EAAOtlB,IACT0rC,EACLrkC,EACA+2C,EACI,IAAIp+C,EAAKnC,MAAQ+V,GAAS/T,KAAK4Q,MAAM2yC,QAAQxvC,GAAM5T,MACnDH,KAAK4Q,MAAM2yC,QAAQpjD,EAAKnC,OAAOmC,MAGvCyvE,eAAgB5vE,KAAK4vE,eACrB/1B,YAAa75C,KAAK65C,kB,IAjOtB61B,E,eAoCkB,CACpB9tC,YAAa,KACbjmB,UAAU,EACV/H,MAAO,GACPoe,OAAQ,GACRh0B,MAAO,KACPugD,UAAU,IA8LC/R,sBACbC,aACAC,kBACG97B,IAAD,CACEohB,OAAQphB,EAAMohB,OAAOle,QAEvB,CAAE0kC,wBAAoBzO,qBANXyC,CAQbkjC,I,+zBC5PF,MAAMl0D,EAAWC,yBAAe,CAC9BnL,IAAK,CAAF,+BAIH0/D,SAAU,CAAF,2CAIRC,YAAa,CAAF,iDAIXC,eAAgB,CAAF,uDAIdC,UAAW,CAAF,6CAITC,aAAc,CAAF,mDAIZtrC,QAAS,CAAF,uCAIPurC,QAAS,CAAF,6CAIPC,cAAe,CAAF,mHAIb/sB,QAAS,CAAF,6FAIPn2C,OAAQ,CAAF,qCAINhL,KAAM,CAAF,iCAIJmuE,SAAU,CAAF,yCAIRC,SAAU,CAAF,yCAIRV,UAAW,CAAF,2CAIT1vE,KAAM,CAAF,iCAIJ6I,MAAO,CAAF,mCAIL24B,YAAa,CAAF,+CAIXjmB,SAAU,CAAF,yCAIRC,UAAW,CAAF,gDAITC,UAAW,CAAF,gDAITC,QAAS,CAAF,kDAIPC,QAAS,CAAF,6EAIP00D,eAAgB,CAAF,+JAKdC,YAAa,CAAF,+GAIX98D,MAAO,CAAF,qCAgLD+8D,EAAkBpsC,IAAD,CACrB/hB,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAOs7B,EAAK5jB,cAAcnF,EAASspB,SACnChkB,OAAQ,CAAC,QAAS,QAGtBzL,WAAY,CACV7N,GAAI,CACFpH,KAAM,SACN6I,MAAOs7B,EAAK5jB,cAAcnF,EAAS60D,SACnCzuC,YAAa2C,EAAK5jB,cAAcnF,EAAS80D,gBAE3CrnE,MAAO,CACL7I,KAAM,SACN6I,MAAOs7B,EAAK5jB,cAAcnF,EAASvS,SAGvC0S,SAAU,CAAC,KAAM,WAUbi1D,EAAe,CAAClE,EAAYmE,IAAb,GAEnBC,WAAY,OAGZC,WAAYrE,EAAa,QAAU,eAGhCmE,GAkBCG,EAAyBC,IAC7B,MAAMr8D,EACJq8D,GAAYA,EACRA,EACG7mE,MAAM,kBACN7G,IAAKsO,GAASA,EAAKkrB,QACnBx3B,OAAQsM,GAAkB,KAATA,GACpB,KAEN,OAAO+C,EAAS,CAAEA,UAAW,IAgBzBs8D,EAA0B,CAACD,EAAU1yB,KACzC,MAAMgF,EACJ0tB,GAAYA,EACRA,EACG7mE,MAAM,kBACN7G,IAAKsO,GAASA,EAAKkrB,QACnBx3B,OAAQsM,GAAkB,KAATA,GACjBtO,IAAKsO,GAAS,CAACA,EAAMA,IACxB,KAEN,IAAK0sC,EACH,OAAOgF,EAAU,CAAEA,WAAY,GAGjC,MAAMzvC,EAAQyvC,EAAU,CAAEA,QAASA,GAAY,GAC/C,OAAOzvC,EAAQ,CAAEA,SAAU,IAQ7B,MAAMq9D,UAAqBhjE,YAiDzBzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK6rC,SAAW7rC,KAAK6rC,SAASttC,KAAKyB,MACnCA,KAAKoxE,qBAAuBpxE,KAAKoxE,qBAAqB7yE,KAAKyB,MAC3DA,KAAKqxE,WAAarxE,KAAKqxE,WAAW9yE,KAAKyB,MACvCA,KAAKsxE,cAAgBtxE,KAAKsxE,cAAc/yE,KAAKyB,MAC7CA,KAAKuxE,YAAcvxE,KAAKuxE,YAAYhzE,KAAKyB,MACzCA,KAAKwxE,eAAiBxxE,KAAKwxE,eAAejzE,KAAKyB,MAC/CA,KAAKyxE,iBAAmBzxE,KAAKyxE,iBAAiBlzE,KAAKyB,MACnDA,KAAK0xE,cAAgB1xE,KAAK0xE,cAAcnzE,KAAKyB,MAC7CA,KAAK2xE,eAAiB3xE,KAAK2xE,eAAepzE,KAAKyB,MAC/CA,KAAK4xE,kBAAoB5xE,KAAK4xE,kBAAkBrzE,KAAKyB,MACrDA,KAAK6xE,mBAAqB7xE,KAAK6xE,mBAAmBtzE,KAAKyB,MACvDA,KAAK8xE,gBAAkB9xE,KAAK8xE,gBAAgBvzE,KAAKyB,MACjDA,KAAK+xE,qBAAuB/xE,KAAK+xE,qBAAqBxzE,KAAKyB,MAC3DA,KAAKgyE,kBAAoBhyE,KAAKgyE,kBAAkBzzE,KAAKyB,MACrDA,KAAKiyE,qBAAuBjyE,KAAKiyE,qBAAqB1zE,KAAKyB,MAC3DA,KAAKkyE,aAAelyE,KAAKkyE,aAAa3zE,KAAKyB,MAC3CA,KAAKmyE,gBAAkBnyE,KAAKmyE,gBAAgB5zE,KAAKyB,MACjDA,KAAK8kE,SAAW9kE,KAAK8kE,SAASvmE,KAAKyB,MACnCA,KAAKoyE,UAAYpyE,KAAKoyE,UAAU7zE,KAAKyB,MACrCA,KAAK4Q,MAAQ,CACXo/D,SAAU,KACVC,YAAa,KACbG,aAAc,KACdD,UAAW,KACXM,eAAgB,KAChBC,YAAa,KACb2B,gBAAiB,GAUrBhB,WAAWz8D,GACT,MAAMyM,EAAUzM,EAAO3L,MAAM8zB,OAAOt4B,QAAQ,IAAK,KAC3C6tE,EAAwBtyE,KAAKwF,MAAMxH,MAAMwkB,UAC7CxiB,KAAK4Q,MAAMyhE,iBACXvxD,OAEIyxD,EADgBD,EAAsBpsE,QAAQ,eAAiB,EAEjE,IACKosE,EAAsBpnE,MAAM,EAAGonE,EAAsBtwE,OAAS,GACjEqf,EACAixD,EAAsBA,EAAsBtwE,OAAS,IAEvD,IAAIswE,EAAuBjxD,GAE/BrhB,KAAK6rC,SAAL,OACK7rC,KAAKwF,MAAMxH,OADhB,IAEEwkB,UAAW,IACN,IAAMxiB,KAAKwF,MAAMxH,MAAMwkB,UAAW,EAAGxiB,KAAK4Q,MAAMyhE,iBAD1C,OAGJryE,KAAKwF,MAAMxH,MAAMwkB,UAAUxiB,KAAK4Q,MAAMyhE,kBAHlC,IAIPvxD,OAAQyxD,OAEP,IAAMvyE,KAAKwF,MAAMxH,MAAMwkB,UAAWxiB,KAAK4Q,MAAMyhE,gBAAkB,IAEpEh9D,WAAY,EAAF,KACLrV,KAAKwF,MAAMxH,MAAMqX,YADZ,IAER,CAACgM,GAAD,GACEpY,MAAO2L,EAAO3L,MACd24B,YAAahtB,EAAOgtB,YACpBp6B,GAAI6Z,GACD,CAAEiqD,IACH,OAAQA,GACN,IAAK,YACL,IAAK,uBACH,MAAO,CACLlrE,KAAM,SACN4gB,OAAQ,WACRsqD,WAEJ,IAAK,OACL,IAAK,mBACH,MAAO,CACLlrE,KAAM,SACN4gB,OAAQ,OACRsqD,WAEJ,IAAK,QACL,IAAK,cACH,MAAO,CACLlrE,KAAM,SACN4gB,OAAQ,QACRsqD,WAEJ,IAAK,OACL,IAAK,cACH,MAAO,CACLlrE,KAAM,SACNkrE,WAEJ,IAAK,wBACL,IAAK,oBACH,MAAO,CACLlrE,KAAM,SACNkrE,WAEJ,IAAK,UACL,IAAK,sBACH,MAAO,CACLlrE,KAAM,UACNkrE,WAEJ,IAAK,QACH,MAAO,CACLlrE,KAAM,SACNkrE,WAEJ,IAAK,YACH,MAAO,CACLlrE,KAAM,OACN4gB,OAAQ,OACRsqD,WAEJ,IAAK,kBACL,IAAK,2BAKL,IAAK,gBACH,MAAO,CACLlrE,KAAM,QACNkrE,WAEJ,IAAK,SACL,IAAK,qBACH,MAAO,CACLlrE,KAAM,SACNmjD,QAAS,GACT+nB,WAEJ,IAAK,kBACH,MAAO,CACLlrE,KAAM,SACNkrE,WAEJ,IAAK,WACL,IAAK,uBACH,MAAO,CACLlrE,KAAM,SACN4gB,OAAQ,WACRsqD,WAEJ,IAAK,YACH,MAAO,CACLlrE,KAAM,SACN4gB,OAAQ,WACRsqD,WAEJ,IAAK,MACH,MAAO,CACLlrE,KAAM,SACN4gB,OAAQ,MACRsqD,WAEJ,IAAK,SACL,IAAK,sBACH,MAAO,CACLlrE,KAAM,UACNkrE,WAEJ,QACE,MAAO,CACLlrE,KAAM,SACNkrE,aAvGL,CA0GA12D,EAAO02D,YAGd3vD,SAAU/G,EAAO+G,SACb,IAAI3b,KAAKwF,MAAMxH,MAAM2d,SAAU0F,GAC/BrhB,KAAKwF,MAAMxH,MAAM2d,YAEvB3b,KAAK8kE,WASPwM,cAAc18D,GACZ5U,KAAK6rC,SAAL,OACK7rC,KAAKwF,MAAMxH,OADhB,IAEEwkB,UAAW,IACNxiB,KAAKwF,MAAMxH,MAAMwkB,UADX,OAGJ5N,GAHI,IAIPkM,OAAQ,SAId9gB,KAAK8kE,WASP0M,eAAe58D,GAAQ,MACrBA,EAAOkM,OACLlM,EAAOkM,SAAP,UACA9gB,KAAKwF,MAAMxH,MAAMwkB,UAAUxiB,KAAK4Q,MAAMw/D,qBADtC,aACA,EAAqDtvD,SACrD,GACF9gB,KAAK6rC,SAAL,OACK7rC,KAAKwF,MAAMxH,OADhB,IAEEwkB,UAAW,IACN,IAAMxiB,KAAKwF,MAAMxH,MAAMwkB,UAAW,EAAGxiB,KAAK4Q,MAAMw/D,cACnDx7D,KACG,IAAM5U,KAAKwF,MAAMxH,MAAMwkB,UAAWxiB,KAAK4Q,MAAMw/D,aAAe,OAGnEpwE,KAAK8kE,WAcPsL,aACE5tD,EACA0tD,EACAmC,EACAG,EACAC,GAmEA,OAHEvC,IAAmB1tD,EAAU6vD,GAAiB7qE,GA9Dd,MAChC,MAAMkrE,EAAyBlwD,EAAU+kB,UACtCjyB,GAAUA,EAAM9N,KAAO0oE,GAEpByC,EAAoBnwD,EACxBkwD,GACA5xD,OAAO5a,QAAQ,cAEX0sE,EAAwB,IACzB,IAAMpwD,EAAW,EAAG6vD,GADK,OAGvB7vD,EAAU6vD,IAHa,IAI1BvxD,OAAQ0B,EAAU6vD,GAAiBvxD,OAAOvb,OACvC8b,GAAYA,IAAYmxD,QAG1B,IAAMhwD,EAAW6vD,EAAkB,IAGlCQ,EACJF,GAAqB,EACjB,IACKC,EAAsBF,GAAwB5xD,OAAO5V,MACtD,EACAynE,EAAoB,GAEtBH,EACAI,EAAsBF,GAAwB5xD,OAC5C6xD,IAGJ,IACKC,EAAsBF,GAAwB5xD,OACjD0xD,GAYR,MAR2B,IACtB,IAAMI,EAAuB,EAAGF,GADV,OAGpBE,EAAsBF,IAHF,IAIvB5xD,OAAQ+xD,OAEP,IAAMD,EAAuBF,EAAyB,KAoBvDI,GAdG,IACF,IAAMtwD,EAAW,EAAG6vD,GADlB,OAGA7vD,EAAU6vD,IAHV,IAIHvxD,OAAQ,IAAI0B,EAAU6vD,GAAiBvxD,OAASxL,GAC9CA,IAAUk9D,EAAaC,EAAan9D,QAGrC,IAAMkN,EAAW6vD,EAAkB,IAkB5Cd,YAAY38D,GAAQ,QAClB,IAAIm+D,EAAkB,EAAH,GAAQn+D,GAER,CAAC,YAAa,YAAa,UAAW,WAC9C9U,QAASkzE,IAClBD,EAAkB,EAAH,KACVA,GACA,CAAE,CAACC,GAAOp+D,EAAOo+D,GAAQC,WAAWr+D,EAAOo+D,IAAS,SAI3D,MAAMz0B,EAEF,qBADF,UAAAv+C,KAAKwF,MAAMxH,MAAMqX,WAAWrV,KAAK4Q,MAAMu/D,UAAU3oE,WAAjD,eAAsD8jE,UAGpD,8BADF,UAAAtrE,KAAKwF,MAAMxH,MAAMqX,WAAWrV,KAAK4Q,MAAMu/D,UAAU3oE,WAAjD,eAAsD8jE,SAElDz3D,EAAS,EAAH,KACP7T,KAAKwF,MAAMxH,OADJ,IAEVwkB,UAAWuwD,EAAgB7C,eACvBlwE,KAAKowE,aACHpwE,KAAKwF,MAAMxH,MAAMwkB,UACjBuwD,EAAgB7C,eAChBlwE,KAAK4Q,MAAMyhE,gBACXryE,KAAK4Q,MAAMu/D,UAAU3oE,GACrBurE,EAAgBvrE,IAElBxH,KAAKwF,MAAMxH,MAAMwkB,UACrBnN,WAAY,EAAF,KACL,IAAKrV,KAAKwF,MAAMxH,MAAMqX,WAAY,CAACrV,KAAK4Q,MAAMu/D,UAAU3oE,MADnD,IAER,CAACurE,EAAgBvrE,IAAjB,WACKxH,KAAKwF,MAAMxH,MAAMqX,WAAWrV,KAAK4Q,MAAMu/D,UAAU3oE,KACjD,IAAKurE,EAAiB,CAAC,KAAM,oBAC7B/B,EAAsB+B,EAAgBn+D,SACtCs8D,EAAwB6B,EAAgBn+D,OAAQ2pC,MAGvD5iC,SAAUo3D,EAAgBp3D,SACtB,IAAO,IAAQ3b,KAAKwF,MAAMxH,MAAM2d,SAAU3b,KAAK4Q,MAAMu/D,UAAU3oE,IAAK,CAClEurE,EAAgBvrE,KAElB,IAAQxH,KAAKwF,MAAMxH,MAAM2d,SAAU3b,KAAK4Q,MAAMu/D,UAAU3oE,MAG9DxH,KAAK6rC,SAASh4B,GAEd7T,KAAK8kE,WAQP2M,mBACMzxE,KAAK4Q,MAAMyhE,gBAAkBryE,KAAKwF,MAAMxH,MAAMwkB,UAAUxgB,OAAS,GACnEhC,KAAKoqC,SAAS,CACZioC,gBAAiBryE,KAAK4Q,MAAMyhE,gBAAkB,IAGlDryE,KAAK6rC,SAAL,OACK7rC,KAAKwF,MAAMxH,OADhB,IAEEwkB,UAAW,IACN,IAAMxiB,KAAKwF,MAAMxH,MAAMwkB,UAAW,EAAGxiB,KAAK4Q,MAAM6/D,mBAChD,IAAMzwE,KAAKwF,MAAMxH,MAAMwkB,UAAWxiB,KAAK4Q,MAAM6/D,eAAiB,IAEnEp7D,WAAY,IACVrV,KAAKwF,MAAMxH,MAAMqX,WACjBrV,KAAKwF,MAAMxH,MAAMwkB,UAAUxiB,KAAK4Q,MAAM6/D,gBAAgB3vD,WAG1D9gB,KAAK8kE,WAQP4M,gBACE1xE,KAAK6rC,SAAL,OACK7rC,KAAKwF,MAAMxH,OADhB,IAEEwkB,UAAW,IACN,IAAMxiB,KAAKwF,MAAMxH,MAAMwkB,UAAW,EAAGxiB,KAAK4Q,MAAMyhE,iBAD1C,OAGJryE,KAAKwF,MAAMxH,MAAMwkB,UAAUxiB,KAAK4Q,MAAMyhE,kBAHlC,IAIPvxD,OAAQ,IACN9gB,KAAKwF,MAAMxH,MAAMwkB,UAAUxiB,KAAK4Q,MAAMyhE,iBAAiBvxD,OACvD9gB,KAAK4Q,MAAM8/D,kBAGZ,IAAM1wE,KAAKwF,MAAMxH,MAAMwkB,UAAWxiB,KAAK4Q,MAAMyhE,gBAAkB,IAEpEh9D,WAAY,IAAKrV,KAAKwF,MAAMxH,MAAMqX,WAAY,CAACrV,KAAK4Q,MAAM8/D,iBAE5D1wE,KAAK8kE,WASPj5B,SAAS7tC,GACPgC,KAAKwF,MAAMqmC,SAAS7rC,KAAKwF,MAAMgC,GAAIxJ,GASrCozE,qBAAqB/vD,EAAS6xD,GAG5B,MAEMC,EAAa,EAAH,KACXnzE,KAAKwF,MAAMxH,MAAMqX,WAAWgM,IAHnB,IAMR+xD,EAAa,EAAH,KACXpzE,KAAKwF,MAAMxH,MAAMqX,YACjB,CAAE,CAACgM,GAAU8xD,IAGlBnzE,KAAK6rC,SAAL,OACK7rC,KAAKwF,MAAMxH,OADhB,IAEEqX,WAAY+9D,KAShBtO,WACE9kE,KAAKoqC,SAAS,CACZ4lC,SAAU,KACVC,YAAa,KACbG,aAAc,KACdD,UAAW,KACXM,eAAgB,KAChBC,YAAa,OASjBiB,eAAelsD,GACbzlB,KAAKoqC,SAAS,CACZ4lC,UAAU,IAEZvqD,EAAMI,iBAQR+rD,kBAAkBnsD,GAChBzlB,KAAKoqC,SAAS,CACZ6lC,aAAa,IAEfxqD,EAAMI,iBASRgsD,mBAAmBhmE,GACjB7L,KAAKoqC,SAAS,CACZgmC,aAAcvkE,IAWlBimE,gBAAgBtqE,EAAI4N,GAClB,OAAOpV,KAAKoqC,SAAS,CACnB+lC,UAAW,CACT3oE,QAYNuqE,qBAAqBlmE,GACnB7L,KAAKoqC,SAAS,CACZqmC,eAAgB5kE,IAWpBmmE,kBAAkB18D,GAChBtV,KAAKoqC,SAAS,CACZsmC,YAAap7D,IAUjB28D,qBAAqBpmE,GACnB7L,KAAKoqC,SAAS,CACZioC,gBAAiBxmE,IAWrBqmE,aAAarmE,EAAO4iB,GAClBzuB,KAAK6rC,SAAL,OACK7rC,KAAKwF,MAAMxH,OADhB,IAEEwkB,UAAW,IACN,IAAMxiB,KAAKwF,MAAMxH,MAAMwkB,UAAW,EAAGxiB,KAAK4Q,MAAMyhE,iBAD1C,OAGJryE,KAAKwF,MAAMxH,MAAMwkB,UAAUxiB,KAAK4Q,MAAMyhE,kBAHlC,IAIPvxD,OAAQ8hB,IACN5iC,KAAKwF,MAAMxH,MAAMwkB,UAAUxiB,KAAK4Q,MAAMyhE,iBAAiBvxD,OACvDjV,EACA4iB,QAGD,IAAMzuB,KAAKwF,MAAMxH,MAAMwkB,UAAWxiB,KAAK4Q,MAAMyhE,gBAAkB,OAYxEF,gBAAgBtmE,EAAO4iB,GACrB,MAAMrZ,EAAS,EAAH,KACPpV,KAAKwF,MAAMxH,OADJ,IAEVwkB,UAAWogB,IAAK5iC,KAAKwF,MAAMxH,MAAMwkB,UAAW3W,EAAO4iB,KAErDzuB,KAAKoqC,SAAS,CACZioC,gBAAiB,IAAUj9D,EAAOoN,UAAW,CAC3Chb,GAAI4N,EAAOoN,UAAUxiB,KAAK4Q,MAAMyhE,iBAAiB7qE,OAGrDxH,KAAK6rC,SAASz2B,GAShBg9D,UAAUv+D,GAENA,EAAO8uB,aAC4B,uBAAnC9uB,EAAO8uB,YAAY0wC,aAEnBrzE,KAAKkyE,aAAar+D,EAAOsZ,OAAOthB,MAAOgI,EAAO8uB,YAAY92B,OAG1DgI,EAAO8uB,aAC4B,qBAAnC9uB,EAAO8uB,YAAY0wC,aAEnBrzE,KAAKmyE,gBAAgBt+D,EAAOsZ,OAAOthB,MAAOgI,EAAO8uB,YAAY92B,OASjE6D,SACE,MAAM,MAAEkE,EAAF,kBAAS0/D,GAAsBtzE,KAAKwF,OACpC,UAAE+tE,EAAF,gBAAaC,EAAb,UAA8BC,GAAcH,EAClD,IAAKtzE,KAAKwF,MAAMxH,MACd,MAAO,GAET,MAAM01E,EAAuB1zE,KAAKwF,MAAMxH,MAAMwkB,UAC5CxiB,KAAK4Q,MAAMyhE,iBACXvxD,OAAOvb,OACN8b,IACC,QA5vBY/L,EA4vBAtV,KAAKwF,MAAMxH,MAAMqX,WAAWgM,IA3vB7C/L,EAAMX,UAAYW,EAAMX,SAASvE,SAAS,cA4vBzB,eAAZiR,GA7vBY/L,QA+vBVq+D,EACJ3zE,KAAKwF,MAAMxH,MAAMwkB,UAAUxiB,KAAK4Q,MAAMyhE,iBAAiBvxD,OAAO5a,QAC5D,eACG,EACD0tE,EAAiCF,EAAqB1xE,OACtD6xE,EAA6BF,EAC/B3zE,KAAKwF,MAAMxH,MAAMwkB,UAAUxiB,KAAK4Q,MAAMyhE,iBAAiBvxD,OAAO9e,OAAS,EACvEhC,KAAKwF,MAAMxH,MAAMwkB,UAAUxiB,KAAK4Q,MAAMyhE,iBAAiBvxD,OAAO9e,OA6B5D8xE,EAAiB,IACrB,IACE9zE,KAAKwF,MAAMxH,MAAMwkB,UAAUxiB,KAAK4Q,MAAMyhE,iBAAiBvxD,OAAO5V,MAC5D0oE,EACAC,GAEF,CAACv+D,EAAOzJ,IACN,cAAC0nE,EAAD,CACEQ,YAAaz+D,EACbzJ,MAAO+nE,EAAiC/nE,EAF1C,SAKG,CAACmoE,EAAUC,IACV,2BACE3wD,IAAK0wD,EAASE,UACVF,EAASG,gBACTH,EAASI,iBAHf,IAIEtmE,MAAO8iE,EACLqD,EAASvH,WACTsH,EAASG,eAAermE,OAN5B,SASE,wBAAC,IAAD,OACM9N,KAAKwF,MAAMxH,MAAMqX,WAAWC,IADlC,IAEE9N,GAAI8N,EACJqG,UAAwD,IAA9C3b,KAAKwF,MAAMxH,MAAM2d,SAASzV,QAAQoP,GAC5Cm8C,OAAQzxD,KAAK8xE,gBACb5C,WAAW,EACXzyC,YAAY,EACZzN,MAAOnjB,EACP6lD,SAAU1xD,KAAKgyE,kBACfnmC,SAAU7rC,KAAKoxE,qBACf9yE,IAAM,GAAEgX,KAAStV,KAAK4Q,MAAMyhE,mBAAmBxmE,IAC/C7N,MAAOgC,KAAKwF,MAAMxH,MAAMqX,WAAWC,GAAOwvB,eAvB1C,GAAExvB,KAAStV,KAAK4Q,MAAMyhE,mBAAmBxmE,MA+BjDwoE,EAC2B,IAA/Br0E,KAAK4Q,MAAMyhE,kBACVryE,KAAKwF,MAAMxH,MAAMwkB,UAAUxiB,KAAK4Q,MAAMyhE,iBAAiB19D,UACxD3U,KAAKwF,MAAMxH,MAAMwkB,UAAUxiB,KAAK4Q,MAAMyhE,iBAAiB19D,SAASvE,SAC9D,aAGJ,OACE,gCACE,eAAC,UAAQsqB,MAAT,CACE5sB,MAAO,CACL25D,OAAQ,SAFZ,UAKG7zD,EAAM5R,OAAS,GACd,IAAI4R,EAAO,CAAC7U,EAAK8M,IACf,cAAC,UAAD,CACEw9B,KAAK,UAELqkC,UAAQ,EACRC,UAAQ,EACRC,OAAQ5tE,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS5H,OAC/C7G,QAAShO,GAJH,GAAEA,KAAO8M,MAOrB,eAAC2nE,EAAD,CAAiBpB,UAAWpyE,KAAKoyE,UAAjC,UACE,cAACqB,EAAD,CAAWJ,YAAY,mBAAmBiB,UAAU,aAApD,SACG,CAACN,EAAUC,KACV,iCACE/hE,KAAK,UACLhC,UAAU,8CACVoT,IAAK0wD,EAASE,UACVF,EAASG,gBAJf,IAKErmE,OA/1BGymE,EA+1BgBN,EAASM,eA/1B1B,CAClBxD,WAAYwD,EAAiB,UAAY,cACzCl4C,QAAS,OACTwwB,cAAe,MACf2nB,SAAU,SAs1BI,UAOG,IAAIx0E,KAAKwF,MAAMxH,MAAMwkB,UAAW,CAACy4B,EAAUpvC,IAC1C,cAAC,KAAD,CAEE5C,MAAOgyC,EAAShyC,MAChB+lB,MAAOnjB,EACPqiC,OAAQriC,IAAU7L,KAAK4Q,MAAMyhE,gBAC7B1yC,QAAS3/B,KAAKiyE,qBACdJ,mBAAoB7xE,KAAK6xE,mBACzBE,qBAAsB/xE,KAAK+xE,qBAC3BI,gBAAiBnyE,KAAKmyE,gBACtBvB,aAAcA,EACd6D,aAAa,EACbh4C,aACEwe,EAAStmC,WACJsmC,EAAStmC,SAASvE,SAAS,cAZ5B,GAAE6qC,EAASzzC,MAAMxH,KAAK4Q,MAAMyhE,mBAAmBxmE,MAiBzD,qBAAKqE,UAAU,gBAAf,SACE,wBACEiC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASlL,KACnDJ,UAAU,0BACVyvB,QAAS3/B,KAAK4xE,kBAHhB,SAKE,cAAC,OAAD,CAAMt0E,KAAK,OAAOw2B,KAAK,cAI1BkgD,EAASryC,gBA93BP4yC,SA0vBS,KACxB,IACEv0E,KAAKwF,MAAMxH,MAAMwkB,UAAUxiB,KAAK4Q,MAAMyhE,iBAAiBvxD,OAAO5V,MAC5D,EACA0oE,GAEF,CAACt+D,EAAOzJ,IACN,qBACEiC,MAAO,CAAEijE,WAAY,aADvB,SAIE,cAAC,IAAD,OACM/wE,KAAKwF,MAAMxH,MAAMqX,WAAWC,IADlC,IAEE9N,GAAI8N,EACJqG,UAAwD,IAA9C3b,KAAKwF,MAAMxH,MAAM2d,SAASzV,QAAQoP,GAC5Cm8C,OAAQzxD,KAAK8xE,gBACb5C,WAAW,EACXzyC,YAAY,EACZzN,MAAOnjB,EACP6lD,SAAU1xD,KAAKgyE,kBACfnmC,SAAU7rC,KAAKoxE,qBACfpzE,MAAOgC,KAAKwF,MAAMxH,MAAMqX,WAAWC,GAAOwvB,YAZtC,GAAExvB,KAAStV,KAAK4Q,MAAMyhE,mBAAmBxmE,MAgI9C6oE,GAED,cAACjB,EAAD,CACEJ,YAAY,qBACZiB,UAAU,WACVl0E,KAAK,QAHP,SAKG,CAAC4zE,EAAUC,KACV,iCACE3wD,IAAK0wD,EAASE,UACVF,EAASG,gBAFf,IAGErmE,OAv4BKymE,EAu4BgBN,EAASM,eAv4B1B,CACpBxD,WAAYwD,EAAiB,UAAY,gBAm4B3B,UAKGT,IAEAE,EAASryC,gBA34BL4yC,YAi5BZZ,EACC,qBAAK7lE,MAAO,CAAEijE,WAAY,aAA1B,SACE,wBAAC,IAAD,OACM/wE,KAAKwF,MAAMxH,MAAMqX,WAAWs/D,YADlC,IAEEntE,GAAI,aACJmU,UACuD,IAArD3b,KAAKwF,MAAMxH,MAAM2d,SAASzV,QAAQ,cAEpCurD,OAAQzxD,KAAK8xE,gBACb5C,WAAW,EACXzyC,YAAY,EACZzN,MACEhvB,KAAKwF,MAAMxH,MAAMwkB,UAAUxiB,KAAK4Q,MAAMyhE,iBACnCrwE,OAAS,EAEd0vD,SAAU1xD,KAAKgyE,kBACfnmC,SAAU7rC,KAAKoxE,qBACf9yE,IAAK,aACLN,MAAOgC,KAAKwF,MAAMxH,MAAMqX,WAAWs/D,WAAW7vC,aAGhD,KAEHuvC,GACC,cAAC,OAAKna,MAAN,CAAYC,QAAM,EAAlB,SACE,cAAC,OAAD,UACE,cAAC,OAAKC,IAAN,CAAUC,WAAS,EAAnB,SACE,eAAC,OAAK5D,OAAN,CAAa56B,MAAM,KAAnB,UACE,qBAAK3rB,UAAU,UAAf,SACE,uBAAOoqD,QAAQ,WAAf,SACGt6D,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASw0D,cAG5C,qBAAK9/D,UAAU,UAAf,SACE,wBACEiC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASlL,KACnD9I,GAAG,WACH0I,UAAU,0BACVyvB,QAAS3/B,KAAK2xE,eAJhB,SAME,cAAC,OAAD,CAAMr0E,KAAK,OAAO28B,MAAM,OAAOnG,KAAK,0BAS3B,OAAxB9zB,KAAK4Q,MAAMo/D,UACV,cAAC,KAAD,CACEjL,SAAU/kE,KAAKqxE,WACfvM,SAAU9kE,KAAK8kE,SACf77D,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASw0D,UAC9CtvD,SAAU,CACRtgB,KAAM,GACNoH,GAAI,GACJyB,MAAO,IAETmM,OAAQ,CACNoN,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASspB,SAC9ChkB,OAAQ,CAAC,UAAW,QAAS,cAAe,cAGhDzL,WAAY,CACVi2D,QAAS,CACPlrE,KAAM,SACNkrE,QAAS,SACTriE,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASpb,MAC9C2zB,WAAY,CACV,MAAQ,WAGZ9qB,MAAO,CACL7I,KAAM,SACN6I,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASvS,QAEhD24B,YAAa,CACXxhC,KAAM,SACN4gB,OAAQ,WACR/X,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASomB,cAEhDjmB,SAAU,CACRvb,KAAM,UACN6I,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASG,YAGlDA,SAAU,CAAC,OAAQ,YAIC,OAAzB3b,KAAK4Q,MAAMu/D,WACV,cAAC,KAAD,CACEpL,SAAU/kE,KAAKuxE,YACfzM,SAAU9kE,KAAK8kE,SACf77D,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS20D,WAC9CzvD,SAAQ,OACH1gB,KAAKwF,MAAMxH,MAAMqX,WAAWrV,KAAK4Q,MAAMu/D,UAAU3oE,KAD9C,IAENA,GAAIxH,KAAK4Q,MAAMu/D,UAAU3oE,GACzBmU,UAEG,IADD3b,KAAKwF,MAAMxH,MAAM2d,SAASzV,QAAQlG,KAAK4Q,MAAMu/D,UAAU3oE,IAEzD0oE,eAAgBlwE,KAAKwF,MAAMxH,MAAMwkB,UAC/BxiB,KAAK4Q,MAAMyhE,iBACX7qE,GACFoN,QAz+BiBpP,EA0+BfxF,KAAKwF,MAAMxH,MAAMqX,WAAWrV,KAAK4Q,MAAMu/D,UAAU3oE,IAz+B3DhC,WAAOoP,OACFpP,EAAMoP,OAAO3P,KAAK,MAEvBO,WAAO+9C,QACF/9C,EAAM+9C,QAAQhgD,IAAKsO,GAASA,EAAK,IAAI5M,KAAK,MAE/CO,SAAJ,UAAIA,EAAOsO,aAAX,OAAI,EAAcyvC,QACT/9C,EAAMsO,MAAMyvC,QAAQhgD,IAAKsO,GAASA,EAAK,IAAI5M,KAAK,MAElD,MAm+BGmQ,QAtsCSk2D,EAusCPtrE,KAAKwF,MAAMxH,MAAMqX,WAAWrV,KAAK4Q,MAAMu/D,UAAU3oE,IAAI8jE,QAvsCrC/mC,EAwsChBvkC,KAAKwF,MAAM++B,KAxsCW/hB,EAysCtBxiB,KAAKwF,MAAMxH,MAAMwkB,UAAUjd,OACxB01C,IACEA,EAAStmC,UACM,YAAhBsmC,EAASzzC,IACTyzC,EAAStmC,SAASvE,SAAS,cA7sCzB,CAClBoS,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAO,UACP6X,OAAQ,CACF,QAAS,cAAe,oBACzB,CAAEwqD,IACH,OAAQA,GACN,IAAK,YACH,MAAO,CAAC,aACV,IAAK,MACL,IAAK,WACL,IAAK,uBACL,IAAK,QACL,IAAK,cACH,MAAO,CAAC,YAAa,aACvB,IAAK,UACL,IAAK,sBACH,MAAO,CAAC,UAAW,WACrB,IAAK,wBACL,IAAK,oBACL,IAAK,YACL,IAAK,uBACL,IAAK,OACL,IAAK,mBACL,IAAK,OACL,IAAK,cACL,IAAK,QACL,IAAK,SACL,IAAK,sBACL,IAAK,YACL,IAAK,kBACL,IAAK,gBACH,MAAO,GACT,IAAK,kBACL,IAAK,2BACL,IAAK,SACL,IAAK,qBACH,MAAO,CAAC,UACV,QACE,MAAO,CAAC,YAAa,eAlCxB,CAoCAA,GACC,cAIVj2D,WAAY,EAAF,CACRpM,MAAO,CACL7I,KAAM,SACN6I,MAAOs7B,EAAK5jB,cAAcnF,EAASvS,QAErC24B,YAAa,CACXxhC,KAAM,SACN4gB,OAAQ,WACR/X,MAAOs7B,EAAK5jB,cAAcnF,EAASomB,cAErCsuC,eAAgB,CACd9vE,KAAM,SACN6I,MAAOs7B,EAAK5jB,cAAcnF,EAAS00D,gBACnC3sB,SA3EoBqxB,EA2EMpyD,EA1EfoyD,EAAgBrxE,IAAKnD,GAAS,CAACA,EAAKoH,GAAIpH,EAAK6I,UA4E1D0S,SAAU,CACRvb,KAAM,UACN6I,MAAOs7B,EAAK5jB,cAAcnF,EAASG,YAElC,CAAE2vD,IACH,OAAQA,GACN,IAAK,YACH,MAAO,CACLzvD,UAAW,CACTzb,KAAM,UACN6I,MAAOs7B,EAAK5jB,cAAcnF,EAASK,aAGzC,IAAK,MACL,IAAK,WACL,IAAK,uBACL,IAAK,QACL,IAAK,cACH,MAAO,CACLD,UAAW,CACTxb,KAAM,UACN6I,MAAOs7B,EAAK5jB,cAAcnF,EAASI,YAErCC,UAAW,CACTzb,KAAM,UACN6I,MAAOs7B,EAAK5jB,cAAcnF,EAASK,aAGzC,IAAK,UACL,IAAK,sBACH,MAAO,CACLC,QAAS,CACP1b,KAAM,UACN6I,MAAOs7B,EAAK5jB,cAAcnF,EAASM,UAErCC,QAAS,CACP3b,KAAM,UACN6I,MAAOs7B,EAAK5jB,cAAcnF,EAASO,WAGzC,IAAK,wBACL,IAAK,oBACL,IAAK,YACL,IAAK,uBACL,IAAK,OACL,IAAK,mBACL,IAAK,OACL,IAAK,cACL,IAAK,QACL,IAAK,SACL,IAAK,sBACL,IAAK,YACL,IAAK,kBACL,IAAK,gBACH,MAAO,GACT,IAAK,kBACL,IAAK,2BACL,IAAK,SACL,IAAK,qBACH,MAAO,CACLnH,OAAQ,CACNxU,KAAM,SACN6I,MAAOs7B,EAAK5jB,cAAcnF,EAAS+nC,SACnCviC,OAAQ,aAGd,QACE,MAAO,CACLpF,UAAW,CACTxb,KAAM,UACN6I,MAAOs7B,EAAK5jB,cAAcnF,EAASI,YAErCC,UAAW,CACTzb,KAAM,UACN6I,MAAOs7B,EAAK5jB,cAAcnF,EAASK,eAtE1C,CA0EAyvD,IAEL3vD,SAAU,CAAC,OAAQ,aAmkCe,OAA3B3b,KAAK4Q,MAAMq/D,aACV,cAAC,KAAD,CACElL,SAAU/kE,KAAKsxE,cACfxM,SAAU9kE,KAAK8kE,SACf77D,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASy0D,aAC9CvvD,SAAU,CACRlZ,GAAI,GACJyB,MAAO,IAETmM,OAAQu7D,EAAe3wE,KAAKwF,MAAM++B,QAGT,OAA5BvkC,KAAK4Q,MAAMw/D,cACV,cAAC,KAAD,CACErL,SAAU/kE,KAAKwxE,eACf1M,SAAU9kE,KAAK8kE,SACf77D,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS40D,cAC9C1vD,SAAU,CACRlZ,GAAIxH,KAAKwF,MAAMxH,MAAMwkB,UAAUxiB,KAAK4Q,MAAMw/D,cAAc5oE,GACxDyB,MAAOjJ,KAAKwF,MAAMxH,MAAMwkB,UAAUxiB,KAAK4Q,MAAMw/D,cAAcnnE,OAE7DmM,OAAQu7D,EAAe3wE,KAAKwF,MAAM++B,QAGP,OAA9BvkC,KAAK4Q,MAAM6/D,gBACV,cAAC,UAAD,CACEtjC,MAAI,EACJpgC,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASi1D,gBAChD3L,SAAU9kE,KAAK8kE,SACf+P,UAAW70E,KAAKyxE,mBAGQ,OAA3BzxE,KAAK4Q,MAAM8/D,aACV,cAAC,UAAD,CACEvjC,MAAI,EACJpgC,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASk1D,aAChD5L,SAAU9kE,KAAK8kE,SACf+P,UAAW70E,KAAK0xE,mBAvvCR,IAACpG,EAAS/mC,EAAM/hB,EAdVoyD,EAuOKpvE,EAAU,G,IAoCnC2rE,E,eAqCkB,CACpBx1D,UAAU,EACV3d,MAAO,GACP4V,MAAO,KA09BI44B,sBACbC,aACAtU,YAAe,CAAC,sBAChBuU,kBACE,CAAC97B,EAAOpL,KAAR,CACExH,MAAO,IAASwH,EAAMxH,OAASkkB,KAAKC,MAAM3c,EAAMxH,OAASwH,EAAMxH,QAEjE,IAPWwuC,CASb2kC,I,8tBC/3CF,MAAM31D,EAAWC,yBAAe,CAC9BqpB,QAAS,CAAF,uCAIPurC,QAAS,CAAF,6CAIPC,cAAe,CAAF,mHAIbrnE,MAAO,CAAF,mCAIL24B,YAAa,CAAF,+CAIXogC,MAAO,CAAF,mCAILze,QAAS,CAAF,uCAIP5nC,SAAU,CAAF,yCAIRusB,OAAQ,CAAF,uCAIN+a,SAAU,CAAF,yCAIRqK,WAAY,CAAF,+CAWZ,MAAMwnB,UAAqB3mE,YAyEzBo9B,oBAAoB,MAEdvrC,KAAKwF,MAAM+9C,SAA0C,KAA/B,UAAAvjD,KAAKwF,MAAM+9C,eAAX,eAAoBvhD,UAC5ChC,KAAKwF,MAAM8oD,cAEXtuD,KAAKwF,MAAMmuB,cAAc,CACvBC,eAAgB5zB,KAAKwF,MAAM8oD,aAC3Bx6B,MAAO,EACP1F,WAAYpuB,KAAKwF,MAAM8L,OAU7B5B,SAAS,MACP,MAAM,GAAElI,EAAF,QAAM+7C,EAAN,MAAevlD,EAAf,KAAsBumC,EAAtB,SAA4BsH,GAAa7rC,KAAKwF,MAC9CuvE,EAAkBzxB,YAAeC,EAASvlD,EAAOumC,GAEjDuE,EAAW9oC,KAAKwF,MAAMsjC,UAAY9oC,KAAKwF,MAAMi3B,WAC7CkyB,EAAS3uD,KAAKwF,MAAM2zB,YAAY2L,QAEtC,IAAI/e,EAAU/lB,KAAKwF,MAAM8oD,aACrBtuD,KAAKwF,MAAM+9C,QACX,IACK,IAAIA,EAAUpnB,IAAD,CACdn+B,MAAOm+B,EAAO,GACdtC,MAEgB,SAAdsC,EAAO,IAAiBA,EAAO,GAAKA,EAAO,GAAKA,EAAO,SAIvDn8B,KAAKwF,MAAM6pD,gBAAkBrvD,KAAKwF,MAAMs/B,QACxC,CACE,CACEjL,MAAO75B,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASynC,UAC9CjlD,MAAO,aAGX,IAGV,MAAM0xD,EAAU1vD,KAAKwF,MAAMkqD,QACvB1vD,KAAKwF,MAAMkqD,QACJ,UAAPloD,GAAyB,WAAPA,EAEtB,OACE,cAAC,KAAD,OAAsBxH,KAAKwF,OAA3B,aACE,cAACmpD,EAAD,CACEnnD,GAAK,SAAQA,EAEblK,KAAMkK,EACNi1B,WAAYqM,EACZksC,cAAc,EACd9kE,UAAU,yBACVk/C,gBAAgB,eAChBM,QAASA,EACT3pC,QAASA,EACTmV,OAAQF,IACRL,MAAOF,IACPhO,WAAU,QACJ1G,aAAA,EAAAA,EAAS/jB,QAAS,IAAM,CAC1Bs2B,eAFM,IAIR4B,sBACAK,mBACAX,OAAQ55B,KAAKwF,MAAMyvE,qBAAuBr7C,MAE5C57B,MAAO+2E,EACPpzC,YAAW,UACT3hC,KAAKwF,MAAMm8B,mBADF,QAET3hC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS0sB,QAEzC2D,SAAWmiB,GAEAniB,EACLrkC,EAFAkoD,EAGA1B,EAAezqD,IAAK0T,GAAOA,EAAGjZ,OAKhCgwD,GAA2C,aAAzBA,EAAehwD,MAC7BgwD,EAAehwD,WACfmH,GAGRsqD,aAAW,GArCNlM,O,IA/HTuxB,E,eA+CkB,CACpBlzC,YAAa,KACbjmB,UAAU,EACV7H,MAAO,CACLigB,WAAY,MAEd4Z,cAAe,CACb5Z,WAAY,MAEdngB,MAAO,GACP2vC,QAAS,GACTvlD,MAAO,KACP6tC,SAAU,OACV2lB,OAAQ,OACR7xB,QAAS,OACT8xB,OAAQ,KACRC,SAAU,KACVrC,eAAe,EACf4lB,oBAAqB,OA0GlB,MAAMC,EAAwBzoC,qBAAWqoC,GAEjCtoC,sBACbrU,YAAe,CAAC,gBAChBuU,kBACE,CAAC97B,EAAOpL,KAAU,UAChB,MAAM8oD,EAAgB9oD,EAAM+9C,QAIxB,GAHA7V,YAAiBloC,IACjBooC,YAAkBpoC,IAClBqoC,YAAkBroC,GAGhBy6C,EAAU,UACdrvC,EAAMovC,oBADQ,iBACd,EAAqBsO,UADP,iBACd,EAAoC3hB,mBADtB,aACd,EAAkD/7B,EAAM2zB,KAAK1O,QAI/D,OAAIrwB,EAAM+9C,QACD,CACLA,QAAS/9C,EAAM+9C,QACfjyC,KAAMV,EAAM2zB,KAAK1O,QAEVoqB,EACF,CACLqO,eACA/K,QAAO,UAAEtD,aAAF,EAAEA,EAAYnsC,aAAd,QAAuB,GAC9BxC,KAAMV,EAAM2zB,KAAK1O,QAIVy4B,EACF,CACLA,eACAh9C,KAAMV,EAAM2zB,KAAK1O,QAGd,CAAEvkB,KAAMV,EAAM2zB,KAAK1O,QAdH,OAgBzB,CAAElC,kBAAeO,8BApCNsY,CAsCb0oC,I,6pBC7QF,MAAMC,EAAkB3vE,IACtB,MAAM,GAAEgC,EAAF,UAAMqU,EAAN,MAAiB7d,EAAjB,SAAwB6tC,EAAxB,YAAkClK,GAAgBn8B,GACjD4vE,EAAaC,GAAkBhxD,mBAAS,IAc/C,OACE,eAAC,KAAD,OAAsB7e,GAAtB,IAA6B0K,UAAU,WAAvC,UACE,cAAC,WAAD,CACE1I,GAAK,SAAQA,EACblK,KAAMkK,EACNxJ,MAAOA,GAAS,GAChB8qC,SAAUtjC,EAAMi3B,WAChBkF,YAAaA,EACbkK,SAAU,EAAGze,YApBI,EAAC5lB,EAAIxJ,KAC1B,GAAI6d,GAAY7d,aAAH,EAAGA,EAAOgE,QAAQ,CAC7B,IAAIszE,EAAYz5D,EAAY7d,EAAMgE,OAEhCqzE,EADEC,EAAY,EACE,iCAAgC5vC,KAAKoK,IAAIwlC,GAE1C,IAGnBzpC,EAASrkC,EAAIxJ,IAYPu3E,CAAe/tE,EAAqB,KAAjB4lB,EAAOpvB,WAAemH,EAAYioB,EAAOpvB,SAG/Do3E,EAAYpzE,OAAS,GACpB,cAAC,QAAD,CAAyBonC,OAAK,EAACnP,MAAM,MAAMskC,UAAQ,EAAnD,SACG6W,GADSA,QAiCpBD,EAAellE,aAAe,CAC5B2xB,YAAa,KACb/lB,UAAW,KACXF,UAAU,EACV/H,MAAO,GACP5V,MAAO,KACP6tC,SAAU,KACV4lB,OAAQ,KACRC,SAAU,MAGGjlB,yBAAW0oC,I,6pBC/E1B,MAAMK,UAAmBrnE,YA0DvBo9B,oBACMvrC,KAAKwF,MAAMglC,OACbxqC,KAAKiyC,KAAKzH,QASd96B,SACE,MAAM,GACJlI,EADI,MAEJxJ,EAFI,SAGJ6tC,EAHI,OAIJ2lB,EAJI,QAKJ7xB,EALI,KAMJ0J,EANI,WAOJ4Q,EAPI,UAQJr+B,EARI,UASJC,EATI,YAUJ8lB,GACE3hC,KAAKwF,MAET,OACE,eAAC,KAAD,OAAsBxF,KAAKwF,OAA3B,IAAkC0K,UAAU,OAA5C,UACE,cAAC,QAAD,CACE1I,GAAK,SAAQA,EACblK,KAAMkK,EACNxJ,MAAOA,GAAS,GAChB8qC,SAAU9oC,KAAKwF,MAAMi3B,WACrB4M,KAAMA,GAAQ,KACd1H,YAAaA,EACbkK,SAAU,EAAGze,YACXye,EAASrkC,EAAqB,KAAjB4lB,EAAOpvB,WAAemH,EAAYioB,EAAOpvB,OAExDslB,IAAM2uB,IACJjyC,KAAKiyC,KAAOA,GAEduf,OAAQ,EAAGpkC,YACTokC,EAAOhqD,EAAqB,KAAjB4lB,EAAOpvB,WAAemH,EAAYioB,EAAOpvB,OAEtD2hC,QAAS,IAAMA,IACf/jB,UAAWA,GAAa,KACxBC,UAAWA,GAAa,OAEzBwtB,GAAQ4Q,GACP,wBAAQ/pC,UAAY,SAAQ1I,kBAAoBm4B,QAASsa,EAAzD,SACE,cAAC,KAAD,CAAM38C,KAAM+rC,EAAMvV,KAAK,gB,IA3G7B0hD,E,eAoCkB,CACpB5zC,YAAa,KACbjmB,UAAU,EACV/H,MAAO,GACP5V,MAAO,KACP6tC,SAAU,OACV2lB,OAAQ,OACR7xB,QAAS,OACT8xB,OAAQ,KACRC,SAAU,KACVlnB,OAAO,EACPnB,KAAM,KACN4Q,WAAY,KACZr+B,UAAW,KACXC,UAAW,OAiEA4wB,yBAAW+oC,I,m2BC9G1B,MAAMC,EAASp2E,IAAS,CAAD,0IAAC,IAAM,6CAAP,qMAEjBmc,EAAWC,yBAAe,CAC9BqpB,QAAS,CAAF,uCAIPurC,QAAS,CAAF,6CAIPC,cAAe,CAAF,mHAIbrnE,MAAO,CAAF,mCAIL24B,YAAa,CAAF,+CAIXjmB,SAAU,CAAF,yCAIR+8B,OAAQ,CAAF,uCAmBR,MAAMg9B,UAA+BvnE,YA2FnCzO,YAAY8F,GACVmkC,MAAMnkC,GAEN,MAAM,cAAEmwE,GAAkBnwE,EAAMowE,mBAC1B,YAAEC,GAAgBrwE,EAAMswE,QACItwE,EAAMuwE,2BAA2BjxC,QAEnE9kC,KAAKg2E,YAAcn1E,IAAOD,SAASq1E,uBAAuBzwE,GAoB1DxF,KAAKoV,OAAS,CACZoN,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAOzD,EAAM++B,KAAK5jB,cAAcnF,EAASspB,SACzChkB,OAAQ,CAAC,QAAS,KAAM,cAAe,cAG3CzL,WAAY,CACV7N,GAAI,CACFpH,KAAM,SACN6I,MAAOzD,EAAM++B,KAAK5jB,cAAcnF,EAAS60D,SACzCzuC,YAAap8B,EAAM++B,KAAK5jB,cAAcnF,EAAS80D,gBAEjDrnE,MAAO,CACL7I,KAAM,SACN6I,MAAOzD,EAAM++B,KAAK5jB,cAAcnF,EAASvS,QAE3C24B,YAAa,CACXxhC,KAAM,SACN4gB,OAAQ,WACR/X,MAAOzD,EAAM++B,KAAK5jB,cAAcnF,EAASomB,cAE3CjmB,SAAU,CACRvb,KAAM,UACN6I,MAAOzD,EAAM++B,KAAK5jB,cAAcnF,EAASG,YAG7CA,SAAU,CAAC,KAAM,UAGnB3b,KAAK6rC,SAAW7rC,KAAK6rC,SAASttC,KAAKyB,MASrC6rC,SAASqqC,GACP,MAAM,aAAEC,GAAiBn2E,KAAKwF,MAAMswE,QACpC91E,KAAKoqC,SAAS,CAAE8rC,gBAChB,MAAME,EAAYhgC,MAElBp2C,KAAKwF,MAAMqmC,SAAS7rC,KAAKwF,MAAMgC,GAAI,CACjC,eAAgBxH,KAAKwF,MAAMxH,MACvBgC,KAAKwF,MAAMxH,MAAM,gBACjB,YACJm6C,SAAUn4C,KAAKwF,MAAMxH,MAAQgC,KAAKwF,MAAMxH,MAAMm6C,SAAW,OACzDh4C,KAAMk2E,IAAeC,qBACnB,cAAC,WAAD,CACErlE,MAAOmlE,EAAU,CACfxjE,YAAa,CACXC,MAAO7S,KAAKwF,MAAMqN,SAHxB,SAOE,cAAC,eAAD,UACG0jE,IACCJ,EAAaD,EAAYM,qBACzB31E,IAAOD,SAAS61E,qBAAqBC,gBACrC71E,IAAOD,SAAS61E,qBAAqBE,sBAajDjnE,SACE,MAAM,GACJlI,EADI,MAEJyB,EAFI,YAGJ24B,EAHI,SAIJjmB,EAJI,MAKJ3d,EALI,MAMJ4V,EANI,SAOJ8O,GACE1iB,KAAKwF,MAGP,OACE,cAAC,OAAK00D,MAAN,CACEC,QAAM,EACNx+C,SAAUA,EACV/H,MAAOA,EAAM5R,OAAS,EACtBkO,UAAW0xB,EAAc,OAAS,GAClCp6B,GAAK,GAAEkb,GAAY,WAAWlb,IALhC,SAOE,sBAAK0I,UAAU,UAAf,UACE,uBAAOoqD,QAAU,SAAQ9yD,EAAzB,SAAgCyB,IAChC,cAAC,WAAD,CAAUzB,GAAIA,EAAIlK,KAAMkK,EAAIxJ,MAAOA,EAAQA,EAAMmC,KAAO,KACvDyhC,GAAe,mBAAG1xB,UAAU,OAAb,SAAqB0xB,IACpC,IAAIhuB,EAAQ0O,GACX,cAAC,QAAD,CAAqB8mB,OAAK,EAACnP,MAAM,MAAMskC,UAAQ,EAA/C,SACGj8C,GADSA,U,IA1NpBozD,E,eAuEkB,CACpB9zC,YAAa,KACbjmB,UAAU,EACV3d,MAAO,CACL,eAAgB,YAChBmC,KAAM,GACNg4C,SAAU,QAEZvkC,MAAO,GACP69C,OAAQ,KACRC,SAAU,KACV7lB,SAAU,OAgLP,MAAM+qC,EAAgBpqC,kBAC3BC,aACAtU,YAAe,CACb,UACA,6BACA,gCACA,iCACA,iBACA,oBACA,6BACA,+BACA,iBAEFuU,kBACE,CAAC97B,EAAOpL,KAAR,CACEqN,MAAOjC,EAAMgC,YAAYC,QAE3B,IAjByB25B,CAmB3BkpC,GAEImB,EAAarxE,IACjB,MAAO8xB,EAAQw/C,GAAavqE,IAAM8X,UAAS,GAI3C,OAHA9X,IAAMqX,UAAU,KACd6xD,EAAO/9C,OAAOl1B,KAAK,IAAMs0E,GAAU,KAClC,IACIx/C,EAAS,cAACs/C,EAAD,KAAmBpxE,IAAY,MAGlCqxE,O,mwBCvVf,MAAMr7D,EAAWC,yBAAe,CAC9Bs7D,gBAAiB,CAAF,+CAIfC,kBAAmB,CAAF,mDAIjBC,cAAe,CAAF,2CAIbC,gBAAiB,CAAF,2DAIf5mE,IAAK,CAAF,+CA2MU6mE,IA3KW3xE,IACxB,MAAM,MACJ0kC,EADI,SAEJxnB,EAFI,GAGJlb,EAHI,OAIJ4N,EAJI,MAKJpX,EAAQ,GALJ,SAMJ6tC,EANI,eAOJurC,GACE5xE,GACG6xE,EAAcC,GAAmB/qE,IAAM8X,SAASrmB,EAAMgE,OAAS,GAChEuiC,EAAOkE,oBAEb,SAAS8uC,EAAmBv6E,EAAGywE,GAC7B,MAAM,MAAE5hE,GAAU4hE,EAGlB6J,EAFiBD,IAAiBxrE,GAAS,EAAIA,GAIjD,MAAMuhE,EAAiC,mBAAXh4D,EAAwBA,EAAO5P,GAAS4P,EAMpE,OACE,sBAAKlF,UAAU,oBAAf,UACE,eAAC,KAAD,OAAsB1K,GAAtB,IAA6B2pE,mBAAiB,EAACj/D,UAAU,aAAzD,UACE,qBAAKA,UAAU,0BAAf,SACE,eAAC,SAAD,CACEsnE,SAAO,EACPnuC,MAAI,EACJl3B,aACEi7D,EAAaqK,YACZ,GAAElzC,EAAK5jB,cAAcnF,EAASlL,QAAQ88D,EAAankE,QAEtD02B,QAAU3iC,IACRA,EAAE6oB,iBACFgmB,EAASrkC,EAAI,IACRxJ,EACH,CACE,MAAOklC,kBAGXo0C,EAAgBt5E,EAAMgE,SAf1B,UAkBE,cAAC,KAAD,CAAM1E,KAAMghE,IAAQxqC,KAAK,SAlB3B,IAqBGs5C,EAAaqK,YACX,GAAElzC,EAAK5jB,cAAcnF,EAASlL,QAAQ88D,EAAankE,aAGxC,IAAjBjL,EAAMgE,QACL,uBACEk4C,kBAAkB,YAChBx3B,GAAY,yBACElb,IAChBpH,KAAK,SACLpC,MAAOumC,EAAK5jB,cAAcnF,EAAS07D,uBAIzC,cAAC,IAAD,CACEppE,MAAO,CACLutB,UAAY,6BAAmBr9B,EAAMgE,OAAS,EA5ClC,yDA4CoD,KAC9DhE,EAAMgE,OAAS,EA5CN,0DA4CuB,MAGpC01E,wBAA0B,YACxBh1D,GAAY,yBACElb,IAChBmwE,UAAW35E,EAAMuF,IAAK/F,GAAM,CAACA,EAAE,OAAQA,IACvCo6E,WAAa/jE,IACX,MAAM,OAAEsZ,EAAF,YAAUwV,GAAgB9uB,EAChC,IAAK8uB,EACH,OAGF,MAAMm5B,EAAQ99D,EAAMmvB,EAAOthB,OACrBs4C,EAASnmD,EAAM2kC,EAAY92B,OAKjC,OAJA7N,EAAM2kC,EAAY92B,OAASiwD,EAC3B99D,EAAMmvB,EAAOthB,OAASs4C,EAEtBtY,EAASrkC,EAAIxJ,IACN,GAtBX,SAyBG,EAAGyQ,QAAOopE,UAAShsE,QAAOisE,cAEvB,mCACEx0D,IAAKw0D,EAAS5D,UACV4D,EAAS3D,gBAFf,IAGE71E,IAAKu5E,IAEL,eAAC,YAAD,CAAuBhK,OAAK,EAACC,QAAM,EAAnC,UACE,eAAC,YAAUC,MAAX,CACE7/B,OAAQmpC,IAAiBxrE,EACzBA,MAAOA,EACP8zB,QAAS43C,EACTplE,aAAa,GACXklE,IAAiBxrE,EACb04B,EAAK5jB,cAAcnF,EAASw7D,mBAC5BzyC,EAAK5jB,cAAcnF,EAASy7D,mBAC7BprE,EAAQ,IARf,UAUE,4BACEiC,MAAO,CACLiqE,WAAY,UACZ17C,QAAS,iBAEPy7C,EAAS1D,iBALf,IAMElkE,UAAU,cANZ,SAQE,cAAC,KAAD,CAAM5S,KAAM06E,IAASlkD,KAAK,YAG5B,qBAAK5jB,UAAU,0BAAf,SACI,GAAEk9D,EAAankE,UAAU4C,EAAQ,MAErC,sBAAKqE,UAAU,kBAAf,UACE,wBACEiC,aAAa,GAAEoyB,EAAK5jB,cAClBnF,EAASu7D,qBACLlrE,EAAQ,IACd8zB,QAAS,KACPkM,EACErkC,EACAxJ,EAAMuH,OAAO,CAACqvB,EAAGh4B,IAAMA,IAAMiP,KAPnC,SAWE,cAAC,KAAD,CAAMvO,KAAM2zD,IAAWn9B,KAAK,OAAOmG,MAAM,cAE1Co9C,IAAiBxrE,EAChB,cAAC,KAAD,CAAMvO,KAAM+8B,IAAOvG,KAAK,SAExB,cAAC,KAAD,CAAMx2B,KAAMg9B,IAASxG,KAAK,eAIhC,cAAC,YAAUsqC,QAAX,CAAmBlwB,OAAQmpC,IAAiBxrE,EAA5C,SACE,cAAC,UAAD,UACE,cAAC,IAAD,CACErE,GAAK,GAAEA,KAAMqE,IAEbq+B,MAAOA,EACP90B,OACEgiE,EACIA,EAAehiE,EAAQ3G,EAAO81B,GAC9B6oC,EAENpvE,MAAOyQ,EACPo9B,SAAU,CAACp0B,EAAIwgE,KACb,MAAMC,EAAWl6E,EAAMuF,IAAI,CAACqxB,EAAGh4B,IAC7BA,IAAMiP,EAAQ+oB,EAAIqjD,GAEpBpsC,EAASrkC,EAAI0wE,KAZT,MAAK1wE,KAAMqE,WAlDTA,W,8HChJb4P,yBAAe,CAC9BmmB,YAAa,CAAF,+DAWb,MAAMmS,UAAa5lC,YAmCjBzO,YAAY8F,GACVmkC,MAAMnkC,GA8BNxF,KAAK6rC,SAAW7rC,KAAK6rC,SAASttC,KAAKyB,MAQrCurC,oBACMvrC,KAAKiyC,OACPjyC,KAAKiyC,KAAKkmC,QAAU,IAAMn4E,KAAKoqC,SAAS,CAAEI,OAAO,IACjDxqC,KAAKiyC,KAAKmmC,SAAW,IAAMp4E,KAAKoqC,SAAS,CAAEI,OAAO,KAUtDsG,iCAAiCxiC,GAC/B,GACEA,EAAU+G,WAAWusB,aACrB5hC,KAAKwF,MAAM6P,WAAWusB,cAAgBtzB,EAAU+G,WAAWusB,cAC1D5hC,KAAK4Q,MAAM45B,MACZ,CACA,MAAM6tC,EAAer4E,KAAK21E,cAAcrnE,EAAU+G,WAAWusB,aAC7D5hC,KAAKoqC,SAAS,CACZ8rC,YAAa5nE,EAAU+G,WAAWusB,YAC9B5hC,KAAK61E,YAAYyC,kBAAkBD,GACnCr4E,KAAK61E,YAAY0C,iBAIpBv4E,KAAKwF,MAAM89B,UAAYh1B,EAAUg1B,WACpCtjC,KAAKiyC,KAAKzH,QACVxqC,KAAKoqC,SAAS,CAAEI,OAAO,KAU3Bn8B,sBAAsBC,GACpB,OACEtO,KAAKwF,MAAM89B,WACV,IACCtjC,KAAKwF,MAAM6P,WAAWusB,YACtBtzB,EAAU+G,WAAWusB,aAW3BiK,SAASqqC,GACPl2E,KAAKoqC,SAAS,CAAE8rC,eAAe,KAC7Bl2E,KAAKwF,MAAMsnE,cACT,cACAoJ,EAAYM,oBAAoBgC,kBAUtC9oE,SAEI,OAAO,yB,IAjJPqkC,E,eAyBkB,CACpBs6B,UAAU,IAwLC7hC,sBACbrU,YAAe,CAAC,UAAW,eAAgB,sBAC3CsU,aAFaD,CAGbuH,I,sHClOet4B,yBAAe,CAC9BxS,MAAO,CAAF,yDAWP,MAAM8qC,UAAa5lC,YAmCjBzO,YAAY8F,GACVmkC,MAAMnkC,GA0BNxF,KAAK6rC,SAAW7rC,KAAK6rC,SAASttC,KAAKyB,MAQrCurC,oBACMvrC,KAAKiyC,OACPjyC,KAAKiyC,KAAKzH,QACVxqC,KAAKiyC,KAAKkmC,QAAU,IAAMn4E,KAAKoqC,SAAS,CAAEI,OAAO,IACjDxqC,KAAKiyC,KAAKmmC,SAAW,IAAMp4E,KAAKoqC,SAAS,CAAEI,OAAO,KAStDn8B,sBAAsBC,GACpB,OAAOtO,KAAKwF,MAAM89B,WAAa,IAAQtjC,KAAKwF,MAAMrF,KAAMmO,EAAUnO,MAQpE2wC,iCAAiCxiC,GAC/B,GACEA,EAAU+G,WAAWpM,OACrBjJ,KAAKwF,MAAM6P,WAAWpM,QAAUqF,EAAU+G,WAAWpM,QACpDjJ,KAAK4Q,MAAM45B,MACZ,CACA,MAAM,cAAEmrC,GAAkB31E,KAAKwF,MAAMowE,mBAC/B,YAAEC,GAAgB71E,KAAKwF,MAAMswE,QAE7BuC,EAAe1C,EAAcrnE,EAAU+G,WAAWpM,OACxDjJ,KAAKoqC,SAAS,CACZ8rC,YAAa5nE,EAAU+G,WAAWpM,MAC9B4sE,EAAYyC,kBAAkBD,GAC9BxC,EAAY0C,iBAIfv4E,KAAKwF,MAAM89B,UAAYh1B,EAAUg1B,WACpCtjC,KAAKiyC,KAAKzH,QACVxqC,KAAKoqC,SAAS,CAAEI,OAAO,KAU3BqB,SAASqqC,GACPl2E,KAAKoqC,SAAS,CAAE8rC,eAAe,KAC7Bl2E,KAAKwF,MAAMsnE,cACT,QACAoJ,EAAYM,oBAAoBgC,kBAUtC9oE,SAEI,OAAO,yB,IAzIPqkC,E,eAyBkB,CACpBs6B,UAAU,IAwKC7hC,sBACbrU,YAAe,CAAC,UAAW,eAAgB,sBAC3CsU,aAFaD,CAGbuH,I,6BC9NF,+BA6BeA,IAdF,EAAG1+B,aAAYlV,UAC1B,cAAC,IAAD,CAAMkV,WAAYA,EAAYlV,KAAMA,K,8wBCEtC,MAAMs1E,EAASp2E,IAAS,CAAD,0IAAC,IAAM,6CAAP,qMAEjBmc,EAAWC,yBAAe,CAC9BrZ,KAAM,CAAF,+CAWC,MAAMq2E,UAAsBtqE,YA6CjCzO,YAAY8F,GACVmkC,MAAMnkC,GAEN,MAAM,SAAE5E,GAAaC,IAErBb,KAAKg2E,YAAcp1E,EAASq1E,uBAAuBzwE,GAEnD,MAAM,YAAEqwE,EAAF,eAAe6C,GAAmBlzE,EAAMswE,QACZtwE,EAAMuwE,2BAA2BjxC,QAsBnE9kC,KAAK6rC,SAAW7rC,KAAK6rC,SAASttC,KAAKyB,MAQrCurC,oBACMvrC,KAAKwF,MAAM89B,UAEbh8B,WAAWtH,KAAKiyC,KAAKzH,MAAO,GAUhCsG,iCAAiCxiC,GAC/B,IAAKtO,KAAKwF,MAAM89B,UAAYh1B,EAAUg1B,SAAU,CAC9C,MAAMq1C,EAAiB34E,KAAK4Q,MAAMslE,YAAY0C,eAE9C,GAAID,EAAeE,iBAAmBF,EAAeG,oBAE9C,CAGLxxE,WAAWtH,KAAKiyC,KAAKzH,MAAO,GAC5B,MAAM,YAAEqrC,GAAgB71E,KAAKwF,MAAMswE,QAEnC91E,KAAKoqC,SAAS,CACZ8rC,YAAaL,EAAYkD,eAAe/4E,KAAK4Q,MAAMslE,iBAM3D1gE,mBAAmBC,GACjB,MAAM,aAAE0gE,EAAF,YAAgBN,EAAhB,eAA6B6C,GAAmB14E,KAAKwF,MAAMswE,QACjE,IACG,IAAQ91E,KAAKwF,MAAMrF,KAAMsV,EAAUtV,QACnC,IACCg2E,EAAan2E,KAAK4Q,MAAMslE,YAAYM,qBACpCx2E,KAAKwF,MAAMrF,KAAKiC,MAElB,CACA,MAAM8zE,EACJl2E,KAAKwF,MAAMrF,MAAQH,KAAKwF,MAAMrF,KAAKiC,KAC/ByzE,EAAYyC,kBAAkBI,EAAe14E,KAAKwF,MAAMrF,KAAKiC,OAC7DyzE,EAAY0C,cAElBv4E,KAAKoqC,SAAS,CACZ8rC,YAAaA,KAWnB7nE,sBAAsBC,EAAW0qE,GAC/B,OACEh5E,KAAKwF,MAAM89B,WACV,IAAQtjC,KAAKwF,MAAMrF,KAAMmO,EAAUnO,QACnC,IAAQH,KAAK4Q,MAAMslE,YAAa8C,EAAU9C,aAU/CrqC,SAASqqC,GACP,MAAM+C,EACgC,oBAApC/C,EAAYgD,qBAER,aAAE/C,GAAiBn2E,KAAKwF,MAAMswE,SAC9B,kBAAEqD,GAAsBn5E,KAAKwF,MAAM4zE,eAEzC,IACG,IACCjD,EAAaD,EAAYM,qBACzBL,EAAan2E,KAAK4Q,MAAMslE,YAAYM,sBAEtC,CACA,GAAIyC,EAAmB,CACrB,IAAII,EAAgBnD,EACpBmD,EAAgBF,EACd,CACEjtD,OAAQ,CAAC,sBAAuB,qBAChCgP,OAAQ,CAAC,OAAQ,UACjBo+C,SAAU,CACR,CACEl5E,KAAM,OACNyJ,WAAY,CAAC,SAGjB0vE,sBAAuB,IAEzBF,GAEFnD,EAAcmD,EAEhBr5E,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,OACKlqC,KAAKwF,MAAMrF,MADhB,IAEEiC,KAAM+zE,EAAaD,EAAYM,wBAGnCx2E,KAAKoqC,SAAS,CAAE8rC,gBAQlBxmE,SAII,OAAO,yB,IA3MA+oE,E,eAkCW,CACpBe,UAAU,EACVnL,UAAU,IA0RP,MAAMt6B,EAAOvH,kBAClBC,aACAtU,YAAe,CACb,UACA,+BACA,iBACA,6BACA,6BACA,iCACA,gCACA,iBAVgBqU,CAalBisC,GAEI5B,EAAarxE,IACjB,MAAO8xB,EAAQw/C,GAAavqE,IAAM8X,UAAS,GAI3C,OAHA9X,IAAMqX,UAAU,KACd6xD,EAAO/9C,OAAOl1B,KAAK,IAAMs0E,GAAU,KAClC,IACIx/C,EAAS,cAACyc,EAAD,KAAUvuC,IAAY,MAGzBqxE,O,q5BCvVf,MAAMjnB,EAAWvwD,IAAS,CAAD,iIAAC,IAAM,6CAAP,qMAEnBmc,EAAWC,yBAAe,CAC9Bg+D,2BAA4B,CAAF,uHAW5B,MAAM1lC,UAAa5lC,YAAU,+CA2BnB,CACNurE,WAAW,EACX93E,IAAK,GACL+3E,UAAU,IA9Be,yBA2EV38E,IACfA,EAAE8oB,kBACF,MAAM0qC,EAAOxzD,EAAEowB,OAAOmjC,MAAM,GAC5BvwD,KAAKoqC,SAAS,CACZsvC,WAAW,IAEbjpB,wBAAcD,GAAMhuD,KAAMrC,IACxB,MAAM2gB,EAAS3gB,EAAKimC,MAAM,yBAC1BpmC,KAAKwF,MAAM2oB,cACTiP,YAAWp9B,KAAKwF,MAAM+N,UACtB,CACE,QAAS,QACTtK,MAAOunD,EAAKlzD,KACZivC,MAAO,CACLpsC,KAAM2gB,EAAO,GACbq3B,SAAUr3B,EAAO,GACjB,eAAgBA,EAAO,GACvB4vC,SAAUF,EAAKlzD,OAGnB0C,KAAKwF,MAAM0kC,WA/FU,uBAuHb,EAAG9c,aACfptB,KAAKoqC,SAAS,CACZxoC,IAAKwrB,EAAOpvB,UAzHW,uBAmIb,KACZgC,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,OACKlqC,KAAKwF,MAAMrF,MADhB,IAEEyB,IAAK2yB,YAAgBv0B,KAAK4Q,MAAMhP,UAtIT,0BA0IV,KACf5B,KAAKoqC,SAAS,CACZxoC,IAAK,OA5IkB,kBAsJjB4uD,IACRxwD,KAAKoqC,SAAS,CACZsvC,WAAW,IAGbjpB,wBAAcD,EAAK,IAAIhuD,KAAMrC,IAC3B,MAAM2gB,EAAS3gB,EAAKimC,MAAM,yBAC1BpmC,KAAKwF,MAAM2oB,cACTiP,YAAWp9B,KAAKwF,MAAM+N,UACtB,CACE,QAAS,QACTtK,MAAOunD,EAAK,GAAGlzD,KACfivC,MAAO,CACLpsC,KAAM2gB,EAAO,GACbq3B,SAAUr3B,EAAO,GACjB,eAAgBA,EAAO,GACvB4vC,SAAUF,EAAK,GAAGlzD,OAGtB0C,KAAKwF,MAAM0kC,WAzKU,oCAsLCltC,IACZ,UAAVA,EAAEsB,KACJtB,EAAE6oB,iBACF7oB,EAAE8oB,kBACF9lB,KAAK45E,eACc,WAAV58E,EAAEsB,MACXtB,EAAE6oB,iBACF7oB,EAAE8oB,qBA7LqB,uBAiMb,KACZ9lB,KAAKoqC,SAAS,CAAEuvC,UAAU,MAlMD,uBAoMb,KACZ35E,KAAKoqC,SAAS,CAAEuvC,UAAU,MArMD,gBAwMpBptE,IAAM++B,aAjKbwF,iCAAiCxiC,GAE7BtO,KAAKwF,MAAMjF,QAAQw7C,SACnBztC,EAAU/N,QAAQ+2B,QAClBt3B,KAAK4Q,MAAM8oE,YAEX15E,KAAKoqC,SAAS,CACZsvC,WAAW,IAEb15E,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,OACKlqC,KAAKwF,MAAMrF,MADhB,IAEEyB,IAAK0M,EAAUvB,QAAQ,OACvB+9B,IAAK,OAUXz8B,sBAAsBC,GACpB,OACEtO,KAAKwF,MAAM89B,UACXh1B,EAAUg1B,WACT,IAAQtjC,KAAKwF,MAAMrF,KAAMmO,EAAUnO,MAyCxC8tC,aAAaD,GACXhuC,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,OACKlqC,KAAKwF,MAAMrF,MADhB,IAEE6tC,WAkGJt+B,SACE,MAAM,KAAEvP,GAASH,KAAKwF,MAChBm8B,EACJ3hC,KAAKwF,MAAMrF,KAAKwhC,aAChB3hC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASi+D,4BACzC,OACE,sBACEvpE,UAAW24B,IACT,oBACA,CACEiF,QAAS28B,QAAQtqE,EAAK6tC,QAExB7tC,EAAK6tC,OANT,UASG7tC,EAAKyB,IACJ,qBACEsO,UAAW24B,IAAG,CACZ,aAA6B,SAAf1oC,EAAK6tC,MACnB6rC,MAAqB,MAAd15E,EAAK2zB,KACZgmD,OAAsB,MAAd35E,EAAK2zB,KACbimD,MAAqB,MAAd55E,EAAK2zB,OAEdk5B,IACE1uB,YAAcn+B,EAAKyB,KAGK,MAAdzB,EAAK2zB,KACGS,YAAgBp0B,EAAKyB,KAAvB,kBACQ,MAAdzB,EAAK2zB,KACGS,YACRp0B,EAAKyB,KADC,0BAGQ,MAAdzB,EAAK2zB,KACGS,YAAgBp0B,EAAKyB,KAAvB,uBACA2yB,YAAgBp0B,EAAKyB,KAAvB,kBAEVzB,EAAKyB,IAEXkpC,IAAK3qC,EAAK2qC,KAAO,KAGnB,8BACG9qC,KAAKwF,MAAM6oE,UACV,cAACze,EAAD,CACEoqB,SAAO,EACP1pB,OAAQtwD,KAAKswD,OACb2pB,YAAaj6E,KAAKi6E,YAClBC,YAAal6E,KAAKk6E,YAClBhqE,UAAU,WALZ,SAOG,EAAG4gD,eAAcC,mBAChB,2BAASD,KAAT,aACE,eAAC,UAAD,WACG9wD,KAAK4Q,MAAM+oE,UAAY,cAAC,SAAD,CAAQzrC,QAAM,IACrCluC,KAAK4Q,MAAM8oE,WACV,cAAC,SAAD,CAAQxrC,QAAM,EAAd,SACE,cAAC,SAAD,CAAQisC,eAAa,EAArB,+BAGJ,sBAAKjqE,UAAU,mBAAf,UACE,qBAAK88C,IAAKotB,IAAetvC,IAAI,KAC7B,sBAAK56B,UAAU,gBAAf,UACE,cAAC,SAAOwqB,MAAR,UACE,cAAC,SAAD,CACE0O,OAAK,EACLC,MAAI,EACJ1J,QAAU3iC,IACRA,EAAE8oB,kBACF9oB,EAAE6oB,iBACF7lB,KAAKwF,MAAMynC,qBANf,SASE,cAAC,KAAD,CAAM3vC,KAAM08C,IAAYlmB,KAAK,aAGjC,cAAC,SAAO4G,MAAR,UACE,wBAAOxqB,UAAU,uBAAjB,UACE,cAAC,KAAD,CAAM5S,KAAM+8E,IAAWvmD,KAAK,SAC5B,2BACMi9B,EAAc,CAChB3wD,KAAM,OACNyrC,SAAU7rC,KAAKs6E,cACfxsE,MAAO,CAAEuuB,QAAS,iBAK1B,cAAC,QAAD,CACE+d,UAAWp6C,KAAKu6E,yBAChB1uC,SAAU7rC,KAAKw6E,YACf74C,YAAaA,EACb3jC,MAAOgC,KAAK4Q,MAAMhP,IAClB+9B,QAAU3iC,IACRA,EAAEowB,OAAOod,SAEXiwC,QAAUz9E,IACRgD,KAAKwF,MAAMmpE,cAAc3uE,KAAKwF,MAAMgC,OAGvCxH,KAAK4Q,MAAMhP,KACV,cAAC,SAAO84B,MAAR,UACE,cAAC,SAAD,CACE0O,OAAK,EACLl5B,UAAU,SACVyvB,QAAU3iC,IACRA,EAAE8oB,kBACF9lB,KAAKoqC,SAAS,CAAExoC,IAAK,MALzB,SAQE,cAAC,KAAD,CAAMtE,KAAMk9B,IAAU1G,KAAK,aAIjC,cAAC,SAAO4G,MAAR,UACE,cAAC,SAAD,CACE0O,OAAK,EACLrO,SAAO,EACP+N,UAAW9oC,KAAK4Q,MAAMhP,IACtB+9B,QAAU3iC,IACRA,EAAE8oB,kBACF9lB,KAAK45E,eANT,SASE,cAAC,KAAD,CAAMt8E,KAAMk9C,IAAU1mB,KAAK,6BAYjD,cAAC,KAAD,CAAewP,SAAUtjC,KAAKwF,MAAM89B,SAApC,SACE,cAAC,KAAD,OAAkBtjC,KAAKwF,OAAvB,IAA8Bk1E,eAAgB16E,KAAK06E,wBAO9CluC,sBACbC,aACAC,kBACE,CAAC97B,EAAO4jD,KAAR,YAAsB,CACpBj0D,QAASqQ,EAAM7D,QAAQ4/B,YAAY6nB,EAAStqB,QAAU,GACtDn9B,QAAO,UAAE6D,EAAM7D,QAAQ4/B,YAAY6nB,EAAStqB,cAArC,aAAE,EAA2C/pC,OAEtD,CAAEguB,oBAPSqe,CASbuH,I,gsBCtYF,MAAMv4B,EAAWC,yBAAe,CAC9Bw2C,QAAS,CAAF,uDAIPn+C,MAAO,CAAF,yDAMDigC,EAAOxnC,IAAM65C,KAChB5gD,IAAU,MACT,MAAM,KAAErF,EAAF,cAAQwqC,EAAR,MAAuBT,EAAvB,SAA8B5G,EAA9B,SAAwC/vB,GAAa/N,EAErD++B,EAAOkE,oBAGbl8B,IAAMqX,UAAU,KACTzjB,EAAKkB,OACRspC,EAAcT,EAAD,OACR/pC,GADQ,IAEXkB,MAAO,GACP6oC,YAIH,IAEH,MAAMvI,EACJxhC,EAAKwhC,cACJxhC,SAAA,UAAAA,EAAMkB,aAAN,SAAaW,OACVuiC,EAAK5jB,cAAcnF,EAASy2C,SAC5B1tB,EAAK5jB,cAAcnF,EAAS1H,QAElC,OACE,qCACE,mBAAG5D,UAAU,gBAAb,SAA8ByxB,IAC9B,cAAC,KAAD,OAAiBn8B,GAAjB,IAAwBvF,KAAMm9B,YAAW7pB,GAAWonE,YAAU,KAC9D,cAAC,KAAD,CAAer3C,SAAUA,EAAzB,SACE,cAAC,IAAD,OAEM99B,GAFN,IAGErF,KAAMA,EACN+pC,MAAOA,EACPS,cAAeA,IAJVT,UAUf,SAAmBz0B,EAAWnH,GAC5B,QACEA,EAAUg1B,WAAa7tB,EAAU6tB,WAChC,IAAQ7tB,EAAUtV,KAAMmO,EAAUnO,UAgB1BunC,iBAAoBqM,I,6pBCnDpB6mC,IA3BMp1E,IACnB,MAAM,KAAErF,EAAF,MAAQ+pC,EAAR,cAAeS,GAAkBnlC,EACjC++B,EAAOkE,oBACPrzB,EAASylE,YAAc,EAAD,KAAMr1E,GAAN,IAAa++B,UAEzC,OACE,cAAC,IAAD,CACEnvB,OAAQA,EACRnM,MAAOmM,EAAOnM,MACd6jE,cAAe,CAACtlE,EAAIxJ,KAClB2sC,EAAcT,EAAD,OACR/pC,GADQ,IAEX,CAACqH,GAAKxJ,MAGV0iB,SAAUvgB,EACV+pC,MAAOA,M,4vBCJb,MAAM1uB,EAAWC,yBAAe,CAC9Bq/D,qBAAsB,CAAF,uGAIpBC,2BAA4B,CAAF,2GAW5B,MAAMhnC,UAAa5lC,YAyBjBzO,YAAY8F,GACVmkC,MAAMnkC,GADW,0BAgDF,KACfxF,KAAKoqC,SAAS,CACZxoC,IAAK,OA/CP5B,KAAKw6E,YAAcx6E,KAAKw6E,YAAYj8E,KAAKyB,MACzCA,KAAK45E,YAAc55E,KAAK45E,YAAYr7E,KAAKyB,MACzCA,KAAKu6E,yBAA2Bv6E,KAAKu6E,yBAAyBh8E,KAAKyB,MACnEA,KAAK4Q,MAAQ,CACXhP,IAAK,IAUT44E,aAAY,OAAEptD,IACZptB,KAAKoqC,SAAS,CACZxoC,IAAKwrB,EAAOpvB,QAShBqQ,sBAAsBC,GACpB,OACEtO,KAAKwF,MAAM89B,UACXh1B,EAAUg1B,WACT,IAAQtjC,KAAKwF,MAAMrF,KAAMmO,EAAUnO,MASxCy5E,cACE55E,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,OACKlqC,KAAKwF,MAAMrF,MADhB,IAEEyB,IAAK5B,KAAK4Q,MAAMhP,OAkBpB24E,yBAAyBv9E,GACT,UAAVA,EAAEsB,KACJtB,EAAE6oB,iBACF7oB,EAAE8oB,kBACF9lB,KAAK45E,eACc,WAAV58E,EAAEsB,MACXtB,EAAE6oB,iBACF7oB,EAAE8oB,mBAUNpW,SACE,MAAM,KAAEvP,GAASH,KAAKwF,MAChBm8B,EACJ3hC,KAAKwF,MAAMrF,KAAKwhC,aAChB3hC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASu/D,4BACzC,OACE,sBACE7qE,UAAW24B,IACT,oBACA,CACEvF,SAAUtjC,KAAKwF,MAAM89B,SACrBwK,QAAS28B,QAAQzqE,KAAKwF,MAAMrF,KAAK6tC,QAEnChuC,KAAKwF,MAAMrF,KAAK6tC,OAPpB,UAUG7tC,EAAKyB,IACJ,cAAC,IAAD,CAAMzB,KAAMH,KAAKwF,MAAMrF,KAAMw6E,YAAY,IAEzC,cAAC,UAAD,UACE,mCACE,qBAAK3tB,IAAKguB,IAAelwC,IAAI,KAC7B,sBAAK56B,UAAU,gBAAf,UACE,cAAC,QAAD,CACEkqC,UAAWp6C,KAAKu6E,yBAChB1uC,SAAU7rC,KAAKw6E,YACf74C,YAAaA,EACb3jC,MAAOgC,KAAK4Q,MAAMhP,IAGlB+9B,QAAU3iC,GAAMA,EAAE8oB,oBAEnB9lB,KAAK4Q,MAAMhP,KACV,cAAC,SAAO84B,MAAR,UACE,cAAC,SAAD,CACE0O,OAAK,EACLl5B,UAAU,SACVyvB,QAAU3iC,IACRA,EAAE8oB,kBACF9lB,KAAKoqC,SAAS,CAAExoC,IAAK,MALzB,SAQE,cAAC,KAAD,CAAMtE,KAAMk9B,IAAU1G,KAAK,aAIjC,cAAC,SAAO4G,MAAR,UACE,cAAC,SAAD,CACE0O,OAAK,EACLrO,SAAO,EACP4E,QAAU3iC,IACRA,EAAE8oB,kBACF9lB,KAAK45E,eALT,SAQE,cAAC,KAAD,CAAMt8E,KAAMk9C,IAAU1mB,KAAK,qBAOvC,cAAC,KAAD,CAAewP,SAAUtjC,KAAKwF,MAAM89B,SAApC,SACE,cAAC,KAAD,OAAkBtjC,KAAKwF,OAAvB,IAA8Bk1E,eAAgB16E,KAAK06E,wBAO9CjuC,yBAAWsH,I,6BChN1B,oCA8CezD,IA/BF,EAAGnwC,UACd,qBAAK+P,UAAU,aAAf,SACE,sBAAKA,UAAU,sBAAf,UACG/P,EAAKyB,KACJ,qBACEorD,IAAQz4B,YAAgBp0B,EAAKyB,KAAvB,kBACNkpC,IAAI,GACJ56B,UAAU,aACV6rC,QAAQ,SAGZ,sBAAK7rC,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACG/P,EAAK8I,OAAS,6BAAK9I,EAAK8I,QACxB9I,EAAKyhC,aAAe,4BAAIzhC,EAAKyhC,iBAEhC,cAAC,KAAD,CAAUzhC,KAAMA,a,mvBCdxB,MAAMqb,EAAWC,yBAAe,CAC9Bw/D,0BAA2B,CAAF,iEAIzB9jD,KAAM,CAAF,iCAIJC,MAAO,CAAF,mCAIL0W,OAAQ,CAAF,qCAINC,KAAM,CAAF,iCAIJmtC,wBAAyB,CAAF,+EAWzB,MAAMnnC,UAAa5lC,YA0BjBzO,YAAY8F,GACVmkC,MAAMnkC,GADW,uBA8BL,EAAG4nB,aACfptB,KAAKoqC,SAAS,CACZxoC,IAAKwrB,EAAOpvB,UAhCG,0BAuFF,KACfgC,KAAKoqC,SAAS,CACZxoC,IAAK,OAvFP5B,KAAKm7E,OAASn7E,KAAKm7E,OAAO58E,KAAKyB,MAC/BA,KAAK4Q,MAAQ,CACXhP,IAAK,GACLgS,MAAO,MAET5T,KAAK45E,YAAc55E,KAAK45E,YAAYr7E,KAAKyB,MACzCA,KAAKu6E,yBAA2Bv6E,KAAKu6E,yBAAyBh8E,KAAKyB,MAQrEqO,sBAAsBC,GACpB,OACEtO,KAAKwF,MAAM89B,UACXh1B,EAAUg1B,WACT,IAAQtjC,KAAKwF,MAAMrF,KAAMmO,EAAUnO,MAsBxCy5E,cACE55E,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,OACKlqC,KAAKwF,MAAMrF,MADhB,IAEEyB,IAAK5B,KAAKm7E,OAAOn7E,KAAK4Q,MAAMhP,QAYhC24E,yBAAyBv9E,GACT,UAAVA,EAAEsB,KACJtB,EAAE6oB,iBACF7oB,EAAE8oB,kBACF9lB,KAAK45E,eACc,WAAV58E,EAAEsB,MACXtB,EAAE6oB,iBACF7oB,EAAE8oB,mBAWNq1D,OAAOC,GACL,MAEMC,GAFS,IAAIC,WACAC,gBAAgBH,EAAO,aACvBpxE,qBAAqB,UACxC,OAAsB,IAAlBqxE,EAAOr5E,QACThC,KAAKoqC,SAAS,CAAEx2B,OAAO,IAChB,KAET5T,KAAKoqC,SAAS,CAAEx2B,OAAO,IAChBynE,EAAO,GAAGruB,KAcnBt9C,SACE,MAAMiyB,EACJ3hC,KAAKwF,MAAMrF,KAAKwhC,aAChB3hC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASy/D,2BACzC,OACE,sBACE/qE,UAAW24B,IACT,mBACA,CACEiF,QAAS28B,QAAQzqE,KAAKwF,MAAMrF,KAAK6tC,QAEnChuC,KAAKwF,MAAMrF,KAAK6tC,OANpB,UASGhuC,KAAKwF,MAAMrF,KAAKyB,IACf,qBACEsO,UAAW24B,IAAG,aAAc,CAC1B,aAAwC,SAA1B7oC,KAAKwF,MAAMrF,KAAK6tC,QAFlC,SAKE,wBACE/kC,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAAS0/D,yBAEXluB,IAAKhtD,KAAKwF,MAAMrF,KAAKyB,IACrBsO,UAAU,aACVsrE,YAAY,IACZC,iBAAe,MAInB,cAAC,UAAD,UACE,mCACE,qBAAKzuB,IAAK0uB,IAAc5wC,IAAI,KAC5B,sBAAK56B,UAAU,gBAAf,UACE,cAAC,QAAD,CACEkqC,UAAWp6C,KAAKu6E,yBAChB1uC,SAAU7rC,KAAKw6E,YACf74C,YAAaA,EACb3jC,MAAOgC,KAAK4Q,MAAMhP,IAGlB+9B,QAAU3iC,GAAMA,EAAE8oB,oBAEnB9lB,KAAK4Q,MAAMhP,KACV,cAAC,SAAO84B,MAAR,UACE,cAAC,SAAD,CACE0O,OAAK,EACLl5B,UAAU,SACVyvB,QAAU3iC,IACRA,EAAE8oB,kBACF9lB,KAAKoqC,SAAS,CAAExoC,IAAK,MALzB,SAQE,cAAC,KAAD,CAAMtE,KAAMk9B,IAAU1G,KAAK,aAIjC,cAAC,SAAO4G,MAAR,UACE,cAAC,SAAD,CACE0O,OAAK,EACLrO,SAAO,EACP4E,QAAU3iC,IACRA,EAAE8oB,kBACF9lB,KAAK45E,eALT,SAQE,cAAC,KAAD,CAAMt8E,KAAMk9C,IAAU1mB,KAAK,gBAIjC,sBAAK5jB,UAAU,eAAf,UACE,cAAC,mBAAD,CACE1I,GAAG,wHACHukC,eAAe,0HAEhB/rC,KAAK4Q,MAAMgD,OACV,qBAAK9F,MAAO,CAAEmsB,MAAO,OAArB,SACE,cAAC,mBAAD,CACEzyB,GAAG,kEACHukC,eAAe,+EAQ3B/rC,KAAKwF,MAAM89B,UAAY,qBAAKpzB,UAAU,gBACxC,cAAC,KAAD,CAAeozB,SAAUtjC,KAAKwF,MAAM89B,SAApC,SACE,cAAC,KAAD,OAAiBtjC,KAAKwF,OAAtB,IAA6Bk1E,eAAgB16E,KAAK06E,wBAO7CjuC,yBAAWsH,I,40BC1P1B,MAAM0hC,EAASp2E,IAAS,CAAD,2IAAC,IAAM,6CAAP,qMAEjBmc,EAAWC,yBAAe,CAC9B0R,OAAQ,CAAF,qCAINk5C,QAAS,CAAF,uCAIP1kC,YAAa,CAAF,2EAIXg6C,SAAU,CAAF,6DAIRC,MAAO,CAAF,mCAIL35E,KAAM,CAAF,mCAWN,MAAM8xC,UAAa5lC,YA+BjBzO,YAAY8F,GACVmkC,MAAMnkC,GADW,yBAUH+G,IAAM++B,aAVH,0BAWF,IAXE,sBA2FN,KACX,IACE,MAAMrpC,EAAOjC,KAAKwF,MAAMq2E,mBACrB/1C,OAAO9lC,KAAK24B,WAAY,CACvBmjD,OAAQ,OACRC,QAAS,CAAC/7E,KAAKwF,MAAMw2E,sBAEtBj/C,OACH/8B,KAAKi8E,aAAah6E,GAClB,MAAOi8D,OApGQ,wBAmHHge,IACd,IAAKA,IAAWA,EAAOC,OACrB,MAAO,GAGT,MAAM3+E,EAAI,GAOV,OANI0+E,EAAOC,OAAOC,iBAChB5+E,EAAE4+E,eAAiBF,EAAOC,OAAOC,gBAE/BF,EAAOC,OAAOE,eAChB7+E,EAAE6+E,aAAeH,EAAOC,OAAOE,cAE1B7+E,IA/HU,oCAsIS0+E,IAAW,QAOnC,IAJAl8E,KAAKwF,MAAM89B,UACX44C,EAAOC,QACwC,iBAA/C,UAAOn8E,KAAKs8E,sBAAZ,aAAO,EAAqBF,iBACiB,iBAA7C,UAAOp8E,KAAKs8E,sBAAZ,aAAO,EAAqBD,gBAE5BH,EAAOC,OAAOC,eAAd,UAA+Bp8E,KAAKs8E,sBAApC,aAA+B,EAAqBF,eACpDF,EAAOC,OAAOE,aAAd,UAA6Br8E,KAAKs8E,sBAAlC,aAA6B,EAAqBD,aAClDH,EAAOC,OAAO3xC,WA9IhBxqC,KAAK4Q,MAAQ,CACX2rE,WAAW,GAEbv8E,KAAKi8E,aAAej8E,KAAKi8E,aAAa19E,KAAKyB,MAC3CA,KAAKw8E,UAAYx8E,KAAKw8E,UAAUj+E,KAAKyB,MACrCA,KAAKy8E,aAAez8E,KAAKy8E,aAAal+E,KAAKyB,MAM7CwV,mBAAmBC,EAAW+rB,EAAWyyC,GAEvCj0E,KAAKs8E,eAAiBrI,EAEtBj0E,KAAK08E,yBAAyB18E,KAAK28E,cAAcj3E,SASnD2I,sBAAsBC,GAGpB,OAAKtO,KAAKm8E,SAQRn8E,KAAKwF,MAAM89B,WACV,IAAQtjC,KAAKwF,MAAMrF,KAAMmO,EAAUnO,OACpCH,KAAKm8E,OAAOC,iBAAmBp8E,KAAKs8E,eAAeF,gBACnDp8E,KAAKm8E,OAAOE,eAAiBr8E,KAAKs8E,eAAeD,cAUrDJ,aAAah6E,GACXjC,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,OACKlqC,KAAKwF,MAAMrF,MADhB,IAEEg+B,KAAMl8B,KAIV02B,WACE,OAAO34B,KAAKwF,MAAMrF,KAAKg+B,MAAQ,GAQjCq+C,YACE,IACE,MAAMv6E,EAAOjC,KAAKwF,MAAMq2E,mBACrB/1C,OAAO9lC,KAAK24B,WAAY,CACvBmjD,OAAQ,OACRC,QAAS,CAAC/7E,KAAKwF,MAAMw2E,sBAEtBj/C,OACH/8B,KAAKoqC,SACH,CACEmyC,WAAYv8E,KAAK4Q,MAAM2rE,WAEzB,IAAMv8E,KAAKi8E,aAAah6E,IAE1B,MAAOi8D,KA+BXue,eACEz8E,KAAKoqC,SAAS,CAAEmyC,WAAYv8E,KAAK4Q,MAAM2rE,YAkBzCK,wBAAwBnnE,EAAW+rB,GACjC,OAAOxhC,KAAK44E,aAAa54E,KAAK28E,cAAcj3E,SAsB9CgK,SAAS,UACP,MAAMiyB,EACJ3hC,KAAKwF,MAAMrF,KAAKwhC,aAChB3hC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmmB,aACnC3jC,EAAQgC,KAAK24B,WACnB,OACE,qCACG34B,KAAKwF,MAAM89B,UAAYtlC,GACtB,sBAAKkS,UAAU,UAAf,UACE,cAAC,QAAD,CACEg5B,QACE,cAAC,SAAD,CACEG,MAAI,EACJD,OAAK,EACLj3B,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS2R,QACnD+gB,QAASluC,KAAK4Q,MAAM2rE,UACpB58C,QAAS3/B,KAAKy8E,aALhB,SAOE,cAAC,KAAD,CAAMn/E,KAAMu/E,IAAS/oD,KAAK,WAG9B8vB,SAAS,aACT72C,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASvZ,MAChD6xB,KAAK,SAEP,cAAC,QAAD,CACEoV,QACE,cAAC,SAAD,CACEG,MAAI,EACJD,OAAK,EACLj3B,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS6qD,SACnDn4B,OAAQluC,KAAK4Q,MAAM2rE,UACnB58C,QAAS3/B,KAAKw8E,UALhB,SAOE,cAAC,KAAD,CAAMl/E,KAAMw/E,IAAShpD,KAAK,WAG9B8vB,SAAS,aACT72C,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS6qD,SAChDvyC,KAAK,SAEP,cAAC,QAAD,CACEoV,QACE,cAAC,SAAD,CACEG,MAAI,EACJD,OAAK,EACLj3B,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmgE,UACnDh8C,QAAS3/B,KAAK+8E,WAJhB,SAME,cAAC,KAAD,CAAMz/E,KAAM0/E,IAAWlpD,KAAK,WAGhC8vB,SAAS,aACT72C,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmgE,UAChD7nD,KAAK,SAEP,qBAAK5jB,UAAU,cACf,cAAC,QAAD,CACEg5B,QACE,cAAC,SAAOxO,MAAR,UACE,cAAC,SAAD,CAAQ2O,MAAI,EAACD,OAAK,EAACzJ,QAAS,IAAM3/B,KAAKi8E,aAAa,IAApD,SACE,cAAC,KAAD,CAAM3+E,KAAMk9B,IAAU1G,KAAK,OAAOmG,MAAM,gBAI9C2pB,SAAS,aACT72C,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASogE,OAChD9nD,KAAK,YAIV9zB,KAAK4Q,MAAM2rE,UACV,qBAAKvvE,wBAAyB,CAAEC,OAAQjP,KAExC,cAACy3E,EAAD,CACEz3E,MAAOgC,KAAK24B,WACZoJ,UAAW/hC,KAAKwF,MAAM6oE,SACtB1sC,YAAaA,EACbs7C,cAAgBh7E,GAASjC,KAAKi8E,aAAah6E,GAC3Ci7E,UACE,UAAAl9E,KAAKwF,MAAM23E,iBAAX,SAAsBD,WAAtB,UACAl9E,KAAKwF,MAAM23E,iBADX,iBACA,EAAsBloC,iBADtB,OACA,EAAiC9W,KAC5Bl8B,GACCjC,KAAKwF,MAAM23E,UAAUD,UACnBj7E,EACAjC,KAAKwF,MAAM23E,UAAUloC,UAAU9W,KAC/B,QAEJ,OAEN3B,QAAS,EACTtsB,UAAU,cACVoT,IAAM2uB,IACAA,IACFjyC,KAAK28E,cAAcj3E,QAAUusC,IAGjCmrC,cAAc,Q,IAzRpBrpC,E,eAuBkB,CACpBs6B,UAAU,IAyQd,MAAMgP,EAAmBxlD,GAAsBryB,IAC7C,MAAO8xB,EAAQw/C,GAAavqE,IAAM8X,WAC5B7jB,EAAU+L,IAAMgX,OAAO,MACvB+5D,EAAY/wE,IAAMgX,QAAO,GAc/B,OAZAhX,IAAMqX,UAAU,KACdpjB,EAAQkF,QAAU,6CAClBlF,EAAQkF,QAAQlD,KAAK,KACd86E,EAAU53E,SACboxE,GAAU,KAGP,KACLwG,EAAU53E,SAAU,IAErB,IAEI4xB,EAAS,cAACO,EAAD,KAAsBryB,IAAY,MAGrCgnC,sBACbrU,YAAe,CAAC,qBAAsB,qBAAsB,cAC5DklD,EACA5wC,aAHaD,CAIbuH,I,6BC/WF,sBA0BezD,IAbF,EAAGj7B,gBACd,mBAAGnF,UAAU,sBAAb,SAAoCmF,EAAWusB,e,6BCdjD,sBA0Be0O,IAbF,EAAGj7B,gBACd,oBAAInF,UAAU,uBAAd,SAAsCmF,EAAWpM,S,6BCdnD,iDAmCeqnC,IApBF,EAAGnwC,UACdA,EAAKiC,KACHm0E,IACEp2E,EAAKiC,KACLvB,IAAOD,SAAS61E,qBAAqBC,gBACrC71E,IAAOD,SAAS61E,qBAAqBE,eAGvC,wB,6BCvBJ,qDAwFermC,IAvEF,EAAGnwC,OAAMq5E,cACpB,mBACEtpE,UAAW24B,IACT,oBACA,CACEiF,QAAS28B,QAAQtqE,EAAK6tC,OACtBwrC,YAEFr5E,EAAK6tC,OAPT,SAUG7tC,EAAKyB,KACJ,mCACG,MACC,MAAM2qC,EACJ,qBACEr8B,UAAW24B,IAAG,CACZ,aAA6B,SAAf1oC,EAAK6tC,MACnB6rC,MAAqB,MAAd15E,EAAK2zB,KACZgmD,OAAsB,MAAd35E,EAAK2zB,KACbimD,MAAqB,MAAd55E,EAAK2zB,OAEdk5B,IACE1uB,YAAcn+B,EAAKyB,KAGK,MAAdzB,EAAK2zB,KACGS,YAAgBp0B,EAAKyB,KAAvB,kBACQ,MAAdzB,EAAK2zB,KACGS,YACRp0B,EAAKyB,KADC,0BAGQ,MAAdzB,EAAK2zB,KACGS,YACRp0B,EAAKyB,KADC,uBAGA2yB,YAAgBp0B,EAAKyB,KAAvB,kBAEVzB,EAAKyB,IAEXkpC,IAAK3qC,EAAK2qC,KAAO,GACjBiR,QAAQ,SAGZ,OAAI57C,EAAKuR,KAEL,cAAC,KAAD,CACEA,KAAMvR,EAAKuR,KACXuyD,iBAAkB9jE,EAAK8jE,iBAFzB,SAIG13B,IAIEA,GAzCV,Q,qqBCPM7E,iBAhBDliC,IACZ,MAAM,KAAErF,EAAF,KAAQF,EAAR,SAAcsT,GAAa/N,EAEjC,OACE,qBAAK0K,UAAW24B,IAAG,gBAAiB1oC,EAAK2nC,WAAa,WAAtD,SACE,cAAC,KAAD,OAAiBtiC,GAAjB,IAAwBvF,KAAMA,UAAQsT,U,6BCZ5C,gDAuCe+8B,IAxBF,EAAGnwC,UAEZ,qBACE+P,UAAW24B,IACT,oBACA,CACEiF,QAAS28B,QAAQtqE,EAAK6tC,QAExB7tC,EAAK6tC,OANT,SASE,cAAC,IAAD,CAAM7tC,KAAMA,O,6BC1BlB,gDAUA,MAAMqb,EAAWC,yBAAe,CAC9B8hE,kBAAmB,CAAF,iEA+CJ9wC,yBAnCF,EAAGtsC,OAAMokC,UACpB,qBACEr0B,UAAW24B,IACT,mBACA,CACEiF,QAAS28B,QAAQtqE,EAAK6tC,QAExB7tC,EAAK6tC,OANT,SASE,qBACE99B,UAAW24B,IAAG,aAAc,CAC1B,aAA6B,SAAf1oC,EAAK6tC,QAFvB,SAKE,wBACE/kC,MAAOs7B,EAAK5jB,cAAcnF,EAAS+hE,mBACnCvwB,IAAK7sD,EAAKyB,IACVsO,UAAU,aACVsrE,YAAY,IACZC,iBAAe,U,6BC3CvB,sBA0BenrC,IAbF,EAAGnwC,UACd,qBAAK+P,UAAU,aAAalD,wBAAyB,CAAEC,OAAQ9M,EAAKg+B,S,0nBCZtE,MAAMuD,EAAS,EAAH,KACP6sC,KADO,IAEV/rD,UAAW,CAAC,EAAD,GAEJ+rD,IAAoB/rD,UAAU,KAQrCnN,WAAY,EAAF,GACLk5D,IAAoBl5D,cAeZqsB,O,0nBC5Bf,MAAMA,EAAS,EAAH,KACP6sC,KADO,IAEV/rD,UAAW,CAAC,EAAD,GAEJ+rD,IAAoB/rD,UAAU,KAQrCnN,WAAY,EAAF,GACLk5D,IAAoBl5D,cAeZqsB,O,0nBC5Bf,MAAMA,EAAS,EAAH,KACP6sC,KADO,IAEVl5D,WAAY,EAAF,KACLk5D,IAAoBl5D,YADf,IAERssB,YAAa,EAAF,KACN4sC,IAAoBl5D,WAAWssB,aADzB,IAET14B,MAAO,QACP24B,YAAa,uCAKJF,O,wpBCFC7J,QACd,SAAS2lD,EAAgBh4E,GACvB,MAAM2N,EAAW6jB,wBAEXpH,EAAKsH,sBAAatmB,GAAUA,EAAM2nC,aAClCmF,GAAU9tB,aAAA,EAAAA,EAAI8tB,UAAW,GAQ/B,OANAnxC,IAAMqX,UAAU,KACsB,IAAhCnmB,OAAO+D,KAAKk8C,GAAS17C,QACvBmR,EAASqhB,gBAEV,CAACrhB,EAAUuqC,IAEP,cAAC7lB,EAAD,OAAsBryB,GAAtB,IAA6B+yC,YAAa3oB,KAKnD,OAHA4tD,EAAgBzlD,YAAe,mBAvBjC,SAAwBF,GACtB,OAAOA,EAAiBE,aAAeF,EAAiBv6B,MAAQ,YAsBf06B,CAC/CH,MAEK2lD,I,cC9BT7gF,EAAOD,QAAUyC,QAAQ,wB,cCAzBxC,EAAOD,QAAUyC,QAAQ,iB,2SC4CVs+E,MApCiBj4E,IAC9B,MAAM,SAAE5E,GAAaC,KACf,SAAE0S,EAAF,SAAYjE,GAAa9J,GACxB5F,GAAW89E,uBACZtT,EAAkBxqE,EAAO,eAAqBgB,EAASk1C,gBACvD6nC,EAAqB/8E,EAAS2xC,mBAAmBniC,SACrDg6D,GAEEA,EACAxpE,EAASk1C,gBACP3iC,EAAW6jB,wBAmBjB,OAjBAzqB,IAAMqX,UAAU,KAGd,IAAIyvC,GAAU,EACd,GAAIzyD,EAAS8uB,gBAA+B,MAAbnc,EAAkB,CAC/C,MAAMuhC,EAAe/e,YAAsB4nD,GAC3C,MAAO,KAAsB7oC,EAAe,SAAStyC,KAAMqzB,IACrDw9B,GACFlgD,EAASyiB,YAAe+nD,EAAoB9nD,EAAOiP,YAIzD,MAAO,KACLuuB,GAAU,IAEX,CAAC9/C,EAAUJ,EAAUwqE,EAAoB/8E,EAAS8uB,iBAEjC,MAAbnc,GAAoB3S,EAAS8uB,eAClC,cAAC,WAAD,CAAUyhB,GAAK,IAAGwsC,IAElB,mCAAGruE,K,yBC5BP,MAAMkM,EAAWC,yBAAe,CAC9BmiE,qBAAsB,CAAF,2FAIpBC,cAAe,CAAF,+GAIbC,qBAAsB,CAAF,uFA2FPC,MArFmBv4E,IAChC,MAAM++B,EAAOkE,oBACPl1B,EAAWwwD,wBAAcxwD,SACzBjC,EAAO4lB,sBAAatmB,GAAUA,EAAM2zB,KAAK1O,SACzC,QAAE9oB,GAAYvH,EACdyD,EAAQ8D,aAAH,EAAGA,EAAS9D,MACjBmgE,EAAer8D,aAAH,EAAGA,EAASq8D,aACxBJ,EAAc,CAClBt6B,KAAM,UACNC,MAAO,OACPC,IAAK,WAwEP,OArEAtqB,IAAqB,KACnB,GAAIvX,GAAWlM,IAAOD,SAASuoE,sBAAuB,CACpD,GAAIC,EAAc,CAChB,IAAI4U,EAAcC,EACW,MAA7B,GAAIlxE,EAAQs8D,gBAEV2U,EAAexiE,EAASoiE,qBACxBK,EACE,cAAC,OAAD,CAAM9sC,GAAI5c,YAAgBxnB,EAAQs8D,gBAAgB,QAAlD,mBACGt8D,EAAQs8D,uBADX,aACG,EAAyBpgE,aAK9B+0E,EAAexiE,EAASqiE,cACxBI,EACE,cAAC,OAAD,CAAM9sC,GAAI5c,YAAgB60C,EAAa,QAAvC,SACGA,aADH,EACGA,EAAcngE,QAIjB+7D,QAAMkZ,SAAS,mBACjBlZ,QAAMvoB,OAAO,kBAAmB,CAC9B/sC,OACE,cAAC,KAAD,CACEgvC,MAAI,EACJz1C,MAAOs7B,EAAK5jB,cAAcq9D,EAAc,CACtC/0E,MAAOg1E,IAETlxE,QAASw3B,EAAK5jB,cAAcnF,EAASsiE,qBAAsB,CACzDxU,QAASF,aAAF,EAAEA,EAAcG,aACvBp6B,KAAM,IAAIK,KAAKC,eAAen+B,EAAM03D,GAAaljC,OAC/C3jB,gBAAMinD,aAAD,EAACA,EAAcI,gBAO9BxE,QAAMtmB,KACJ,cAAC,KAAD,CACEA,MAAI,EACJz1C,MAAOs7B,EAAK5jB,cAAcq9D,EAAc,CACtC/0E,MAAOg1E,IAETlxE,QAASw3B,EAAK5jB,cAAcnF,EAASsiE,qBAAsB,CACzDxU,QAASF,aAAF,EAAEA,EAAcG,aACvBp6B,KAAM,IAAIK,KAAKC,eAAen+B,EAAM03D,GAAaljC,OAC/C3jB,gBAAMinD,aAAD,EAACA,EAAcI,cAI1B,CACEb,QAAS,kBACTC,WAAW,EACXuV,aAAa,EACb9/B,WAAY,OAKf+qB,GACCpE,QAAMkZ,SAAS,oBACjBlZ,QAAMoZ,QAAQ,qBAInB,CAAC7qE,EAAUxG,EAAS9D,EAAOmgE,EAAc7kC,EAAMjzB,EAAM03D,IAEjD,MClGT,MAAMxtD,EAAWC,yBAAe,CAC9B4iE,iBAAkB,CAAF,+GAIhBC,WAAY,CAAF,iQA0EGC,MAlEe/4E,IAC5B,MAAM++B,EAAOkE,oBACPl1B,EAAWwwD,wBAAcxwD,SACzBjC,EAAO4lB,sBAAatmB,GAAUA,EAAM2zB,KAAK1O,SACzC,QAAE9oB,EAAF,KAAW+V,GAAStd,EACpBu3C,EAAOhwC,aAAH,EAAGA,EAASgwC,KAChBusB,GAAUvsB,aAAA,EAAAA,EAAMwsB,gBAAgBxsB,aAAtB,EAAsBA,EAAMusB,UAAW,GAEjDn6B,GAAO4N,aAAA,EAAAA,EAAMysB,UAAW,GACxBR,EAAc,CAClBt6B,KAAM,UACNC,MAAO,OACPC,IAAK,UACLqV,KAAM,UACNC,OAAQ,WAiDV,OA9CA5/B,IAAqB,KACfxB,GAAQ/V,IACNgwC,WAAMyhC,QAANzhC,MAAgBA,KAAM0hC,YAAa1hC,aAAA,EAAAA,EAAMusB,WAAYxmD,EACnDkiD,QAAMkZ,SAAS,eACjBlZ,QAAMvoB,OAAO,cAAe,CAC1B/sC,OACE,cAAC,KAAD,CACEgvC,MAAI,EACJz1C,MAAOs7B,EAAK5jB,cAAcnF,EAAS6iE,iBAAkB,CACnD/U,QAASA,EACTn6B,KAAM,IAAIK,KAAKC,eAAen+B,EAAM03D,GAAaljC,OAC/C3jB,gBAAMgtB,MAGVpiC,QAASw3B,EAAK5jB,cAAcnF,EAAS8iE,WAAY,QAKvDtZ,QAAMtmB,KACJ,cAAC,KAAD,CACEA,MAAI,EACJz1C,MAAOs7B,EAAK5jB,cAAcnF,EAAS6iE,iBAAkB,CACnD/U,QAASA,EACTn6B,KAAM,IAAIK,KAAKC,eAAen+B,EAAM03D,GAAaljC,OAC/C3jB,gBAAMgtB,MAGVpiC,QAASw3B,EAAK5jB,cAAcnF,EAAS8iE,WAAY,MAEnD,CACE3V,QAAS,cACTC,WAAW,EACXuV,aAAa,EACb9/B,WAAY,OAKd2mB,QAAMkZ,SAAS,gBACjBlZ,QAAMoZ,QAAQ,iBAInB,CAACrxE,EAASu8D,EAASn6B,EAAM65B,EAAazkC,EAAMjzB,EAAMyrC,EAAMxpC,EAAUuP,IAE9D,M,wkBChCT,MAAM0xB,UAAYrmC,YAAU,+CAUlB,CACNuwE,UAAU,EACV9qE,MAAO,KACP+qE,UAAW,OAQb7tC,iCAAiCxiC,GAC3BA,EAAUiF,WAAavT,KAAKwF,MAAM+N,UAChCvT,KAAK4Q,MAAM8tE,UACb1+E,KAAKoqC,SAAS,CAAEs0C,UAAU,IAYhCE,kBAAkBhrE,EAAO8qC,GACvB1+C,KAAKoqC,SAAS,CAAEs0C,UAAU,EAAM9qE,QAAO+qE,UAAWjgC,IAapDhvC,SAAS,gBACP,MAAM,MAAEyc,GAAUtrB,IACZZ,EAAOm9B,YAAWp9B,KAAKwF,MAAM+N,UAC7BqzB,EAAShJ,YAAQ59B,KAAKwF,MAAM+N,UAC5BsrE,EAAU/gD,YAAQ99B,KAAKwF,MAAM+N,UAC7BurE,EAAwB3yD,EAAMmlB,WAAW+kB,aAEzCnhC,EAAQ,oBACZl1B,KAAKwF,MAAMuH,eADC,iBACZ,EAAoBmoB,gBADR,aACZ,EAA8BriB,aADlB,kBAC2B7S,KAAKwF,MAAM++B,YADtC,aAC2B,EAAiB1O,OAE1D,OACE,eAACoK,EAAA,EAAD,WACG/K,GACC,cAAC,IAAD,UACE,sBAAM5jB,KAAM4jB,MAGhB,cAAC,IAAD,CAAWhlB,UAAY,QAAO02B,UAG7B5mC,KAAKwF,MAAMuH,SAAW/M,KAAKwF,MAAMuH,QAAQ,UACxC,cAAC,IAAD,CACEmD,UAAY,eAAclQ,KAAKwF,MAAMuH,QAAQ,SAC1CtI,QAAQ,IAAK,KACbwB,gBAKP,cAAC,IAAD,CACEiK,UAAW24B,IAAG,CACZ,CAAC9L,IAAK93B,IAAKmF,IAAMpK,KAAKwF,MAAM+N,SAAU,KAAM,eAClB,MAAxBvT,KAAKwF,MAAM+N,SACbwrE,SAAkC,MAAxB/+E,KAAKwF,MAAM+N,SACrB,qBAAsBvT,KAAKwF,MAAMqN,MACjC,gBAAiB7S,KAAKwF,MAAMqN,MAC5B,SAAUgsE,EACV,aAAcA,MAGlB,cAAC,KAAD,IACA,cAAC,KAAD,CAAQtrE,SAAUtT,IAClB,cAAC,IAAD,CAAasT,SAAUtT,IACvB,cAAC,EAAD,CACEsT,SAAUvT,KAAKwF,MAAM+N,SACrByrE,gBAAe,UAAEh/E,KAAKwF,MAAMuH,eAAb,iBAAE,EAAoBmoB,gBAAtB,aAAE,EAA8BriB,MAFjD,SAIE,cAAC,UAAD,CAASu2B,OAAK,EAACl5B,UAAU,eAAzB,SACE,iCACE,cAAC,KAAD,IACClQ,KAAKwF,MAAM4rC,kBACV,cAAC0tC,EAAD,IACE9+E,KAAK4Q,MAAM8tE,SACb,cAAC,IAAD,CACEp8D,QAAStiB,KAAK4Q,MAAMgD,MAAM0O,QAC1BmqC,WAAYzsD,KAAK4Q,MAAM+tE,UAAUM,iBAGnCnrB,uBAAa9zD,KAAKwF,MAAMy4B,MAAMyW,OAAQ,CACpCxP,cAAellC,KAAKwF,MAAM0/B,uBAMpC,cAAC,KAAD,IACA,cAAC,EAAD,CACEn4B,QAAS/M,KAAKwF,MAAMuH,QACpB+V,KAAM9iB,KAAKwF,MAAMugE,SAEnB,cAAC,EAAD,CAA0Bh5D,QAAS/M,KAAKwF,MAAMuH,UAC9C,cAAC,iBAAD,CACE62C,SAAUohB,QAAMka,SAASC,cACzBC,iBAAe,EACf/gC,WAAYghC,QACZzW,UAAW,IACXuV,YACE,cAAC,KAAD,CACEjuE,UAAU,uBACV5S,KAAMk9B,IACN1G,KAAK,WAIX,cAAC,IAAD,KAAe9zB,KAAKwF,YAMJknC,kBACtB,CAAC97B,EAAOpL,KAAR,CACE+N,SAAU/N,EAAM8N,SAASC,SACzBV,MAAOjC,EAAMgC,YAAYC,MACzB9F,QAAS6D,EAAM7D,QAAQ5M,KACvBiyC,SAAUxhC,EAAMyhC,SAASz+B,MACzBw9B,kBAAmBxgC,EAAMyhC,SAASjB,oBAEpC,GARsB1E,CAStB8H,GAsCahI,sBACb0nB,YAAa,CACX,CACE51D,IAAK,cACLkC,QAAS,EAAG8S,WAAUrC,OAASkC,eACfA,EAAS4Z,YAAeqQ,YAAW9pB,EAASC,aAE9D,CACEjV,IAAK,UACLkC,QAAS,EAAG8S,WAAUrC,WA7CAquE,QAASruE,QAAOqC,eAC1C,MAAMvG,QAAgBkE,EAAMkC,SAC1B+b,YAAWkO,YAAW9pB,EAASC,YAG3BgsE,EAAW,IACX,aAAEj9C,GAAiBzhC,IAAOqrB,OA2BhC,OAJAgY,YAAYn3B,EArBI,EAAEvF,EAAIrH,MACpB,MAAMiiC,EAAYjiC,EAAK,UACjB,aAAEq/E,GAAiBl9C,EAAaF,GACtC,GAAIo9C,EAAc,CAChB,MAAM3gF,EAAI2gF,EAAa,CACrBvuE,QACAkC,SAAUlC,EAAMkC,SAChBlT,KAAMqT,EAASC,SACfD,WACA9L,KACArH,SAEF,GAAKtB,YAAGmD,OACN,MAAM,IAAI2M,IACR,0DAGJ4wE,EAAS14E,QAAQhI,YAMf5B,QAAQwiF,WAAWF,GAElBxyE,GAaa2yE,CAAa,CAAEzuE,QAAOqC,cAExC,CACEhV,IAAK,aACLkC,QAAS,EAAG8S,WAAUrC,OAASkC,eAE7BA,EACEoe,YACE6L,YAAW9pB,EAASC,UACpB1S,IAAOD,SAAS++E,YAIxB,CACErhF,IAAK,QACLkC,QAAS,EAAG8S,WAAUrC,OAASkC,eACfA,EAAS8e,YAASmL,YAAW9pB,EAASC,aAExD,CACEjV,IAAK,WACLkC,QAAS,EAAG8S,WAAUrC,OAASkC,eACfA,EAASihB,YAAYgJ,YAAW9pB,EAASC,eAG7Dk5B,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACE+N,SAAU/N,EAAM8N,SAASC,SACzBV,MAAOjC,EAAMgC,YAAYC,MACzBkzD,OAAQn1D,EAAMgC,YAAYC,MACtBG,IAAUpC,EAAMgC,YAAYC,OAAOszD,IACnC,GACJp5D,QAAS6D,EAAM7D,QAAQ5M,KACvBiyC,SAAUxhC,EAAMyhC,SAASz+B,MACzBw9B,kBAAmBxgC,EAAMyhC,SAASjB,oBAEpC,MA9CW5E,CAgDbgI,I,ivBC1Qe/4B,yBAAe,CAC9BxS,MAAO,CAAF,mCAIL24B,YAAa,CAAF,+CAIXD,YAAa,CAAF,6DAIX4K,MAAO,CAAF,mCAILtE,OAAQ,CAAF,qCAINyxC,UAAW,CAAF,yDAWX,MAAMjB,UAAsBtqE,YA0C1BzO,YAAY8F,GACVmkC,MAAMnkC,GAENxF,KAAKs6E,cAAgBt6E,KAAKs6E,cAAc/7E,KAAKyB,MAC7CA,KAAK4Q,MAAQ,CACX8oE,WAAW,GAGb,MAAM,IAAEkG,GAAQ5/E,KAAKwF,MAAMq6E,aAkD3B7/E,KAAK8/E,cAAgB9/E,KAAK8/E,cAAcvhF,KAAKyB,MAC7CA,KAAK+/E,oBAAsB//E,KAAK+/E,oBAAoBxhF,KAAKyB,MAQ3DurC,oBACMvrC,KAAKwF,MAAM89B,UACbtjC,KAAKggF,YAAYx1C,QAUrBsG,iCAAiCxiC,GAE7BtO,KAAKwF,MAAMjF,QAAQw7C,SACnBztC,EAAU/N,QAAQ+2B,QAClBt3B,KAAK4Q,MAAM8oE,YAEX15E,KAAKoqC,SAAS,CACZsvC,WAAW,IAEb15E,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,OACKlqC,KAAKwF,MAAMrF,MADhB,IAEEyB,IAAK0M,EAAUvB,QAAQ,WAI3B,MAAM,YAAE8oE,GAAgB71E,KAAKwF,MAAMswE,SAC7B,cAAEH,GAAkB31E,KAAKwF,MAAMowE,kBAErC,GACEtnE,EAAUnO,KAAK8I,OACfjJ,KAAKwF,MAAMrF,KAAK8I,QAAUqF,EAAUnO,KAAK8I,QACxCjJ,KAAKwF,MAAM89B,SACZ,CACA,MAAM+0C,EAAe1C,EAAcrnE,EAAUnO,KAAK8I,OAClDjJ,KAAKoqC,SAAS,CACZ61C,iBAAkB3xE,EAAUnO,KAAK8I,MAC7B4sE,EAAYyC,kBAAkBD,GAC9BxC,EAAY0C,gBAIpB,GACEjqE,EAAUnO,KAAKyhC,aACf5hC,KAAKwF,MAAMrF,KAAKyhC,cAAgBtzB,EAAUnO,KAAKyhC,cAC9C5hC,KAAKwF,MAAM89B,SACZ,CACA,MAAM+0C,EAAe1C,EAAcrnE,EAAUnO,KAAKyhC,aAClD5hC,KAAKoqC,SAAS,CACZ81C,uBAAwB5xE,EAAUnO,KAAKyhC,YACnCi0C,EAAYyC,kBAAkBD,GAC9BxC,EAAY0C,gBAIhBjqE,EAAUg1B,WAAatjC,KAAKwF,MAAM89B,WACF,UAA9BtjC,KAAK4Q,MAAMuvE,eACbngF,KAAKggF,YAAYx1C,QAEjBxqC,KAAKogF,kBAAkB51C,SAW7Bn8B,sBAAsBC,GACpB,OAAOtO,KAAKwF,MAAM89B,WAAa,IAAQtjC,KAAKwF,MAAMrF,KAAMmO,EAAUnO,MASpE2/E,cAAcG,GACZjgF,KAAKoqC,SAAS,CAAE61C,oBAAoB,KAClCjgF,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,OACKlqC,KAAKwF,MAAMrF,MADhB,IAEE8I,MAAOg3E,EAAiBzJ,oBAAoBgC,oBAWlDuH,oBAAoBG,GAClBlgF,KAAKoqC,SAAS,CAAE81C,0BAA0B,KACxClgF,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,OACKlqC,KAAKwF,MAAMrF,MADhB,IAEEyhC,YAAas+C,EAAuB1J,oBAAoBgC,oBAU9D8B,eAAc,OAAEltD,IACd,MAAMojC,EAAOpjC,EAAOmjC,MAAM,GAC1BvwD,KAAKoqC,SAAS,CACZsvC,WAAW,IAEbjpB,wBAAcD,GAAMhuD,KAAMrC,IACxB,MAAM2gB,EAAS3gB,EAAKimC,MAAM,yBAC1BpmC,KAAKwF,MAAM2oB,cACTiP,YAAWp9B,KAAKwF,MAAM+N,UACtB,CACE,QAAS,QACTg5B,MAAO,CACLpsC,KAAM2gB,EAAO,GACbq3B,SAAUr3B,EAAO,GACjB,eAAgBA,EAAO,GACvB4vC,SAAUF,EAAKlzD,OAGnB0C,KAAKwF,MAAM0kC,SAUjBx6B,SAEI,OAAO,yB,IAzPP+oE,E,eAgCkB,CACpBpK,UAAU,IA4Xd,MAAMt6B,EAAO5b,YAAe,CAAC,UAAW,eAAgB,qBAA3CA,CACXsgD,GAGajsC,sBACbC,aACAC,kBACE,CAAC97B,EAAO4jD,KAAR,YAAsB,CACpBj0D,QAASqQ,EAAM7D,QAAQ4/B,YAAY6nB,EAAStqB,QAAU,GACtDn9B,QAAO,UAAE6D,EAAM7D,QAAQ4/B,YAAY6nB,EAAStqB,cAArC,aAAE,EAA2C/pC,OAEtD,CAAEguB,oBAPSqe,CASbuH,I,q0CCxdF,MAAMssC,ECIS,SAAgCxoD,GAC7C,SAASyoD,EAAuB96E,GAAO,wBACrC,MAAM,KAAErF,EAAO,GAAIkV,WAAYtI,EAAzB,KAAkC9M,EAAlC,UAAwC6nC,GAActiC,GACtD,SAAE5E,GAAaC,IACf03C,EAAcp4C,EAAKo4C,aAAep4C,GAElC,MAAE+pC,GAAU/pC,GACZ,OAAEsvB,EAAS7uB,EAAS4uB,iBAAoB+oB,GAGvCgoC,GAAeh0E,IAAM8X,SAAS+Y,YAAWn9B,IAI1CugF,EAAe/iF,OAAOgT,OAC1Bq3B,WAAWzY,YAAc,CAAEA,YAAa,GAAM,CAAE4a,gBAAiB,QACjE,CACExa,OAAQA,MALO,CAAC,QAAS,QAAS,UAAW,aAAc,SAO/ClsB,IAAKjG,GACjBG,OAAO+D,KAAK+2C,GAAanoC,SAAS9S,GAC9B,CAAE,CAACA,GAAOi7C,EAAYj7C,IACtB,MAGF,YAAE6mB,EAAF,eAAeC,GAAmBL,aAAcw0B,EAAa,GAC7DkoC,EAAqBvpD,sBACxBtmB,GAAUA,EAAMgvC,kBAAkBjT,aAE/Bx5B,EAAW6jB,wBAEX0pD,EAAc3zE,WAAS67B,aAAe77B,EAAQ+G,MAAQ,GACtD6sE,GAAWpoC,SAAA,UAAAA,EAAal3C,aAAb,eAAoBW,QAAS,EACxC4+E,GAAYD,KAAYF,SAAD,UAACA,EAAqBv2C,UAAtB,OAAC,EAA6B6R,SAErD8kC,GACJtoC,SAAA,UAAAA,EAAal3C,aAAb,eAAoBW,QAAS,GAA7B,MAAkCy+E,KAAqBv2C,IACnDu2C,SAAA,UAAAA,EAAqBv2C,UAArB,eAA6Bp2B,QAAS,GACtC4sE,EAEAI,GAAuBH,IAAY5zE,aAAA,EAAAA,EAAS4vC,aAAcltB,EAC1DsxD,EACJJ,IAAYF,SAAA,UAAAA,EAAqBv2C,UAArB,eAA6B0T,OAAQnuB,EAE7CuxD,EAAaF,EACfp7C,KAAKu7C,KAAKl0E,EAAQ4vC,YAAcltB,GAChCsxD,EACAr7C,KAAKu7C,KAAKR,EAAmBv2C,GAAO0T,MAAQnuB,GAC5C,EAEEyxD,EAAYJ,EAAmB,UACjC/zE,EAAQ8wC,gBADyB,aACjC,EAAkBsjC,KAClBJ,EAAkB,UAClBN,EAAmBv2C,GAAO2T,gBADR,aAClB,EAAoCsjC,KACpC,KACEC,EAAYN,EAAmB,UACjC/zE,EAAQ8wC,gBADyB,aACjC,EAAkBjI,KAClBmrC,EAAkB,UAClBN,EAAmBv2C,GAAO2T,gBADR,aAClB,EAAoCjI,KACpC,KAEEyrC,GACFlhF,EAAK2nC,WAA+B,iBAAlB3nC,EAAKmhF,UACN,iBAAnBnhF,EAAK2nC,UAsCP,OApCAxjB,IAAqB,KAEjBnR,EADEwtE,EAEAlsD,YAAsB8rD,EAAaC,EAAct2C,EAAO/lB,GAEjDk9D,IAAmBV,EAG1BlsD,YACE8rD,EADmB,OAGdC,GAHc,IAIjBn/E,MAAO,CACL,CACEzE,EAAG,OACHY,EAAG,sDACHo3B,EAAG,OAITsV,GAIKhb,YAAWqxD,EAAa,KAAM,KAAMp8D,KAE9C,CACD+lB,EACAm3C,EACAb,EACAG,EACAJ,EACAptE,EACAgR,IAIA,cAAC0T,EAAD,OACMryB,GADN,IAEE+7E,mBAAoB,CAACvkF,GAAKwkF,gBAAiBp9D,EAAeo9D,GAC1D5jC,MAAO6iC,SAAF,UAAEA,EAAqBv2C,UAAvB,aAAE,EAA6B0T,MACpC6jC,WAAYhyD,EACZtL,YAAaA,EACb68D,WAAYA,EACZE,UAAWA,EACXE,UAAWA,EACXP,aAAcA,EACdD,UAAWA,EACXc,wBAAyBZ,KAS/B,OAJAR,EAAuBvoD,YAAe,0BA1HxC,SAAwBF,GACtB,OAAOA,EAAiBE,aAAeF,EAAiBv6B,MAAQ,YAyHD06B,CAC7DH,MAGKK,IAAqBooD,EAAwBzoD,GD9HlC8pD,CAAwBn8E,IAAU,UACpD,MAAM,KACJrF,EAAO,GADH,WAEJw6E,EAFI,aAGJkG,EAHI,WAIJG,EAJI,mBAKJO,EALI,UAMJz5C,EANI,YAOJ3jB,EAPI,UAQJ+8D,EARI,UASJE,EATI,wBAUJM,EAVI,UAWJd,GACEp7E,EAEJ,IAAIo8E,EAEJ,MAAMh6C,GAAa,UAAA/mC,IAAOqrB,cAAP,mBAAeoW,aAAf,8BAAwCsF,aAAc,GACnEi6C,EAAgB,UAAGj6C,EAAWriC,OAAQwO,GAASA,EAAK0zB,kBAApC,aAAG,EAA8C,GAEvE,GAAItnC,EAAKmhF,WAAanhF,EAAK2nC,UAAW,CAIpC85C,EAH6Bh6C,EAAWG,KACrCh0B,GAASA,EAAKvM,KAAOrH,EAAKmhF,UAEcA,aACtC,SACLM,EAAmB,oBACjB95C,aADiB,EACjBA,EAAWw5C,gBADM,QACMO,aADN,EACMA,EAAkBP,gBADxB,QACoC,KAGzD,MAAMQ,EAAax2C,sBAEnB,OAAOu1C,aAAA,EAAAA,EAAc7+E,QAAS,EAC5B,sBAAKshB,IAAKw+D,EAAV,UACE,cAACF,EAAD,GACE9tE,MAAO+sE,EACPlG,WAAYA,GACRx6E,IAEL6gF,EAAa,GACZ,qBAAK9wE,UAAU,qBAAf,SACE,cAAC,aAAD,CACEsxE,WAAYr9D,EACZ68D,WAAYA,EACZe,aAAc,CAAC/kF,GAAKwkF,kBACjB7G,GACCmH,EAAWp8E,QAAQs8E,eAAe,CAAErtE,SAAU,WAChD4sE,EAAmBvkF,EAAG,CAAEwkF,gBAE1BS,UAAW,KACXC,SAAU,KACVC,SAAU,CACRp1E,QAAS,cAAC,KAAD,CAAMzP,KAAM8kF,IAAmBtuD,KAAK,SAC7CuV,MAAM,EACN,iBAAkB63C,EAClBhxE,UAAYgxE,EAAyB,KAAb,YAE1BmB,SAAU,CACRt1E,QAAS,cAAC,KAAD,CAAMzP,KAAMglF,IAAoBxuD,KAAK,SAC9CuV,MAAM,EACN,iBAAkB+3C,EAClBlxE,UAAYkxE,EAAyB,KAAb,mBAMhCzG,EACF,sBAAKzqE,UAAU,kBAAkBoT,IAAKw+D,EAAtC,UACGJ,GACC,cAAC,mBAAD,CACEl6E,GAAG,oCACHukC,eAAe,sCAGlB60C,GACC,cAAC,mBAAD,CACEp5E,GAAG,oBACHukC,eAAe,sBAGnB,cAAC,SAAD,CAAQmC,QAAS0yC,EAAW2B,UAAQ,EAApC,SACE,cAAC,SAAD,CAAQpI,eAAa,EAACrmD,KAAK,QAA3B,SACE,cAAC,mBAAD,CAAkBtsB,GAAG,UAAUukC,eAAe,mBAKpD,gCACG60C,GACC,cAAC,mBAAD,CACEp5E,GAAG,oBACHukC,eAAe,sBAGnB,cAAC,SAAD,CAAQmC,QAAS0yC,EAAW2B,UAAQ,EAApC,SACE,cAAC,SAAD,CAAQpI,eAAa,EAACrmD,KAAK,QAA3B,SACE,cAAC,mBAAD,CAAkBtsB,GAAG,UAAUukC,eAAe,qBAOzCU,yBAAW4zC,I,cElH1B1jF,EAAOD,QAAUyC,QAAQ,sB,cCAzBxC,EAAOD,QAAUyC,QAAQ,gB,2pBCOzB,MAAM62C,EAAe,CACnBnjC,MAAO,KACP2gB,MAAO,CACL8D,QAAQ,EACRykB,SAAS,EACTnoC,MAAO,OAWI,SAAShB,EAAYhC,EAAQolC,EAAcpP,EAAS,IACjE,OAAQA,EAAOxmC,MACb,KAAQypB,KAAF,WACJ,cACKjZ,GADL,IAEEiC,MAAO,KACP2gB,MAAO,CACLuoB,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQiW,KAAF,WACN,KAAQC,KAAF,WACJ,cACKlZ,GADL,IAEEiC,MAAO+zB,EAAO/yB,OAAOhB,MACrB2gB,MAAO,CACLuoB,SAAS,EACTzkB,QAAQ,EACR1jB,MAAO,QAGb,KAAQiW,KAAF,QACN,KAAQC,KAAF,QACJ,cACKlZ,GADL,IAEEiC,MAAO,KACP2gB,MAAO,CACLuoB,SAAS,EACTzkB,QAAQ,EACR1jB,MAAOgzB,EAAOhzB,MAAMjS,SAASiS,SAGnC,KAAQmW,KAAF,QACN,KAAQA,KAAF,WACJ,cACKnZ,GADL,IAEEiC,MAAO,OAEX,QACE,OAAOjC,K,cChEbjU,EAAOD,QAAUyC,QAAQ,iB,6BCAzB,iD,cCAAxC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,+sC,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,8V,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,oN,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,qN,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,yZ,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,6T,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,4lB,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,2tD,cCAjIC,EAAOD,QAAUyC,QAAQ,iB,cCAzBxC,EAAOD,QAAUyC,QAAQ,yB,cCAzBxC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,iV,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,g1D,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,y8B,gBCAjIC,EAAOD,QAAU,IAA0B,yC,6BCA3C,oDAGA,MAAM8e,EAAWC,yBAAe,CAC9B+mE,QAAS,CAAF,uCAIPjqC,YAAa,CAAF,mCAIXkqC,KAAM,CAAF,2CAIJC,UAAW,CAAF,6CAITC,OAAQ,CAAF,yCAMK9H,EAAiBr1E,IAC5B,MAAM,KAAE++B,GAAS/+B,EAEjB,MAAO,CACLyD,MAAOs7B,EAAK5jB,cAAcnF,EAASgnE,SACnChgE,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAO,UACP6X,OAAQ,CAAC,mBAEPjgB,IAAOqrB,OAAOoW,aAAakgD,QAAQI,aACnC,CACE,CACEp7E,GAAI,WACJyB,MAAOs7B,EAAK5jB,cAAcnF,EAASinE,MACnC3hE,OAAQ,CAAC,YAAa,cAG1B,IAGNzL,WAAY,CACVkjC,YAAa,CACXtvC,MAAOs7B,EAAK5jB,cAAcnF,EAAS+8B,aACnCv3B,OAAQ,eAEV6hE,UAAW,CACT55E,MAAOs7B,EAAK5jB,cAAcnF,EAASknE,YAErCI,SAAU,CACR75E,MAAOs7B,EAAK5jB,cAAcnF,EAASmnE,QACnC3hE,OAAQ,iBACR9iB,KAAM,OACNg7C,kBAAmB,CAAC,QAAS,eAC7BI,gBAAgB,IAGpB39B,SAAU,KAICk/D,O,urBCqEAjU,IAxHF,EAAGzmE,OAAMw6E,iBACpB,IAAIh5C,EAAcxhC,EAAK4iF,cACnBzkD,YAAcn+B,EAAK4iF,eACdxuD,YAAgBp0B,EAAK4iF,eAAvB,kBACD5iF,EAAK4iF,cACP,KAEAC,EAAU,KACVC,EAAS,MAERthD,GAAexhC,EAAKyB,MACnBzB,EAAKyB,IAAIwkC,MAAM,SACZzE,IAGCxhC,EAAKyB,IAAIwkC,MAAM,QACjB68C,EAAS9iF,EAAKyB,IAAIwkC,MAAM,iCAAiC,GAEzD48C,EAAU7iF,EAAKyB,IAAIwkC,MAAM,SACrBjmC,EAAKyB,IAAIwkC,MAAM,iBAAiB,GAChCjmC,EAAKyB,IAAIwkC,MAAM,gBAAgB,GAGrCzE,EACE,8BAAgCqhD,EAAU,kBAErC7iF,EAAKyB,IAAIwkC,MAAM,WACxB48C,EAAU7iF,EAAKyB,IAAIwkC,MAAM,kBAAkB,GAC3CzE,EAAc,wBAA0BqhD,EAAU,SAItD,MAAM1/D,EAAM/W,IAAM++B,YAOZ43C,EAAgB,CACpBvhD,YAAaA,EACb0H,KAAM,OACN85C,eAAe,EACfC,UAAU,EACVC,YAAa,OACbhpC,SAAU,EACVipC,WAbiBtmF,IACa,KAA1BA,EAAEumF,YAAYC,SAChBlgE,EAAI5d,QAAQ+9E,eAYdngE,IAAKA,GAGP,OACE,mCACGnjB,EAAKyB,KACJ,qBACEsO,UAAW24B,IAAG,cAAe,CAC3B,aAA6B,SAAf1oC,EAAK6tC,QAFvB,SAKG7tC,EAAKyB,IAAIwkC,MAAM,SACd,mCACGjmC,EAAKyB,IAAIwkC,MAAM,QACd,cAAC,QAAD,GACExkC,IAAM,kDAAiDqhF,GACnDC,IAGN,cAAC,QAAD,GAAO17E,GAAIw7E,EAAS71D,OAAO,WAAc+1D,MAI7C,mCACG/iF,EAAKyB,IAAIwkC,MAAM,SACd,cAAC,QAAD,GAAO5+B,GAAIw7E,EAAS71D,OAAO,SAAY+1D,IAEvC,mCACG/iF,EAAKyB,IAAIwkC,MAAM,QAEd,uBACE4mB,IACE1uB,YAAcn+B,EAAKyB,KACZ2yB,YAAgBp0B,EAAKyB,KAAvB,mBACDzB,EAAKyB,IAEX8hF,UAAQ,EACRC,OAAQhiD,EACRvhC,KAAK,cAELu6E,EACF,8BACE,cAAC,UAAD,UACE,iCACE,cAAC,mBAAD,CACEnzE,GAAG,+EACHukC,eAAe,uFAMvB,qBAAK77B,UAAU,iC,6BCpHnC,WAEA,MAAMsL,EAAWC,yBAAe,CAC9BgnE,KAAM,CAAF,2CAIJC,UAAW,CAAF,6CAITC,OAAQ,CAAF,yCA+BOiB,IAzBI,EAAGr/C,WACb,CACLt7B,MAAO,iBACP0S,SAAU,GACV6G,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAOs7B,EAAK5jB,cAAcnF,EAASinE,MACnC3hE,OAAQ,CAAC,YAAa,cAG1BzL,WAAY,CACVwtE,UAAW,CACT55E,MAAOs7B,EAAK5jB,cAAcnF,EAASknE,YAErCI,SAAU,CACR75E,MAAOs7B,EAAK5jB,cAAcnF,EAASmnE,QACnC3hE,OAAQ,iBACR9iB,KAAM,OACNg7C,kBAAmB,CAAC,QAAS,eAC7BI,gBAAgB,O,cCrCxB38C,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,0iF,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,yQ,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,gJ,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,0J,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,msB,cCAjIC,EAAOD,QAAUyC,QAAQ,U,cCAzBxC,EAAOD,QAAUyC,QAAQ,mB,cCAzBxC,EAAOD,QAAUyC,QAAQ,O,cCAzBxC,EAAOD,QAAUyC,QAAQ,W,cCAzBxC,EAAOD,QAAUyC,QAAQ,S,cCAzBxC,EAAOD,QAAUyC,QAAQ,8B,cCAzBxC,EAAOD,QAAUyC,QAAQ,iB,cCAzBxC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,q2B,6BCAjI,iUAkCO,MAAM4C,EAAiBD,IAAS,CAAD,uKAAC,IACrC,yCADoC,qMAGzBE,EAAmBF,IAAS,CAAD,0LAAC,IACvC,yCADsC,qMAO3BwkF,EAAgB,CAC3Br8E,GAAI,CACF4N,OAAQ+7D,IACRp/B,SAAU+xC,IACVziF,MAAO0iF,IACPC,WAAYzkF,EACZ8tD,UAAW42B,IACXz8E,GAAI4pD,KAENpwC,OAAQ,CACNuvD,SAAUqG,IACV3F,SAAUkE,IACVhvC,SAAU7mC,EACV6vC,KAAM7vC,EACN2gB,SAAU0xC,IACVnB,KAAMN,IACNliB,MAAOk2C,IACPtiF,IAAKqiF,IACLtkE,MAAOwkE,IACPh2B,MAAOJ,IACPl7C,MAAOixE,IACPziF,MAAO+iF,IACPC,cAAeC,IACf/rC,YAAawrC,IACbQ,eAAgBC,IAChB/lF,OAAQs8C,IACR0pC,YAAatN,IACbuN,gBAAiBC,IACjBC,WAAYC,IACZC,yBAA0BC,IAC1BC,aAAcC,KAEhBlxD,WAAY,CACV,iCAAkCywD,KAEpClZ,QAAS,CACP,gBAAiBkZ,IACjB,kBAAmB9U,KAErBnsB,QAASuxB,IACT10E,KAAM,CACJ8kF,QAAS1V,IACTrhB,MAAOJ,IACPtvD,OAAQyxD,IACR/pB,SAAU7mC,EACV6vC,KAAM7vC,EACN2gB,SAAU0xC,IACVrxC,OAAQ6kE,IACR3kE,QAAS2kE,IACT39E,GAAI4pD,MAKKg0B,EAAgB5P,K,cClG7B74E,EAAOD,QAAUyC,QAAQ,yB,cCAzBxC,EAAOD,QAAUyC,QAAQ,gB,cCAzBxC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,01B,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,yV,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,yV,mECAjIC,EAAOD,QAAUyC,QAAQ,mB,cCAzBxC,EAAOD,QAAUyC,QAAQ,kB,cCAzBxC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,6W,cCAjIC,EAAOD,QAAUyC,QAAQ,qB,+oBCIzB,MAAMqc,EAAWC,yBAAe,CAC9B4pE,SAAU,CAAF,yCAIR7zD,MAAO,CAAF,mCAIL8zD,OAAQ,CAAF,uCAINC,cAAe,CAAF,qDAIbhzD,MAAO,CAAF,mDAILizD,cAAe,CAAF,uDAIbC,YAAa,CAAF,mDAiFE1B,IAzBYv+E,IAAU,QACnC,MAAM,MAAE0kC,EAAF,SAAS2B,EAAT,eAAmBw3B,GAAmB79D,EACtCi3B,EAAa,UAAAj3B,EAAMxH,aAAN,mBAAaqD,aAAb,UAAoBW,OAEjCuiC,EAAOkE,oBACb,IAAIrzB,EAvDsB,GAAGmvB,OAAM9H,aAAYz+B,YAArB,YAAkC,CAC5DwkB,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAO,UACP6X,OAAQ,CACN,YACI9iB,SAAA,UAAAA,EAAOqD,aAAP,eAAckE,OAAQovB,GAAc,SAARA,EAAE/3B,GAAcoF,QAAS,EACrD,CAAC,SACD,GACJ,UACA,qBACA,QACA,YAINqT,WAAY,CACVhU,MAAO,CACL4H,MAAOs7B,EAAK5jB,cAAcnF,EAAS6pE,UACnCrkE,OAAQ,SAEVwQ,MAAO,CACLvoB,MAAOs7B,EAAK5jB,cAAcnF,EAASgW,OACnCpxB,KAAM,UAER4pC,QAAS,CACP/gC,MAAOs7B,EAAK5jB,cAAcnF,EAAS8pE,QACnCtkE,OAAQ,gBACRyb,WAAYA,GAEdipD,mBAAoB,CAClBz8E,MAAOs7B,EAAK5jB,cAAcnF,EAAS+pE,eACnCnlF,KAAM,UACNq8B,WAAYA,GAEdlK,MAAO,CACLtpB,MAAOs7B,EAAK5jB,cAAcnF,EAAS+W,OACnCnyB,KAAM,SACNq8B,WAAYA,GAEdhN,OAAQ,CACNxmB,MAAOs7B,EAAK5jB,cAAcnF,EAASgqE,eACnCplF,KAAM,SACNq8B,WAAYA,IAGhB9gB,SAAU,KAQGyxD,CAAa,EAAD,KAAM5nE,GAAN,IAAa++B,OAAM9H,gBAG5C,OAFArnB,EAASiuD,EAAiBA,EAAe,EAAD,KAAM79D,GAAN,IAAa++B,OAAMnvB,YAAYA,EAGrE,qBAAKlF,UAAU,qBAAf,SACE,cAAC,IAAD,OACM1K,GADN,IAEE0kC,MAAOA,EACP90B,OAAQA,EACRy2B,SAAU,CAACrkC,EAAIxJ,KACb,MAAM2nF,EAAe,EAAH,KACb3nF,GADa,IAEhB62B,WAAY72B,EAAM0nF,mBAAqB,aAAe,cAExD75C,EAASrkC,EAAIm+E,W,osBC5EvB,MAAMnqE,EAAWC,yBAAe,CAC9BysB,OAAQ,CAAF,uCAINolB,WAAY,CAAF,+CAgBZ,MAAMw2B,UAAoB31E,YAqDxBzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAKyS,aAAezS,KAAKyS,aAAalU,KAAKyB,MAQ7CurC,oBAAoB,MACd,UAACvrC,KAAKwF,MAAM+9C,eAAZ,OAAC,EAAoBvhD,QACvBhC,KAAKwF,MAAMmuB,cAAc,CACvBC,eAAgB5zB,KAAKwF,MAAM8oD,aAC3Bx6B,MAAO,EACP1F,WAAYpuB,KAAKwF,MAAM8L,OAK7BkE,qBAAqB,MAEjB,UAACxV,KAAKwF,MAAM+9C,eAAZ,OAAC,EAAoBvhD,aACOmD,IAA5BnF,KAAKwF,MAAMogF,cACV5lF,KAAKwF,MAAMqgF,aAEZ7lF,KAAKwF,MAAMmuB,cAAc,CACvBC,eAAgB5zB,KAAKwF,MAAM8oD,aAC3Bx6B,MAAO,EACP1F,WAAYpuB,KAAKwF,MAAM8L,OAY7BmB,aAAau7C,GACXhuD,KAAKwF,MAAMqmC,SACT7rC,KAAKwF,MAAMgC,GACXwmD,EAAiBA,EAAezqD,IAAKwQ,GAASA,EAAK8lB,OAAS,MAShEnqB,SAAS,MACP,MAAMs+C,EAAiBhuD,KAAKwF,MAAMxH,MAC9BgC,KAAKwF,MAAMxH,MAAMuF,IAAKwQ,IAAD,CAAa8lB,MAAO9lB,EAAM/V,MAAO+V,KACtD,GAEE+xE,GAAkB9lF,KAAKwF,MAAM+9C,SAAW,IAC3Ch+C,OACEwO,IAAUi6C,EAAejmB,KAAK,EAAGlO,WAAYA,IAAU9lB,EAAK8lB,QAE9Dt2B,IAAKwQ,IAAD,CACH8lB,MAAO9lB,EAAK8lB,OAAS9lB,EAAK/V,MAC1BA,MAAO+V,EAAK/V,SAEVwwD,EAAkBxuD,KAAKwF,MAAMipD,sBAAsB3pB,QAEzD,OACE,cAAC,KAAD,OAAsB9kC,KAAKwF,OAA3B,aACE,cAACgpD,EAAD,CACEhnD,GAAK,SAAQxH,KAAKwF,MAAMgC,GAExBi1B,WAAYz8B,KAAKwF,MAAMi3B,WACvBvsB,UAAU,yBACVk/C,gBAAgB,eAChB02B,eAAgBA,EAChB//D,QAAS+/D,EACT5qD,OAAQF,IACRL,MAAOF,IACPhO,WAAY,CAAE8N,mBAAgBL,sBAAmBN,YACjD81B,SAAO,EACP1xD,MAAOgwD,GAAkB,GACzBniB,SAAU7rC,KAAKyS,aACfkvB,YAAW,UACT3hC,KAAKwF,MAAMm8B,mBADF,QAET3hC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS0sB,QAEzC69C,iBAAkB,IAChB/lF,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS8xC,aAjBpCttD,KAAKwF,MAAMgC,Q,IA7HpBs8E,E,eAiCkB,CACpBliD,YAAa,KACbjmB,UAAU,EACV7H,MAAO,CACLigB,WAAY,MAEd4Z,cAAe,CACb5Z,WAAY,MAEdngB,MAAO,GACP2vC,QAAS,GACTvlD,MAAO,OA0GIwuC,sBACbC,aACAtU,YAAe,CAAC,0BAChBuU,kBACE,CAAC97B,EAAOpL,KAAU,UAChB,MAAM8oD,EACJ5gB,YAAiBloC,IACjBooC,YAAkBpoC,IAClBqoC,YAAkBroC,GAEdy6C,EAAU,UACdrvC,EAAMovC,oBADQ,iBACd,EAAqBsO,UADP,iBACd,EAAoC3hB,mBADtB,aACd,EAAkD/7B,EAAM2zB,KAAK1O,QAE/D,OAAIoqB,EACK,CACLsD,QAAStD,EAAWnsC,MAChBmsC,EAAWnsC,MAAMvQ,IAAKwQ,IAAD,CACnB8lB,MAAO9lB,EAAK8lB,OAAS9lB,EAAK/V,MAC1BA,MAAO+V,EAAK/V,SAEd,GACJ4nF,aAAc3lC,EAAWlE,QACzB8pC,YAAa5lC,EAAW3oB,OACxBg3B,eACAh9C,KAAMV,EAAM2zB,KAAK1O,QAGd,CAAEy4B,eAAch9C,KAAMV,EAAM2zB,KAAK1O,SAE1C,CAAElC,oBA7BS6Y,CA+Bbs3C,I,+sBCtMK,MAAMG,EAAaz+E,IACxB,MAAM,GACJgC,EADI,SAEJqkC,EAFI,OAGJ2lB,EAHI,QAIJ7xB,EAJI,UAKJ/jB,EALI,UAMJC,EANI,YAOJ8lB,EAPI,WAQJlF,GACEj3B,EACEwgF,EAAW,SAAQx+E,GAElBxJ,EAAOioF,GAAY5hE,mBAASkQ,YAAgB/uB,EAAMxH,SAClDkoF,EAAWC,GAAgB9hE,oBAAS,GAYrC+hE,EAAiBC,IAAW,MAChC,IAAIn4B,EAAWm4B,EAef,IAdY,QAAR,EAAAn4B,SAAA,eAAUlsD,QAAS,IACjBkkF,GAAahnD,IAASV,MAAMU,IAASH,aAAamvB,KACpDi4B,GAAa,GAGX7nD,YAAc4vB,KAChBA,EAAW35B,YAAgB25B,KAI/B+3B,EAAS/3B,GAETA,EAAW5vB,YAAc4vB,GAAY9vB,YAAU8vB,GAAYA,GAEtD5vB,YAAc4vB,IAAaA,EAASlsD,OAAS,EAAG,CACnD,MAAMyiE,EAAavlC,IAASM,qBAAqB0uB,GACjDA,EAAWuW,EAAW7iE,IACjB6iE,EAAWvlD,SACdinE,GAAa,GAIjBt6C,EAASrkC,EAAiB,KAAb0mD,OAAkB/oD,EAAY+oD,IAG7C,OACE,cAAC,KAAD,OAAsB1oD,GAAtB,IAA6B0K,UAAU,WAAvC,SACE,sBAAKA,UAAU,UAAf,UACE,cAAC,QAAD,CACE1I,GAAIw+E,EACJ1oF,KAAMkK,EACNpH,KAAK,MACLpC,MAAOA,GAAS,GAChB8qC,SAAUrM,EACVkF,YAAaA,EACbkK,SAAU,EAAGze,YAAag5D,EAAch5D,EAAOpvB,OAC/CwzD,OAAQ,EAAGpkC,YACTokC,EAAOhqD,EAAqB,KAAjB4lB,EAAOpvB,WAAemH,EAAYioB,EAAOpvB,OAEtD2hC,QAAS,IAAMA,IACf/jB,UAAWA,GAAa,KACxBC,UAAWA,GAAa,KACxBjI,MAAOsyE,KAERloF,aAAA,EAAAA,EAAOgE,QAAS,EACf,cAAC,SAAO04B,MAAR,UACE,cAAC,SAAD,CACE0O,OAAK,EACLl5B,UAAU,SACViC,aAAW,kBACXwtB,QAAU3iC,IACRA,EAAE6oB,iBACF7oB,EAAE8oB,kBA1DdmgE,EAAS,IACTp6C,EAASrkC,OAAIrC,IAmDL,SAUE,cAAC,KAAD,CAAM7H,KAAMk9B,IAAU1G,KAAK,aAI/B,cAAC,SAAO4G,MAAR,UACE,cAAC,SAAD,CACE0O,OAAK,EACLC,MAAI,EACJl3B,aAAW,iBACXwtB,QAAU3iC,IACRA,EAAE6oB,iBACF7oB,EAAE8oB,kBACFtgB,EAAMynC,kBAAkB,CACtB/uC,KAAM,OACN2uC,SAAS,EACTjC,aAAehpC,IACbwkF,EAAcxkF,OAXtB,SAgBE,cAAC,KAAD,CAAMtE,KAAM08C,IAAYlmB,KAAK,oBAmC3CmwD,EAAUh0E,aAAe,CACvB2xB,YAAa,KACbjmB,UAAU,EACV/H,MAAO,GACP5V,MAAO,KACP6tC,SAAU,OACV2lB,OAAQ,OACR7xB,QAAS,OACT/jB,UAAW,KACXC,UAAW,MAGE2wB,sBAAQI,IAARJ,CAA2By3C,I,2pBCjK1C,MAAMkB,EAAgB3/E,IACpB,MAAM,GACJgC,EADI,MAEJxJ,EAFI,SAGJ6tC,EAHI,OAIJ2lB,EAJI,QAKJ7xB,EALI,aAMJgb,EANI,WAOJle,EAPI,QAQJ1gB,EARI,QASJD,EATI,YAUJ6lB,GACEn8B,EAEJ,OACE,cAAC,KAAD,OAAsBA,GAAtB,aACE,cAAC,QAAD,CACEgC,GAAK,SAAQA,EACblK,KAAMkK,EACNpH,KAAK,SACL0oC,SAAUrM,EACV6pD,IAAKxqE,GAAW,KAChByqE,IAAKxqE,GAAW,KAChB/d,MAAOA,GAAS28C,EAChBhZ,YAAaA,EACbkK,SAAU,EAAGze,YACXye,EAASrkC,EAAqB,KAAjB4lB,EAAOpvB,WAAemH,EAAYioB,EAAOpvB,OAExDwzD,OAAQ,EAAGpkC,YACTokC,EAAOhqD,EAAqB,KAAjB4lB,EAAOpvB,WAAemH,EAAYioB,EAAOpvB,OAEtD2hC,QAAS,IAAMA,UA8BvBwlD,EAAal1E,aAAe,CAC1B2xB,YAAa,KACbjmB,UAAU,EACV/H,MAAO,GACP5V,MAAO,KACP6tC,SAAU,OACV2lB,OAAQ,OACR7xB,QAAS,QAGI8M,yBAAW04C,I,cC9F1BxoF,EAAOD,QAAUyC,QAAQ,kC,cCAzBxC,EAAOD,QAAUyC,QAAQ,0B,cCAzBxC,EAAOD,QAAUyC,QAAQ,qB,+oBCuBVqnF,IAnBIhhF,IACjB,MAAM,SAAE5E,GAAaC,KACf,UAAE0rB,EAAY,IAAO3rB,GACrB,SAAE2S,GAAa/N,EAQrB,OAPe+mB,EACZhpB,IAAKkjF,IACJ,MAAMrgD,EAAQK,oBAAUlzB,EAAUkzE,EAAIrgD,OACtC,OAAOA,EAAQ,CAAEqgD,MAAKrgD,SAAU,OAEjC7gC,OAAQkhF,GAAQA,GAELljF,IAAI,EAAGkjF,KAAO/5D,YAAWlnB,MAAOkhF,GAActgD,SAASxpC,KACnE,MAAM+pF,EAASj6D,EACf,OACE,cAACi6D,EAAD,KAA8BvgD,MAAOA,GAAW5gC,GAAWkhF,GAA7C,YAAW9pF,O,6FCK/B,MAAM4lE,UAAer0D,YAyBnBuB,SACE,OACE,cAAC,UAAD,CAAS05B,OAAK,EAACl5B,UAAU,iBAAiBgC,KAAK,SAA/C,SACE,cAAC,YAAD,UACE,qBAAKhC,UAAU,SAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,OAAf,SACE,mBAAGA,UAAU,eAAewB,KAAK,IAAjC,6BAEF,cAAC,KAAD,CAAY6B,SAAUvT,KAAKwF,MAAM+N,qB,IAlCzCivD,E,eAgBkB,CACpB3vD,MAAO,OAqCI65B,sBAAS97B,IAAD,CACrBiC,MAAOjC,EAAMgC,YAAYC,QADZ65B,CAEX81B,I,6BC/EJ,iEAYA,MAAMhnD,EAAWC,yBAAe,CAC9BmrE,KAAM,CAAF,iCAIJC,UAAW,CAAF,+CA+BIC,IAnBF,KACX,MAAM,SAAElmF,GAAaC,IACfyQ,EAAO4lB,sBAAatmB,GAAUA,EAAM2zB,KAAK1O,QACzC0O,EAAOkE,oBAEb,OACE,cAAC,KAAD,CACE/2B,KAAM9Q,EAAS8uB,eAAkB,IAAGpe,EAAS,IAC7CrI,MAAOs7B,EAAK5jB,cAAcnF,EAASorE,MAFrC,SAIE,cAAC,QAAD,CACE55B,IAAK+5B,IACLj8C,IAAKvG,EAAK5jB,cAAcnF,EAASqrE,WACjC59E,MAAOs7B,EAAK5jB,cAAcnF,EAASqrE,iB,4GC1BpC,MAAMG,UAAkB74E,YA8B7BuB,SAAS,MACP,MAAM,SAAE9O,GAAaC,IACrB,OACGb,KAAKwF,MAAMqN,OACV,eAAC,OAAD,CAAM0rD,UAAQ,EAACryB,WAAS,EAACkhB,QAAQ,QAAjC,UACE,cAAC,OAAK9G,KAAN,UACE,cAAC,OAAD,CACEn0C,aAAW,QACXg/B,GAAK,UACH,UAAAnxC,KAAKwF,MAAMuH,eAAX,SAAqB,OAChB,eAAc/M,KAAKwF,MAAMuH,QAAQ,OAAOtI,QACvC7D,EAASM,QACT,IAEF,IARR,SAWE,cAAC,mBAAD,CAAkBsG,GAAG,SAASukC,eAAe,eAGhDnrC,EAASqmF,sBACR,cAAC,OAAK3gC,KAAN,UACE,cAAC,OAAD,CAAMn0C,aAAW,WAAWg/B,GAAG,YAA/B,SACE,cAAC,mBAAD,CAAkB3pC,GAAG,WAAWukC,eAAe,qB,IArDlDi7C,E,eAkBW,CACpBn0E,MAAO,KACP9F,QAAS,CACP,MAAO,QA0CE2/B,kBAAS97B,IAAD,CACrBiC,MAAOjC,EAAMgC,YAAYC,MACzB9F,QAAS6D,EAAM7D,QAAQ5M,OAFVusC,CAGXs6C,I,6BClFJ,6FAmBA,MAAMxrE,EAAWC,yBAAe,CAC9ByrE,KAAM,CAAF,iCAIJ/nC,YAAa,CAAF,iDASN,MAAMgoC,UAA6Bh5E,YAkBxCo9B,oBACOjF,YAAe,cAAelJ,YAAWp9B,KAAKwF,MAAM+N,YACvDvT,KAAKwF,MAAMunB,eAAeqQ,YAAWp9B,KAAKwF,MAAM+N,WAUpDu9B,iCAAiCxiC,GAC3BA,EAAUiF,WAAavT,KAAKwF,MAAM+N,WAC/B+yB,YAAe,cAAelJ,YAAWp9B,KAAKwF,MAAM+N,YACvDvT,KAAKwF,MAAMunB,eAAeqQ,YAAW9uB,EAAUiF,YAUrD7D,SACE,OACE,cAAC,UAAD,CACEwC,KAAK,aACLC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS2jC,aACnDjvC,UAAU,cACVg8B,WAAS,EACTC,UAAQ,EALV,SAOE,cAAC,YAAD,OA4BOK,sBACbC,aACAC,kBACG97B,IAAD,CACEkD,MAAOlD,EAAMuuC,YAAYrrC,MACzByoC,KAAM3rC,EAAMuuC,YAAY5C,OAE1B,CAAExvB,qBAPSyf,CASb26C,I,6BC1HF,gFAeA,MAAM3rE,EAAWC,yBAAe,CAC9BuW,OAAQ,CAAF,qCAINo1D,WAAY,CAAF,iDAWZ,MAAMC,UAAqBl5E,YAgBzBzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAKsnF,aAAetnF,KAAKsnF,aAAa/oF,KAAKyB,MAC3CA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MACnCA,KAAK4Q,MAAQ,CACXxO,KAAM,IAWVklF,aAAa7hE,GAAO,MAAEznB,IACpBgC,KAAKoqC,SAAS,CACZhoC,KAAMpE,IAUV+mE,SAASt/C,GAAO,MACd,MAAMxlB,GACJ,UAAAD,KAAKwF,MAAM+N,gBAAX,eAAqBvR,QAAS,EACzB,SAAQulF,mBAAmBvnF,KAAKwF,MAAM+N,UACvC,GACNvT,KAAKwF,MAAMqsC,QAAQhrC,KAChB,0BAAyB0gF,mBAAmBvnF,KAAK4Q,MAAMxO,QAAQnC,KAElEwlB,EAAMI,iBAQRnW,SACE,OACE,cAAC,OAAD,CAAMk3B,OAAO,UAAUm+B,SAAU/kE,KAAK+kE,SAAtC,SACE,eAAC,OAAK7K,MAAN,CAAYhqD,UAAU,YAAtB,UACE,cAAC,QAAD,CACEiC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASwW,QACnD6Z,SAAU7rC,KAAKsnF,aACfhqF,KAAK,iBACLU,MAAOgC,KAAK4Q,MAAMxO,KAClBolF,aAAW,EACX51B,aAAa,MACbjwB,YAAa3hC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS4rE,YACpDn+E,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASwW,UAEhD,wBAAQ7f,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASwW,QAA3D,SACE,cAAC,KAAD,CAAM10B,KAAMmqF,IAAS3zD,KAAK,iBAQvB0Y,kBAAQ72B,aAAY82B,aAApBD,CAAgC66C,I,6BClH/C,kDAaiB5rE,yBAAe,CAC9BisE,UAAW,CAAF,6CAqDIj7C,yBAzCA,EAAGlI,WAChB,MAAM,SAAE3jC,GAAaC,IACRq2B,sBAAatmB,GAAUA,EAAM2zB,KAAK1O,QAC/C,OACE,4BAAWruB,GAAG,SAAd,UACE,sBAAKA,GAAG,aAAR,UACE,sBAAK0I,UAAU,gBAAf,UACE,mBAAGwB,KAAK,IAAR,wBACA,8CACA,uDAEF,sBAAKxB,UAAU,gBAAf,UACE,mBAAGwB,KAAK,IAAR,8BACA,mDACA,mBAAGA,KAAK,uBAAR,qCAEF,sBAAKlK,GAAG,aAAa0I,UAAU,gBAA/B,UACE,mBAAGwB,KAAK,IAAR,yBACA,mGAGJ,qBAAKlK,GAAG,gBAAR,SACE,qBAAKA,GAAG,aAAR,SACE,cAAC,KAAD,CAAMA,GAAG,yB,6BCjDnB,iB,+HCyBA,MAAMmgF,EAAa,EACjBjiF,UACAk4C,QACAgqC,WACAC,YACAC,eACAC,sBAEA,eAAC,OAAD,CAAM77C,WAAS,EAACyhC,UAAQ,EAAxB,UACE,eAAC,OAAKqa,KAAN,WACGtiF,EAAU,GACT,cAAC,OAAK4gD,KAAN,CACEtoD,MAAO0H,EAAU,EACjB2jC,KAAM,cAAC,KAAD,CAAM/rC,KAAM2qF,IAAan0D,KAAK,SACpC5jB,UAAU,oBACVyvB,QAASmoD,IAGZpiF,EAAU,GACT,cAAC,OAAK4gD,KAAN,CAAWtoD,MAAO,EAAG2hC,QAASmoD,EAA9B,eAIDpiF,EAAU,GAAK,cAAC,OAAK4gD,KAAN,CAAWxd,UAAQ,EAAnB,iBACfpjC,EAAU,GACT,cAAC,OAAK4gD,KAAN,CAAWtoD,MAAO0H,EAAU,EAAGi6B,QAASmoD,EAAxC,SACGpiF,EAAU,IAGdA,EAAU,GACT,cAAC,OAAK4gD,KAAN,CAAWtoD,MAAO0H,EAAU,EAAGi6B,QAASmoD,EAAxC,SACGpiF,IAGJk4C,EAAQ,GACP,cAAC,OAAK0I,KAAN,CAAWtoD,MAAO0H,EAASwoC,QAAM,EAACvO,QAASmoD,EAA3C,SACGpiF,EAAU,IAGdk4C,EAAQl4C,EAAU,GACjB,cAAC,OAAK4gD,KAAN,CAAWtoD,MAAO0H,EAAU,EAAGi6B,QAASmoD,EAAxC,SACGpiF,EAAU,IAGdk4C,EAAQl4C,EAAU,GACjB,cAAC,OAAK4gD,KAAN,CAAWtoD,MAAO0H,EAAU,EAAGi6B,QAASmoD,EAAxC,SACGpiF,EAAU,IAGdk4C,EAAQl4C,EAAU,GAAK,cAAC,OAAK4gD,KAAN,CAAWxd,UAAQ,EAAnB,iBACvB8U,EAAQl4C,EAAU,GACjB,cAAC,OAAK4gD,KAAN,CAAWtoD,MAAO4/C,EAAQ,EAAGje,QAASmoD,EAAtC,SACGlqC,IAGJl4C,EAAUk4C,EAAQ,GACjB,cAAC,OAAK0I,KAAN,CACEtoD,MAAO0H,EAAU,EACjB2jC,KAAM,cAAC,KAAD,CAAM/rC,KAAM4qF,IAAcp0D,KAAK,SACrC5jB,UAAU,qBACVyvB,QAASmoD,OAIdF,GACC,eAAC,OAAKI,KAAN,CAAWpkC,SAAS,QAApB,UACE,eAAC,OAAK0C,KAAN,WACE,cAAC,mBAAD,CAAkB9+C,GAAG,OAAOukC,eAAe,SAD7C,OAGC,IAAI87C,EAAY/zD,GACf,cAAC,OAAKwyB,KAAN,CAEEtoD,MAAO81B,EACPoa,OAAQpa,IAAS8zD,EACjBjoD,QAASooD,EAJX,SAMGj0D,GALIA,UAkDjB6zD,EAAW13E,aAAe,CACxB23E,SAAU,KACVC,UAAW,GACXE,iBAAkB,MAGLt7C,yBAAWk7C,I,6BCxJ1B,uCAgBA,MAAMQ,EAAO,EAAGv9E,UACdA,GAAQA,EAAK5I,OAAS,EACpB,cAAC,YAAD,CAAWkO,UAAU,OAArB,SACGtF,EAAKrH,IAAKwC,GACT,cAAC,OAAD,CAAMmK,UAAU,WAAWihC,GAAK,mBAAkBprC,EAAlD,SACGA,GAD2DA,MAMlE,yBAiBJoiF,EAAKl4E,aAAe,CAClBrF,KAAM,MAGOu9E,O,6BC/Cf,6CAmCeC,IA7BS,KACtB,MAAM,SAAExnF,GAAaC,IACfg2C,EAAgB3f,sBAAatmB,GAAUA,EAAMimC,eACnD,OACEj2C,EAASynF,qBAAqBj4E,SAASymC,aAAvC,EAAuCA,EAAev5C,OACpD,cAAC,YAAD,CAAWwQ,MAAO,CAAEw6E,aAAc,QAAlC,SACE,eAAC,UAAD,CAAS5a,UAAQ,EAAjB,UACE,cAAC,UAAQlL,OAAT,UACE,cAAC,mBAAD,CACEh7D,GAAG,oCACHukC,eAAe,wCAGnB,4BACE,cAAC,mBAAD,CACEvkC,GAAG,oCACHukC,eAAe,oQACfn3B,OAAQ,CACN2zE,YAAa1xC,EAAcv5C,KAC3BkrF,eAAgB3xC,EAAc1nB,oB,6ICN9C,MAAM3T,EAAWC,yBAAe,CAC9BgtE,iBAAkB,CAAF,6CAMZC,EAAoBljF,IACxB,MAAM++B,EAAOkE,oBACPkgD,EAAczxD,sBAAatmB,GAAUA,EAAM2zB,KAAK1O,QAChDw0C,EAAenzC,sBAClBtmB,IAAD,2BAAWA,EAAM7D,QAAQ5M,YAAzB,iBAAW,EAAqB,sBAAhC,iBAAW,EAAqCkqE,oBAAhD,aAAW,EAAmDv2D,SAG1D,SAAElT,GAAaC,IAErB,OAAOD,EAAS8uB,eACd,qBAAKxf,UAAU,oBAAf,SACG,IAAItP,EAAS2xC,mBAAqBjhC,IACjC,MAAMs3E,EAAc,IAAKve,EAAc,CAAEn1C,SAAU5jB,IACnD,OACE,cAAC,OAAD,CACEa,aAAa,GAAEoyB,EAAK5jB,cAClBnF,EAASitE,qBACN7yE,IAAQtE,GAAMyE,WAAW9P,gBAC9BiK,UAAW24B,IAAG,CAAEvF,SAAUhyB,IAASq3E,IACnCx3C,GAAIy3C,EAAcr0D,YAAgBq0D,EAAY,QAAW,IAAGt3E,EAC5DrI,MAAO2M,IAAQtE,GAAMyE,WACrB4pB,QAAS,KACPn6B,EAAMqjF,iBARV,SAYGjzE,IAAQtE,GAAMyE,YAFT,qBAAoBzE,OAQlC,cAAC,IAAD,UACE,sBAAMA,KAAM1Q,EAASk1C,qBAS3B4yC,EAAiBz4E,aAAe,CAC9B44E,cAAe,S,6BCrEjB,uBAGA,MAAMrtE,EAAWC,yBAAe,CAC9BqtE,SAAU,CAAF,kEAIRnpC,WAAY,CAAF,8DAIVqtB,OAAQ,CAAF,wDA4BO+b,IAtBG,KAChB,MAAMxkD,EAAOkE,oBAEb,OACE,sBACEv4B,UAAU,oBACVgC,KAAK,gBACLC,aAAW,YAHb,UAKE,mBAAGjC,UAAU,WAAWwB,KAAK,QAA7B,SACG6yB,EAAK5jB,cAAcnF,EAASstE,YAE/B,mBAAG54E,UAAU,WAAWwB,KAAK,cAA7B,SACG6yB,EAAK5jB,cAAcnF,EAASmkC,cAE/B,mBAAGzvC,UAAU,WAAWwB,KAAK,UAA7B,SACG6yB,EAAK5jB,cAAcnF,EAASwxD,e,uoBCAtBr+D,IAtBAnJ,IACb,MAAM,MAAE2mB,GAAUtrB,KACZ,MAAE+S,GAAUpO,EAClB,IAAI6rC,EAYJ,OAPEA,OAJmBlsC,IAAjByO,EAAM1R,OAIIiqB,EAAMmlB,WAAWC,UAEjBplB,EAAMmlB,WAAW19B,EAAM1R,OAAOuK,YAEvC4kC,IACHA,EAAYllB,EAAMmlB,WAAW,MAG7B,qBAAK9pC,GAAG,OAAR,SACE,cAAC6pC,EAAD,KAAe7rC,Q,6BC7BrB,6BAQA,MAIMwjF,EAAS,EAAGh8B,MAAK/jD,QAAO7G,OAAM0xB,OAAMmG,QAAO/pB,gBAC/C,MAAM+4E,EAASvjD,KAAKyK,MAAMrc,EAAO,GACjC,OACE,qBAAK5jB,UAAWA,EAAWjH,MAAOA,EAAlC,SACG+jD,EACC,qBAAKA,IAAKA,EAAKliB,IAAK7hC,IAEpB,sBAAK4yB,MAAO/H,EAAM+E,OAAQ/E,EAA1B,UACE,wBAAQ+U,GAAIogD,EAAQpyE,GAAIoyE,EAAQprF,EAAGorF,EAAQnpD,KAAM7F,IACjD,sBACE1D,EAAE,MACF2yD,EAAE,MACFC,WAAW,SACXrpD,KAAK,QACL8sB,SAAaq8B,EAAF,KACXt8B,WAAW,QACXy8B,GAAG,OAPL,SASGhnF,GAAQkjC,YAAYr8B,EAAO,WAiBxC+/E,EAAO/4E,aAAe,CACpB+8C,IAAK,KACL/jD,MAAO,KACP7G,KAAM,KACN0xB,KA3CkB,GA4ClBmG,MA3CmB,OA4CnB/pB,UA3CuB,mBA8CV84E,O,ksBC9BAK,IAtBS,IAAuC,IAAtC,UAAEC,EAAF,GAAan4C,EAAb,KAAiBp9B,GAAqB,EAAZvO,EAAY,SAC7D,OAAI8jF,EAEA,cAAC,KAAD,KAAe53E,KAAMy/B,EAAIp9B,KAAMA,GAAUvO,GAAzC,aACGA,EAAM8J,YAIJ9J,EAAM8J,W,6BCZjB,4CAyCei6E,IAzBE,EAAGppF,OAAMw6E,iBAAiB,QACzC,IAAIjpE,GAAO,UAAAvR,EAAK2iF,gBAAL,mBAAgB,UAAhB,eAAqB,SAAU,GACtCp1E,EAAO,KAWX,OAVI4wB,YAAc5sB,GAChBhE,EACE,cAAC,IAAD,CAAiByjC,GAAI5c,YAAgB7iB,GAAO43E,WAAY3O,EAAxD,SACGx6E,EAAK0iF,WAAanxE,IAGdA,IACThE,EAAO,cAAC,KAAD,CAAegE,KAAMA,EAArB,SAA4BvR,EAAK0iF,WAAanxE,KAGhDhE,EAAO,qBAAKwC,UAAU,YAAf,SAA4BxC,IAAc,O,kJCT1D,MAAM8N,EAAWC,yBAAe,CAC9Bha,KAAM,CAAF,iCAIJ+nF,YAAa,CAAF,iDAIX1kD,QAAS,CAAF,uCAIPxnC,KAAM,CAAF,iCAIJ+W,KAAM,CAAF,iCAIJwc,QAAS,CAAF,uCAIPvO,QAAS,CAAF,uCAIP1O,MAAO,CAAF,mCAIL61E,YAAa,CAAF,6CAIX9sE,KAAM,CAAF,iCAIJoB,QAAS,CAAF,yCAWF,MAAM2rE,UAA6Bv7E,YAiCxCzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MACnCA,KAAK8kE,SAAW9kE,KAAK8kE,SAASvmE,KAAKyB,MACnCA,KAAK4Q,MAAQ,CAAE4/B,UAAU,GAS3BM,iCAAiCxiC,GAC3BtO,KAAKwF,MAAMu2C,SAAWztC,EAAUgpB,QAClC0tC,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASiuE,gBAWxDl+C,oBACEvrC,KAAKoqC,SAAS,CAAEoG,UAAU,IAS5Bu0B,SAAS5kE,GACPH,KAAKwF,MAAMorB,kBACTzwB,EAAKkU,KACLlU,EAAKmiB,QACLniB,EAAK7C,KACL6C,EAAK0wB,SASTi0C,WACE9kE,KAAKwF,MAAMqsC,QAAQkb,SAOrBr9C,SACE,OACE,qBAAKlI,GAAG,eAAR,SACE,eAAC,YAAD,CAAWA,GAAG,OAAd,UACE,cAAC,IAAD,CAAQyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASguE,eACrDxpF,KAAKwF,MAAMoO,OACV,cAAC,UAAD,CACEy1B,KAAK,UACLqkC,UAAQ,EACRC,UAAQ,EACRC,OAAQ5tE,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS5H,OAC/C7G,QAAS/M,KAAKwF,MAAMoO,MAAM0O,UAG9B,cAAC,KAAD,CACEyiD,SAAU/kE,KAAK+kE,SACfD,SAAU9kE,KAAK8kE,SACfpkD,SAAU,CAAE+hB,sBAAuB,IACnCknD,YAAa3pF,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS/Z,MACpDmoF,kBAAgB,EAChB3gF,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASguE,aAC9CztC,QAAS/7C,KAAKwF,MAAMu2C,QACpB3mC,OAAQ,CACNoN,UAAW,CACT,CACE1B,OAAQ,CAAC,OAAQ,OAAQ,UAAW,WACpCtZ,GAAI,UACJyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASspB,WAGlDzvB,WAAY,CACV/X,KAAM,CACJ2L,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASle,MAC9C8C,KAAM,UAERiU,KAAM,CACJpL,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASnH,MAC9CjU,KAAM,SAERywB,QAAS,CACP5nB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASqV,SAC9CzwB,KAAM,UAERkiB,QAAS,CACPrZ,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS8G,SAC9CliB,KAAM,SACN4gB,OAAQ,aAGZrF,SAAU,CAAC,OAAQ,cAGtB3b,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,cAAC,OAAD,CACEhB,GAAK,GAAE/T,YAAWp9B,KAAKwF,MAAM+N,UAC7BrD,UAAU,OAFZ,SAIE,cAAC,OAAD,CACE5S,KAAK,aACLw2B,KAAK,MACLmG,MAAM,OACNhxB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmB,oB,IAjKvD+sE,E,eAqBW,CACpB91E,MAAO,KACPmoC,QAAS,KACTzkB,OAAQ,OAsJGkV,sBACb72B,aACA82B,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACEu2C,QAASnrC,EAAMggB,kBAAkBmrB,QACjCzkB,OAAQ1mB,EAAMggB,kBAAkB0G,OAChC1jB,MAAOhD,EAAMggB,kBAAkBhd,MAC/BL,SAAU/N,EAAM8N,SAASC,WAE3B,CAAEqd,wBAVS4b,CAYbk9C,I,oMCjOF,MAAMluE,EAAWC,yBAAe,CAC9B+X,MAAO,CAAF,qCAILs2D,UAAW,CAAF,6CAIT92C,MAAO,CAAF,mCAIL/yB,SAAU,CAAF,yCAIR3D,OAAQ,CAAF,qCAIN1I,MAAO,CAAF,mCAILm2E,YAAa,CAAF,iDAIXC,mBAAoB,CAAF,yMAMlBr9D,SAAU,CAAF,yCAIRs9D,eAAgB,CAAF,0EAWhB,MAAMj3C,UAAc7kC,YAkClBzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAKkqF,QAAUlqF,KAAKkqF,QAAQ3rF,KAAKyB,MASnC8wC,iCAAiCxiC,GAC3BA,EAAUuE,QACZ7S,KAAKwF,MAAMqsC,QAAQhrC,KAAK7G,KAAKwF,MAAM2kF,WAAa,KAC5CnlB,QAAMkZ,SAAS,gBACjBlZ,QAAMoZ,QAAQ,gBAGd9vE,EAAUsF,QACPoxD,QAAMkZ,SAAS,gBAClBlZ,QAAMpxD,MACJ,cAAC,KAAD,CACEA,OAAK,EACL3K,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASuuE,aAC9Ch9E,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASwuE,sBAElD,CAAEphB,WAAW,EAAOD,QAAS,iBAMrClV,uBACMuR,QAAMkZ,SAAS,gBACjBlZ,QAAMoZ,QAAQ,eAUlB8L,QAAQzkE,GACNzlB,KAAKwF,MAAMguB,MACT1pB,SAASsgF,kBAAkB,SAAS,GAAGpsF,MACvC8L,SAASsgF,kBAAkB,YAAY,GAAGpsF,OAE5CynB,EAAMI,iBAQRnW,SACE,OACE,sBAAKlI,GAAG,aAAR,UACE,cAAC,IAAD,CAAQyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASw3B,SACtD,cAAC,YAAD,CAAW5wC,MAAI,EAAf,SACE,cAAC,OAAD,CAAMrC,OAAO,OAAOglE,SAAU/kE,KAAKkqF,QAAnC,SACE,eAAC,UAAQxvD,MAAT,CAAe+Q,QAAM,EAArB,UACE,cAAC,UAAD,CAASv7B,UAAU,UAAnB,SACE,cAAC,mBAAD,CAAkB1I,GAAG,SAASukC,eAAe,YAE/C,cAAC,UAAD,CAASG,WAAS,EAAlB,SACE,cAAC,mBAAD,CACE1kC,GAAG,2BACHukC,eAAe,+BAGnB,eAAC,UAAD,CAAS77B,UAAU,OAAnB,UACE,cAAC,OAAKgqD,MAAN,CAAYC,QAAM,EAACjqD,UAAU,OAA7B,SACE,cAAC,OAAD,UACE,eAAC,OAAKkqD,IAAN,CAAUC,WAAS,EAAnB,UACE,cAAC,OAAK5D,OAAN,CAAa56B,MAAM,IAAnB,SACE,qBAAK3rB,UAAU,UAAf,SACE,uBAAOoqD,QAAQ,QAAf,SACE,cAAC,mBAAD,CACE9yD,GAAG,aACHukC,eAAe,qBAKvB,cAAC,OAAK0qB,OAAN,CAAa56B,MAAM,IAAnB,SAEE,cAAC,QAAD,CACEr0B,GAAG,QACHlK,KAAK,QACLqkC,YAAa3hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAASsuE,WAEXO,WAAS,aAMnB,cAAC,OAAKnwB,MAAN,CAAYC,QAAM,EAACjqD,UAAU,OAA7B,SACE,cAAC,OAAD,UACE,eAAC,OAAKkqD,IAAN,CAAUC,WAAS,EAAnB,UACE,cAAC,OAAK5D,OAAN,CAAa4D,WAAS,EAACx+B,MAAM,IAA7B,SACE,qBAAK3rB,UAAU,UAAf,SACE,uBAAOoqD,QAAQ,WAAf,SACE,cAAC,mBAAD,CACE9yD,GAAG,WACHukC,eAAe,mBAKvB,cAAC,OAAK0qB,OAAN,CAAa4D,WAAS,EAACx+B,MAAM,IAA7B,SACE,cAAC,QAAD,CACEz7B,KAAK,WACLoH,GAAG,WACHlK,KAAK,WACLqkC,YAAa3hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAASyE,UAEXo6B,SAAU,aAMpB,cAAC,OAAK6f,MAAN,CAAYC,QAAM,EAACjqD,UAAU,OAA7B,SACE,cAAC,OAAD,UACE,eAAC,OAAKkqD,IAAN,CAAUC,WAAS,EAAnB,UACGx5D,IAAOD,SAASqmF,sBACf,cAAC,OAAKxwB,OAAN,CAAa4D,WAAS,EAACx+B,MAAM,KAA7B,SACE,mBAAG3rB,UAAU,OAAb,SACE,cAAC,OAAD,CAAMihC,GAAG,YAAT,SACGnxC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmR,gBAKhD,cAAC,OAAK8pC,OAAN,CAAa4D,WAAS,EAACx+B,MAAM,KAA7B,SACE,mBAAG3rB,UAAU,OAAb,SACE,cAAC,OAAD,CAAMihC,GAAG,kBAAT,SACGnxC,KAAKwF,MAAM++B,KAAK5jB,cACfnF,EAASyuE,gCASzB,eAAC,UAAD,CAAS/5E,UAAU,UAAUo6E,UAAQ,EAArC,UACE,cAAC,SAAD,CACElhD,OAAK,EACLrO,SAAO,EACPsO,MAAI,EACJ+jB,QAAQ,QACRhtD,KAAK,SACLoH,GAAG,oBACH2K,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASgY,OACnDvqB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASgY,OAC9CuoB,QAAS/7C,KAAKwF,MAAMu2C,QATtB,SAWE,cAAC,KAAD,CAAM7rC,UAAU,UAAU5S,KAAMk9C,IAAU1mB,KAAK,WAGjD,cAAC,SAAD,CACEsV,OAAK,EACL8C,WAAS,EACT7C,MAAI,EACJ+jB,QAAQ,QACR5lD,GAAG,oBACHwK,GAAIu4E,OACJp5C,GAAG,IACHh/B,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,QACnDrT,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,QAThD,SAWE,cAAC,KAAD,CAAMpM,UAAU,UAAU5S,KAAMk9B,IAAU1G,KAAK,yB,IArN3Dkf,E,eAqBkB,CACpBp/B,MAAO,KACPmoC,QAAS,KACTlpC,MAAO,KACPs3E,UAAW,OAuMA39C,sBACb72B,aACA82B,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACEoO,MAAOhD,EAAMgC,YAAY4gB,MAAM5f,MAC/BmoC,QAASnrC,EAAMgC,YAAY4gB,MAAMuoB,QACjClpC,MAAOjC,EAAMgC,YAAYC,MACzBs3E,UACEv6D,IAAGzN,MAAM3c,EAAM8N,SAAS0e,QAAQw4D,YAChChlF,EAAM8N,SAASC,SACZ9O,QAAQ,WAAY,IACpBA,QAAQ,YAAa,KACxB,MAEJ,CAAE+uB,YAfSgZ,CAiBbwG,I,8GClTF,MAAMC,UAAe9kC,YAuBnBo9B,oBACEvrC,KAAKwF,MAAMkuB,SACX1zB,KAAKwF,MAAM8rB,gBAQb5hB,SACE,OAAO,cAAC,KAAD,CAAO4D,SAAU,CAAEjS,MAAOrB,KAAKwF,MAAM8N,SAASjS,U,IAlCnD4xC,E,eAmBkB,CACpB5xC,MAAO,OAkBIqrC,sBACb,CAAC97B,EAAOpL,KAAR,CACEnE,MAAOuuB,IAAGzN,MAAM3c,EAAM8N,SAAS0e,UAEjC,CAAE0B,WAAQpC,oBAJGob,CAKbuG,I,kIC3CF,MAAMz3B,EAAWC,yBAAe,CAC9B+2B,QAAS,CAAF,yCAUT,MAAMA,UAAgBrkC,YAAU,qDAyBf2F,GAEX,6BACGA,EAAMvQ,IAAKwQ,IAAD,aACT,qBAEE7D,WAAW,UAAA6D,EAAKD,aAAL,eAAY9R,QAAS,EAAI,gBAAkB,GAFxD,UAIE,cAAC,OAAD,CAAMmvC,GAAIp9B,EAAKnS,IAAf,SAAqBmS,EAAK9K,QACzB8K,EAAKD,OAAS9T,KAAKyqF,YAAY12E,EAAKD,SAJhCC,EAAKnS,UApBpB2pC,oBACE,MAAM,SAAE3qC,GAAaC,IACjBD,EAAS8uB,eACX1vB,KAAKwF,MAAM+rB,cAAe,GAAEvxB,KAAKwF,MAAM8L,KAAQ,GAE/CtR,KAAKwF,MAAM+rB,cAAc,GAAI,GAyBjC7hB,SACE,MAAM,MAAEoE,GAAU9T,KAAKwF,MACvB,OACE,sBAAKgC,GAAG,eAAR,UACE,cAAC,IAAD,CAAQyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASg3B,WACtD,eAAC,YAAD,CAAWtiC,UAAU,eAArB,UACE,+BAAKlQ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASg3B,SAA5C,OACC1+B,GAAS9T,KAAKyqF,YAAY32E,UAOb04B,kBACtBC,aACAC,kBACG97B,IAAD,CACEkD,MAAOlD,EAAM+uC,WAAW7rC,MACxBxC,KAAMV,EAAM2zB,KAAK1O,SAEnB,CAAEtE,oBAPkBib,CAStBgG,GAEahG,sBACbC,aACAC,kBACG97B,IAAD,CACEkD,MAAOlD,EAAM+uC,WAAW7rC,MACxBxC,KAAMV,EAAM2zB,KAAK1O,SAEnB,CAAEtE,oBAEJ2iC,YAAa,CACX,CACE51D,IAAK,aACLkC,QAAS,EAAG8S,WAAUrC,OAASkC,WAAUf,gBACvC,MAAM,SAAExR,GAAaC,IACfyQ,EAAOc,IAAWmyB,KAAK1O,OAC7B,OAAIj1B,EAAS8uB,eACUvc,EAASoe,YAAe,GAAEjgB,EAAQ,IAElC6B,EAASoe,YAAc,GAAI,QAlB3Cib,CAuBbgG,I,8wBCvFF,MAAMC,UAAetkC,YAkCnBzO,YAAY8F,GACVmkC,MAAMnkC,GADW,4CAqBiB8I,IAC9BtO,KAAKwF,MAAM8N,SAAS0e,SAAW1jB,EAAUgF,SAAS0e,QACpDhyB,KAAK0qF,aAvBU,oBAoCR,KACT,MAAM3kE,EAAU6J,IAAGzN,MAAMniB,KAAKwF,MAAMqsC,QAAQv+B,SAAS0e,QACrDhyB,KAAKoqC,SAAS,CAAEjmB,YAAa,IAC7B4B,EAAO,yBAA+B,EACtC/lB,KAAKwF,MAAMukC,cAAc,GAAIhkB,KAxCZ,uCA2CW,CAAC/oB,GAAKwkF,iBAClC,MAAM,SAAE5gF,GAAaC,IACrB8G,OAAO+N,SAAS,EAAG,GACnB,IAAIqQ,EAAU6J,IAAGzN,MAAMniB,KAAKwF,MAAMqsC,QAAQv+B,SAAS0e,QACnDjM,EAAO,yBAA+B,EAEtC/lB,KAAKoqC,SAAS,CAAEjmB,YAAaq9D,GAAc,KACzCxhF,KAAKwF,MAAMukC,cAAc,GAAzB,OACKhkB,GADL,IAEEwJ,SAAUvvB,KAAK4Q,MAAMuT,YAAc,GAAKvjB,EAAS4uB,uBApDpC,wBAyDJ,CAAC/J,EAAOoP,KACrB,IAAI9O,EAAU6J,IAAGzN,MAAMniB,KAAKwF,MAAMqsC,QAAQv+B,SAAS0e,QACnDjM,EAAQikB,QAAUvkB,EAAM2H,OAAO9vB,KAC/ByoB,EAAQ8O,WAAaA,GAAc,YACT,cAAtBpP,EAAM2H,OAAO9vB,cACRyoB,EAAQikB,eACRjkB,EAAQ8O,YAEjB,IAAIrC,EAAe5C,IAAGiD,UAAU9M,GAChC/lB,KAAKoqC,SAAS,CAAEjmB,YAAa,EAAG+pB,OAAQzoB,EAAM2H,OAAO9vB,MAAQ,KAE3D0C,KAAKwF,MAAMqsC,QAAQptC,QAAQ,CACzButB,OAAQQ,QAnEZxyB,KAAK4Q,MAAQ,CAAEuT,YAAa,EAAGqsB,UAAU,EAAOtC,OAAQ,aAQ1D3C,oBACEvrC,KAAK0qF,WACL1qF,KAAKoqC,SAAS,CAAEoG,UAAU,IAmE5B9gC,SAAS,QACP,MAAM,SAAE9O,GAAaC,IACrB,OACE,eAAC,YAAD,CAAW2G,GAAG,cAAd,UACE,cAAC,IAAD,CAAQyB,MAAM,WACd,qBAAKiH,UAAU,YAAf,SACE,0BAAS1I,GAAG,UAAZ,UACE,mCACE,oBAAI0I,UAAU,uBAAd,SACGlQ,KAAKwF,MAAMmlF,eACV,cAAC,mBAAD,CACEnjF,GAAG,4BACHukC,eAAe,4BACfn3B,OAAQ,CACNg2E,KAAM,4BAAI5qF,KAAKwF,MAAMmlF,oBAIzB,cAAC,mBAAD,CACEnjF,GAAG,iBACHukC,eAAe,qBAKrB,cAAC,KAAD,KAEC,UAAA/rC,KAAKwF,MAAMwsB,cAAX,eAAmB2qB,aAAc,EAChC,sBAAKzsC,UAAU,cAAf,UACGlQ,KAAKwF,MAAMwsB,OAAO2qB,YAAa,IAChC,cAAC,mBAAD,CACEn1C,GAAG,gBACHukC,eAAe,YAEjB,cAAC,SAAD,UACE,eAAC,SAAOqyB,QAAR,CAAgBluD,UAAU,iBAA1B,UACE,qBAAKA,UAAU,UAAf,SACE,cAAC,mBAAD,CACE1I,GAAG,WACHukC,eAAe,eAGnB,cAAC,SAAD,CACEpM,QAAUla,IACRzlB,KAAK6qF,aAAaplE,IAEpBnoB,KAAK,YACLw2B,KAAK,OACL5jB,UAAW26D,IAAW,cAAe,CACnC,gBAAuC,cAAtB7qE,KAAK4Q,MAAMs9B,SAPhC,SAUE,cAAC,mBAAD,CACE1mC,GAAG,YACHukC,eAAe,gBAGnB,cAAC,SAAD,CACEpM,QAAUla,IACRzlB,KAAK6qF,aAAaplE,IAEpBnoB,KAAK,iBACLw2B,KAAK,OACL5jB,UAAW26D,IAAW,cAAe,CACnC,gBACwB,mBAAtB7qE,KAAK4Q,MAAMs9B,SARjB,SAWE,cAAC,mBAAD,CACE1mC,GAAG,iBACHukC,eAAe,qBAGnB,cAAC,SAAD,CACEpM,QAAUla,IACRzlB,KAAK6qF,aAAaplE,EAAO,YAE3BnoB,KAAK,YACLw2B,KAAK,OACL5jB,UAAW26D,IAAW,cAAe,CACnC,gBAAuC,cAAtB7qE,KAAK4Q,MAAMs9B,SAPhC,SAUE,cAAC,mBAAD,CACE1mC,GAAG,sBACHukC,eAAe,kCAOzB,8BACE,cAAC,mBAAD,CACEvkC,GAAG,mBACHukC,eAAe,0BAKvB,0BAASvkC,GAAG,eAAZ,UACGxH,KAAKwF,MAAMsO,MAAMvQ,IAAKwQ,GACrB,0BAAS7D,UAAU,WAAnB,UACE,oBAAIA,UAAU,eAAd,SACE,cAAC,KAAD,CACE6D,KAAMA,EACN7D,UAAU,cACVjH,MAAO8K,EAAK,SAHd,SAKGA,EAAK9K,UAGT8K,EAAK6tB,aACJ,qBAAK1xB,UAAU,WAAf,SACE,sBAAMA,UAAU,cAAhB,SAA+B6D,EAAK6tB,gBAGxC,qBAAK1xB,UAAU,aAAf,SACE,cAAC,KAAD,CAAe6D,KAAMA,EAArB,SACE,cAAC,mBAAD,CACEvM,GAAG,aACHukC,eAAe,mBAIrB,qBAAK77B,UAAU,kBAvBkB6D,EAAK,UA2BzC,UAAA/T,KAAKwF,MAAMwsB,cAAX,eAAmB6rB,WAClB,qBAAK3tC,UAAU,gBAAf,SACE,cAAC,aAAD,CACEsxE,WAAYxhF,KAAK4Q,MAAMuT,YACvB68D,WAAYt7C,KAAKu7C,KACfjhF,KAAKwF,MAAMwsB,OAAO2qB,YAAc/7C,EAAS4uB,iBAE3CuyD,aAAc/hF,KAAK8qF,4BACnB7I,UAAW,KACXC,SAAU,KACVC,SAAU,CACRp1E,QAAS,cAAC,KAAD,CAAMzP,KAAM8kF,IAAmBtuD,KAAK,SAC7CuV,MAAM,EACN,iBAAkBrpC,KAAKwF,MAAMwsB,OAAO6rB,SAASsjC,KAC7CjxE,UAAYlQ,KAAKwF,MAAMwsB,OAAO6rB,SAASsjC,KAEnC,KADA,YAGNkB,SAAU,CACRt1E,QAAS,cAAC,KAAD,CAAMzP,KAAMglF,IAAoBxuD,KAAK,SAC9CuV,MAAM,EACN,iBAAkBrpC,KAAKwF,MAAMwsB,OAAO6rB,SAASjI,KAC7C1lC,UAAYlQ,KAAKwF,MAAMwsB,OAAO6rB,SAASjI,KAEnC,KADA,wBASjB51C,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MAAO,iC,IAvRfM,E,eA2BkB,CACpB3+B,MAAO,GACP62E,eAAgB,KAChB95D,QAAS,KACT5wB,KAAM,OAiQcysC,kBACtB,CAAC97B,EAAOpL,KAAR,CACEsO,MAAOlD,EAAMohB,OAAOle,MACpB62E,eAAgB/6D,IAAGzN,MAAM3c,EAAMqsC,QAAQv+B,SAAS0e,QAAQyY,eACxDl3B,SAAU/N,EAAMqsC,QAAQv+B,SAASC,WAEnC,CAAEw2B,oBANoB2C,CAOtB+F,GAEajG,sBACbE,kBACE,CAAC97B,EAAOpL,KAAR,CACEsO,MAAOlD,EAAMohB,OAAOle,MACpB62E,eAAgB/6D,IAAGzN,MAAM3c,EAAMqsC,QAAQv+B,SAAS0e,QAAQyY,eACxDl3B,SAAU/N,EAAM8N,SAASC,WAE3B,CAAEw2B,qBAEJmqB,YAAa,CACX,CACE51D,IAAK,SACLkC,QAAS,EAAG8S,WAAUrC,OAASkC,eAC7BA,EACE42B,aAAc,GAAD,OACRna,IAAGzN,MAAM7O,EAAS0e,SADV,IAEX+4D,yBAA0B,SAhBvBv+C,CAqBbiG,I,2sBCrUF,MAAMj3B,EAAWC,yBAAe,CAC9BuvE,QAAS,CAAF,uCAIP5rC,SAAU,CAAF,yCAIR6rC,mBAAoB,CAAF,+KAMlBnmD,QAAS,CAAF,uCAIP4T,OAAQ,CAAF,qCAIND,KAAM,CAAF,iCAIJyyC,MAAO,CAAF,mCAILC,YAAa,CAAF,iDAIXC,YAAa,CAAF,iDAIXC,iBAAkB,CAAF,gDASZC,EAAkB/mD,IAAD,CACrB/hB,UAAW,CACT,CACE1B,OAAQ,CAAC,WACTtZ,GAAI,UACJyB,MAAOs7B,EAAK5jB,cAAcnF,EAASspB,WAGvCzvB,WAAY,CACV21E,QAAS,CACP/hF,MAAOs7B,EAAK5jB,cAAcnF,EAASwvE,SACnC5qF,KAAM,SACN4gB,OAAQ,aAGZrF,SAAU,CAAC,cAQb,MAAM4vE,UAAiBp9E,YAwCrBzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MACnCA,KAAK0xD,SAAW1xD,KAAK0xD,SAASnzD,KAAKyB,MACnCA,KAAKyxD,OAASzxD,KAAKyxD,OAAOlzD,KAAKyB,MAC/BA,KAAKwrF,SAAWxrF,KAAKwrF,SAASjtF,KAAKyB,MACnCA,KAAKyrF,aAAezrF,KAAKyrF,aAAaltF,KAAKyB,MAC3CA,KAAK0rF,WAAa1rF,KAAK0rF,WAAWntF,KAAKyB,MACvCA,KAAKqrF,iBAAmBrrF,KAAKqrF,iBAAiB9sF,KAAKyB,MACnDA,KAAK4Q,MAAQ,CACX+6E,UAAU,EACVC,OAAQ,KACRC,SAAU,KACVC,QAAS,KACTC,kBAAmB,IAIvBxgD,oBACEvrC,KAAKwF,MAAMuoB,aAAaqP,YAAWp9B,KAAKwF,MAAM+N,WAShDu9B,iCAAiCxiC,IAE7BA,EAAUiF,WAAavT,KAAKwF,MAAM+N,UACjCvT,KAAKwF,MAAMwmF,WAAWjwC,SAAWztC,EAAU09E,WAAW10D,QACtDt3B,KAAKwF,MAAMymF,cAAclwC,SAAWztC,EAAU29E,cAAc30D,SAE7Dt3B,KAAKwF,MAAMuoB,aAAaqP,YAAW9uB,EAAUiF,WAUjDwxD,SAASrkD,GACP1gB,KAAKwF,MAAMqoB,WACTuP,YAAWp9B,KAAKwF,MAAM+N,UACtBmN,EAASsqE,QACThrF,KAAK4Q,MAAMk7E,SAEb9rF,KAAKoqC,SAAS,CAAE0hD,QAAS,OAO3BJ,WAAW59D,GACT9tB,KAAKoqC,SAAS,CAAE0hD,QAASh+D,IAM3Bu9D,mBACErrF,KAAKwF,MAAMwoB,iBAAiBhuB,KAAKwF,MAAMowC,MAUzC8b,SAAS1zD,GACPgC,KAAKwF,MAAMyoB,cAAcjwB,GAQ3BkuF,UAAUp+D,GACR9tB,KAAKoqC,SAAU5I,IACb,MAAM2qD,EAAa3qD,EAAUuqD,kBAAkBj+D,IACzC,kBAAEi+D,GAAsBvqD,EAE9B,MAAO,CACLuqD,kBAAmB,EAAF,KACZA,GADY,IAEf,CAACj+D,IAAaq+D,OAatB16B,OAAOzzD,GACLgC,KAAKoqC,SAAS,CACZuhD,UAAU,EACVC,OAAQ5tF,EAAMwJ,GACdqkF,SAAU7tF,EAAMoE,OASpBopF,WACExrF,KAAKoqC,SAAS,CACZuhD,UAAU,EACVC,OAAQ,KACRC,SAAU,OAEZ7rF,KAAKwF,MAAMuoB,aAAaqP,YAAWp9B,KAAKwF,MAAM+N,WAQhDk4E,aAAahyC,GACXz5C,KAAKoqC,SAAS,CACZuhD,UAAU,EACVC,OAAQ,KACRC,SAAU,KACVC,QAAS,OAIbM,+BAA+Bt4E,GAE7B,MAAMu4E,EAAyBv4E,EAAM5P,OAAO,CAAC0gC,EAAa7wB,IACxD,GACE,CAACA,EAAKu4E,YAAa,CAAEtB,QAASj3E,EAAMzE,SAAU,KAC3Cs1B,GAJY,IAanB,OALA9wB,EAAMhU,QAASkrF,IACTA,EAAQuB,aACVF,EAAuBrB,EAAQuB,aAAaj9E,SAASzI,KAAKmkF,KAGvDqB,EAQT38E,SACE,MAAM,MAAEoE,GAAU9T,KAAKwF,MACjBugC,EAAS/lC,KAAKwF,MAAMugC,OAAOjB,SAC3B,kBAAEinD,GAAsB/rF,KAAK4Q,MAE7By7E,EAAyBrsF,KAAKosF,+BAA+Bt4E,GAE7D04E,EAAqB14E,EAAMvO,OAAQylF,IAAaA,EAAQuB,aAIxDE,EAAkBzB,GACtB,eAAC,UAAD,WACE,cAAC,IAAD,CACEh+B,IAAKg+B,EAAQ0B,aACbzjF,MAAO+hF,EAAQ2B,aAAe,YAC9B1yD,MAAOsL,YAASylD,EAAQ4B,mBAE1B,eAAC,UAAQxuB,QAAT,WACE,cAAC,UAAQyuB,OAAT,UAAiB7B,EAAQ2B,cACzB,cAAC,UAAQG,SAAT,UACE,iCACG,IACD,sBAAM7jF,MAAO88B,EAAOilD,EAAQ+B,eAAejnD,OAAO,QAAlD,SACGC,EAAOilD,EAAQ+B,eAAeC,iBAIrC,eAAC,UAAQC,KAAT,WACG,IAC8B,cAA9BjC,EAAQ5oF,KAAK,aACZ,qBACE4K,wBAAyB,CACvBC,OAAQ+9E,EAAQ5oF,KAAKjC,QAIzB6qF,EAAQ5oF,KAAKjC,QAGjB,eAAC,UAAQyiE,QAAT,WACE,cAAC,UAAQsqB,OAAT,CACEl7E,GAAG,IACHG,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS0vE,OACnDvrD,QAAS,IAAM3/B,KAAK0rF,WAAWV,EAAQsB,YAHzC,SAKE,cAAC,mBAAD,CAAkB9kF,GAAG,QAAQukC,eAAe,YAE7Ci/C,EAAQmC,aACP,cAAC,UAAQD,OAAT,CACEvtD,QAAS,IACP3/B,KAAKyxD,OAAO,CACVjqD,GAAI+sB,YAAgBy2D,EAAQ,QAC5B5oF,KAAM4oF,EAAQ5oF,KAAKjC,OAGvBgS,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASi9B,MACnDz6C,MAAO,CACLwJ,GAAI+sB,YAAgBy2D,EAAQ,QAC5B5oF,KAAM4oF,EAAQ5oF,KAAKjC,MAVvB,SAaE,cAAC,mBAAD,CAAkBqH,GAAG,OAAOukC,eAAe,WAG9Ci/C,EAAQoC,cACP,eAAC,UAAQF,OAAT,CACE/6E,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASk9B,QACnD/Y,QAAS,IAAM3/B,KAAK0xD,SAASn9B,YAAgBy2D,EAAQ,SACrD/wD,MAAM,MAHR,UAKE,cAAC,OAAD,CAAM38B,KAAK,SAAS28B,MAAM,QAC1B,cAAC,mBAAD,CACEzyB,GAAG,SACHukC,eAAe,SACf9R,MAAM,WAIZ,cAAC,UAAQizD,OAAT,CACEl7E,GAAG,IACH2tB,QAAS,IAAM3/B,KAAKksF,UAAUlB,EAAQsB,YAFxC,SAIGD,EAAuBrB,EAAQsB,YAAYh9E,SAAStN,OACrD,EACEhC,KAAK4Q,MAAMm7E,kBAAkBf,EAAQsB,YACnC,qCACE,cAAC,OAAD,CAAMhvF,KAAK,MAAM28B,MAAM,SACvB,cAAC,mBAAD,CACEzyB,GAAG,eACHukC,eAAe,oBAInB,qCACE,cAAC,OAAD,CAAMzuC,KAAK,QAAQ28B,MAAM,SACzB,cAAC,mBAAD,CACEzyB,GAAG,eACHukC,eAAe,oBAInB,UAGR,qBAAKvkC,GAAK,eAAcwjF,EAAQsB,gBAGjCD,EAAuBrB,EAAQsB,YAAYh9E,SAAStN,OAAS,EAC1DqqF,EAAuBrB,EAAQsB,YAAYh9E,SAAS/L,IAClD,CAACkL,EAAO5C,IACN,cAAC,UAAQ6uB,MAAT,CACE2yD,UAAWtB,EAAkBf,EAAQsB,YADvC,SAIGG,EAAeh+E,IAFV,SAAQ5C,KAASm/E,EAAQsB,eAMrC,OA3GQtB,EAAQsB,YA+GxB,OACE,eAAC,YAAD,CAAWp8E,UAAU,WAArB,UACE,cAAC,IAAD,CACEi9B,KAAMntC,KAAK4Q,MAAM+6E,SACjB7mB,SAAU9kE,KAAKyrF,aACf6B,KAAMttF,KAAKwrF,SACXhkF,GAAIxH,KAAK4Q,MAAMg7E,OACfxpF,KAAMpC,KAAK4Q,MAAMi7E,WAEnB,qBAAKrkF,GAAG,iBAAR,SACE,cAAC,KAAD,CACEu9D,SAAU/kE,KAAK+kE,SACfD,SAAU9kE,KAAKyrF,aACf9B,YAAa3pF,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASwvE,SACpDpB,kBAAgB,EAChBx0E,OAAQk2E,EAAetrF,KAAKwF,MAAM++B,UAKtC,cAAC,UAAQ7J,MAAT,CAAe6yD,UAAQ,EAAvB,SACGf,EAAmBjpF,IAAKwQ,GAAS04E,EAAe14E,MAIlD/T,KAAKwF,MAAMm3C,YAAc38C,KAAKwF,MAAMsO,MAAM9R,QACzC,cAAC,SAAD,CAAQ6rE,OAAK,EAACzkC,OAAK,EAACnP,MAAM,OAAO0F,QAAS3/B,KAAKqrF,iBAA/C,SACE,cAAC,mBAAD,CAAkB7jF,GAAG,YAAYukC,eAAe,mBAInD/rC,KAAK4Q,MAAMk7E,SACV,cAAC,SAAD,CACE75C,KACEnoC,UACAA,SAASooC,eAAgB,eAAclyC,KAAK4Q,MAAMk7E,SAHtD,SAME,cAAC,KAAD,CACE/mB,SAAU/kE,KAAK+kE,SACfD,SAAU9kE,KAAKyrF,aACf9B,YAAa3pF,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASwvE,SACpDpB,kBAAgB,EAChBx0E,OAAQk2E,EAAetrF,KAAKwF,MAAM++B,cASjCiI,sBACbC,aACAtU,YAAe,CAAC,WAChBuU,kBACG97B,IAAD,CACEkD,MAAOlD,EAAMwuC,SAAStrC,MACtB8hC,KAAMhlC,EAAMwuC,SAASxJ,KACrB+G,YAAa/rC,EAAMwuC,SAASzC,YAC5BqvC,WAAYp7E,EAAMwuC,SAAS9uC,IAC3B27E,cAAer7E,EAAMwuC,SAAS1G,SAEhC,CAAE7qB,eAAYI,kBAAeF,iBAAcC,uBAXhCwe,CAab++C,I,6BCreF,6B,mICiBA,MAAM/vE,EAAWC,yBAAe,CAC9BxS,MAAO,CAAF,2DAIL67B,QAAS,CAAF,uCAIPsgC,cAAe,CAAF,2CAIbC,oBAAqB,CAAF,2FAInBC,WAAY,CAAF,qCAIVC,iBAAkB,CAAF,mVAMhBioB,8BAA+B,CAAF,qFAI7BC,6BAA8B,CAAF,6QAM5B9gE,SAAU,CAAF,2CAWV,MAAMimB,UAAiBzkC,YA8BrBzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MACnCA,KAAK4Q,MAAQ,CACXgD,MAAO,MAUXk9B,iCAAiCxiC,GAC3BtO,KAAKwF,MAAMu2C,SAAWztC,EAAUgpB,SAClC0tC,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAASgyE,+BAEXzgF,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,EAASiyE,iCAIfztF,KAAKwF,MAAMqsC,QAAQhrC,KAAK,WAU5Bk+D,SAAS5kE,GACPH,KAAKwF,MAAM0sB,WAAW,CACpB8zC,SAAU7lE,EAAK6lE,SACfrmD,MAAOxf,EAAKwf,MACZM,SAAU9f,EAAK8f,WAEjBjgB,KAAKoqC,SAAS,CACZx2B,MAAO,OASXlE,SACE,OACE,sBAAKlI,GAAG,gBAAR,UACE,cAAC,IAAD,CAAQyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmR,YACtD,cAAC,KAAD,CACEo4C,SAAU/kE,KAAK+kE,SACf97D,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASvS,OAC9C2K,MAAO5T,KAAK4Q,MAAMgD,OAAS5T,KAAKwF,MAAMoO,MACtCmoC,QAAS/7C,KAAKwF,MAAMu2C,QACpB4tC,YAAa3pF,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmR,UACpDvX,OAAQ,CACNoN,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASspB,SAC9ChkB,OAAQ,CAAC,WAAY,WAGzBzL,WAAY,CACV2wD,SAAU,CACR5lE,KAAM,SACN6I,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS4pD,eAC9CxjC,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAAS6pD,sBAGb1lD,MAAO,CACLvf,KAAM,SACN6I,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS8pD,YAC9C1jC,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAAS+pD,oBAIf5pD,SAAU,CAAC,WAAY,gB,IArH7Bi3B,E,eAoBkB,CACpBh/B,MAAO,OAwGI44B,sBACb72B,aACA82B,aACAC,kBACG97B,IAAD,CACEmrC,QAASnrC,EAAMsN,MAAM7f,OAAO09C,QAC5BzkB,OAAQ1mB,EAAMsN,MAAM7f,OAAOi5B,OAC3B1jB,MAAOhD,EAAMsN,MAAM7f,OAAOuV,QAE5B,CAAEse,iBATSsa,CAWboG,I,yICvLF,MAAMp3B,EAAWC,yBAAe,CAC9BxS,MAAO,CAAF,2DAIL24B,YAAa,CAAF,iIAIXkD,QAAS,CAAF,uCAIP4oD,cAAe,CAAF,qDAIbpoB,WAAY,CAAF,+CAIVqoB,oBAAqB,CAAF,mGAInBpoB,iBAAkB,CAAF,6FAIhBqoB,cAAe,CAAF,iDAIbC,oBAAqB,CAAF,qHAInBC,oBAAqB,CAAF,yDAInBC,oBAAqB,CAAF,uEAInBC,eAAgB,CAAF,qFAIdC,0BAA2B,CAAF,mJAKzBC,cAAe,CAAF,uDAIbC,4BAA6B,CAAF,iFAI3BC,2BAA4B,CAAF,+LAM1BC,cAAe,CAAF,uDAWf,MAAMv7C,UAAsB3kC,YA6B1BzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK8kE,SAAW9kE,KAAK8kE,SAASvmE,KAAKyB,MACnCA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MACnCA,KAAK4Q,MAAQ,CACXgD,MAAO,KACP06E,cAAc,GAGhBtuF,KAAKuuF,gBAAkB1tF,IAAOD,SAAS4tF,gBACnC,QACA,WAEJxuF,KAAKyuF,gBACsB,UAAzBzuF,KAAKuuF,gBACDvuF,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS8pD,YACvCtlE,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASkyE,eAE7C1tF,KAAK0uF,sBACsB,UAAzB1uF,KAAKuuF,gBACDvuF,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS+pD,kBACvCvlE,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmyE,qBAS/C78C,iCAAiCxiC,GAC3BtO,KAAKwF,MAAMu2C,SAAWztC,EAAUgpB,QAClCt3B,KAAKoqC,SAAS,CAAEkkD,cAAc,IAWlCvpB,SAAS5kE,GACHA,EAAK8f,WAAa9f,EAAKwuF,gBACzB3uF,KAAKwF,MAAM6tB,mBACTlzB,EAAKH,KAAKuuF,iBACVvuF,KAAKwF,MAAMqN,MACX1S,EAAK8f,UAEPjgB,KAAKoqC,SAAS,CACZx2B,MAAO,QAGT5T,KAAKoqC,SAAS,CACZx2B,MAAO,CACL0O,QAAStiB,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASuyE,wBAWxDjpB,WACE9kE,KAAKwF,MAAMqsC,QAAQkb,SAQrBr9C,SACE,OAAI1P,KAAK4Q,MAAM09E,aAEX,eAAC,YAAD,WACE,oBAAIp+E,UAAU,uBAAd,SACE,cAAC,mBAAD,CACE1I,GAAG,+BACHukC,eAAe,mCAGnB,mBAAG77B,UAAU,cAAb,SACE,cAAC,mBAAD,CACE1I,GAAG,sFACHukC,eAAe,sFACfn3B,OAAQ,CACNlH,KACE,cAAC,OAAD,CAAMyjC,GAAG,SAAT,SACGnxC,KAAKwF,MAAM++B,KAAK5jB,cAAc,CAAEnZ,GAAI,qBASjDxH,KAAKwF,MAAMqN,MAEX,sBAAKrL,GAAG,sBAAR,UACE,cAAC,IAAD,CACEyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS6yE,iBAEhD,cAAC,YAAD,UACE,cAAC,KAAD,CACEplF,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASvS,OAC9C24B,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASomB,aACpDmjC,SAAU/kE,KAAK+kE,SACfD,SAAU9kE,KAAK8kE,SACflxD,MAAO5T,KAAK4Q,MAAMgD,OAAS5T,KAAKwF,MAAMoO,MACtCwB,OAAQ,CACNoN,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASspB,SAC9ChkB,OAAQ,CACN9gB,KAAKuuF,gBACL,WACA,oBAINl5E,WAAY,CACV,CAACrV,KAAKuuF,iBAAkB,CACtBnuF,KAAM,SACN6I,MAAOjJ,KAAKyuF,gBACZ7sD,YAAa5hC,KAAK0uF,uBAEpBzuE,SAAU,CACR2hB,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAASqyE,qBAEX5kF,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAASoyE,eAEXxtF,KAAM,SACN4gB,OAAQ,YAEV2tE,eAAgB,CACd/sD,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAASyyE,2BAEXhlF,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAASsyE,qBAEX1tF,KAAM,SACN4gB,OAAQ,aAGZ2oE,YAAa3pF,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAAS0yE,eAEXvyE,SAAU,CAAC3b,KAAKuuF,gBAAiB,WAAY,0BAOlD,yB,IAjMLz7C,E,eAmBkB,CACpBl/B,MAAO,OAiLI44B,sBACb72B,aACA82B,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACEu2C,QAASnrC,EAAMsN,MAAMxL,QAAQqpC,QAC7BzkB,OAAQ1mB,EAAMsN,MAAMxL,QAAQ4kB,OAC5B1jB,MAAOhD,EAAMsN,MAAMxL,QAAQkB,MAC3Bf,MAAOrN,EAAM4gC,MAAMlmC,OAAO2S,QAE5B,CAAEwgB,0BAVSmZ,CAYbsG,I,yIChSF,MAAMt3B,EAAWC,yBAAe,CAC9BxS,MAAO,CAAF,wEAIL24B,YAAa,CAAF,iUAKXkD,QAAS,CAAF,uCAIP4oD,cAAe,CAAF,2DAIbpoB,WAAY,CAAF,qDAIVspB,UAAW,CAAF,iEAITC,iBAAkB,CAAF,8HAIhBC,cAAe,CAAF,uHAIbT,cAAe,CAAF,uDAWf,MAAMx7C,UAA6B1kC,YA4BjCzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK8kE,SAAW9kE,KAAK8kE,SAASvmE,KAAKyB,MACnCA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MACnCA,KAAKuuF,gBAAkB1tF,IAAOD,SAAS4tF,gBACnC,QACA,WAEyB,UAAzBxuF,KAAKuuF,iBACPvuF,KAAKyuF,gBAAkBzuF,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS8pD,YAC9DtlE,KAAK+uF,0BAA4B/uF,KAAKwF,MAAM++B,KAAK5jB,cAC/CnF,EAASszE,iBAGX9uF,KAAKyuF,gBAAkBzuF,KAAKwF,MAAM++B,KAAK5jB,cACrCnF,EAASkyE,eAEX1tF,KAAK+uF,0BAA4B/uF,KAAKwF,MAAM++B,KAAK5jB,cAC/CnF,EAASqzE,mBAIb7uF,KAAK4Q,MAAQ,CACXgD,MAAO,KACP06E,cAAc,GAUlBx9C,iCAAiCxiC,GAC3BtO,KAAKwF,MAAMu2C,SAAWztC,EAAUgpB,QAClCt3B,KAAKoqC,SAAS,CAAEkkD,cAAc,IAWlCvpB,SAAS5kE,GACHA,EAAKH,KAAKuuF,kBACZvuF,KAAKwF,MAAM+tB,cAAcpzB,EAAKH,KAAKuuF,kBACnCvuF,KAAKoqC,SAAS,CACZx2B,MAAO,QAGT5T,KAAKoqC,SAAS,CACZx2B,MAAO,CACL0O,QAAStiB,KAAK+uF,6BAWtBjqB,WACE9kE,KAAKwF,MAAMqsC,QAAQkb,SAQrBr9C,SACE,OAAI1P,KAAK4Q,MAAM09E,aAEX,eAAC,YAAD,WACE,oBAAIp+E,UAAU,uBAAd,SACE,cAAC,mBAAD,CACE1I,GAAG,wBACHukC,eAAe,uCAGnB,mBAAG77B,UAAU,cAAb,SACE,cAAC,mBAAD,CACE1I,GAAG,4BACHukC,eAAe,oLAQvB,sBAAKvkC,GAAG,sBAAR,UACE,cAAC,IAAD,CAAQyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS6yE,iBACtD,cAAC,YAAD,UACE,cAAC,KAAD,CACEplF,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASvS,OAC9C24B,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASomB,aACpDmjC,SAAU/kE,KAAK+kE,SACfD,SAAU9kE,KAAK8kE,SACflxD,MAAO5T,KAAK4Q,MAAMgD,OAAS5T,KAAKwF,MAAMoO,MACtCwB,OAAQ,CACNoN,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASspB,SAC9ChkB,OAAQ,CAAC9gB,KAAKuuF,mBAGlBl5E,WAAY,CACV,CAACrV,KAAKuuF,iBAAkB,CACtBnuF,KAAM,SACN6I,MAAOjJ,KAAKyuF,kBAGhB9E,YAAa3pF,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASozE,WACpDjzE,SAAU,CAAC3b,KAAKuuF,0B,IArJxB17C,E,eAkBkB,CACpBj/B,MAAO,OA2II44B,sBACb72B,aACA82B,aACAC,kBACG97B,IAAD,CACEmrC,QAASnrC,EAAMsN,MAAMkgC,MAAMrC,QAC3BzkB,OAAQ1mB,EAAMsN,MAAMkgC,MAAM9mB,OAC1B1jB,MAAOhD,EAAMsN,MAAMkgC,MAAMxqC,QAE3B,CAAE2f,qBATSiZ,CAWbqG,I,6BCxOF,uIAuBA,MAAMr3B,EAAWC,yBAAe,CAC9BuzE,eAAgB,CAAF,uDAIdlqD,QAAS,CAAF,uCAIPmqD,iBAAkB,CAAF,yDAIhBC,uBAAwB,CAAF,iFAItBC,iBAAkB,CAAF,iDAIhBC,uBAAwB,CAAF,qHAItBC,uBAAwB,CAAF,yDAItBC,6BAA8B,CAAF,mJAK5B1qB,MAAO,CAAF,mDAILjoD,KAAM,CAAF,iCAIJoB,QAAS,CAAF,yCAWT,MAAM40B,UAAuBxkC,YAmB3BzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK8kE,SAAW9kE,KAAK8kE,SAASvmE,KAAKyB,MACnCA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MACnCA,KAAK4Q,MAAQ,CAAE4/B,UAAU,GAQ3BjF,oBACEvrC,KAAKoqC,SAAS,CAAEoG,UAAU,IAS5Bu0B,SAAS5kE,GACHA,EAAK+yB,cAAgB/yB,EAAKovF,oBAC5BvvF,KAAKwF,MAAMwtB,eACThzB,KAAKwF,MAAMugE,OACX5lE,EAAK8yB,YACL9yB,EAAK+yB,aAEP8xC,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASopD,WAWxDE,WACE9kE,KAAKwF,MAAMqsC,QAAQkb,SAQrBr9C,SACE,OACE,eAAC,YAAD,CAAWlI,GAAG,uBAAd,UACE,cAAC,IAAD,CACEyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASwzE,kBAEhD,cAAC,KAAD,CACE55E,OAAQ,CACNoN,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASspB,SAC9ChkB,OAAQ,CAAC,cAAe,cAAe,uBAG3CzL,WAAY,CACV4d,YAAa,CACX2O,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAAS0zE,wBAEXjmF,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASyzE,kBAC9C7uF,KAAM,SACN4gB,OAAQ,YAEVkS,YAAa,CACX0O,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAAS4zE,wBAEXnmF,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS2zE,kBAC9C/uF,KAAM,SACN4gB,OAAQ,YAEVuuE,kBAAmB,CACjB3tD,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAAS8zE,8BAEXrmF,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAAS6zE,wBAEXjvF,KAAM,SACN4gB,OAAQ,aAGZrF,SAAU,CAAC,cAAe,cAAe,sBAE3CopD,SAAU/kE,KAAK+kE,SACfD,SAAU9kE,KAAK8kE,SACf/oB,QAAS/7C,KAAKwF,MAAMu2C,UAErB/7C,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,cAAC,OAAD,CACEhB,GAAK,GAAE/T,YAAWp9B,KAAKwF,MAAM+N,UAC7BrD,UAAU,OAFZ,SAIE,cAAC,KAAD,CACE5S,KAAMsuC,IACN17B,UAAU,mBACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmB,kBAYnD6vB,sBACb72B,aACA82B,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACEugE,OAAQn1D,EAAMgC,YAAYC,MACtBG,IAAUpC,EAAMgC,YAAYC,OAAOszD,IACnC,GACJpqB,QAASnrC,EAAMsN,MAAMigC,gBAAgBpC,QACrCxoC,SAAU/N,EAAM8N,SAASC,WAE3B,CAAEyf,sBAXSwZ,CAabmG,I,6BC5OF,gEAgEeuB,IArDY1uC,IACzB,MAAM2N,EAAW6jB,yBACX,SAAE9B,EAAF,cAAYw1C,GAAkBllE,EAAM8N,SAAS1C,OAC5C4+E,EAAqBC,GAA0BljF,IAAM8X,SAAS,OAC9DqrE,EAAmBC,GAAwBpjF,IAAM8X,SAAS,MAC3DurE,EAAe14D,sBAAatmB,GAAUA,EAAM2zB,KAAK1O,QA6BvD,OA3BAtpB,IAAMqX,UAAU,KAEdzQ,EAAS4hB,YAAsB21C,EAAex1C,IAAW1yB,KAAM+2C,IAC7Dk2C,EAAuBl2C,EAAK,UAI9BpmC,EAAS+b,YAAWw7C,EAAe,KAAM,sBAAsBloE,KAC5D+2C,IACCo2C,EAAqBp2C,KAKlB,KAEL,GAAI14C,IAAOD,SAAS2xC,mBAAmBniC,SAAS8kB,GAAW,CACzD,MAAM4f,EAAe/e,YAAsBb,GAC3C,MAAO,KAAsB4f,EAAe,SAAStyC,KAAMqzB,IACzD1iB,EAASyiB,YAAeV,EAAUW,EAAOiP,eAM9C,IAGD0qD,GACAE,GACE,cAAC,WAAD,CACEv+C,GAAI,CACF59B,SAAaghB,YAAgBi7D,GAAlB,OACXx9D,OAAS,SAAQxsB,EAAM8N,SAAS1C,MAAMxQ,KACtCwQ,MAAO,CACL85D,cAAellE,EAAM8N,SAAS1C,MAAM85D,cACpCx1C,SAAU1vB,EAAM8N,SAAS1C,MAAMskB,SAC/Bw6D,kBAAmBA,EACnBE,qB,8sBCpCZ,MAAMp0E,EAAWC,yBAAe,CAC9B3R,SAAU,CAAF,2CAqIK+lF,IA1HW,EACxBH,oBACAt6E,SACA7B,WACAu8E,SACAC,iBACAC,mBAEA,MAAMzrD,EAAOkE,qBAENkM,EAASs7C,GAAc5rE,mBAAS,KAChC6rE,EAAeC,GAAoB9rE,oBAAS,IAC5C+rE,EAAYC,GAAiBhsE,mBAAS,YACvCisE,EAAkB,CAACtzF,GAAKM,WAC5B+yF,EAAc/yF,IAGhBsmB,oBAAU,KACR,IACGssE,GACDzyF,OAAO+D,KAAKmzC,GAAS3yC,OAASnB,IAAOD,SAAS2xC,mBAAmBvwC,OACjE,CACAmuF,GAAiB,GACjB,IAAI7+E,EACFzQ,IAAOD,SAAS2xC,mBAAmB90C,OAAO+D,KAAKmzC,GAAS3yC,QAC1D,MAAM8yC,EAAe/e,YAAsBzkB,GAC3C,MAAO,KAAsBwjC,EAAe,SAAStyC,KAAMqzB,IACzDo6D,EAAW,EAAD,KAAMt7C,GAAN,IAAe,CAACrjC,GAAOukB,EAAOiP,WACxCqrD,GAAiB,OAGpB,CAACD,EAAev7C,IAEnB,MAAMkB,EAAM,IAAIp2C,IACVoyC,EAAU0+C,iCACVt/E,EAAQmlC,YAAe,EAAD,KAErBzuC,OAAO6oF,QAFc,IAGxBjsD,KAAM,CACJ0R,cAAep1C,IAAOD,SAASk1C,gBAC/BjgB,OAAQ65D,EAAkBx6D,SAASriB,MACnC2I,SAAUm5B,EAAQ+6C,EAAkBx6D,SAASriB,UAGjDg/B,EACAgE,GAGIvkC,EAAOo+E,EAAkBx6D,SAASriB,MAExC,OAAO68E,GAAqBjyF,OAAO+D,KAAKmzC,GAAS3yC,OAAS,EACxD,cAAC,WAAD,CAAUiP,MAAOA,EAAjB,SACE,qCACE,eAAC,OAAD,CAAMstD,UAAQ,EAACryB,WAAS,EAACyhC,UAAQ,EAAC8iB,SAAO,EAAzC,UACE,cAAC,OAAKnqC,KAAN,CACEhpD,KAAK,WACL4wC,OAAuB,aAAfkiD,EACRzwD,QAAS2wD,EAHX,SAKG16E,IAAQtE,GAAMyE,aAEhB+5E,GACC,cAAC,OAAKxpC,KAAN,CACEhpD,KAAK,aACL4wC,OAAuB,eAAfkiD,EACRzwD,QAAS2wD,EAHX,SAKG/rD,EAAK5jB,cAAcnF,EAAS1R,eAInB,aAAfsmF,GACC,cAAC,KAAD,CAEEh7E,OAAQA,EACRsL,SAAUgvE,EACVtvF,KAAMsvF,EAAkB,SACxB3qB,SAAU,OAGV2rB,aAAW,EACXn9E,SAAUghB,YAAgBm7D,EAAkB,QAC5CI,OAAQA,EACR7mF,MAAO2M,IAAQtE,GAAMyE,WACrBgmC,SAAS,EACTg0C,eAAgBA,EAChBC,aAAcA,EACd3hB,UAAU,EACVxiC,SAAU,QAfN,2BAkBQ,eAAfukD,GACC,cAAC,OAAD,CAAQrwF,OAAO,OAAOglE,SAAU,OAAhC,SACE,0BAAU70D,UAAU,YAAY44B,UAAU,EAA1C,SACG1zB,GACC,IAAIA,EAAOoN,UAAYzO,GAAS,CAC9B,cAAC,UAAD,CAASm4B,WAAS,EAACyhC,UAAQ,EAA3B,SACG55D,EAAK9K,OADyB8K,EAAK9K,OAGtC,cAAC,UAAD,CAAS0kE,UAAQ,EAAjB,SACG,IAAI55D,EAAK+M,OAAQ,CAACxL,EAAOzJ,IACxB,wBAAC,IAAD,OACMuJ,EAAOC,WAAWC,IADxB,IAEE9N,GAAI8N,EACJoL,SAAUgvE,EACVllD,OAAO,EACPxsC,MAAO0xF,EAAkBp6E,GACzBqG,UAA8C,IAApCvG,EAAOuG,SAASzV,QAAQoP,GAClChX,IAAKgX,EACLu2B,SAAU,YAVQ,qBAAoB93B,EAAK9K,kBAoB7D,O,6BCvJN,qBAAS0nF,EAAmBvoC,GAAO,OAMnC,SAA4BA,GAAO,GAAIrjD,MAAMC,QAAQojD,GAAM,CAAE,IAAK,IAAIxrD,EAAI,EAAGg0F,EAAO,IAAI7rF,MAAMqjD,EAAIpmD,QAASpF,EAAIwrD,EAAIpmD,OAAQpF,IAAOg0F,EAAKh0F,GAAKwrD,EAAIxrD,GAAM,OAAOg0F,GANnHC,CAAmBzoC,IAI7D,SAA0B0oC,GAAQ,GAAIhzF,OAAO0oD,YAAY/oD,OAAOqzF,IAAkD,uBAAzCrzF,OAAOkB,UAAU8N,SAAS1P,KAAK+zF,GAAgC,OAAO/rF,MAAMsP,KAAKy8E,GAJrFC,CAAiB3oC,IAEtF,WAAgC,MAAM,IAAIU,UAAU,mDAF0CkoC,GAiC/E,IAlBQ,SAA0Bn/C,GAC/C,OAAO,SAAU5gC,GACf,OAAO,SAAU2kC,GACf,OAAO,SAAUhP,GAEf,GAAIA,EAAOxmC,OAAS,IAClB,OAAOw1C,EAAKhP,GAGd,IAAIqqD,EAAkBrqD,EAAOxR,QACzBr1B,EAASkxF,EAAgBlxF,OACzBmnC,EAAO+pD,EAAgB/pD,KAC3B2K,EAAQ9xC,GAAQ4+C,MAAM9M,EAAS8+C,EAAmBzpD,S,6BC3B1D,iGAUA,MAAM1rB,EAAWC,yBAAe,CAC9By1E,WAAY,CAAF,sDAIVC,aAAc,CAAF,mDAMRC,EAAuB,EAC3BnoB,aACAoB,eACAgnB,oBACAC,uBACArsB,gBAEA,MAAM1gC,EAAOkE,oBAMPnlB,EAAMN,aAAsB,CAChCC,YAL2B,KAC3BgiD,KAKA5hD,YAAa,CAAC,YAGhB,OACE,qBACEnT,UAAU,yCACVoT,IAAKA,EACLxV,MAAO,CACL6uB,KAAMssC,EAAWvjE,QACZ,OAAMujE,EAAWvjE,QAAQypD,wBAAwBtzB,UAClD,MANR,SASE,sBAAK3rB,UAAU,iBAAf,UACE,iCAASq0B,EAAK5jB,cAAcnF,EAAS01E,cACrC,qBAAKhhF,UAAU,sBAAf,SACE,6BACGm6D,EAAa9mE,IAAKtF,GACjB,6BACGozF,IAAsBpzF,EAAEi3B,SACvB,yBACE/iB,aAAa,GAAEoyB,EAAK5jB,cAAcnF,EAAS21E,iBACzCv7E,IAAQ3X,EAAEi3B,UAAUnf,aAEtB9M,MAAQ,GAAEs7B,EAAK5jB,cAAcnF,EAAS21E,iBACpCv7E,IAAQ3X,EAAEi3B,UAAUnf,aAEtB4pB,QAAS,KACP2xD,EAAqB,MACrBrsB,KATJ,UAYGrvD,IAAQ3X,EAAEi3B,UAAUnf,WACrB,cAAC,KAAD,CAAMzY,KAAMk9B,IAAU1G,KAAK,YAG7B,wBACE3hB,aAAa,GAAEoyB,EAAK5jB,cAClBnF,EAAS01E,eACNt7E,IAAQ3X,EAAEi3B,UAAUnf,WAAW9P,gBACpCgD,MAAQ,GAAEs7B,EAAK5jB,cACbnF,EAAS01E,eACNt7E,IAAQ3X,EAAEi3B,UAAUnf,WAAW9P,gBACpC05B,QAAS,KACP2xD,EAAqBrzF,EAAEi3B,UACvB+vC,KATJ,SAYGrvD,IAAQ3X,EAAEi3B,UAAUnf,cA9BlB9X,EAAE,mBA0CnBszF,EAAmBhlF,IAAMqrB,WAAW,CAACpyB,EAAO8d,KAAQ,QACxD,MAAM,QACJvW,EADI,kBAEJskF,EAFI,qBAGJC,EAHI,SAIJ/9E,EAJI,WAKJi+E,GACEhsF,EAEE++B,EAAOkE,qBACNgpD,EAAUC,GAAertE,oBAAS,GACnCgmD,EAAexpE,IAAOD,SAAS8uB,iBACjC3iB,SAAA,UAAAA,EAAU,sBAAV,mBAA0Bs9D,oBAA1B,eAAwCv2D,QACxC,GAEE69E,EAAqB,GAK3B,OAJAtnB,EAAavqE,QAAS7B,IACpB0zF,EAAmB1zF,EAAEi3B,UAAYj3B,EAAE,SAGjC4C,IAAOD,SAAS8uB,gBAAkB26C,EAAaroE,OAAS,EAExD,sBAAKkO,UAAU,uCAAf,UACE,qBAAKA,UAAU,0BAEf,eAAC,SAAD,CACEiC,aAAYoyB,EAAK5jB,cAAcnF,EAAS01E,YACxCjoF,MAAOs7B,EAAK5jB,cAAcnF,EAAS01E,YACnCvxD,QAAS,KACP+xD,GAAaD,IAEfjqF,GAAG,+BACH0I,UAAU,sCAPZ,UASE,cAAC,KAAD,CAAMA,UAAU,gBAAgB5S,KAAMs0F,IAAc99D,KAAK,SACxD29D,EACC,cAAC,KAAD,CAAMvhF,UAAU,cAAc5S,KAAMk9B,IAAU1G,KAAK,SAEnD,cAAC,KAAD,CAAM5jB,UAAU,cAAc5S,KAAMs0F,IAAc99D,KAAK,YAI1D29D,GACC,cAACL,EAAD,CACE79E,SAAUA,EACV01D,WAAYuoB,EAEZvsB,UAAW,IAAMysB,GAAY,GAC7BrnB,aAAcA,EACdinB,qBAAuBtzF,IACrBszF,EAAqBtzF,EAAO2zF,EAAmB3zF,KAEjDqzF,kBAAmBA,GANb,gCAYP,OAIIE,O,0IC5If,MAAM/1E,EAAWC,yBAAe,CAC9B+R,IAAK,CAAF,+BAIHF,KAAM,CAAF,iCAIJukE,MAAO,CAAF,mCAILC,OAAQ,CAAF,qCAINC,cAAe,CAAF,uDAIbC,WAAY,CAAF,iDAIVC,eAAgB,CAAF,2EAIdC,cAAe,CAAF,uDAIbn0E,QAAS,CAAF,yCAWT,MAAM6kD,UAAgBz0D,YAwCpBzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAKwtB,IAAMxtB,KAAKwtB,IAAIjvB,KAAKyB,MACzBA,KAAKstB,KAAOttB,KAAKstB,KAAK/uB,KAAKyB,MAC3BA,KAAK6xF,MAAQ7xF,KAAK6xF,MAAMtzF,KAAKyB,MAC7BA,KAAK8xF,OAAS9xF,KAAK8xF,OAAOvzF,KAAKyB,MAC/BA,KAAKmyF,WAAanyF,KAAKmyF,WAAW5zF,KAAKyB,MACvCA,KAAKoyF,eAAiBpyF,KAAKoyF,eAAe7zF,KAAKyB,MAC/CA,KAAK4Q,MAAQ,CACXyhF,YAAY,GAShBF,aACEnyF,KAAKoqC,SAAS,CACZioD,YAAY,IAShBD,iBACEpyF,KAAKoqC,SAAS,CACZioD,YAAY,IAShB7kE,MACExtB,KAAKwF,MAAMgoB,IAAI,CAAC4P,YAAWp9B,KAAKwF,MAAM+N,YACtCyxD,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASw2E,WAAY,CAC1D/oF,MAAOjJ,KAAKwF,MAAMyD,WAW1BqkB,OACEttB,KAAKwF,MAAM8nB,KAAK,CAAC8P,YAAWp9B,KAAKwF,MAAM+N,YACvCyxD,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASu2E,cAAe,CAC7D9oF,MAAOjJ,KAAKwF,MAAMyD,WAW1B4oF,QAC4B,SAAtB7xF,KAAKwF,MAAMohC,QACb5mC,KAAKwF,MAAM0nB,YACTltB,KAAKwF,MAAM2nB,OACXiQ,YAAWp9B,KAAKwF,MAAM+N,WAGA,QAAtBvT,KAAKwF,MAAMohC,QACb5mC,KAAKwF,MAAM6nB,YACTrtB,KAAKwF,MAAM2nB,OACXiQ,YAAWp9B,KAAKwF,MAAM+N,WAG1ByxD,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS02E,kBAUtDJ,SACE9xF,KAAKoqC,SAAS,CACZioD,YAAY,IAShB3iF,SACE,OACE,cAAC,WAAD,CACEqE,MAAI,EACJvM,GAAG,kBACH0hC,QACE,iCACE,cAAC,OAAD,CAAM5rC,KAAK,YAAYw2B,KAAK,QAAS,IACrC,cAAC,mBAAD,CAAkBtsB,GAAG,UAAUukC,eAAe,eANpD,SAUE,eAAC,WAASi8C,KAAV,WACGhoF,KAAKwF,MAAMurC,QAAQC,gBAClBhxC,KAAKwF,MAAMurC,QAAQC,eAAeztC,IAAKwQ,IACrC,OAAQA,EAAKvM,IACX,IAAK,MACH,OACE,cAAC,WAAS8+C,KAAV,CAEEjd,KAAK,MACLjnC,KAAM2R,EAAK9K,MACX02B,QAAS3/B,KAAKwtB,KAHTzZ,EAAKvM,IAMhB,IAAK,OACH,OACE,cAAC,WAAS8+C,KAAV,CAEEjd,KAAK,OACLjnC,KAAM2R,EAAK9K,MACX02B,QAAS3/B,KAAKstB,MAHTvZ,EAAKvM,IAMhB,IAAK,QACH,OACE,cAAC,WAAS8+C,KAAV,CAEEjd,KAAK,QACLjnC,KAAM2R,EAAK9K,MACX02B,QAAS3/B,KAAK6xF,MACd/oD,SAAgC,OAAtB9oC,KAAKwF,MAAMohC,QAJhB7yB,EAAKvM,IAOhB,IAAK,SACH,OACE,eAAC,OAAD,CAEE2pC,GAAOnxC,KAAKwF,MAAM+N,SAAb,UACLrD,UAAU,OAHZ,UAKE,cAAC,OAAD,CAAM5S,KAAK,UACVyW,EAAK9K,QALD8K,EAAKvM,IAQhB,IAAK,SACH,OACE,cAAC,WAAS8+C,KAAV,CAEEjd,KAAK,cACLjnC,KAAM2R,EAAK9K,MACX02B,QAAS3/B,KAAK8xF,QAHT/9E,EAAKvM,IAMhB,QACE,OAAO,QAIf,cAAC,IAAD,CACE2lC,KAAMntC,KAAK4Q,MAAMyhF,WACjBvtB,SAAU9kE,KAAKoyF,eACf9E,KAAMttF,KAAKmyF,WACXr+E,MAAO,CACL,CACElS,IAAK5B,KAAKwF,MAAM+N,SAChBtK,MAAOjJ,KAAKwF,MAAMyD,MAClBzB,GAAIxH,KAAKwF,MAAMgC,a,IAvOzBo7D,E,eA4BkB,CACpBh8B,OAAQ,KACRmK,QAAS,KACT5jB,OAAQ,OAkNGqf,kBACbC,aACAC,kBACG97B,IAAD,CACEmgC,QAASngC,EAAMmgC,QAAQA,QACvBnK,OAAQh2B,EAAMyuC,UAAUzY,OACxBzZ,OAAQvc,EAAMyuC,UAAUlyB,OACxB3lB,GAAIoJ,EAAM7D,QAAQ5M,KAAOyQ,EAAM7D,QAAQ5M,KAAKqH,GAAK,GACjDyB,MAAO2H,EAAM7D,QAAQ5M,KAAOyQ,EAAM7D,QAAQ5M,KAAK8I,MAAQ,KAEzD,CACEukB,QACAF,SACAJ,gBACAG,kBAdSmf,CAiBbo2B,I,i0BCnRF,MAAMpnD,EAAWC,yBAAe,CAC9BnL,IAAK,CAAF,6CAIH2L,KAAM,CAAF,iCAIJK,OAAQ,CAAF,qCAIN1I,MAAO,CAAF,mCAIL0+E,YAAa,CAAF,iEAWb,MAAMx+C,UAAY3lC,YA+ChBzO,YAAY8F,GAAO,MACjBmkC,MAAMnkC,GADW,gBA+GZ+G,IAAM++B,aA7GXtrC,KAAK8kE,SAAW9kE,KAAK8kE,SAASvmE,KAAKyB,MACnCA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MAEnC,UAAIa,IAAOqrB,cAAX,OAAI,EAAeqmE,cAAc/sF,EAAMpF,QACrCJ,KAAKwyF,oBAAsB3xF,IAAOqrB,OAAOqmE,cACvC/sF,EAAMpF,MACNmD,IAAKwQ,GAASmvB,gBAChBljC,KAAKuyF,cAAgBvyF,KAAKwyF,oBAAoBtuF,OAC5C,CAACq5B,EAAKv/B,EAAO6N,IAAb,OACK0xB,GADL,IAEE,CAACv/B,GAAQ,CAAE,QAAS6C,IAAOqrB,OAAOqmE,cAAc/sF,EAAMpF,MAAMyL,MAE9D,KAGJ7L,KAAK4Q,MAAQ,CACX4/B,UAAU,EACV58B,MAAO,KACP6+E,aAAc,WASlBlnD,oBACEvrC,KAAKwF,MAAMksB,UAAU1xB,KAAKwF,MAAMpF,KAAMg9B,YAAWp9B,KAAKwF,MAAM+N,WAC5DvT,KAAKoqC,SAAS,CAAEoG,UAAU,IAS5BM,iCAAiCxiC,GAW/B,GATEtO,KAAKwF,MAAMktF,cAAc32C,SACzBztC,EAAUokF,cAAcp7D,QACxBhpB,EAAUvB,QAAQ,WAAa/M,KAAKwF,MAAMpF,MAE1CJ,KAAKwF,MAAMqsC,QAAQhrC,KACjB7G,KAAKwF,MAAM2kF,WAAa51D,YAAgBjmB,EAAUvB,QAAQ,SAI1D/M,KAAKwF,MAAMktF,cAAc32C,SAAWztC,EAAUokF,cAAc9+E,MAAO,eACrE,MAAM0O,GACJ,UAAAhU,EAAUokF,cAAc9+E,MAAMjS,gBAA9B,mBAAwCQ,YAAxC,eAA8CmgB,WAA9C,UACAhU,EAAUokF,cAAc9+E,MAAMjS,gBAD9B,aACA,EAAwCS,MAEpCwR,GACJ,eAAI0nE,WAAYC,gBAAgBj5D,EAAS,oBAAzC,mBAAuDqzB,IAAI,UAA3D,eACIg9C,cAAerwE,EAErBtiB,KAAKoqC,SAAS,CAAEx2B,MAAOA,IAEvBoxD,QAAMpxD,MACJ,cAAC,KAAD,CACEA,OAAK,EACL3K,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS5H,OAC9C7G,QAAU,GAAEuB,EAAUokF,cAAc9+E,MAAM1R,YAAY0R,QAY9DmxD,SAAS5kE,GAAM,QACbH,KAAKwF,MAAM2oB,cAAciP,YAAWp9B,KAAKwF,MAAM+N,UAA/C,OACKpT,GADL,IAEE,oBAAqBH,KAAKwF,MAAM4P,OAAOyqC,YACnC,IAAK7/C,KAAKwF,MAAM4P,OAAOyqC,aACvB,KACJ,QAAS7/C,KAAKwF,MAAMpF,MAChBS,IAAOD,SAAS8uB,iBAAhB,UACF1vB,KAAKwF,MAAM8N,gBADT,iBACF,EAAqB1C,aADnB,aACF,EAA4B85D,gBAAiB,CAC3CkoB,eAAgB5yF,KAAKwF,MAAM8N,SAAS1C,MAAM85D,cAC1Cx1C,SAAUl1B,KAAKwF,MAAM8N,SAAS1C,MAAMskB,YAU5C4vC,WAAW,QACT,aAAI9kE,KAAKwF,MAAM8N,gBAAf,iBAAI,EAAqB1C,aAAzB,OAAI,EAA4B85D,cAAe,SAC7C,MAAMx1C,EAAWl1B,KAAKwF,MAAM8N,SAAS1C,MAAMg/E,aACrC96C,EAAe/e,YAAsBb,GAC3C,MAAO,KAAsB4f,EAAe,SAAStyC,KAAMqzB,IACzD71B,KAAKwF,MAAMowB,eAAeV,EAAUW,EAAOiP,WAE7C9kC,KAAKwF,MAAMqsC,QAAQhrC,KAAnB,UAAwB7G,KAAKwF,MAAM8N,gBAAnC,iBAAwB,EAAqB1C,aAA7C,aAAwB,EAA4B85D,oBAEpD1qE,KAAKwF,MAAMqsC,QAAQhrC,KAAKu2B,YAAWp9B,KAAKwF,MAAM+N,WAWlD7D,SACE,GAAI1P,KAAKwF,MAAMqtF,cAAcv7D,OAAQ,+BACnC,MAAMw4D,EAAS5tD,YAAcliC,KAAKwF,MAAM4P,OAAOC,YACzC0tB,EAAkBf,YAAmBhiC,KAAKwF,MAAM4P,OAAOC,YACvDotB,EAAwBR,YAC5BjiC,KAAKwF,MAAM4P,OAAOC,YAEdq6E,EAAiB,UAAG1vF,KAAKwF,MAAM8N,gBAAd,iBAAG,EAAqB1C,aAAxB,aAAG,EAA4B8+E,kBAEhD4C,EAAc5C,EAAiB,OACjC95E,UADiC,IACjCA,KADiC,UACjCA,IAAO,UAAG5V,KAAKwF,MAAM8N,gBAAd,iBAAG,EAAqB1C,aAAxB,aAAG,EAA4BskB,iBADL,aACjC,EAAiDnf,WACjD,KAGE+8E,EAAY,UAAG9yF,KAAKwF,MAAM4P,OAAOC,WAAW0tB,UAAhC,aAAG,EACjB+B,QACEiuD,EAAkB,UAAG/yF,KAAKwF,MAAM4P,OAAOC,WAC3CotB,UADsB,iBAAG,EAExBqC,eAFqB,aAAG,EAEfhxB,MACZ,IAAIy+E,EAAgBvyF,KAAKuyF,cACrBC,EAAsBxyF,KAAKwyF,oBAkB/B,GAhBK,IAAQO,IAAwB,IAAQD,KAC3CP,EAAgB,GAChBC,EAAsB,GACtBO,EAAmBjzF,QAAS9B,IAC1B,IAAK,IAAQ80F,EAAa90F,IAAS,CACjC,IAAIg1F,EAAS9vD,eACbsvD,EAAoB3rF,KAAKmsF,GACzBT,EAAcS,GAAUF,EAAa90F,GACrCu0F,EAAcS,GAAQ9oD,MAAQ8oD,EAG9BT,EAAcS,GAAQ,WAAah1F,MAKrC0xF,GAAqB3sD,GAAmBN,EAAuB,CACjE8vD,EAAgB,GAChBC,EAAsB,GACtB,MAAMS,EAAiB/wE,KAAKC,MAC1BD,KAAK2Q,UAAU68D,EAAkB3sD,KAGjC2sD,EAAkBjtD,GAAuB3uB,MAEtBhU,QAAS9B,IAC5B,IAAK,IAAQi1F,EAAej1F,IAAS,CACnC,IAAIg1F,EAAS9vD,eACbsvD,EAAoB3rF,KAAKmsF,GACzBT,EAAcS,GAAUC,EAAej1F,GACvCu0F,EAAcS,GAAQ9oD,MAAQ8oD,EAG9BT,EAAcS,GAAQ,cAAgBh1F,KAK5C,MAAMk1F,EAAU,KACd,MAAM/yF,EAAO,GAMb,OALIuvF,GACFv6E,YAA6BnV,KAAKwF,MAAM4P,QAAQtV,QAC7CqzF,GAAShzF,EAAKgzF,GAAOzD,EAAkByD,IAGrChzF,GAGHizF,EACJ,sBAAK5rF,GAAG,WAAR,UACE,cAAC,IAAD,CACEyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASlL,IAAK,CACjDlQ,KAAMJ,KAAKwF,MAAMpF,SAGrB,cAAC,KAAD,CACEkjB,IAAKtjB,KAAK+2C,KAEV3hC,OAAQpV,KAAKwF,MAAM4P,OACnBhV,KAAMJ,KAAKwF,MAAMpF,KACjBsgB,SAAQ,SACFqiB,GAAmB,CACrB,CAACA,GACCwvD,IAAa,UACbvyF,KAAKwF,MAAM4P,OAAOC,WAAW0tB,UADhB,aACb,EAA+C+B,WAE/CrC,GAAyB,CAC3B,CAACA,GAAwB,CACvB3uB,MACE0+E,IAAmB,UACnBxyF,KAAKwF,MAAM4P,OAAOC,WAAWotB,UADV,iBACnB,EAAqDqC,eADlC,aACnB,EACIhxB,UAKPo/E,KAELpxE,aAAc9hB,KAAK4Q,MAAMgD,MACzBmxD,SAAU/kE,KAAK+kE,SACf2rB,aAAW,EACXn9E,SAAUvT,KAAKwF,MAAM+N,SACrBu8E,OAAQA,EACR7mF,MACE,UAAAjJ,KAAKwF,aAAL,mBAAY4P,cAAZ,SAAoBnM,MAChBjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASlL,IAAK,CAC1ClQ,KAAMJ,KAAKwF,MAAM4P,OAAOnM,QAE1B,KAEN8yC,QAAS/7C,KAAKwF,MAAMktF,cAAc32C,QAClCg0C,eAA4C,YAA5B/vF,KAAK4Q,MAAM6hF,aAC3BzC,aAAc,KACZhwF,KAAKoqC,SAAS,CAAEqoD,aAAc,cApC5B,kCAuCLzyF,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,qCACE,cAAC,SAAD,CACE3qC,GAAG,eACH0I,UAAU,OACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASS,MACnD0jB,QAAS,IAAM3/B,KAAK+2C,KAAKrxC,QAAQq/D,WACjChpB,QAAS/7C,KAAKwF,MAAMktF,cAAc32C,QALpC,SAOE,cAAC,KAAD,CACEz+C,KAAMulE,IACN3yD,UAAU,UACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASS,UAGlD,cAAC,SAAD,CAAQ/L,UAAU,SAASyvB,QAAS,IAAM3/B,KAAK8kE,WAA/C,SACE,cAAC,KAAD,CACExnE,KAAMk9B,IACNtqB,UAAU,UACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,EAASc,QAEXwX,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,mBAQ3DwzE,GAAU9vF,KAAK4Q,MAAM4/B,UACpB,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,SAMR,OAAOw9C,EACL,qCACE,cAAC,IAAD,CAAWx/E,UAAU,eACrB,eAAC,OAAD,CACEu2D,OAAO,aACPW,WAAS,EACTC,QAAS,EACT7/D,GAAG,uBAJL,UAME,cAAC,OAAKivD,OAAN,CAAavmD,UAAU,gBAAvB,SACE,cAAC,KAAD,CACEw/E,kBAAmBA,EACnBt6E,OAAQpV,KAAKwF,MAAM4P,OACnB7B,SAAUvT,KAAKwF,MAAM+N,SACrBu8E,OAAQA,EACRC,eAC8B,0BAA5B/vF,KAAK4Q,MAAM6hF,aAEbzC,aAAc,KACZhwF,KAAKoqC,SAAS,CACZqoD,aAAc,+BAKtB,cAAC,OAAKh8B,OAAN,UACE,sBAAKvmD,UAAU,kBAAf,UACE,cAAC,OAAD,CAAMquD,UAAQ,EAACryB,WAAS,EAACyhC,UAAQ,EAAC8iB,SAAO,EAAzC,SACE,cAAC,OAAKnqC,KAAN,CAAWhpD,KAAMg1F,EAAY/2E,cAAe2yB,QAAQ,EAApD,SACI,GAAEluC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS82E,YAAa,CACtDhhF,KAAMghF,QAIXc,aAMTA,EAGJ,OAAO,yB,IAnXLt/C,E,eAkCkB,CACpB1+B,OAAQ,KACRrI,QAAS,KACTo9E,UAAW,KACX/pF,KAAM,YAiVKosC,sBACbC,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACEktF,cAAe9hF,EAAM7D,QAAQ1O,OAC7Bw0F,cAAejiF,EAAMwE,OACrBrI,QAAS6D,EAAM7D,QAAQ5M,KACvBiV,OAAQxE,EAAMwE,OAAOA,OACrB7B,SAAU/N,EAAM8N,SAASC,SACzB42E,UAAWv6D,IAAGzN,MAAM3c,EAAM8N,SAAS0e,QAAQw4D,WAC3CpqF,KAAMwvB,IAAGzN,MAAM3c,EAAM8N,SAAS0e,QAAQ5xB,OAExC,CAAE+tB,kBAAeuD,cAAWkE,qBAE9B+B,YAAgB,OAdH6U,CAebsH,I,6BC/cF,kJAkCA,MAAMt4B,EAAWC,yBAAe,CAC9B43E,sBAAuB,CAAF,mGAIrBC,UAAW,CAAF,yLAKTC,eAAgB,CAAF,yDAIdr0C,UAAW,CAAF,2CAITs0C,iBAAkB,CAAF,qDAIhB72E,KAAM,CAAF,iCAIJ82E,UAAW,CAAF,2CAITC,iBAAkB,CAAF,2DAIhBC,mBAAoB,CAAF,8FAIlBl3C,OAAQ,CAAF,qCAINm3C,iBAAkB,CAAF,2DAIhBC,sBAAuB,CAAF,yEAIrBC,UAAW,CAAF,6CAWX,MAAMvgD,UAA2BplC,YAyD/BzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK+zF,iBAAmB/zF,KAAK+zF,iBAAiBx1F,KAAKyB,MACnDA,KAAKg0F,UAAYh0F,KAAKg0F,UAAUz1F,KAAKyB,MACrCA,KAAKi0F,YAAcj0F,KAAKi0F,YAAY11F,KAAKyB,MACzCA,KAAKk0F,UAAYl0F,KAAKk0F,UAAU31F,KAAKyB,MACrCA,KAAK4Q,MAAQ,CACX6R,aAAc,EACdu5B,gBAAiB,GACjBC,gBAAiB,GACjBC,iBAAkB,GAClB1L,UAAU,GASdjF,oBACEvrC,KAAKwF,MAAMioB,aACXztB,KAAKoqC,SAAS,CAAEoG,UAAU,IAU5BwjD,UAAUvuE,GAAO,MAAEznB,IACjBynB,EAAMI,iBACN7lB,KAAKwF,MAAMkoB,aAAa1vB,GAAOwE,KAAK,IAAMxC,KAAKwF,MAAMioB,cAUvDwmE,YAAYxuE,GAAO,MAAEznB,IACnBynB,EAAMI,iBACN7lB,KAAKwF,MAAMmoB,eAAe3vB,GAAOwE,KAAK,IAAMxC,KAAKwF,MAAMioB,cAUzDymE,UAAUzuE,GAAO,MAAEznB,IACjBynB,EAAMI,iBACN7lB,KAAKwF,MAAMooB,aAAa5vB,GAAOwE,KAAK,IAAMxC,KAAKwF,MAAMioB,cAUvDsmE,iBAAiBtuE,EAAO1R,GACtB,MAAM,YAAE0O,GAAgBziB,KAAK4Q,MACvBmzB,EAAWthB,IAAgB1O,EAAKlI,OAAS,EAAIkI,EAAKlI,MACxD7L,KAAKoqC,SAAS,CAAE3nB,YAAashB,IAQ/Br0B,SACE,OACE,eAAC,YAAD,CAAWlI,GAAG,cAAc0I,UAAU,sBAAtC,UACE,cAAC,IAAD,CAAQjH,MAAM,WACd,eAAC,UAAQyxB,MAAT,CAAe+Q,QAAM,EAArB,UACE,cAAC,UAAD,CAASv7B,UAAU,UAAnB,SACE,cAAC,mBAAD,CACE1I,GAAG,mBACHukC,eAAe,uBAGlB/rC,KAAKwF,MAAM02C,iBAAiBl6C,OAAS,GACpC,eAAC,UAAD,CAAS2rE,UAAQ,EAAjB,UACE,cAAC,UAAQnL,OAAT,UACE,cAAC,mBAAD,CACEh7D,GAAG,oBACHukC,eAAe,wBAGnB,cAAC,mBAAD,CACEvkC,GAAG,0BACHukC,eAAe,+BAKrB,eAAC,UAAD,WACE,cAAC,SAAD,CAAQ/5B,GAAG,KAAX,SACE,cAAC,mBAAD,CACExK,GAAG,0BACHukC,eAAe,0DAGnB,cAAC,mBAAD,CACEvkC,GAAG,aACHukC,eAAe,2JATnB,IAYE,mBACEr6B,KAAK,iEACL0b,OAAO,SACP3b,IAAI,sBAHN,6CAZF,OAsBA,eAAC,UAAD,CAAgCy6B,WAAS,EAAzC,UACE,cAAC,mBAAD,CAAkB1kC,GAAG,YAAYukC,eAAe,cADlD,IAEE,cAAC,QAAD,CAAOooD,UAAQ,EAAf,SAAiBn0F,KAAKwF,MAAMw2C,gBAAgBh6C,WAFjC,oBAKb,cAAC,UAAD,CAA8B2rE,UAAQ,EAAtC,SACE,eAAC,YAAD,WACE,cAAC,UAAD,IACC3tE,KAAKwF,MAAMw2C,gBAAgBz4C,IAAKwQ,GAC/B,gCACE,eAAC,YAAUg6D,MAAX,CACE7/B,OAAQluC,KAAK4Q,MAAM6R,cAAgB1O,EAAKvM,GACxCqE,MAAOkI,EAAKvM,GACZm4B,QAAS3/B,KAAK+zF,iBACd7jF,UACE6D,EAAKkrC,aAAaC,UAAY,kBAAoB,GALtD,UAQGnrC,EAAK9K,MACL8K,EAAKkrC,aAAaC,WACjB,sBAAMhvC,UAAU,aAAhB,SACE,cAAC,mBAAD,CAAkB1I,GAAG,SAASukC,eAAe,aAGjD,cAAC,KAAD,CACEzuC,KACE0C,KAAK4Q,MAAM6R,cAAgB1O,EAAKvM,GAC5B4sF,IACAC,IAENvgE,KAAK,OACL5jB,UAAY,mBAAkB6D,EAAK9K,MACnCgxB,MAAM,eAGV,eAAC,YAAUmkC,QAAX,CACElwB,OAAQluC,KAAK4Q,MAAM6R,cAAgB1O,EAAKvM,GAD1C,UAGE,qBAAK0I,UAAU,cAAf,SAA8B6D,EAAK6tB,cACnC,eAAC,SAAOlH,MAAR,CAAc0yB,QAAQ,QAAtB,UACGr5C,EAAKkrC,aAAaC,WACjB,cAAC,SAAD,CACEnkB,SAAO,EACPqO,OAAK,EACLzJ,QAAS3/B,KAAKk0F,UACdl2F,MAAO+V,EAAKvM,GAJd,SAME,cAAC,mBAAD,CACEA,GAAG,SACHukC,eAAe,aAIpBh4B,EAAKugF,sBACJ,cAAC,SAAD,CACE5mB,UAAQ,EACRtkC,OAAK,EACLzJ,QAAS3/B,KAAKi0F,YACdj2F,MAAO+V,EAAKvM,GACZ0I,UAAU,kBALZ,SAOE,cAAC,mBAAD,CACE1I,GAAG,YACHukC,eAAe,YACf77B,UAAU,sBAKlB,sBAAKA,UAAU,UAAf,UACE,cAAC,mBAAD,CACE1I,GAAG,oBACHukC,eAAe,sBAHnB,OAKYh4B,EAAKob,cAGnB,cAAC,UAAD,MApEQpb,EAAKvM,SAJR,kBA8Eb,eAAC,UAAD,CAAgC0kC,WAAS,EAAzC,UACE,cAAC,mBAAD,CAAkB1kC,GAAG,YAAYukC,eAAe,cADlD,IAEE,cAAC,QAAD,CAAOooD,UAAQ,EAAf,SAAiBn0F,KAAKwF,MAAMy2C,gBAAgBj6C,WAFjC,oBAKb,cAAC,UAAD,CAA8B2rE,UAAQ,EAAtC,SACE,eAAC,YAAD,WACE,cAAC,UAAD,IACC3tE,KAAKwF,MAAMy2C,gBAAgB14C,IAAKwQ,GAC/B,gCACE,eAAC,YAAUg6D,MAAX,CACE7/B,OAAQluC,KAAK4Q,MAAM6R,cAAgB1O,EAAKvM,GACxCqE,MAAOkI,EAAKvM,GACZm4B,QAAS3/B,KAAK+zF,iBAHhB,UAKGhgF,EAAK9K,MACN,cAAC,KAAD,CACE3L,KACE0C,KAAK4Q,MAAM6R,cAAgB1O,EAAKvM,GAC5B4sF,IACAC,IAENvgE,KAAK,OACL5jB,UAAY,mBAAkB6D,EAAK9K,WAGvC,eAAC,YAAUm1D,QAAX,CACElwB,OAAQluC,KAAK4Q,MAAM6R,cAAgB1O,EAAKvM,GAD1C,UAGE,qBAAK0I,UAAU,cAAf,SAA8B6D,EAAK6tB,cACJ,KAA9B7tB,EAAKugF,sBACJ,8BACE,cAAC,UAAD,CAASjrD,KAAK,UAAUkrD,SAAO,EAA/B,SACE,cAAC,mBAAD,CACE/sF,GAAG,uBACHukC,eAAe,0DAKvB,cAAC,SAAOrR,MAAR,CAAc0yB,QAAQ,QAAtB,SACE,cAAC,SAAD,CACEryB,SAAO,EACPqO,OAAK,EACLzJ,QAAS3/B,KAAKg0F,UACdh2F,MAAO+V,EAAKvM,GACZ0I,UAAU,gBALZ,SAOE,cAAC,mBAAD,CACE1I,GAAG,UACHukC,eAAe,UACf77B,UAAU,qBAIhB,sBAAKA,UAAU,UAAf,UACE,cAAC,mBAAD,CACE1I,GAAG,iBACHukC,eAAe,mBAHnB,MAMGh4B,EAAKob,cAGV,cAAC,UAAD,MAvDQpb,EAAKvM,SAJR,qBAkEdxH,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,mCACE,cAAC,OAAD,CAAMhB,GAAG,gBAAgBjhC,UAAU,OAAnC,SACE,cAAC,KAAD,CACE5S,KAAMsuC,IACNz5B,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmB,MACnDzM,UAAU,mBACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmB,oBAarD6vB,sBACbC,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACEw2C,gBAAiBprC,EAAMmuC,OAAO/C,gBAC9BC,gBAAiBrrC,EAAMmuC,OAAO9C,gBAC9BC,iBAAkBtrC,EAAMmuC,OAAO7C,iBAC/B3oC,SAAU/N,EAAM8N,SAASC,WAE3B,CAAEma,iBAAcD,eAAYE,oBAAgBC,oBATjC4e,CAWb+G,I,6BCtdF,gBAOeihD,IANA,EAAGv6D,WAChB,qBAAKpB,OAAO,KAAKgD,MAAM,KAAK/tB,MAAO,CAAE2mF,YAAa,GAAlD,SACE,wBAAQ5rD,GAAG,IAAIhyB,GAAG,IAAIhZ,EAAE,IAAIiiC,KAAM7F,GAAS,e,6BCH/C,8GAkBA,MAAMze,EAAWC,yBAAe,CAC9BkB,KAAM,CAAF,mCAWN,MAAM62B,UAA4BrlC,YAgBhCzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK4Q,MAAQ,CAAE4/B,UAAU,GAQ3BjF,oBACEvrC,KAAKwF,MAAMgrB,yBACXxwB,KAAKoqC,SAAS,CAAEoG,UAAU,IAQ5B9gC,SACE,OAAO1P,KAAKwF,MAAMkvF,oBAChB,eAAC,YAAD,CAAWltF,GAAG,gBAAgB0I,UAAU,wBAAxC,UACE,cAAC,IAAD,CAAQjH,MAAM,wBACd,eAAC,UAAQyxB,MAAT,CAAe+Q,QAAM,EAArB,UACE,cAAC,UAAD,CAASv7B,UAAU,UAAnB,SACE,cAAC,mBAAD,CACE1I,GAAG,uBACHukC,eAAe,2BAGnB,cAAC,UAAD,UACE,cAAC,UAAD,UACE,cAAC,mBAAD,CACEvkC,GAAG,qEACHukC,eAAe,2EAIrB,eAAC,UAAD,WACE,cAAC,UAAD,UACE,cAAC,UAAQy2B,OAAT,UACE,cAAC,mBAAD,CACEh7D,GAAG,gBACHukC,eAAe,sBAIrB,cAAC,QAAD,CAAO06B,QAAM,EAACC,QAAM,EAACW,QAAQ,IAA7B,SACE,eAAC,QAAMT,KAAP,WACE,eAAC,QAAMxM,IAAP,WACE,cAAC,QAAMyM,KAAP,UACE,cAAC,mBAAD,CACEr/D,GAAG,oBACHukC,eAAe,wBAGnB,cAAC,QAAM86B,KAAP,UACG7mE,KAAKwF,MAAMkvF,oBAAoBC,aAGpC,eAAC,QAAMv6B,IAAP,WACE,cAAC,QAAMyM,KAAP,UACE,cAAC,mBAAD,CACEr/D,GAAG,gBACHukC,eAAe,oBAGnB,cAAC,QAAM86B,KAAP,UACG7mE,KAAKwF,MAAMkvF,oBAAoBE,mBAGpC,eAAC,QAAMx6B,IAAP,WACE,cAAC,QAAMyM,KAAP,UACE,cAAC,mBAAD,CACEr/D,GAAG,0CACHukC,eAAe,8CAGnB,cAAC,QAAM86B,KAAP,UACG7mE,KAAKwF,MAAMkvF,oBAAoBG,aAGpC,eAAC,QAAMz6B,IAAP,WACE,cAAC,QAAMyM,KAAP,UACE,cAAC,mBAAD,CACEr/D,GAAG,oDACHukC,eAAe,wDAGnB,cAAC,QAAM86B,KAAP,UACG7mE,KAAKwF,MAAMkvF,oBAAoBI,gBAGpC,eAAC,QAAM16B,IAAP,WACE,cAAC,QAAMyM,KAAP,UACE,cAAC,mBAAD,CACEr/D,GAAG,+CACHukC,eAAe,mDAGnB,cAAC,QAAM86B,KAAP,UACG7mE,KAAKwF,MAAMkvF,oBAAoBK,kBAGpC,eAAC,QAAM36B,IAAP,WACE,cAAC,QAAMyM,KAAP,UACE,cAAC,mBAAD,CACEr/D,GAAG,wCACHukC,eAAe,4CAGnB,cAAC,QAAM86B,KAAP,UACG7mE,KAAKwF,MAAMkvF,oBAAoBM,gCAM1C,eAAC,UAAD,WACE,cAAC,UAAD,IAEA,cAAC,UAAD,UACE,cAAC,UAAQxyB,OAAT,UACE,cAAC,mBAAD,CACEh7D,GAAG,wCACHukC,eAAe,8CAIrB,eAAC,QAAD,CAAO06B,QAAM,EAACC,QAAM,EAApB,UACE,cAAC,QAAMlE,OAAP,UACE,eAAC,QAAMpI,IAAP,WACE,cAAC,QAAMuM,WAAP,UACE,cAAC,mBAAD,CACEn/D,GAAG,aACHukC,eAAe,iBAGnB,cAAC,QAAM46B,WAAP,UACE,cAAC,mBAAD,CACEn/D,GAAG,2BACHukC,eAAe,+BAGnB,cAAC,QAAM46B,WAAP,UACE,cAAC,mBAAD,CACEn/D,GAAG,sCACHukC,eAAe,+CAKtB/rC,KAAKwF,MAAMkvF,oBAAoBO,oBAAoB1xF,IACjDwQ,GACC,eAAC,QAAMqmD,IAAP,WACE,cAAC,QAAMyM,KAAP,UAAa9yD,EAAKmhF,aAClB,cAAC,QAAMruB,KAAP,UAAa9yD,EAAKohF,SAClB,cAAC,QAAMtuB,KAAP,UAAa9yD,EAAK+f,oBAQ7B9zB,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,mCACE,cAAC,OAAD,CAAMhB,GAAG,gBAAgBjhC,UAAU,OAAnC,SACE,cAAC,KAAD,CACE5S,KAAMsuC,IACNz5B,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmB,MACnDzM,UAAU,mBACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmB,mBAS5D,MAIO6vB,sBACbC,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACEkvF,oBAAqB9jF,EAAMusC,cAAcE,oBACzC9pC,SAAU/N,EAAM8N,SAASC,WAE3B,CAAEid,6BAPSgc,CASbgH,I,6LCjOF,MAAMh4B,EAAWC,yBAAe,CAC9B25E,aAAc,CAAF,qDAIZz4E,KAAM,CAAF,iCAIJV,KAAM,CAAF,iCAIJK,OAAQ,CAAF,qCAINoiC,KAAM,CAAF,mCAWN,MAAM7K,UAAqB1lC,YAsCzBzO,YAAY8F,GACVmkC,MAAMnkC,GADW,gBAqDZ+G,IAAM++B,aAnDXtrC,KAAK8kE,SAAW9kE,KAAK8kE,SAASvmE,KAAKyB,MACnCA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MACnCA,KAAK4Q,MAAQ,CAAE4/B,UAAU,GAQ3BjF,oBACEvrC,KAAKwF,MAAM0qB,gBAAgBlwB,KAAKwF,MAAMgC,IACtCxH,KAAKoqC,SAAS,CAAEoG,UAAU,IAS5BM,iCAAiCxiC,GAC3BtO,KAAKwF,MAAM6vF,cAAct5C,SAAWztC,EAAU+mF,cAAc/9D,QAC9D0tC,QAAMtmB,KACJ,cAAC,KAAD,CACEA,MAAI,EACJz1C,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASkjC,MAC9C3xC,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS45E,iBAYxDrwB,SAAS5kE,GACPH,KAAKwF,MAAM8qB,mBAAmBtwB,KAAKwF,MAAM03C,aAAa,OAAQ/8C,GAQhE2kE,WACE9kE,KAAKwF,MAAMqsC,QAAQkb,SASrBr9C,SACE,OAAI1P,KAAKwF,MAAM03C,aAEX,sBAAK11C,GAAG,oBAAR,UACE,cAAC,IAAD,CAAQyB,MAAOjJ,KAAKwF,MAAM03C,aAAaj0C,QACvC,cAAC,YAAD,UACE,cAAC,KAAD,CACEqa,IAAKtjB,KAAK+2C,KACV9tC,MAAOjJ,KAAKwF,MAAM03C,aAAaj0C,MAC/BmM,OAAQpV,KAAKwF,MAAM03C,aAAa9nC,OAChCsL,SAAU1gB,KAAKwF,MAAM03C,aAAa/8C,KAClC4kE,SAAU/kE,KAAK+kE,SACfD,SAAU9kE,KAAK8kE,SACf4rB,aAAW,EACX30C,QAAS/7C,KAAKwF,MAAM6vF,cAAct5C,YAGrC/7C,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,qCACE,cAAC,SAAD,CACE3qC,GAAG,eACH0I,UAAU,OACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASS,MACnD0jB,QAAS,IAAM3/B,KAAK+2C,KAAKrxC,QAAQq/D,WACjCj8B,SAAU9oC,KAAKwF,MAAM6vF,cAAct5C,QACnCA,QAAS/7C,KAAKwF,MAAM6vF,cAAct5C,QANpC,SAQE,cAAC,KAAD,CACEz+C,KAAMulE,IACN3yD,UAAU,UACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASS,UAGlD,cAAC,SAAD,CACE/L,UAAU,SACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,EAASc,QAEXqjB,QAAS,IAAM3/B,KAAK8kE,WALtB,SAOE,cAAC,KAAD,CACExnE,KAAMk9B,IACNtqB,UAAU,UACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,sBAW3D,yB,IA/JLu3B,E,eA4BkB,CACpBqJ,aAAc,OAsIH1Q,sBACbC,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACE03C,aAActsC,EAAMusC,cAAcD,aAClCm4C,cAAezkF,EAAMusC,cAAcV,OACnCj1C,GAAIhC,EAAM4gC,MAAMlmC,OAAOsH,GACvB+L,SAAU/N,EAAM8N,SAASC,WAE3B,CAAE+c,wBAAoBJ,sBAExBva,aAXa62B,CAYbqH,I,wzBC1MF,MAAMr4B,EAAWC,yBAAe,CAC9B65E,UAAW,CAAF,6CAIT34E,KAAM,CAAF,iCAIJ44E,gBAAiB,CAAF,yDAIfC,iBAAkB,CAAF,2DAIhBC,eAAgB,CAAF,yDAIdv3E,MAAO,CAAF,mCAILO,OAAQ,CAAF,qCAINL,uBAAwB,CAAF,qEAWxB,MAAM80B,UAAsB/kC,YAwB1BzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK4Q,MAAQ,CACXgD,MAAO,KACP48B,UAAU,GASdjF,oBACEvrC,KAAKwF,MAAM6qB,oBACXrwB,KAAKwF,MAAM+qB,uBACXvwB,KAAKoqC,SAAS,CAAEoG,UAAU,IAG5BM,iCAAiCxiC,GAG7BtO,KAAKwF,MAAMkwF,qBAAqB35C,SAChCztC,EAAUonF,qBAAqB9hF,OAE/B5T,KAAKoqC,SAAS,CACZx2B,MAAOtF,EAAUonF,qBAAqB9hF,QAU5ClE,SAEE,GAAI1P,KAAK4Q,MAAMgD,MACb,OAAO,cAAC,IAAD,CAAOA,MAAO5T,KAAK4Q,MAAMgD,QAGlC,MAAMupC,EAAgB,IACpB,IAAOn9C,KAAKwF,MAAM23C,cAAe,CAC/B,CACE,MAAO,UACPK,MAAO,UACPv0C,MAAO,WAET,CACE,MAAO,YACPu0C,MAAO,UACPv0C,MAAO,YAET,CACE,MAAO,qBACPu0C,MAAO,UACPv0C,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASg6E,mBAEhD,CACE,MAAO,SACPh4C,MAAO,mBACPv0C,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS0C,QAEhD,CACE,MAAO,uBACPs/B,MAAOx9C,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASi6E,gBAC9CxsF,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS4C,yBAEhD,CACE,MAAO,UACPo/B,MAAO,mBACPv0C,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASiD,WAGjDy+B,GAAD,OACKA,GADL,IAEE11C,GAAI,IAAK01C,EAAa,OAAO9yC,MAAM,SAGjCqU,EAAS,IAAI,IAAO0+B,EAAe,SAAU,UAC3Cw4C,mBAAoBC,GAAU/0F,IAAOD,SAE7C,OACE,sBAAKsP,UAAU,eAAf,UACE,cAAC,IAAD,CAAQjH,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS85E,aACtD,eAAC,YAAD,CAAWplF,UAAU,eAArB,UACE,eAAC,UAAQwqB,MAAT,CAAe+Q,QAAM,EAArB,UACE,cAAC,UAAD,CAASv7B,UAAU,UAAnB,SACE,cAAC,mBAAD,CAAkB1I,GAAG,aAAaukC,eAAe,iBAElD,IAAIttB,EAAS++B,GAAU,CACtB,cAAC,UAAD,CAAiCtR,WAAS,EAA1C,SACGsR,GADY,UAASA,GAGxB,cAAC,UAAD,CAA+BmwB,UAAQ,EAAvC,SACE,cAAC,OAAD,CAAMtG,QAAS,EAAf,SACE,cAAC,OAAKjN,IAAN,UACG,IAAI,IAAOjd,EAAe,CAAEK,UAAWN,GACtC,cAAC,OAAKuZ,OAAN,UACE,cAAC,OAAD,CAAMtlB,GAAK,iBAAgB+L,EAAa11C,GAAxC,SACE,eAAC,SAAD,CAAQwK,GAAG,KAAKq3B,MAAI,EAACyjB,UAAU,SAA/B,UACE,cAAC,KAAD,CACExvD,MAAMs4F,aAAA,EAAAA,EAAQ14C,EAAa11C,MAAOouF,EAAM9wD,QACxChR,KAAK,SAEP,cAAC,SAAOsqC,QAAR,UACGlhB,EAAaj0C,cARJi0C,EAAa11C,UAJxB,QAAOg2C,QAuB1B,eAAC,UAAQ9iB,MAAT,CAAe+Q,QAAM,EAArB,UACE,cAAC,UAAD,CAASv7B,UAAU,UAAnB,SACE,cAAC,mBAAD,CACE1I,GAAG,mBACHukC,eAAe,uBAGnB,cAAC,UAAD,CAAS4hC,UAAQ,EAAjB,SACG3tE,KAAKwF,MAAMqwF,kBACV,cAAC,KAAD,KAAqB71F,KAAKwF,MAAMqwF,oBAC9B,aAIT71F,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,cAAC,OAAD,CAAMhB,GAAG,IAAIjhC,UAAU,OAAvB,SACE,cAAC,KAAD,CACE5S,KAAMsuC,IACN17B,UAAU,mBACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmB,kBAYnD6vB,sBACbC,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACE23C,cAAevsC,EAAMusC,cAAcA,cACnCu4C,qBAAsB9kF,EAAMusC,cAAcT,KAC1CnpC,SAAU/N,EAAM8N,SAASC,SACzBsiF,kBAAmBjlF,EAAMusC,cAAcC,oBAEzC,CAAE/sB,sBAAmBE,2BATVic,CAWb0G,I,sLC3NF,MAAM13B,EAAWC,yBAAe,CAC9BnL,IAAK,CAAF,+BAIHqM,KAAM,CAAF,iCAIJm5E,IAAK,CAAF,+BAIHt8E,GAAI,CAAF,6BAIFu8E,iBAAkB,CAAF,iEAIhBC,mBAAoB,CAAF,iEAIlBC,sBAAuB,CAAF,mCAIrBC,4BAA6B,CAAF,+CAI3Bn4E,QAAS,CAAF,uCAIPo4E,YAAa,CAAF,iEAIXC,mBAAoB,CAAF,+CAIlBC,YAAa,CAAF,mEAWb,MAAM/iD,UAAqBnlC,YAgCzBzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAKs2F,gBAAkBt2F,KAAKs2F,gBAAgB/3F,KAAKyB,MACjDA,KAAKu2F,eAAiBv2F,KAAKu2F,eAAeh4F,KAAKyB,MAC/CA,KAAKw2F,iBAAmBx2F,KAAKw2F,iBAAiBj4F,KAAKyB,MACnDA,KAAKyxD,OAASzxD,KAAKyxD,OAAOlzD,KAAKyB,MAC/BA,KAAKy2F,SAAWz2F,KAAKy2F,SAASl4F,KAAKyB,MACnCA,KAAK02F,SAAW12F,KAAK02F,SAASn4F,KAAKyB,MACnCA,KAAK0xD,SAAW1xD,KAAK0xD,SAASnzD,KAAKyB,MACnCA,KAAK22F,eAAiB32F,KAAK22F,eAAep4F,KAAKyB,MAC/CA,KAAK42F,WAAa52F,KAAK42F,WAAWr4F,KAAKyB,MACvCA,KAAK62F,oBAAsB72F,KAAK62F,oBAAoBt4F,KAAKyB,MAEzDA,KAAK4Q,MAAQ,CACXkmF,aAAa,EACbC,aAAc,GACdC,YAAY,EACZC,kBAAc9xF,EACdyO,MAAO,KACP48B,UAAU,GASdjF,oBACEvrC,KAAKwF,MAAM0qB,gBAAgBlwB,KAAKwF,MAAMgC,IACtCxH,KAAKoqC,SAAS,CAAEoG,UAAU,IAG5BM,iCAAiCxiC,GAG7BtO,KAAKwF,MAAM0xF,cAAct5F,IAAIm+C,SAC7BztC,EAAU4oF,cAAct5F,IAAIgW,OAE5B5T,KAAKoqC,SAAS,CACZx2B,MAAOtF,EAAU4oF,cAAct5F,IAAIgW,QAMrC5T,KAAKwF,MAAM0xF,cAAcj6C,KAAKlB,SAC9BztC,EAAU4oF,cAAcj6C,KAAK3lB,SAE7Bt3B,KAAKwF,MAAM0qB,gBAAgBlwB,KAAKwF,MAAMgC,IACtCxH,KAAKw2F,oBAGLx2F,KAAKwF,MAAM0xF,cAAcj6C,KAAKlB,SAC9BztC,EAAU4oF,cAAcj6C,KAAKrpC,OAE7B5T,KAAKu2F,eAAejoF,EAAU4oF,cAAcj6C,KAAKrpC,OAKjD5T,KAAKwF,MAAM0xF,cAAcx+C,OAAOqD,SAChCztC,EAAU4oF,cAAcx+C,OAAOphB,SAE/Bt3B,KAAKwF,MAAM0qB,gBAAgBlwB,KAAKwF,MAAMgC,IACtCxH,KAAK62F,uBAYTP,gBAAgBn2F,EAAMiH,GACpBpH,KAAKwF,MAAM2qB,iBAAiBnwB,KAAKwF,MAAMgC,GAAIrH,GAC3CH,KAAKoqC,SAAS,CACZ+sD,2BAA4B/vF,IAWhCmvF,eAAe3iF,GACb5T,KAAKoqC,SAAS,CACZ2sD,aAAcnjF,EAAM0O,UAUxBk0E,mBACEx2F,KAAK4Q,MAAMumF,2BAA2B,IACtCn3F,KAAKoqC,SAAS,CACZ0sD,aAAa,EACbC,kBAAc5xF,EACdgyF,gCAA4BhyF,IAE9B6/D,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS26E,gBAYtD1kC,OAAOhsC,GAAO,MAAEznB,IACdgC,KAAKwF,MAAMqsC,QAAQhrC,KAAK7I,GAS1By4F,SAAShxE,GAAO,MAAEznB,IAChBgC,KAAKwF,MAAMqsC,QAAQhrC,KAAK7I,GAU1B0zD,SAASjsC,GAAO,MAAEznB,IACZA,GACFgC,KAAKoqC,SAAS,CACZ4sD,YAAY,EACZC,aAAcj5F,IAWpB04F,SAASjxE,GAAO,MAAEznB,IACZA,GACFgC,KAAKwF,MAAMqsC,QAAQhrC,KAAM,GAAE7G,KAAKwF,MAAM+N,YAAYvV,YAUtD44F,aACE,MAAM7iF,EAAO4pB,YAAM39B,KAAK4Q,MAAMqmF,cAC9Bj3F,KAAKwF,MAAM4qB,mBAAmBpwB,KAAKwF,MAAMgC,GAAIuM,GAC7C/T,KAAKoqC,SAAS,CACZ4sD,YAAY,EACZC,kBAAc9xF,IAUlBwxF,iBACE32F,KAAKoqC,SAAS,CACZ4sD,YAAY,EACZC,kBAAc9xF,IAWlB0xF,sBACE7xB,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS66E,gBAStD3mF,SAEE,OAAI1P,KAAK4Q,MAAMgD,MACN,cAAC,IAAD,CAAOA,MAAO5T,KAAK4Q,MAAMgD,QAG7B5T,KAAKwF,MAAM03C,aAId,eAAC,YAAD,CAAWhtC,UAAU,sBAArB,UACE,sBAAKA,UAAU,YAAf,UACE,cAAC,UAAD,CACEi9B,KAAMntC,KAAK4Q,MAAMomF,WACjBppB,OAAQ5tE,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS46E,oBAC/CgB,aAAcp3F,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAShC,IACrD69E,cAAer3F,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASs6E,KACtD/oF,QACE,qBAAKmD,UAAU,UAAf,SACE,oBAAIA,UAAU,UAAd,SACE,cAAC,mBAAD,CACE1I,GAAG,oDACHukC,eAAe,gDACfn3B,OAAQ,CACN0iF,SAAU,4BAAI35D,YAAM39B,KAAK4Q,MAAMqmF,cAAgB,aAMzDnyB,SAAU9kE,KAAK22F,eACf9hB,UAAW70E,KAAK42F,aAElB,cAAC,KAAD,CACEzpD,KAAMntC,KAAK4Q,MAAMkmF,YACjB5mF,UAAU,QACV60D,SAAU/kE,KAAKs2F,gBACfiB,YAAav3F,KAAK4Q,MAAMmmF,aACxBjyB,SAAU,IAAM9kE,KAAKoqC,SAAS,CAAE0sD,aAAa,IAC7C7tF,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASu6E,kBAC9Ch6C,QAAS/7C,KAAKwF,MAAM0xF,cAAcj6C,KAAKlB,QACvC3mC,OAAQ,CACNoN,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAO,eACP6X,OAAQ,CAAC,QAAS,iBAGtBzL,WAAY,CACVpM,MAAO,CACLA,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAASy6E,uBAEX71F,KAAM,SACNwhC,YAAa,IAEfA,YAAa,CACX34B,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAAS06E,6BAEX91F,KAAM,SACNwhC,YAAa,KAGjBjmB,SAAU,CAAC,eAIjB,cAAC,YAAD,UACE,0BAASnU,GAAG,UAAZ,UACE,cAAC,SAAD,CAAQshC,UAAQ,EAAhB,SAAkB9oC,KAAKwF,MAAM03C,aAAaj0C,QAC1C,yBAASzB,GAAG,eAAZ,SACE,eAAC,QAAD,CAAOgwE,SAAO,EAACggB,YAAU,EAACC,SAAO,EAAjC,UACE,cAAC,QAAMj1B,OAAP,UACE,eAAC,QAAMpI,IAAP,WACE,cAAC,QAAMuM,WAAP,UACE,cAAC,mBAAD,CAAkBn/D,GAAG,OAAOukC,eAAe,WAE7C,cAAC,QAAM46B,WAAP,UACE,cAAC,mBAAD,CACEn/D,GAAG,cACHukC,eAAe,kBAGnB,cAAC,QAAM46B,WAAP,UACE,cAAC,mBAAD,CAAkBn/D,GAAG,QAAQukC,eAAe,YAE9C,cAAC,QAAM46B,WAAP,CAAkB7Z,UAAU,QAA5B,SACE,cAAC,mBAAD,CAAkBtlD,GAAG,UAAUukC,eAAe,mBAIpD,cAAC,QAAM66B,KAAP,UACG5mE,KAAKwF,MAAM03C,aAAappC,MAAMvQ,IAAKwQ,GAClC,eAAC,QAAMqmD,IAAP,WACE,cAAC,QAAMyM,KAAP,UACE,cAAC,OAAD,CAAM11B,GAAK,GAAEnxC,KAAKwF,MAAM+N,YAAYQ,EAAI,KAAxC,SACGA,EAAK9K,UAGV,cAAC,QAAM49D,KAAP,UAAa9yD,EAAK6tB,cAClB,cAAC,QAAMilC,KAAP,UAAa9yD,EAAKmnD,QAClB,cAAC,QAAM2L,KAAP,CAAY/Z,UAAU,QAAtB,SACE,cAAC,IAAD,CACE/4C,KAAMA,EACN9T,KAAMD,KAAKwF,MAAM+N,SACjBk+C,OAAQzxD,KAAKyxD,OACbC,SAAU1xD,KAAK0xD,SACfglC,SAAU12F,KAAK02F,SACfD,SAAUz2F,KAAKy2F,eAfL1iF,EAAK,qBAyBhC/T,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,qCACE,cAAC,OAAD,CAAMhB,GAAI3T,YAAax9B,KAAKwF,MAAM+N,UAAWrD,UAAU,OAAvD,SACE,cAAC,KAAD,CACE5S,KAAMsuC,IACN9X,KAAK,OACL5jB,UAAU,mBACVjH,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmB,UAGlD,cAAC,SAAD,CACEzM,UAAU,MACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASlL,KACnD+pC,SAAU,EACV7yC,GAAG,cACHm4B,QAAS,KACP3/B,KAAKoqC,SAAS,CAAE0sD,aAAa,KANjC,SASE,cAAC,KAAD,CACEx5F,KAAMghE,IACNr1D,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAASw6E,kCA5IpB,yBA0JExpD,sBACbC,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACE03C,aAActsC,EAAMusC,cAAcD,aAClCg6C,cAAetmF,EAAMusC,cACrB5pC,SAAU/N,EAAM8N,SAASC,SACzB/L,GAAI,IAAKhC,EAAM8N,SAASC,SAASnJ,MAAM,QAEzC,CACE8lB,oBACAC,sBACAC,yBAZSoc,CAeb8G,I,yOC9eF,MAAM93B,EAAWC,yBAAe,CAC9BxS,MAAO,CAAF,2DAILmsF,aAAc,CAAF,qDAIZz4E,KAAM,CAAF,iCAIJV,KAAM,CAAF,iCAIJK,OAAQ,CAAF,qCAINoiC,KAAM,CAAF,mCAWN,MAAMrL,UAAoBllC,YAoCxBzO,YAAY8F,GACVmkC,MAAMnkC,GAENxF,KAAK4Q,MAAQ,CACXk/E,QAAQ,EACRl8E,MAAO,KACP48B,UAAU,GAGZxwC,KAAK8kE,SAAW9kE,KAAK8kE,SAASvmE,KAAKyB,MACnCA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MACnCA,KAAK+2C,KAAOxqC,IAAM++B,YAQpBC,oBACEvrC,KAAKwF,MAAM0qB,gBAAgB,IAAK,CAAClwB,KAAKwF,MAAMgpB,OAAQxuB,KAAKwF,MAAMgC,IAAK,MACpExH,KAAKoqC,SAAS,CAAEoG,UAAU,IAS5BM,iCAAiCxiC,GAG7BtO,KAAKwF,MAAM0xF,cAAct5F,IAAIm+C,SAC7BztC,EAAU4oF,cAAct5F,IAAIgW,OAE5B5T,KAAKoqC,SAAS,CACZx2B,MAAOtF,EAAU4oF,cAAct5F,IAAIgW,QAMrC5T,KAAKwF,MAAM0xF,cAAcz6C,OAAOV,SAChCztC,EAAU4oF,cAAcz6C,OAAOnlB,QAE/B0tC,QAAMtmB,KACJ,cAAC,KAAD,CACEA,MAAI,EACJz1C,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASkjC,MAC9C3xC,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS45E,iBAYxDrwB,SAAS5kE,GACPH,KAAKwF,MAAM8qB,mBAAmBtwB,KAAKwF,MAAM03C,aAAa,OAAQ/8C,GAQhE2kE,WACE9kE,KAAKwF,MAAMqsC,QAAQhrC,KAAK22B,YAAax9B,KAAKwF,MAAM+N,WAQlD7D,SAEE,GAAI1P,KAAK4Q,MAAMgD,MACb,OAAO,cAAC,IAAD,CAAOA,MAAO5T,KAAK4Q,MAAMgD,QAGlC,GAAI5T,KAAKwF,MAAM03C,aAAc,SAC3B,IAAIA,EAAel9C,KAAKwF,MAAM03C,aAIyB,MAAvD,IAHiD,KAA7CA,SAAA,UAAAA,EAAc/8C,YAAd,eAAoBu3F,wBACtBx6C,EAAa/8C,KAAKu3F,qBAAuB,CAAEzuF,MAAO,MAAO4J,MAAO,SAEjB,KAA7CqqC,SAAA,UAAAA,EAAc/8C,YAAd,eAAoBu3F,wBACjBx6C,SAAA,UAAAA,EAAc/8C,YAAd,eAAoBw3F,wBAAyB,IAAI31F,OACpDk7C,EAAa/8C,KAAKu3F,qBAAuB,CACvCzuF,MAAO,OACP4J,MAAO,QAGTqqC,EAAa/8C,KAAKu3F,qBAAuB,CACvCzuF,MAAO,OACP4J,MAAO,QAIb,OACE,sBAAKrL,GAAG,oBAAoB0I,UAAU,eAAtC,UACE,cAAC,SAAD,CAAQ44B,UAAQ,EAAhB,SACG9oC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASvS,MAAO,CAC7CzB,GAAI01C,EAAaj0C,UAGrB,cAAC,KAAD,CACE2uF,YAAU,EACVt0E,IAAKtjB,KAAK+2C,KACV3hC,OAAQ8nC,EAAa9nC,OACrBsL,SAAUw8B,EAAa/8C,KACvB4kE,SAAU/kE,KAAK+kE,SACfD,SAAU9kE,KAAK8kE,SACfvxD,SAAUvT,KAAKwF,MAAM+N,SACrBu8E,OAAQ9vF,KAAK4Q,MAAMk/E,OACnBY,aAAW,EACX30C,QAAS/7C,KAAKwF,MAAM0xF,cAAcz6C,OAAOV,UAE1C/7C,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,qCACE,cAAC,SAAD,CACE3qC,GAAG,eACH0I,UAAU,OACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASS,MACnD0jB,QAAS,IAAM3/B,KAAK+2C,KAAKrxC,QAAQq/D,WACjCj8B,SAAU9oC,KAAKwF,MAAM0xF,cAAcz6C,OAAOV,QAC1CA,QAAS/7C,KAAKwF,MAAM0xF,cAAcz6C,OAAOV,QAN3C,SAQE,cAAC,KAAD,CACEz+C,KAAMulE,IACN3yD,UAAU,UACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASS,UAGlD,cAAC,SAAD,CACE/L,UAAU,SACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,EAASc,QAEXqjB,QAAS,IAAM3/B,KAAK8kE,WALtB,SAOE,cAAC,KAAD,CACExnE,KAAMk9B,IACNtqB,UAAU,UACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,sBAWlE,OAAO,yB,IA3ML+2B,E,eA0BkB,CACpB6J,aAAc,OAoLH1Q,sBACbC,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACE03C,aAActsC,EAAMusC,cAAcD,aAClCg6C,cAAetmF,EAAMusC,cACrB5pC,SAAU/N,EAAM8N,SAASC,SACzB/L,GAAI,IAAKhC,EAAM8N,SAASC,SAASnJ,MAAM,MACvCokB,OAAQ,IAAIhpB,EAAM8N,SAASC,SAASnJ,MAAM,MAAO,KAEnD,CAAE8lB,oBAAiBI,0BAVRkc,CAYb6G,I,kzBCxOF,MAAM73B,EAAWC,yBAAe,CAC9B25E,aAAc,CAAF,qDAIZz4E,KAAM,CAAF,iCAIJV,KAAM,CAAF,iCAIJK,OAAQ,CAAF,qCAINoiC,KAAM,CAAF,iCAIJm5C,OAAQ,CAAF,uEAWR,MAAM1kD,UAA0BhlC,YAyC9BzO,YAAY8F,GACVmkC,MAAMnkC,GAENxF,KAAK4Q,MAAQ,CACXk/E,QAAQ,EACR/iF,QAAS,KACT+qF,iBAAkB,KAClBlkF,MAAO,KACP48B,UAAU,GAGZxwC,KAAK8kE,SAAW9kE,KAAK8kE,SAASvmE,KAAKyB,MACnCA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MACnCA,KAAK+3F,eAAiB/3F,KAAK+3F,eAAex5F,KAAKyB,MAC/CA,KAAKg4F,wBAA0Bh4F,KAAKg4F,wBAAwBz5F,KAAKyB,MACjEA,KAAK+2C,KAAOxqC,IAAM++B,YAQpBC,oBACEvrC,KAAKwF,MAAM0qB,gBAAgB,IAAK,CAAClwB,KAAKwF,MAAMgpB,OAAQxuB,KAAKwF,MAAMgC,IAAK,MACpExH,KAAKwF,MAAMksB,UAAU1xB,KAAKwF,MAAMgC,IAChCxH,KAAKoqC,SAAS,CAAEoG,UAAU,IAS5BM,iCAAiCxiC,GAY/B,GATEtO,KAAKwF,MAAM0xF,cAAct5F,IAAIm+C,SAC7BztC,EAAU4oF,cAAct5F,IAAIgW,OAE5B5T,KAAKoqC,SAAS,CACZx2B,MAAOtF,EAAU4oF,cAAct5F,IAAIgW,QAKnC5T,KAAKwF,MAAMqtF,cAAc92C,SAAWztC,EAAUukF,cAAcv7D,OAAQ,OACtE,MAAMjiB,GAAa,UAAA/G,EAAU8G,cAAV,eAAkBC,aAAc,GAC7CtI,EAAU,GAChB,IAAK,MAAMzO,KAAO+W,EAAY,CAC5B,MAAMrX,EAAQqX,EAAW/W,GAAKwmC,QAC1B9mC,IACF+O,EAAQzO,GAAON,GAInB,GAAIkkC,YAAc7sB,GAAa,WAC7BrV,KAAKoqC,SAAS,CACZ0lD,QAAQ,IAGV,MAAMttD,EAAkBR,YAAmB3sB,GACrCotB,EAAwBR,YAAyB5sB,GACvDtI,EAAQy1B,IAAmB,UAAAntB,EAAWmtB,UAAX,eAA6BsC,UAAW,GACnE/3B,EAAQ01B,IAAyB,UAAAptB,EAAWotB,UAAX,eAC7BqC,UAAW,CAAEhxB,MAAO,IAExB,MAAMmkF,GAAiB,UAAA5iF,EAAWmtB,UAAX,eAA6B7tB,WAAY,GAChE3U,KAAKoqC,SAAS,CACZ0tD,iBAAmBG,EAAe7nF,SAAS,aAEvC,GADA6nF,SAINj4F,KAAKoqC,SAAS,CACZ0lD,QAAQ,EACRgI,iBAAkB,KAItB93F,KAAKoqC,SAAS,CACZr9B,QAASA,IAMX/M,KAAKwF,MAAMqtF,cAAcp2C,OAAOV,SAChCztC,EAAUukF,cAAcp2C,OAAOnlB,SAE/Bt3B,KAAKwF,MAAMksB,UAAU1xB,KAAKwF,MAAMgC,IAChCw9D,QAAMtmB,KACJ,cAAC,KAAD,CACEA,MAAI,EACJz1C,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASkjC,MAC9C3xC,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS45E,kBAOpDp1F,KAAKwF,MAAM0xF,cAAcz6C,OAAOV,SAChCztC,EAAU4oF,cAAcz6C,OAAOnlB,QAE/Bt3B,KAAK+3F,iBAUThzB,SAAS5kE,GACP,MAAMiV,EAAS,CAAEC,WAAY,IAC7B5X,OAAO+D,KAAKrB,GACToF,OAAQq0D,GAAMz5D,EAAKy5D,IACnB95D,QAAS85D,GAAOxkD,EAAOC,WAAWukD,GAAK,CAAE90B,QAAS3kC,EAAKy5D,KAC1D55D,KAAKwF,MAAMosB,aAAa5xB,KAAKwF,MAAMgC,GAAI4N,GAQzC0vD,WACE,MAAMljE,EAAM47B,YAAax9B,KAAKwF,MAAM+N,UACpCvT,KAAKwF,MAAMqsC,QAAQhrC,KAAK22B,YAAa57B,IAQvCm2F,iBAAiB,QACf,MAAM,WAAE1iF,EAAa,IAAOrV,KAAKwF,MAAM4P,OACjCotB,EAAkBR,YAAmB3sB,GACrCotB,EAAwBR,YAAyB5sB,GACjDD,EAAS,CACboN,UAAW,CACT,CACEhb,GAAI,SACJyB,MAAO,SACP6X,OAAQ,CAAC,SAAU,mBAGvBzL,WAAY,CACV6W,OAAQ,CACNjjB,MAAO,SACP7I,KAAM,OACN4gB,OAAQ,OACRsqD,QAAS,YACTxmC,SAAS,UAAAzvB,EAAWmtB,UAAX,eAA6BsC,UAAW,IAEnD4xB,cAAe,CACbztD,MAAO,gBACP7I,KAAM,OACN4gB,OAAQ,OACRsqD,QAAS,YACTxmC,SAAS,UAAAzvB,EAAWotB,UAAX,eAAmCqC,UAAW,CAAEhxB,MAAO,OAItE9T,KAAKwF,MAAMosB,aAAa5xB,KAAKwF,MAAMgC,GAAI4N,GAQzC4iF,0BACEh4F,KAAKwF,MAAM8qB,mBAAmBtwB,KAAKwF,MAAM03C,aAAa,OAAQ,CAC5D,CAACl9C,KAAK4Q,MAAMknF,mBAAmB,IASnCpoF,SAAS,QAMiB,IAuDS,IA3DjC,GAAI1P,KAAK4Q,MAAMgD,MACb,OAAO,cAAC,IAAD,CAAOA,MAAO5T,KAAK4Q,MAAMgD,QAGlC,IAAK5T,KAAK4Q,MAAMk/E,OAEd,OAAK9vF,KAAK4Q,MAAM7D,QAMd,qCACE,eAAC,UAAD,CACE40B,aAAW,EACXn6B,GAAG,2BACH0I,UAAU,8BAHZ,UAKE,8BACE,cAAC,mBAAD,CACE1I,GAAG,oIACHukC,eAAe,oIACfn3B,OAAQ,CACNsjF,OAAQ,IAAIC,IAAW,iCAASA,IAChC/3F,MAAM,UAAAJ,KAAKwF,aAAL,mBAAY03C,oBAAZ,eAA0Bj0C,QAASjJ,KAAKwF,MAAMgC,QAI1D,qBAAK0I,UAAU,eACf,cAAC,SAAD,CACE6qB,SAAO,EACP4E,QAAS3/B,KAAK+3F,eACdhrF,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASq8E,aAGpD,cAAC,SAAD,CACE5lD,KAAMjyC,KAAK4Q,MAAM4/B,UAAY1mC,SAASooC,eAAe,WADvD,SAGE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,mCACE,cAAC,OAAD,CAAMjiC,UAAU,OAAOihC,GAAG,IAAIxR,QAAS,IAAM3/B,KAAK8kE,WAAlD,SACE,cAAC,KAAD,CACExnE,KAAMsuC,IACN9X,KAAK,OACL5jB,UAAU,mBACVjH,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmB,mBAzCrD,wBAoDX,GAAI3c,KAAK4Q,MAAMknF,iBACb,OACE,qCACE,eAAC,UAAD,CACEn2D,aAAW,EACXn6B,GAAG,2BACH0I,UAAU,8BAHZ,UAKE,8BACE,cAAC,mBAAD,CACE1I,GAAG,iJACHukC,eAAe,iJACfn3B,OAAQ,CACNsjF,OAAQ,IAAIC,IAAW,iCAASA,IAChC/3F,MAAM,UAAAJ,KAAKwF,aAAL,mBAAY03C,oBAAZ,eAA0Bj0C,QAASjJ,KAAKwF,MAAMgC,QAI1D,qBAAK0I,UAAU,eACf,cAAC,SAAD,CACE6qB,SAAO,EACP4E,QAAS3/B,KAAKg4F,wBACdjrF,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASq8E,aAGpD,cAAC,SAAD,CACE5lD,KAAMjyC,KAAK4Q,MAAM4/B,UAAY1mC,SAASooC,eAAe,WADvD,SAGE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,mCACE,cAAC,OAAD,CAAMjiC,UAAU,OAAOihC,GAAG,IAAIxR,QAAS,IAAM3/B,KAAK8kE,WAAlD,SACE,cAAC,KAAD,CACExnE,KAAMsuC,IACN9X,KAAK,OACL5jB,UAAU,mBACVjH,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmB,mBAYhE,MAAM6lB,EAAkBR,aACtB,UAAAhiC,KAAKwF,MAAM4P,cAAX,eAAmBC,aAAc,IAE7BotB,EAAwBR,aAC5B,UAAAjiC,KAAKwF,MAAM4P,cAAX,eAAmBC,aAAc,IAEnC,OACE,sBAAK7N,GAAG,2BAAR,UACE,cAAC,KAAD,CACE4wF,aAAW,EACX90E,IAAKtjB,KAAK+2C,KACV3hC,OAAQ,CACNoN,UAAW,CACT,CACEhb,GAAI,SACJyB,MAAO,SACP6X,OAAQ,CAAC0hB,EAAiBC,KAG9BptB,WAAY,EAAF,KACLrV,KAAKwF,MAAM4P,OAAOC,WAAWmtB,IAC7BxiC,KAAKwF,MAAM4P,OAAOC,WAAWotB,IAElC9mB,SAAU,IAEZ+E,SAAU1gB,KAAK4Q,MAAM7D,QACrBg4D,SAAU/kE,KAAK+kE,SACfD,SAAU9kE,KAAK8kE,SACfvxD,SAAUvT,KAAKwF,MAAM+N,SACrBu8E,OAAQ9vF,KAAK4Q,MAAMk/E,OACnBY,aAAW,IAEb,cAAC,SAAD,CACEz+C,KAAMjyC,KAAK4Q,MAAM4/B,UAAY1mC,SAASooC,eAAe,WADvD,SAGE,cAAC,KAAD,CAASmmD,aAAa,EAAMC,aAAa,MAE3C,cAAC,SAAD,CACErmD,KAAMjyC,KAAK4Q,MAAM4/B,UAAY1mC,SAASooC,eAAe,WADvD,SAGE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,qCACE,cAAC,SAAD,CACE3qC,GAAG,eACH0I,UAAU,OACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASS,MACnD0jB,QAAS,IAAM3/B,KAAK+2C,KAAKrxC,QAAQq/D,WACjCj8B,SAAU9oC,KAAKwF,MAAMqtF,cAAcp2C,OAAOV,QAC1CA,QAAS/7C,KAAKwF,MAAMqtF,cAAcp2C,OAAOV,QAN3C,SAQE,cAAC,KAAD,CACEz+C,KAAMulE,IACN3yD,UAAU,UACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASS,UAGlD,cAAC,SAAD,CACE/L,UAAU,SACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,QACnDqjB,QAAS,IAAM3/B,KAAK8kE,WAHtB,SAKE,cAAC,KAAD,CACExnE,KAAMk9B,IACNtqB,UAAU,UACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,uB,IAxZ5D62B,E,eA8BkB,CACpB/9B,OAAQ,GACR8nC,aAAc,OAoYH1Q,sBACbC,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACE4P,OAAQxE,EAAMwE,OAAOA,OACrBy9E,cAAejiF,EAAMwE,OACrB8hF,cAAetmF,EAAMusC,cACrBD,aAActsC,EAAMusC,cAAcD,aAClC3pC,SAAU/N,EAAM8N,SAASC,SACzB/L,GAAI,IAAIhC,EAAM8N,SAASC,SAASnJ,MAAM,MAAO,GAC7CokB,OAAQ,IAAIhpB,EAAM8N,SAASC,SAASnJ,MAAM,MAAO,KAEnD,CAAEsnB,cAAWE,kBAAc1B,oBAAiBI,0BAZjCkc,CAcb2G,I,wwBCteF,MAAM33B,EAAWC,yBAAe,CAC9BxS,MAAO,CAAF,+CAIL8U,QAAS,CAAF,uCAIP9B,KAAM,CAAF,iCAIJK,OAAQ,CAAF,qCAIN1I,MAAO,CAAF,mCAILuiF,YAAa,CAAF,qDAIXz3C,KAAM,CAAF,iCAIJ02C,aAAc,CAAF,uDAWd,MAAMhiD,UAA0BjlC,YA0B9BzO,YAAY8F,GACVmkC,MAAMnkC,GADW,gBA6GZ+G,IAAM++B,aA7GM,0BA+GDl2B,IAChB,MAAMvB,EAAS,CACb5K,MAAO,SACP7I,KAAM,SACNoiB,UAAW,CACT,CACE1B,OAAQ,CAAC,UACTtZ,GAAI,UACJyB,MAAO,YAGXoM,WAAY,CACVD,OAAQ,CACNwsB,YAAa,cACb34B,MAAO,cACP7I,KAAM,SACNoH,GAAI,WAGRmU,SAAU,GACV48E,QAAS,MAIX,OAFA1kF,EAAO0kF,QAAUnjF,EAAOmjF,QAAQrtF,QAEzB2I,IAvIU,sBA0ILyB,IACXA,EAAMX,UAAYW,EAAMX,SAASvE,SAAS,cA3I1B,0BA6IF,CAACgF,EAAQojF,KACxB,MAAMh2E,EAAYpN,EAAOoN,UAAUjf,IAAK03C,IACtC,MAAMw9C,EAAiBx9C,EAASn6B,OAAOvb,OACpC8b,IACErhB,KAAK04F,WAAWtjF,EAAOC,WAAWgM,KACvB,eAAZA,GAEEs3E,EAAoB19C,EAASn6B,OAAOvb,OAAQ8b,GAChDrhB,KAAK04F,WAAWtjF,EAAOC,WAAWgM,KAE9BszD,EAAa15B,EAASn6B,OAAOvb,OAChC8b,GAAwB,eAAZA,GAEf,cACK45B,GADL,IAEEn6B,OAAQ,IAAI23E,KAAmBE,KAAsBhkB,OAGnD9gE,EAAS,EAAH,KACPuB,GADO,IAEVoN,YACAg2E,gBAGF,MAAO,CAAEpjF,OAAQ8M,KAAK2Q,UAAUhf,MAnKhC7T,KAAK4Q,MAAQ,CACXgD,MAAO,KACPwB,OAAQ,KACRrI,QAAS,KACTyjC,UAAU,GAGZxwC,KAAK8kE,SAAW9kE,KAAK8kE,SAASvmE,KAAKyB,MACnCA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MACnCA,KAAK+2C,KAAOxqC,IAAM++B,YAQpBC,oBACEvrC,KAAKwF,MAAMksB,UAAU1xB,KAAKwF,MAAMgC,IAChCxH,KAAKoqC,SAAS,CAAEoG,UAAU,IAS5BM,iCAAiCxiC,GAS/B,GAPItO,KAAKwF,MAAMqtF,cAAc92C,SAAWztC,EAAUukF,cAAcj/E,OAC9D5T,KAAKoqC,SAAS,CACZx2B,MAAOtF,EAAUukF,cAAcj/E,QAK/B5T,KAAKwF,MAAMqtF,cAAc92C,SAAWztC,EAAUukF,cAAcv7D,OAAQ,OACtE,IAEIt5B,EAAOM,EAFP+W,GAAa,UAAA/G,EAAU8G,cAAV,eAAkBC,aAAc,GAC7CtI,EAAU,GAEd,IAAKzO,KAAO+W,EACVrX,EAAQqX,EAAW/W,GAAKwmC,QACpB9mC,IACF+O,EAAQzO,GAAON,GAInBgC,KAAKoqC,SAAS,CACZh1B,OAAQ9G,EAAU8G,OAClBrI,QAASA,IAMX/M,KAAKwF,MAAMqtF,cAAc/0C,IAAI/B,SAC7BztC,EAAUukF,cAAc/0C,IAAIxmB,QAG5B0tC,QAAMtmB,KACJ,cAAC,KAAD,CACEA,MAAI,EACJz1C,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASkjC,MAC9C3xC,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS45E,iBAOpDp1F,KAAKwF,MAAMqtF,cAAc/0C,IAAI/B,SAC7BztC,EAAUukF,cAAc/0C,IAAIlqC,OAE5BoxD,QAAMpxD,MACJ,cAAC,KAAD,CACEA,OAAK,EACL3K,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS5H,OAC9C7G,QAASmV,KAAK2Q,UACZvkB,EAAUukF,cAAc/0C,IAAIlqC,MAAMjS,SAASQ,MACzCmM,EAAUukF,cAAc/0C,IAAIlqC,MAAMjS,SAASS,SAavD2iE,SAAS5kE,GACPH,KAAKwF,MAAMmsB,UAAU3xB,KAAKwF,MAAMgC,GAAIrH,EAAKiV,QAQ3C0vD,WACE,IAAIljE,EAAM47B,YAAax9B,KAAKwF,MAAM+N,UAClCvT,KAAKwF,MAAMqsC,QAAQhrC,KAAK22B,YAAa57B,IAmEvC8N,SAEE,GAAI1P,KAAK4Q,MAAMgD,MACb,OAAO,cAAC,IAAD,CAAOA,MAAO5T,KAAK4Q,MAAMgD,QAGlC,GAAI5T,KAAK4Q,MAAMwE,OAAQ,SACrB,MAAMwjF,EAAoB54F,KAAK64F,eAAe74F,KAAK4Q,MAAMwE,QACnD0jF,EAAa94F,KAAK+4F,eAAe/4F,KAAK4Q,MAAMwE,OAAQpV,KAAKwF,MAAMgC,IAErE,OACE,sBAAKA,GAAG,2BAA2B0I,UAAU,eAA7C,UACE,cAAC,SAAD,CAAQ44B,UAAQ,EAAhB,SACG9oC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASvS,MAAO,CAC7CzB,IAAI,UAAAxH,KAAKwF,aAAL,mBAAY4P,cAAZ,eAAoBnM,QAASjJ,KAAKwF,MAAMgC,OAGhD,cAAC,KAAD,CACE8b,IAAKtjB,KAAK+2C,KACV3hC,OAAQwjF,EACRl4E,SAAUo4E,EACVvlF,SAAUvT,KAAKwF,MAAM+N,SACrBwxD,SAAU/kE,KAAK+kE,SACfD,SAAU9kE,KAAK8kE,SACf4rB,aAAW,IAEZ1wF,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,qCACE,cAAC,SAAD,CACE3qC,GAAG,eACH0I,UAAU,OACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASS,MACnD0jB,QAAS,IAAM3/B,KAAK+2C,KAAKrxC,QAAQq/D,WACjCj8B,SAAU9oC,KAAKwF,MAAMqtF,cAAc/0C,IAAI/B,QACvCA,QAAS/7C,KAAKwF,MAAMqtF,cAAc/0C,IAAI/B,QANxC,SAQE,cAAC,KAAD,CACEz+C,KAAMulE,IACN3yD,UAAU,UACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASS,UAGlD,cAAC,SAAD,CACE/L,UAAU,SACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,EAASc,QAEXqjB,QAAS,IAAM3/B,KAAK8kE,WALtB,SAOE,cAAC,KAAD,CACExnE,KAAMk9B,IACNtqB,UAAU,UACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,sBAYlE,OAAO,yB,IA9QL82B,E,eAkBkB,IAgQT5G,sBACbC,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACE4P,OAAQxE,EAAMwE,OAAOA,OACrBy9E,cAAejiF,EAAMwE,OACrB7B,SAAU/N,EAAM8N,SAASC,SACzB/L,GAAI,IAAIhC,EAAM8N,SAASC,SAASnJ,MAAM,MAAO,KAE/C,CACEsnB,cACAC,iBAXS6a,CAcb4G,I,6BC5VF,2GA8De3G,yBA5Ca,EAC1B14B,OACA9T,OACAwxD,SACAC,WACA+kC,WACAC,cAGE,cAAC,WAAD,CAAUrtD,KAAK,sBAAsBn5B,UAAY,WAAU6D,EAAKvM,GAAhE,SACE,eAAC,WAASwgF,KAAV,CAAe93E,UAAU,OAAzB,UACE,eAAC,WAASo2C,KAAV,CACE3mB,QAAS8xB,EACTzzD,MAAQ,GAAEiC,KAAQ8T,EAAKvM,KACvB0I,UAAY,QAAO6D,EAAKvM,GAH1B,UAKE,cAAC,KAAD,CAAMlK,KAAM07F,IAASllE,KAAK,SAC1B,cAAC,mBAAD,CAAkBtsB,GAAG,OAAOukC,eAAe,YAE7C,eAAC,WAASua,KAAV,CAAe3mB,QAAS+2D,EAAU14F,MAAO+V,EAAKvM,GAA9C,UACE,cAAC,KAAD,CAAMlK,KAAMouC,IAAW5X,KAAK,SAC5B,cAAC,mBAAD,CAAkBtsB,GAAG,SAASukC,eAAe,cAE/C,eAAC,WAASua,KAAV,CACE3mB,QAAS82D,EACTz4F,MAAQ,GAAEiC,KAAQ8T,EAAKvM,YACvB0I,UAAY,UAAS6D,EAAKvM,GAH5B,UAKE,cAAC,KAAD,CAAMlK,KAAM27F,IAAWnlE,KAAK,SAC5B,cAAC,mBAAD,CAAkBtsB,GAAG,SAASukC,eAAe,cAE/C,eAAC,WAASua,KAAV,CACE3mB,QAAS+xB,EACT1zD,MAAO+V,EAAK,OACZ7D,UAAY,UAAS6D,EAAKvM,GAH5B,UAKE,cAAC,KAAD,CAAMlK,KAAM+gE,IAAUvqC,KAAK,SAC3B,cAAC,mBAAD,CAAkBtsB,GAAG,SAASukC,eAAe,qB,61BCJvD,MAAM2H,UAA0BvlC,YAkC9BzO,YAAY8F,GACVmkC,MAAMnkC,GADW,qBA0BP85E,gBACJt/E,KAAKwF,MAAMisB,YACjBzxB,KAAKwF,MAAMwrB,mBACLhxB,KAAKwF,MAAM6sB,YACjBryB,KAAKoqC,SAAS,CACZkT,QAASt9C,KAAKwF,MAAM0Y,UA/BL,0BAqJD4E,IAChB,MAAM,OAAErE,EAAF,SAAUgV,GAAa3Q,EAC7BrE,EAAO3e,QAAS09C,IACdx9C,KAAKwF,MAAM0rB,YAAYssB,EAAO,CAC5Bt/B,MAAO,CACL,CAACuV,IAAW,SA1JD,gCA8NKz2B,IACtBA,EAAE8oB,kBAEF,MAAM/C,EAAQ/iB,KAAKwF,MAAMud,MAAMxf,IAAKwQ,GAASA,EAAKvM,IAClDxH,KAAK4Q,MAAM0sC,QAAQx9C,QAASiU,IAC1B,MAAMmlF,EAAW,CAAEn2E,MAAO,IACL,IAAWA,EAAOhP,EAAKgP,OAE/BjjB,QAASoS,IACpBgnF,EAASn2E,MAAM7Q,IAAQ,IAEzB6B,EAAKgP,MAAMjjB,QAASoS,IAClBgnF,EAASn2E,MAAM7Q,IAAQ,IAEzBlS,KAAKwF,MAAMutB,WAAWhf,EAAKvM,GAAI0xF,KAEjCl0B,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASoC,kBAlPnC,wBA0QJ,CAAC6H,GAASznB,YACvBgC,KAAKoqC,SAAS,CACZjmB,YAAanmB,MA1QfgC,KAAKm5F,eAAiBn5F,KAAKm5F,eAAe56F,KAAKyB,MAC/CA,KAAK8rC,SAAW9rC,KAAK8rC,SAASvtC,KAAKyB,MACnCA,KAAK04C,OAAS14C,KAAK04C,OAAOn6C,KAAKyB,MAE/BA,KAAK42F,WAAa52F,KAAK42F,WAAWr4F,KAAKyB,MACvCA,KAAK22F,eAAiB32F,KAAK22F,eAAep4F,KAAKyB,MAC/CA,KAAKo5F,gBAAkBp5F,KAAKo5F,gBAAgB76F,KAAKyB,MACjDA,KAAKq5F,eAAiBr5F,KAAKq5F,eAAe96F,KAAKyB,MAC/CA,KAAKs5F,iBAAmBt5F,KAAKs5F,iBAAiB/6F,KAAKyB,MACnDA,KAAKu5F,eAAiBv5F,KAAKu5F,eAAeh7F,KAAKyB,MAC/CA,KAAK4Q,MAAQ,CACXohB,OAAQ,GACRwnE,aAAa,EACbC,yBAAyB,EACzBC,aAAc,GACd1C,YAAY,EACZ2C,kBAAcx0F,EACdm4C,QAAS,GACT9M,UAAU,EACVrsB,YAAa,EACbyjE,SAAU,IAkBdr8C,oBACEvrC,KAAKoqC,SAAS,CACZoG,UAAU,IAEZxwC,KAAK45F,YAGP9oD,iCAAiCxiC,IAE5BtO,KAAKwF,MAAMymF,cAAclwC,SAAWztC,EAAU29E,cAAc30D,QAC5Dt3B,KAAKwF,MAAMktF,cAAc32C,SAAWztC,EAAUokF,cAAcp7D,SAE7Dt3B,KAAKwF,MAAM6sB,UAAU,CACnBhxB,MAAOrB,KAAK4Q,MAAMohB,SAGlBhyB,KAAKwF,MAAMktF,cAAc32C,SAAWztC,EAAUokF,cAAcp7D,QAC9Dt3B,KAAKs5F,mBAEHt5F,KAAKwF,MAAMktF,cAAc32C,SAAWztC,EAAUokF,cAAc9+E,OAC9D5T,KAAKq5F,eAAe/qF,EAAUokF,cAAc9+E,OAG5C5T,KAAKwF,MAAMq0F,iBAAiB99C,SAC5BztC,EAAUurF,iBAAiBjmF,OAE3B5T,KAAKoqC,SAAS,CACZx2B,MAAOtF,EAAUurF,iBAAiBjmF,QAKxCkmF,iBAAiB97F,GACf,OAAO,IAAKgC,KAAKwF,MAAM0Y,MAAO,CAAC,MAAOlgB,IASxC8tC,SAASrmB,GACPA,EAAMI,iBACN7lB,KAAKwF,MAAM6sB,UAAU,CACnBhxB,MAAOrB,KAAK4Q,MAAMohB,SAUtBmnE,eAAe1zE,GACbzlB,KAAKoqC,SAAS,CACZpY,OAAQvM,EAAM2H,OAAOpvB,QAWzB06C,OAAOjzB,GAAO,MAAEznB,IACVA,GACFgC,KAAKoqC,SAAS,CACZ4sD,YAAY,EACZ2C,aAAc35F,KAAK85F,iBAAiB97F,KAU1C44F,aACM52F,KAAK4Q,MAAM+oF,eACb35F,KAAKwF,MAAM2sB,WAAWnyB,KAAK4Q,MAAM+oF,aAAanyF,IAC9CxH,KAAKoqC,SAAS,CACZ4sD,YAAY,EACZ2C,kBAAcx0F,KAUpBwxF,iBACE32F,KAAKoqC,SAAS,CACZ4sD,YAAY,EACZ+C,cAAe,KA2BnBX,gBAAgBj5F,EAAMiH,GACpB,MAAM,OAAEqX,GAAWte,EACfse,GAAUA,EAAOzc,OAAS,GAAGhC,KAAKg6F,eAAe75F,GACrDH,KAAKwF,MAAM0sB,WAAW/xB,GACtBH,KAAKoqC,SAAS,CACZ6vD,2BAA4B7yF,IAShCkyF,mBACEt5F,KAAK4Q,MAAMqpF,2BAA2B,IACtCj6F,KAAKoqC,SAAS,CACZovD,aAAa,EACbE,kBAAcv0F,EACd80F,gCAA4B90F,IAE9B6/D,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASwC,gBAYtDu7E,eAAej8F,EAAMU,GACnBgC,KAAKoqC,SAAS,CACZkT,QAAS,IAAIt9C,KAAK4Q,MAAM0sC,QAAU48C,GAAD,OAC5BA,GAD4B,IAE/Bn3E,MACEm3E,EAAM1yF,KAAOlK,GAAS48F,EAAMn3E,MAAM3S,SAASpS,GAEvCk8F,EAAM1yF,KAAOlK,EACb48F,EAAMn3E,MACN,IAAKm3E,EAAMn3E,MAAO/kB,GAHlB,IAAIk8F,EAAMn3E,MAAO/kB,QA2C7Bq7F,eAAezlF,GACb5T,KAAKoqC,SAAS,CACZsvD,aAAc9lF,EAAMjS,SAASQ,KAAKyR,MAAM0O,UAiB5C9M,mBAAmBC,EAAW+rB,GACxBxhC,KAAKwF,MAAM0Y,QAAUzI,EAAUyI,OACjCle,KAAKoqC,SAAS,CACZkT,QAASt9C,KAAKwF,MAAM0Y,QAU1BxO,SAAS,MACP,GAAI1P,KAAK4Q,MAAMgD,MACb,OAAO,cAAC,IAAD,CAAOA,MAAO5T,KAAK4Q,MAAMgD,QAKlC,IAAIumF,EAAmBn6F,KAAK4Q,MAAM+oF,aAC9B35F,KAAK4Q,MAAM+oF,aAAalmE,SACxB,GACJ,OACE,eAAC,YAAD,CAAWvjB,UAAU,sBAArB,UACE,cAAC,IAAD,CAAQjH,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAAS0C,SACtD,sBAAKhO,UAAU,YAAf,UACE,cAAC,UAAD,CACEi9B,KAAMntC,KAAK4Q,MAAMomF,WACjBppB,OAAQ5tE,KAAKwF,MAAM++B,KAAK5jB,cACtBnF,IAASoB,wBAEX7P,QACE,qBAAKmD,UAAU,UAAf,SACE,oBAAIA,UAAU,UAAd,SACE,cAAC,mBAAD,CACE1I,GAAG,oDACHukC,eAAe,oDACfn3B,OAAQ,CACN6e,SAAU,4BAAI0mE,WAMxBr1B,SAAU9kE,KAAK22F,eACf9hB,UAAW70E,KAAK42F,WAChB9iE,KAAM,OAEP9zB,KAAK4Q,MAAM4oF,YACV,cAAC,KAAD,CACErsD,KAAMntC,KAAK4Q,MAAM4oF,YACjBtpF,UAAU,QACV60D,SAAU/kE,KAAKo5F,gBACf7B,YAAav3F,KAAK4Q,MAAM8oF,aACxB50B,SAAU,IAAM9kE,KAAKoqC,SAAS,CAAEovD,aAAa,IAC7CvwF,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASwB,kBAC9C++B,QAAS/7C,KAAKwF,MAAMktF,cAAc32C,QAClC3mC,OAAQ,CACNoN,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAO,mBACP6X,OAAQ,CACN,WACA,WACA,QACA,WACA,QACA,YAINzL,WAAY,CACVoe,SAAU,CACRxqB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,IAAS0B,0BAEX9c,KAAM,SACNwhC,YACE,iNAEJokC,SAAU,CACR/8D,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,IAAS4B,0BAEXhd,KAAM,SACNwhC,YAAa,qCAEfjiB,MAAO,CACL1W,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,IAASgC,uBAEXpd,KAAM,SACNwhC,YACE,kLACF5gB,OAAQ,SAEVf,SAAU,CACRhX,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,IAASkC,0BAEXtd,KAAM,WACNwhC,YACE,iDACF5gB,OAAQ,YAEV+B,MAAO,CACL9Z,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,IAASmC,uBAEXvd,KAAM,QACNmjD,QAASvjD,KAAKwF,MAAMud,MAAMxf,IAAK2O,GAAS,CAACA,EAAK1K,GAAI0K,EAAK1K,KACvD6nD,eAAe,EACfztB,YAAa,IAEfnjB,OAAQ,CACNxV,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,IAAS6B,uBAEXjd,KAAM,QACNmjD,QAASvjD,KAAKwF,MAAMiZ,OAAOlb,IAAKi6C,GAAU,CACxCA,EAAMh2C,GACNg2C,EAAMh2C,KAER6nD,eAAe,EACfztB,YAAa,KAGjBjmB,SAAU,CAAC,WAAY,WAAY,QAAS,eAG9C,QAEN,eAAC,UAAQ+e,MAAT,CAAe+Q,QAAM,EAArB,UACE,cAAC,UAAD,CAASv7B,UAAU,UAAnB,SACE,cAAC,mBAAD,CAAkB1I,GAAG,QAAQukC,eAAe,YAE9C,cAAC,UAAD,CAASG,WAAS,EAAlB,SACE,cAAC,mBAAD,CACE1kC,GAAG,iIACHukC,eAAe,iIACfn3B,OAAQ,CACNwlF,UACE,cAAC,KAAD,CACE98F,KAAM+8F,IACNvmE,KAAK,OACLmG,MAAM,UACNhxB,MAAO,mBAMjB,cAAC,UAAD,UACE,cAAC,OAAD,CAAM87D,SAAU/kE,KAAK8rC,SAArB,SACE,cAAC,OAAKouB,MAAN,UACE,cAAC,QAAD,CACE58D,KAAK,iBACLspC,OAAQ,CAAEyC,KAAM,UAChB1H,YAAa3hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,IAASgB,aAEXqvB,SAAU7rC,KAAKm5F,eACf3xF,GAAG,4BAKX,eAAC,OAAD,WACE,qBAAK0I,UAAU,QAAf,SACE,eAAC,QAAD,CAAOw2D,QAAM,EAAC+wB,SAAO,EAAC9pB,UAAQ,EAAC2sB,aAAW,EAA1C,UACE,cAAC,QAAM93B,OAAP,UACE,eAAC,QAAMpI,IAAP,WACE,cAAC,QAAMuM,WAAP,UACE,cAAC,mBAAD,CACEn/D,GAAG,YACHukC,eAAe,gBAGlB/rC,KAAKwF,MAAMud,MAAMxf,IAAK2O,GACrB,cAAC,QAAMy0D,WAAP,UACGz0D,EAAK1K,IADe0K,EAAK1K,KAI9B,cAAC,QAAMm/D,WAAP,UACE,cAAC,mBAAD,CAAkBn/D,GAAG,UAAUukC,eAAe,mBAIpD,cAAC,QAAM66B,KAAP,CAAY2zB,YAAU,QAAtB,SACGv6F,KAAK4Q,MAAM0sC,QACTpyC,MAC0B,GAAzBlL,KAAK4Q,MAAMuT,YACXnkB,KAAK4Q,MAAMg3E,UAAY5nF,KAAK4Q,MAAMuT,YAAc,IAEjD5gB,IAAKuf,GACJ,cAAC,KAAD,CAEE4uC,SAAU1xD,KAAK04C,OACf31B,MAAO/iB,KAAKwF,MAAMud,MAClBD,KAAMA,EACNiQ,WAAY/yB,KAAKu5F,eACjBiB,cAAex6F,KAAKwF,MAAMg1F,eALrB13E,EAAKtb,YAWtB,qBAAK0I,UAAU,sBAAf,SACE,cAAC,KAAD,CACExK,QAAS1F,KAAK4Q,MAAMuT,YACpBy5B,MAAOlY,KAAKu7C,MACV,UAAAjhF,KAAK4Q,MAAM0sC,eAAX,eAAoBt7C,QAAShC,KAAK4Q,MAAMg3E,UAE1CE,aAAc9nF,KAAK8nF,uBAK1B9nF,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,qCACE,cAAC,SAAD,CACE3qC,GAAG,eACH0I,UAAU,OACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASS,MACnD0jB,QAAS3/B,KAAKy6F,qBACd1+C,QAAS/7C,KAAKwF,MAAMktF,cAAc32C,QALpC,SAOE,cAAC,KAAD,CACEz+C,KAAMulE,IACN3yD,UAAU,UACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASS,UAGlD,cAAC,OAAD,CAAMk1B,GAAG,gBAAgBjhC,UAAU,SAAnC,SACE,cAAC,KAAD,CACE5S,KAAMk9B,IACNtqB,UAAU,UACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,IAASc,QAEXwX,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASc,YAGlD,cAAC,SAAD,CACE9U,GAAG,cACH2K,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,IAASsB,oBAEX6iB,QAAS,KACP3/B,KAAKoqC,SAAS,CAAEovD,aAAa,KAE/Bz9C,QAAS/7C,KAAKwF,MAAMktF,cAAc32C,QARpC,SAUE,cAAC,KAAD,CACEz+C,KAAMo9F,IACN5mE,KAAK,OACLmG,MAAM,UACNhxB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,IAASsB,mCAclB0vB,sBACbC,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACEud,MAAOnS,EAAMmS,MAAMA,MACnB7E,MAAOtN,EAAMsN,MAAMA,MACnBO,OAAQ7N,EAAM6N,OAAOA,OACrBmjB,YAAahxB,EAAMgxB,YACnBruB,SAAU/N,EAAM8N,SAASC,SACzB04E,cAAer7E,EAAMsN,MAAMw6B,OAC3Bg6C,cAAe9hF,EAAMsN,MAAM7f,OAC3Bw7F,iBAAkBjpF,EAAMmS,MACxBy3E,cAAe5pF,EAAMmvC,SAASpqB,oBAE/BxiB,GACCwnF,6BACE,CACElpE,cACAY,cACArB,eACAmB,eACAD,eACAa,gBACA7B,kBAEF/d,IAzBOq5B,CA4BbkH,I,20BCvmBF,MAAME,UAA2BzlC,YAiC/BzO,YAAY8F,GACVmkC,MAAMnkC,GADW,qBAyBP85E,gBACJt/E,KAAKwF,MAAMisB,kBACXzxB,KAAKwF,MAAMwrB,aACjBhxB,KAAKoqC,SAAS,CACZwwD,aAAc56F,KAAKwF,MAAMiZ,WA7BV,iCAiLMzhB,IACvBA,EAAE8oB,kBACF9lB,KAAK4Q,MAAMgqF,aAAa96F,QAASiU,IAC/B/T,KAAKwF,MAAM0rB,YAAYnd,EAAKvM,GAAIuM,KAElC/T,KAAKwF,MAAMmwB,kBAAkB31B,KAAK4Q,MAAM+kB,mBACxCqvC,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASqC,mBA3LnC,wBAgQJ,CAAC4H,GAASznB,YACvBgC,KAAKoqC,SAAS,CACZjmB,YAAanmB,MAhQfgC,KAAKm5F,eAAiBn5F,KAAKm5F,eAAe56F,KAAKyB,MAC/CA,KAAK66F,eAAiB76F,KAAK66F,eAAet8F,KAAKyB,MAC/CA,KAAK+wB,YAAc/wB,KAAK+wB,YAAYxyB,KAAKyB,MACzCA,KAAK42F,WAAa52F,KAAK42F,WAAWr4F,KAAKyB,MACvCA,KAAK22F,eAAiB32F,KAAK22F,eAAep4F,KAAKyB,MAC/CA,KAAK86F,iBAAmB96F,KAAK86F,iBAAiBv8F,KAAKyB,MACnDA,KAAK+6F,gBAAkB/6F,KAAK+6F,gBAAgBx8F,KAAKyB,MACjDA,KAAKg7F,kBAAoBh7F,KAAKg7F,kBAAkBz8F,KAAKyB,MACrDA,KAAKi7F,gBAAkBj7F,KAAKi7F,gBAAgB18F,KAAKyB,MACjDA,KAAK4Q,MAAQ,CACXohB,OAAQ,GACRkpE,cAAe,GACflE,YAAY,EACZmE,mBAAeh2F,EACfi2F,cAAc,EACdR,aAAc,GACdpqD,UAAU,EACV7a,kBAAmBnwB,EAAMg1F,eAAiB,GAC1Cr2E,YAAa,EACbyjE,SAAU,IAgBdr8C,oBACEvrC,KAAKoqC,SAAS,CACZoG,UAAU,IAEZxwC,KAAK45F,YAGP9oD,iCAAiCxiC,IAE5BtO,KAAKwF,MAAM61F,mBAAmBt/C,SAC7BztC,EAAU+sF,mBAAmB/jE,QAC9Bt3B,KAAKwF,MAAM81F,mBAAmBv/C,SAC7BztC,EAAUgtF,mBAAmBhkE,SAE/Bt3B,KAAKwF,MAAMwrB,WAAWhxB,KAAK4Q,MAAMohB,QAGjChyB,KAAKwF,MAAM81F,mBAAmBv/C,SAC9BztC,EAAUgtF,mBAAmBhkE,QAE7Bt3B,KAAKg7F,oBAGLh7F,KAAKwF,MAAM81F,mBAAmBv/C,SAC9BztC,EAAUgtF,mBAAmB1nF,OAE7B5T,KAAK+6F,gBAAgBzsF,EAAUgtF,mBAAmB1nF,OAGlD5T,KAAKwF,MAAMq0F,iBAAiB99C,SAC5BztC,EAAUurF,iBAAiBjmF,OAE3B5T,KAAKoqC,SAAS,CACZx2B,MAAOtF,EAAUurF,iBAAiBjmF,QAKxC2nF,kBAAkBv9F,GAChB,OAAO,IAAKgC,KAAKwF,MAAMiZ,OAAQ,CAAC,MAAOzgB,IAUzC68F,eAAep1E,GACbA,EAAMI,iBACN7lB,KAAKwF,MAAMwrB,WAAWhxB,KAAK4Q,MAAMohB,QASnCmnE,eAAe1zE,GACbzlB,KAAKoqC,SAAS,CACZpY,OAAQvM,EAAM2H,OAAOpvB,QAYzB+yB,YAAYtL,GAAO,MAAEznB,IACfA,GACFgC,KAAKoqC,SAAS,CACZ4sD,YAAY,EACZmE,cAAen7F,KAAKu7F,kBAAkBv9F,KAU5C44F,aACM52F,KAAK4Q,MAAMuqF,gBACbn7F,KAAKwF,MAAMurB,YAAY/wB,KAAK4Q,MAAMuqF,cAAc3zF,IAChDxH,KAAKoqC,SAAS,CACZ4sD,YAAY,EACZmE,mBAAeh2F,KAUrBwxF,iBACE32F,KAAKoqC,SAAS,CACZ4sD,YAAY,EACZ+C,cAAe,KAUnBkB,gBAAgB39F,EAAMU,GACpBgC,KAAKoqC,SAAU5I,IAAD,CACZo5D,aAAc,IAAI56F,KAAK4Q,MAAMgqF,aAAeV,GAAD,OACtCA,GADsC,IAEzCn3E,MACEm3E,EAAM1yF,KAAOlK,GAAS48F,EAAMn3E,MAAM3S,SAASpS,GAEvCk8F,EAAM1yF,KAAOlK,EACb48F,EAAMn3E,MACN,IAAKm3E,EAAMn3E,MAAO/kB,GAHlB,IAAIk8F,EAAMn3E,MAAO/kB,MAKzB23B,kBACW,uBAATr4B,GACCkkC,EAAU7L,kBAAkBvlB,SAASpS,GAEzB,uBAATV,EACAkkC,EAAU7L,kBACV,IAAK6L,EAAU7L,kBAAmB33B,GAHlC,IAAIwjC,EAAU7L,kBAAmB33B,MAgC3C88F,iBAAiB36F,EAAMiH,GACrBpH,KAAKwF,MAAMsrB,YAAY3wB,GACvBH,KAAKoqC,SAAS,CACZoxD,4BAA6Bp0F,IAWjC2zF,gBAAgBnnF,GACd5T,KAAKoqC,SAAS,CACZ8wD,cAAetnF,EAAMjS,SAASQ,KAAKmgB,UAIvC9M,mBAAmBC,EAAW+rB,GACxBxhC,KAAKwF,MAAMiZ,SAAWhJ,EAAUgJ,QAClCze,KAAKoqC,SAAS,CACZwwD,aAAc56F,KAAKwF,MAAMiZ,SAW/Bu8E,oBACEh7F,KAAK4Q,MAAM4qF,4BAA4B,IACvCx7F,KAAKoqC,SAAS,CACZgxD,cAAc,EACdF,mBAAe/1F,EACfq2F,iCAA6Br2F,IAE/B6/D,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASyC,iBAuBtDvO,SAAS,MACP,GAAI1P,KAAK4Q,MAAMgD,MACb,OAAO,cAAC,IAAD,CAAOA,MAAO5T,KAAK4Q,MAAMgD,QAKlC,IAAI6nF,EAAoBz7F,KAAK4Q,MAAMuqF,cAC/Bn7F,KAAK4Q,MAAMuqF,cAAc3zF,GACzB,GAEJ,OACE,eAAC,YAAD,CAAW0I,UAAU,sBAArB,UACE,cAAC,IAAD,CAAQjH,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASiD,UACtD,sBAAKvO,UAAU,YAAf,UACE,cAAC,UAAD,CACEi9B,KAAMntC,KAAK4Q,MAAMomF,WACjBppB,OAAQ5tE,KAAKwF,MAAM++B,KAAK5jB,cACtBnF,IAASqB,yBAEX9P,QACE,qBAAKmD,UAAU,UAAf,SACE,oBAAIA,UAAU,UAAd,SACE,cAAC,mBAAD,CACE1I,GAAG,sDACHukC,eAAe,sDACfn3B,OAAQ,CACN8mF,UAAW,4BAAID,WAMzB32B,SAAU9kE,KAAK22F,eACf9hB,UAAW70E,KAAK42F,WAChB9iE,KAAM,OAEP9zB,KAAK4Q,MAAMwqF,aACV,cAAC,KAAD,CACEjuD,KAAMntC,KAAK4Q,MAAMwqF,aACjBlrF,UAAU,QACV60D,SAAU/kE,KAAK86F,iBACfvD,YAAav3F,KAAK4Q,MAAMsqF,cACxBp2B,SAAU,IAAM9kE,KAAKoqC,SAAS,CAAEgxD,cAAc,IAC9CnyF,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASyB,oBAC9C8+B,QAAS/7C,KAAKwF,MAAM81F,mBAAmBv/C,QACvC3mC,OAAQ,CACNoN,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAO,oBACP6X,OAAQ,CACN,QACA,cACA,YACA,QACA,WAINzL,WAAY,CACVpM,MAAO,CACLA,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,IAAS2B,yBAEX/c,KAAM,SACNwhC,YAAa,IAEfA,YAAa,CACX34B,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,IAAS+B,+BAEXnd,KAAM,SACNwhC,YAAa,IAEf85D,UAAW,CACTzyF,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,IAAS8B,6BAEXld,KAAM,SACNwhC,YACE,yEAEJjiB,MAAO,CACL1W,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,IAASiC,yBAEXrd,KAAM,SACNwhC,YAAa,GACb5gB,OAAQ,SAEV+B,MAAO,CACL9Z,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,IAASsC,yBAEX1d,KAAM,QACNmjD,QAASvjD,KAAKwF,MAAMud,MAAMxf,IAAK2O,GAAS,CAACA,EAAK1K,GAAI0K,EAAK1K,KACvD6nD,eAAe,EACfztB,YAAa,KAGjBjmB,SAAU,CAAC,gBAGb,QAEN,eAAC,UAAQ+e,MAAT,CAAe+Q,QAAM,EAArB,UACE,cAAC,UAAD,CAASv7B,UAAU,UAAnB,SACE,cAAC,mBAAD,CAAkB1I,GAAG,SAASukC,eAAe,aAE/C,cAAC,UAAD,CAASG,WAAS,EAAlB,SACE,cAAC,mBAAD,CACE1kC,GAAG,wTACHukC,eAAe,wTACfn3B,OAAQ,CACNwlF,UACE,cAAC,KAAD,CACE98F,KAAM+8F,IACNvmE,KAAK,OACLmG,MAAM,UACNhxB,MAAO,mBAMjB,cAAC,UAAD,UACE,cAAC,OAAD,CAAM87D,SAAU/kE,KAAK66F,eAArB,SACE,cAAC,OAAK3gC,MAAN,UACE,cAAC,QAAD,CACE58D,KAAK,iBACLspC,OAAQ,CAAEyC,KAAM,UAChB1H,YAAa3hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,IAASiB,cAEXovB,SAAU7rC,KAAKm5F,eACf3xF,GAAG,6BAKX,eAAC,OAAD,WACE,qBAAK0I,UAAU,QAAf,SACE,eAAC,QAAD,CAAOw2D,QAAM,EAAC+wB,SAAO,EAAC9pB,UAAQ,EAAC2sB,aAAW,EAA1C,UACE,cAAC,QAAM93B,OAAP,UACE,eAAC,QAAMpI,IAAP,WACE,cAAC,QAAMuM,WAAP,UACE,cAAC,mBAAD,CACEn/D,GAAG,YACHukC,eAAe,gBAGlB/rC,KAAKwF,MAAMud,MAAMxf,IAAK2O,GACrB,cAAC,QAAMy0D,WAAP,UACGz0D,EAAK1K,IADe0K,EAAK1K,KAI9B,cAAC,QAAMm/D,WAAP,UACE,cAAC,mBAAD,CAAkBn/D,GAAG,UAAUukC,eAAe,mBAIpD,cAAC,QAAM66B,KAAP,CAAY+0B,aAAW,SAAvB,SACG37F,KAAK4Q,MAAMgqF,aACT1vF,MAC0B,GAAzBlL,KAAK4Q,MAAMuT,YACXnkB,KAAK4Q,MAAMg3E,UAAY5nF,KAAK4Q,MAAMuT,YAAc,IAEjD5gB,IAAKi6C,GACJ,cAAC,KAAD,CAEEkU,SAAU1xD,KAAK+wB,YACfhO,MAAO/iB,KAAKwF,MAAMud,MAClBy6B,MAAOA,EACP3/B,aAAc7d,KAAKi7F,gBACnBT,cAAex6F,KAAK4Q,MAAM+kB,mBALrB6nB,EAAMh2C,YAWvB,qBAAK0I,UAAU,sBAAf,SACE,cAAC,KAAD,CACExK,QAAS1F,KAAK4Q,MAAMuT,YACpBy5B,MAAOlY,KAAKu7C,MACV,UAAAjhF,KAAK4Q,MAAMgqF,oBAAX,eAAyB54F,QAAShC,KAAK4Q,MAAMg3E,UAE/CE,aAAc9nF,KAAK8nF,uBAK1B9nF,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,qCACE,cAAC,SAAD,CACE3qC,GAAG,eACH0I,UAAU,OACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASS,MACnD0jB,QAAS3/B,KAAK47F,sBACd7/C,QAAS/7C,KAAKwF,MAAM81F,mBAAmBv/C,QALzC,SAOE,cAAC,KAAD,CACEz+C,KAAMulE,IACN3yD,UAAU,UACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASS,UAGlD,cAAC,OAAD,CAAMk1B,GAAG,gBAAgBjhC,UAAU,SAAnC,SACE,cAAC,KAAD,CACE5S,KAAMk9B,IACNtqB,UAAU,UACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,IAASc,QAEXwX,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASc,YAGlD,cAAC,SAAD,CACE9U,GAAG,cACH2K,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,IAASuB,sBAEX4iB,QAAS,KACP3/B,KAAKoqC,SAAS,CAAEgxD,cAAc,KAEhCr/C,QAAS/7C,KAAKwF,MAAM81F,mBAAmBv/C,QARzC,SAUE,cAAC,KAAD,CACEz+C,KAAMo9F,IACN5mE,KAAK,OACLmG,MAAM,UACNhxB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,IAASuB,qCAclByvB,sBACbC,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACEud,MAAOnS,EAAMmS,MAAMA,MACnBtE,OAAQ7N,EAAM6N,OAAOA,OACrBmjB,YAAahxB,EAAMgxB,YACnBruB,SAAU/N,EAAM8N,SAASC,SACzB8nF,mBAAoBzqF,EAAM6N,OAAOi6B,OACjC4iD,mBAAoB1qF,EAAM6N,OAAOpgB,OACjCw7F,iBAAkBjpF,EAAMmS,MACxBy3E,cAAe5pF,EAAMmvC,SAASpqB,oBAE/BxiB,GACCwnF,6BACE,CACElpE,cACAT,eACAD,gBACAD,gBACAI,iBACAyE,uBAEFxiB,IAvBOq5B,CA0BboH,I,6BCtnBF,8GAyBA,MAAMp4B,EAAWC,yBAAe,CAC9BkB,KAAM,CAAF,iCAIJ82B,iBAAkB,CAAF,6DAWlB,MAAMA,UAAyBtlC,YAkC7BzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK0xD,SAAW1xD,KAAK0xD,SAASnzD,KAAKyB,MACnCA,KAAKyxD,OAASzxD,KAAKyxD,OAAOlzD,KAAKyB,MAC/BA,KAAKwrF,SAAWxrF,KAAKwrF,SAASjtF,KAAKyB,MACnCA,KAAKyrF,aAAezrF,KAAKyrF,aAAaltF,KAAKyB,MAC3CA,KAAK4Q,MAAQ,CACX+6E,UAAU,EACVC,OAAQ,KACRC,SAAU,KACVr7C,UAAU,GASdjF,oBACEvrC,KAAKwF,MAAMukC,cAAc,GAAI,CAC3B8xD,YAAa,kBACbxsE,aAAa,IAEfrvB,KAAKoqC,SAAS,CAAEoG,UAAU,IAS5BM,iCAAiCxiC,GAC3BtO,KAAKwF,MAAMymF,cAAclwC,SAAWztC,EAAU29E,cAAc30D,QAC9Dt3B,KAAKwF,MAAMukC,cAAc,GAAI,CAC3B8xD,YAAa,kBACbxsE,aAAa,IAYnBqiC,SAASjsC,GAAO,MAAEznB,IAChBgC,KAAKwF,MAAMyoB,cAAcjwB,GAU3ByzD,OAAOhsC,GAAO,MAAEznB,IACdgC,KAAKoqC,SAAS,CACZuhD,UAAU,EACVC,OAAQ5tF,EAAMwJ,GACdqkF,SAAU7tF,EAAMoE,OASpBopF,WACExrF,KAAKoqC,SAAS,CACZuhD,UAAU,EACVC,OAAQ,KACRC,SAAU,OAEZ7rF,KAAKwF,MAAMukC,cAAc,GAAI,CAC3B8xD,YAAa,kBACbxsE,aAAa,IASjBo8D,eACEzrF,KAAKoqC,SAAS,CACZuhD,UAAU,EACVC,OAAQ,KACRC,SAAU,OASd/mB,WACE9kE,KAAKwF,MAAMqsC,QAAQhrC,KAAK22B,YAAax9B,KAAKwF,MAAM+N,WAQlD7D,SACE,OACE,sBAAKlI,GAAG,yBAAR,UACE,cAAC,IAAD,CACE2lC,KAAMntC,KAAK4Q,MAAM+6E,SACjB7mB,SAAU9kE,KAAKyrF,aACf6B,KAAMttF,KAAKwrF,SACXhkF,GAAIxH,KAAK4Q,MAAMg7E,OACfxpF,KAAMpC,KAAK4Q,MAAMi7E,WAEnB,cAAC,IAAD,CACE5iF,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASi4B,oBAEhD,cAAC,YAAD,UACE,0BAASjsC,GAAG,UAAZ,UACE,iCACE,oBAAI0I,UAAU,uBAAd,SACE,cAAC,mBAAD,CACE1I,GAAG,oBACHukC,eAAe,0BAIrB,yBAASvkC,GAAG,eAAZ,SACE,eAAC,QAAD,CAAOgwE,SAAO,EAACggB,YAAU,EAACC,SAAO,EAAjC,UACE,cAAC,QAAMj1B,OAAP,UACE,eAAC,QAAMpI,IAAP,WACE,cAAC,QAAMuM,WAAP,UACE,cAAC,mBAAD,CACEn/D,GAAG,YACHukC,eAAe,gBAGnB,cAAC,QAAM46B,WAAP,UACE,cAAC,mBAAD,CAAkBn/D,GAAG,OAAOukC,eAAe,WAE7C,cAAC,QAAM46B,WAAP,UACE,cAAC,mBAAD,CAAkBn/D,GAAG,UAAUukC,eAAe,cAEhD,cAAC,QAAM46B,WAAP,UACE,cAAC,mBAAD,CAAkBn/D,GAAG,SAASukC,eAAe,kBAInD,cAAC,QAAM66B,KAAP,UACG5mE,KAAKwF,MAAMsO,MAAMvQ,IAAKwQ,GACrB,eAAC,QAAMqmD,IAAP,WACE,cAAC,QAAMyM,KAAP,UAAa9yD,EAAK44E,cAClB,cAAC,QAAM9lB,KAAP,UACE,cAAC,KAAD,CAAuB13B,KAAMp7B,EAAKg5E,kBAEpC,cAAC,QAAMlmB,KAAP,UAAa9yD,EAAK3R,KAAKjC,OACvB,eAAC,QAAM0mE,KAAP,WACG9yD,EAAKo5E,aACJ,cAAC,SAAD,CACExtD,QAAS3/B,KAAKyxD,OACdzzD,MAAO,CAAEwJ,GAAIuM,EAAK,OAAQ3R,KAAM2R,EAAK3R,KAAKjC,MAC1C46B,SAAO,EAHT,SAKE,cAAC,mBAAD,CAAkBvzB,GAAG,OAAOukC,eAAe,WAG9Ch4B,EAAKq5E,cACJ,cAAC,SAAD,CACEztD,QAAS3/B,KAAK0xD,SACd1zD,MAAO+V,EAAK,OACZkmB,MAAM,MAHR,SAKE,cAAC,mBAAD,CACEzyB,GAAG,SACHukC,eAAe,kBAxBTh4B,EAAK,qBAoChC/T,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,cAAC,OAAD,CAAMjiC,UAAU,OAAOihC,GAAG,IAAIxR,QAAS,IAAM3/B,KAAK8kE,WAAlD,SACE,cAAC,KAAD,CACExnE,KAAMsuC,IACN17B,UAAU,mBACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmB,kBAYnD6vB,sBACbC,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACEsO,MAAOlD,EAAMohB,OAAOle,MACpBm4E,cAAer7E,EAAMwuC,SAAS1G,OAC9BnlC,SAAU/N,EAAM8N,SAASC,WAE3B,CAAE0a,kBAAe8b,qBARNyC,CAUbiH,I,uFChSF,MAAMj4B,EAAWC,yBAAe,CAC9BqgF,UAAW,CAAF,yDAyDIC,IAnDS,EACtBC,cACAC,aACAC,cACAC,gBACAC,wBACAC,iBACAC,mBAEA,MAAM/3D,EAAOkE,qBACP,WAAE8zD,GAAe17F,IAAOD,SAE9B,OACE,qCACE,qBACEkN,MAAO,CACL8+C,SAAU,OACVD,WAAY,YACZ5wB,YAAa,QAJjB,UAOGygE,KAAgB,wCAAWA,OAC5B,wCAAWL,KACX,gDAAmBC,KACnB,sCAASJ,KACT,uCAAUM,KACV,yCAAYD,KACZ,sCAASH,QAEX,yCACC,IAAQK,GACP,4BAAIh4D,EAAK5jB,cAAcnF,EAASsgF,aAEhC,oBAAIhuF,MAAO,CAAE8+C,SAAU,OAAQD,WAAY,aAA3C,SACG4vC,EAAWh5F,IAAKk5F,GACf,6BAAM,GAAEA,EAAMn/F,QAAQm/F,EAAMttE,SAAW,UAI7B,OAAf8sE,GACC,4BACE,cAAC,mBAAD,CACEz0F,GAAG,+BACHukC,eAAe,gW,2JC7C3B,MAAMvwB,EAAWC,yBAAe,CAC9Bi9B,OAAQ,CAAF,qCAINgkD,GAAI,CAAF,6BAIFpgF,OAAQ,CAAF,uCAWR,MAAM63B,UAAehmC,YAoCnBzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK8kE,SAAW9kE,KAAK8kE,SAASvmE,KAAKyB,MACnCA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MACnCA,KAAK4Q,MAAQ,CAAE4/B,UAAU,GAS3BM,iCAAiCxiC,GAC3BtO,KAAKwF,MAAMymF,cAAclwC,SAAWztC,EAAU29E,cAAc30D,QAC9Dt3B,KAAKwF,MAAMqsC,QAAQhrC,KACjB7G,KAAKwF,MAAM2kF,WACTnqF,KAAKwF,MAAM+N,SAAS9O,QAAQ,UAAW,IAAIA,QAAQ,WAAY,KAUvE8mC,oBACEvrC,KAAKwF,MAAM0pB,WAAWlvB,KAAKwF,MAAM+N,SAASnJ,MAAM,WAAW,IAC3DpK,KAAKoqC,SAAS,CAAEoG,UAAU,IAQ5Bu0B,WACE/kE,KAAKwF,MAAM6oB,cAAcruB,KAAKwF,MAAM+N,SAAS9O,QAAQ,UAAW,KAQlEqgE,WACE9kE,KAAKwF,MAAMqsC,QAAQhrC,KAAK7G,KAAKwF,MAAM+N,SAAS9O,QAAQ,UAAW,KAQjEiL,SACE,OAAI1P,KAAKwF,MAAMuH,QAEX,sBAAKvF,GAAG,cAAR,UACE,cAAC,IAAD,CAAQyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASk9B,UACtD,cAAC,YAAD,UACE,eAAC,UAAQhe,MAAT,CAAe+Q,QAAM,EAArB,UACE,cAAC,UAAD,CAASv7B,UAAU,UAAnB,SACE,cAAC,mBAAD,CACE1I,GAAG,0CACHukC,eAAe,8CAGnB,cAAC,UAAD,CAAS4hC,UAAQ,EAAjB,SACE,cAAC,OAAD,CAAMtnB,UAAQ,EAAd,SACE,cAAC,OAAKC,KAAN,UAAYtmD,KAAKwF,MAAMuH,QAAQ9D,YAGnC,eAAC,UAAD,CAASiH,UAAU,UAAUo6E,UAAQ,EAArC,UACE,cAAC,SAAD,CACElhD,OAAK,EACL+qD,UAAQ,EACRp5D,SAAO,EACPqyB,QAAQ,QACR/jB,KAAK,cACLl3B,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASkhF,IACnDzzF,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASkhF,IAC9C5oE,KAAK,MACL6L,QAAS3/B,KAAK+kE,WAEhB,cAAC,SAAD,CACE37B,OAAK,EACL+qD,UAAQ,EACRjoD,WAAS,EACT7C,KAAK,SACLl3B,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,QACnDrT,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,QAC9C8wC,QAAQ,QACRt5B,KAAK,MACL6L,QAAS3/B,KAAK8kE,mBAKrB9kE,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MAAO,gCAOZ,yB,IAnJLgC,E,eAyBkB,CACpBpnC,QAAS,KACTo9E,UAAW,OA4HA39C,sBACb72B,aACA82B,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACEuH,QAAS6D,EAAM7D,QAAQ5M,KACvB8rF,cAAer7E,EAAM7D,QAAQ2rC,OAC7BnlC,SAAU/N,EAAM8N,SAASC,SACzB42E,UAAWv6D,IAAGzN,MAAM3c,EAAM8N,SAAS0e,QAAQw4D,aAE7C,CAAEn8D,kBAAea,iBAVNsd,CAYb2H,I,+NCzKF,MAAM34B,EAAWC,yBAAe,CAC9B6jC,KAAM,CAAF,iCAIJ3iC,KAAM,CAAF,iCAIJvS,MAAO,CAAF,mCAILuyF,QAAS,CAAF,yCAWT,MAAMvoD,UAAajmC,YA8CjBzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK48F,YAAc58F,KAAK48F,YAAYr+F,KAAKyB,MACzCA,KAAK68F,YAAc78F,KAAK68F,YAAYt+F,KAAKyB,MACzCA,KAAK88F,aAAe98F,KAAK88F,aAAav+F,KAAKyB,MAC3CA,KAAK4Q,MAAQ,CAAE4/B,UAAU,GAQ3BjF,oBACEvrC,KAAKwF,MAAMksB,UAAU1xB,KAAKwF,MAAMpF,MAChCJ,KAAKwF,MAAM2rB,WAAWiM,YAAWp9B,KAAKwF,MAAM+N,WAC5CvT,KAAKwF,MAAMirB,QACT2M,YAAWp9B,KAAKwF,MAAM+N,UACtBvT,KAAKwF,MAAMkrB,IACX1wB,KAAKwF,MAAMmrB,KAEb3wB,KAAKoqC,SAAS,CAAEoG,UAAU,IAS5BM,iCAAiCxiC,GAE7BtO,KAAKwF,MAAM+N,WAAajF,EAAUiF,UAClCvT,KAAKwF,MAAMkrB,MAAQpiB,EAAUoiB,KAC7B1wB,KAAKwF,MAAMmrB,MAAQriB,EAAUqiB,KAE7B3wB,KAAKwF,MAAMirB,QACT2M,YAAW9uB,EAAUiF,UACrBjF,EAAUoiB,IACVpiB,EAAUqiB,KAYhBmsE,aAAar3E,GAAO,MAAEznB,IACpBgC,KAAKwF,MAAMqsC,QAAQhrC,KAChB,GAAE7G,KAAKwF,MAAM+N,gBAAgBvT,KAAKwF,MAAMkrB,WAAW1wB,KAAKwF,MAAMmrB,YAAY3yB,KAW/E4+F,YAAYn3E,GAAO,MAAEznB,IACnBgC,KAAKwF,MAAMqsC,QAAQhrC,KAChB,GAAE7G,KAAKwF,MAAM+N,gBAAgBvV,SAAagC,KAAKwF,MAAMmrB,YAAY3wB,KAAKwF,MAAMq4B,QAWjFg/D,YAAYp3E,GAAO,MAAEznB,IACnBgC,KAAKwF,MAAMqsC,QAAQhrC,KAChB,GAAE7G,KAAKwF,MAAM+N,gBAAgBvT,KAAKwF,MAAMkrB,WAAW1yB,UAAcgC,KAAKwF,MAAMq4B,QASjFnuB,SACE,MAAMqtF,EAAW,IACf,IAAO/8F,KAAKwF,MAAMw3F,eAAiB9C,GAAU,YAAaA,GAC1D,CAACA,EAAOruF,KAAR,CACEzJ,KACE,qCACa,IAAVyJ,EAAc,UAAYquF,EAAM/qE,QADnC,KAEE,cAAC,KAAD,CAAeggB,KAAM+qD,EAAMx2C,KAAMtU,MAAI,EAACl/B,UAAU,SAFlD,MAGGgqF,EAAM+C,MAAMj3B,SAHf,OAMFhoE,MAAQ,GAAEk8F,EAAM/qE,QAChB7wB,IAAM,GAAE47F,EAAM/qE,WAIlB,OACE,eAAC,YAAD,CAAW3nB,GAAG,YAAd,UACE,cAAC,IAAD,CAAQyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS8jC,QACtD,6BACE,cAAC,mBAAD,CACE93C,GAAG,yDACHukC,eAAe,yDACfn3B,OAAQ,CACN8b,IAAK1wB,KAAKwF,MAAMkrB,IAChBC,IAAK3wB,KAAKwF,MAAMmrB,IAChB1nB,MAAOjJ,KAAKwF,MAAMyD,WAIxB,eAAC,OAAD,WACE,cAAC,OAAKwtD,OAAN,CAAa56B,MAAO,EAApB,SACE,mBAAG3rB,UAAU,cAAb,SACE,cAAC,mBAAD,CACE1I,GAAG,sDACHukC,eAAe,4DAIrB,cAAC,OAAK0qB,OAAN,CAAa56B,MAAO,EAAGixB,UAAU,QAAjC,SACE,cAAC,SAAOpyB,MAAR,UACG,IACC,CACE,CACElzB,GAAI,QACJqyB,MAAO75B,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASpR,QAEhD,CACE5C,GAAI,UACJqyB,MAAO75B,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmhF,WAGjD9+D,GACC,cAAC,SAAD,CAEE7/B,MAAO6/B,EAAKr2B,GACZ0mC,OAAQluC,KAAKwF,MAAMq4B,OAASA,EAAKr2B,GACjCm4B,QAAS3/B,KAAK88F,aAJhB,SAMGj/D,EAAKhE,OALDgE,EAAKr2B,YAYrBxH,KAAKwF,MAAMw3F,eAAeh7F,OAAS,GAClC,cAAC,QAAD,CAAOonC,MAAM,OAAb,SACE,cAAC,QAAMo5B,OAAP,UACE,eAAC,QAAMpI,IAAP,WACE,eAAC,QAAMuM,WAAP,CAAkB9qC,MAAO,EAAzB,UACE,cAAC,mBAAD,CAAkBr0B,GAAG,OAAOukC,eAAe,SAC3C,cAAC,WAAD,CACEF,SAAU7rC,KAAK48F,YACf5+F,MAAOgC,KAAKwF,MAAMkrB,IAClBo/C,WAAS,EACTjC,OAAK,EACL9nD,QAASg3E,OAGb,eAAC,QAAMp2B,WAAP,CAAkB9qC,MAAO,EAAzB,UACE,cAAC,mBAAD,CAAkBr0B,GAAG,UAAUukC,eAAe,YAC9C,cAAC,WAAD,CACEF,SAAU7rC,KAAK68F,YACf7+F,MAAOgC,KAAKwF,MAAMmrB,IAClBm/C,WAAS,EACTjC,OAAK,EACL9nD,QAASg3E,cAOpB/8F,KAAKwF,MAAM4P,QACVpV,KAAKwF,MAAMrF,KAAK6B,OAAS,GACzB,IAAIhC,KAAKwF,MAAM4P,OAAOoN,UAAYy4B,GAChC,IACEA,EAASn6B,OACRxL,IACE,IACCtV,KAAKwF,MAAMrF,KAAK,GAAGmV,GACnBtV,KAAKwF,MAAMrF,KAAK,GAAGmV,KAErBA,IAAU0sB,YAAmBhiC,KAAKwF,MAAMrF,KAAK,KAC7CmV,IAAU2sB,YAAyBjiC,KAAKwF,MAAMrF,KAAK,KACjD,cAAC,IAAD,CAEEuwB,IAAK1wB,KAAKwF,MAAMrF,KAAK,GAAGmV,GACxBqb,IAAK3wB,KAAKwF,MAAMrF,KAAK,GAAGmV,GACxBF,OAAQpV,KAAKwF,MAAM4P,OAAOC,WAAWC,GACrCuoB,KAAM79B,KAAKwF,MAAMq4B,MAJZvoB,KAShBtV,KAAKwF,MAAM4P,QACVpV,KAAKwF,MAAMrF,KAAK6B,OAAS,GACzBkgC,YAAcliC,KAAKwF,MAAMrF,KAAK,OAC5B,IACAH,KAAKwF,MAAMrF,KAAK,GAAG6hC,YAAmBhiC,KAAKwF,MAAMrF,KAAK,KACtDH,KAAKwF,MAAMrF,KAAK,GAAG6hC,YAAmBhiC,KAAKwF,MAAMrF,KAAK,QAErD,IACCH,KAAKwF,MAAMrF,KAAK,GAAG8hC,YAAyBjiC,KAAKwF,MAAMrF,KAAK,KAC5DH,KAAKwF,MAAMrF,KAAK,GAAG8hC,YAAyBjiC,KAAKwF,MAAMrF,KAAK,QAE9D,cAAC,IAAD,CACEuwB,IAAK1wB,KAAKwF,MAAMrF,KAAK,GAAG6hC,YAAmBhiC,KAAKwF,MAAMrF,KAAK,KAC3DwwB,IAAK3wB,KAAKwF,MAAMrF,KAAK,GAAG6hC,YAAmBhiC,KAAKwF,MAAMrF,KAAK,KAC3D+8F,WAAYl9F,KAAKwF,MAAMrF,KAAK,GAC5Bg9F,WAAYn9F,KAAKwF,MAAMrF,KAAK,GAC5BiV,OACEpV,KAAKwF,MAAM4P,OAAOC,WAChB2sB,YAAmBhiC,KAAKwF,MAAMrF,KAAK,KAGvC09B,KAAM79B,KAAKwF,MAAMq4B,OAGtB79B,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,cAAC,OAAD,CACEhB,GAAO/T,YAAWp9B,KAAKwF,MAAM+N,UAAxB,WACLrD,UAAU,OAFZ,SAIE,cAAC,KAAD,CACE5S,KAAMsuC,IACN17B,UAAU,mBACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmB,kB,IAhS5Dy3B,E,eAoCkB,CACpBh/B,OAAQ,OAuQGo3B,sBACb72B,aACA82B,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACErF,KAAMyQ,EAAM0uC,KAAKn/C,KACjB68F,eAAgBpsF,EAAMihC,QAAQyL,QAC9BloC,OAAQxE,EAAMwE,OAAOA,OACrB7B,SAAU/N,EAAM8N,SAASC,SACzBmd,IAAKd,IAAGzN,MAAM3c,EAAM8N,SAAS0e,QAAQtB,IACrCC,IAAKf,IAAGzN,MAAM3c,EAAM8N,SAAS0e,QAAQrB,IACrCkN,KAAMjO,IAAGzN,MAAM3c,EAAM8N,SAAS0e,QAAQ6L,MAAQ,QAC9C50B,MAAO2H,EAAM7D,QAAQ5M,KAAK8I,MAC1B7I,KAAMwQ,EAAM7D,QAAQ5M,KAAK,WAE3B,CAAEswB,YAASiB,cAAWP,iBAfXqb,CAiBb4H,I,uOCzUF,MAAM54B,EAAWC,yBAAe,CAC9Bg9B,KAAM,CAAF,iDAIJx8B,KAAM,CAAF,iCAIJK,OAAQ,CAAF,qCAIN1I,MAAO,CAAF,qCAWP,MAAMmgC,UAAa5lC,YAkDjBzO,YAAY8F,GACVmkC,MAAMnkC,GADW,gBA+HZ+G,IAAM++B,aA/HM,sBAgIN/+B,IAAM++B,WA9HjBtrC,KAAK4Q,MAAQ,CACXk/E,QAAQ,EACRt/C,UAAU,EACV58B,MAAO,KACP6+E,aAAc,YAEhBzyF,KAAK8kE,SAAW9kE,KAAK8kE,SAASvmE,KAAKyB,MACnCA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MAQrCurC,oBAAoB,MACdvrC,KAAKwF,MAAM43F,WAAW9lE,QAAtB,UAAgCt3B,KAAKwF,MAAMuH,eAA3C,OAAgC,EAAqB,UACvD/M,KAAKwF,MAAMksB,UACT1xB,KAAKwF,MAAMuH,QAAQ,SACnBqwB,YAAWp9B,KAAKwF,MAAM+N,WAG1BvT,KAAKoqC,SAAS,CACZoG,UAAU,EACV6gD,kBAAmB,OAUvBvgD,iCAAiCxiC,GAAW,QAoB1C,GAnBItO,KAAKwF,MAAMqtF,cAAc92C,SAAWztC,EAAUukF,cAAcv7D,SACzD4K,YAAc5zB,EAAU8G,OAAOC,aAClCrV,KAAKoqC,SAAS,CACZ0lD,QAAQ,KAKyB,gBAAnC,UAAA9vF,KAAKwF,aAAL,mBAAYuH,eAAZ,eAAsB,WACxB/M,KAAKoqC,SAAS,CACZ0lD,QAAQ,IAGR9vF,KAAKwF,MAAM6vF,cAAct5C,SAAWztC,EAAU+mF,cAAc/9D,QAC9Dt3B,KAAKwF,MAAMqsC,QAAQhrC,KACjB7G,KAAKwF,MAAM2kF,WAAa/sD,YAAWp9B,KAAKwF,MAAM+N,WAI9CvT,KAAKwF,MAAM6vF,cAAct5C,SAAWztC,EAAU+mF,cAAczhF,MAAO,2BACrE,MAAM0O,GACJ,UAAAhU,EAAU+mF,cAAczhF,aAAxB,mBAA+BjS,gBAA/B,mBAAyCQ,YAAzC,mBAA+CyR,aAA/C,eAAsD0O,WAAtD,UACAhU,EAAU+mF,cAAczhF,aADxB,iBACA,EAA+BjS,gBAD/B,iBACA,EAAyCQ,YADzC,aACA,EAA+CmgB,WAD/C,UAEAhU,EAAU+mF,cAAczhF,aAFxB,iBAEA,EAA+BjS,gBAF/B,aAEA,EAAyCS,OACzC,GAEIwR,GACJ,eAAI0nE,WAAYC,gBAAgBj5D,EAAS,oBAAzC,mBAAuDqzB,IAAI,UAA3D,eACIg9C,cAAerwE,EAErBtiB,KAAKoqC,SAAS,CAAEx2B,MAAOA,IAEvBoxD,QAAMpxD,MACJ,cAAC,KAAD,CACEA,OAAK,EACL3K,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS5H,OAC9C7G,QAAU,GAAEuB,EAAU+mF,cAAczhF,MAAM1R,UAAU0R,OAMxDtF,EAAU4iF,aACRlxF,KAAK4Q,MAAMysF,WACX/uF,EAAU4iF,WAAW,SAAWlxF,KAAK4Q,MAAMysF,UAAU,SACpDr9F,KAAK4Q,MAAMysF,YAEdr9F,KAAKoqC,SAAS,CAAEizD,UAAW/uF,EAAU4iF,aASzCz9B,uBAAuB,QACrB,UAAIzzD,KAAKwF,MAAMuH,eAAf,iBAAI,EAAoBgwC,YAAxB,OAAI,EAA0ByhC,QAC5Bx+E,KAAKwF,MAAMwqB,cAAcoN,YAAWp9B,KAAKwF,MAAM+N,WAUnDwxD,SAAS5kE,GAAM,QACb,MAAMm9F,EAAU,UAAGt9F,KAAKwF,MAAMuH,eAAd,iBAAG,EAAoBgwC,YAAvB,aAAG,EAA0BlqC,MACvCxS,EAAUi9F,EAAa,CAAE,aAAcA,GAAe,GAC5Dt9F,KAAKwF,MAAM8oB,cAAc8O,YAAWp9B,KAAKwF,MAAM+N,UAAWpT,EAAME,GAQlEykE,WACE9kE,KAAKwF,MAAMqsC,QAAQhrC,KACjB7G,KAAKwF,MAAM2kF,WAAa/sD,YAAWp9B,KAAKwF,MAAM+N,WAIlD+9E,qBAAqBhgF,EAAMisF,GACzBv9F,KAAKoqC,SAAS,CAAEinD,kBAAmB//E,IACnCtR,KAAKwF,MAAM0pB,WAAWquE,EAAY,KAAM,aAAc,MAUxD7tF,SAAS,sBACP,MAAM8tF,EAAiB,IAAKx9F,KAAKwF,MAAMi4F,cAAe,CAAEj2F,GAAI,SAEtDk2F,EACJ,cAAC,KAAD,CACE9F,YAAU,EACVt0E,IAAKtjB,KAAK+2C,KACV3hC,OAAQpV,KAAKwF,MAAM4P,OACnBhV,KAAI,UAAEJ,KAAKwF,MAAMuH,eAAb,aAAE,EAAqB,SAC3B2T,SAAU1gB,KAAKwF,MAAMuH,QACrB+U,aAAc9hB,KAAK4Q,MAAMgD,MACzBmxD,SAAU/kE,KAAK+kE,SACf2rB,aAAW,EACXn9E,SAAUvT,KAAKwF,MAAM+N,SACrBu8E,OAAQ9vF,KAAK4Q,MAAMk/E,OACnB7mF,MACE,UAAAjJ,KAAKwF,aAAL,mBAAY4P,cAAZ,SAAoBnM,MAChBjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASi9B,KAAM,CAC3CxvC,MAAOjJ,KAAKwF,MAAM4P,OAAOnM,QAE3B,KAEN8yC,QAAS/7C,KAAKwF,MAAM6vF,cAAct5C,QAClCg0C,eAA4C,aAA5B/vF,KAAK4Q,MAAM6hF,aAC3BzC,aAAc,KACZhwF,KAAKoqC,SAAS,CAAEqoD,aAAc,gBAKpC,OACE,sBAAKjrF,GAAG,YAAR,WACG,UAAAxH,KAAKwF,MAAMi4F,qBAAX,eAA0Bz7F,QAAS,GAClC,qCACGw7F,GACC,qCACE,cAAC,IAAD,CACEv0F,MACE,UAAAjJ,KAAKwF,aAAL,mBAAY4P,cAAZ,SAAoBnM,MAChBjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASi9B,KAAM,CAC3CxvC,MAAOjJ,KAAKwF,MAAM4P,OAAOnM,QAE3B,KANR,UASG,UAAAjJ,KAAKwF,MAAMuH,eAAX,eAAoBmoB,WACnB,sBAAM5jB,KAAMtR,KAAKwF,MAAMuH,QAAQmoB,SAASriB,UAI3C7S,KAAK4Q,MAAMygF,mBAAqBrxF,KAAK4Q,MAAMysF,UAC1C,eAAC,OAAD,CACE52B,OAAO,aACPW,WAAS,EACTC,QAAS,EACT7/D,GAAG,2BAJL,UAME,cAAC,OAAKivD,OAAN,CAAavmD,UAAU,gBAAvB,SACE,cAAC,KAAD,CACEw/E,kBAAmB1vF,KAAK4Q,MAAMysF,UAC9BjoF,OAAQpV,KAAKwF,MAAM4P,OACnB7B,SAAUvT,KAAKwF,MAAM+N,SACrBu8E,OAAQ9vF,KAAK4Q,MAAMk/E,OACnBC,eAC8B,0BAA5B/vF,KAAK4Q,MAAM6hF,aAEbzC,aAAc,KACZhwF,KAAKoqC,SAAS,CACZqoD,aAAc,+BAKtB,cAAC,OAAKh8B,OAAN,UACE,sBAAKvmD,UAAU,kBAAf,UACE,cAAC,OAAD,CAAMquD,UAAQ,EAACryB,WAAS,EAACyhC,UAAQ,EAAC8iB,SAAO,EAAzC,SACE,cAAC,OAAKnqC,KAAN,CACEhpD,KAAI,UAAE0C,KAAKwF,MAAMuH,QAAQmoB,gBAArB,aAAE,EAA6BriB,MAAM0I,cACzC2yB,QAAQ,EAFV,mBAIGluC,KAAKwF,MAAMuH,QAAQmoB,gBAJtB,aAIG,EAA6BriB,MAAM0I,kBAIvCmiF,UAKPA,KAKLF,GAAkBx9F,KAAK4Q,MAAMk/E,QAAU9vF,KAAK4Q,MAAM4/B,UACjD,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,UAKNsrD,GACA,mCACGx9F,KAAKwF,MAAMqN,MACV,cAAC,KAAD,CACEU,SAAUvT,KAAKwF,MAAM+N,SACrB2xB,cAAellC,KAAKwF,MAAM0/B,gBAG5B,cAAC,KAAD,CACE3xB,SAAUvT,KAAKwF,MAAM+N,SACrB2xB,cAAellC,KAAKwF,MAAM0/B,kBAKjCllC,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,qCACE,cAAC,SAAD,CACE3qC,GAAG,eACH0I,UAAU,OACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASS,MACnD0jB,QAAS,IAAM3/B,KAAK+2C,KAAKrxC,QAAQq/D,WACjCj8B,SAAU9oC,KAAKwF,MAAM6vF,cAAct5C,QACnCA,QAAS/7C,KAAKwF,MAAM6vF,cAAct5C,QANpC,SAQE,cAAC,KAAD,CACEz+C,KAAMulE,IACN3yD,UAAU,UACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASS,UAGlD,cAAC,SAAD,CACE/L,UAAU,SACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,QACnDqjB,QAAS,IAAM3/B,KAAK8kE,WAHtB,SAKE,cAAC,KAAD,CACExnE,KAAMk9B,IACNtqB,UAAU,UACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,YAIjDzb,IAAOD,SAAS8uB,gBACf,cAAC,IAAD,CACE3iB,QAAS/M,KAAKwF,MAAMuH,QACpB+iF,OAAQ9vF,KAAK4Q,MAAMk/E,OACnBwB,qBAAsB,CAAChgF,EAAM9J,KAC3BxH,KAAKsxF,qBAAqBhgF,EAAM9J,IAElC6pF,kBAAmBrxF,KAAK4Q,MAAMygF,kBAC9B99E,SAAUvT,KAAKwF,MAAM8N,SAASC,SAC9Bi+E,WAAYxxF,KAAKwxF,wB,IAxVjCz9C,E,eAsCkB,CACpB3+B,OAAQ,KACRrI,QAAS,KACTo9E,UAAW,OA4TS39C,kBACtBC,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,cAAmB,CACjBi4F,cAAe7sF,EAAMmgC,QAAQA,QAAQtyC,OACrCoU,MAAOjC,EAAMgC,YAAYC,MACzB9F,QAAS6D,EAAM7D,QAAQ5M,KACvB+wF,WAAU,UAAEtgF,EAAM7D,QAAQ4/B,mBAAhB,iBAAE,EAA2BukD,kBAA7B,aAAE,EAAuC/wF,KACnDiV,OAAQxE,EAAMwE,OAAOA,OACrBgoF,WAAYxsF,EAAM7D,QAAQnP,IAC1Bi1F,cAAejiF,EAAMwE,OACrBigF,cAAezkF,EAAM7D,QAAQ0vC,OAC7Bi2C,cAAe9hF,EAAM7D,QAAQ1O,OAC7BkV,SAAU/N,EAAM8N,SAASC,SACzB42E,UAAWv6D,IAAGzN,MAAM3c,EAAM8N,SAAS0e,QAAQw4D,aAE7C,CACEl8D,mBACAY,eACAwC,cACA3B,gBACAC,qBArBkBwc,CAwBtBuH,GAEavH,sBACbC,aACAynB,YAAa,CACX,CACE51D,IAAK,UACLkC,QAAS8+E,OAAShsE,WAAUrC,OAASkC,sBAC7BA,EAAS0Z,YAAYuQ,YAAW9pB,EAASC,cAGnD,CACEjV,IAAK,UACLkC,QAAS8+E,OAAShsE,WAAUrC,OAASkC,gBACnC,MAAMpG,QAAgBoG,EACpB+b,YAAWkO,YAAW9pB,EAASC,YAKjC,YAHsBpO,KAAlB4H,aAAA,EAAAA,EAASgwC,aACL5pC,EAAS4c,YAAYqN,YAAW9pB,EAASC,YAE1CxG,MAIb2/B,kBACE,CAAC97B,EAAOpL,KAAR,cAAmB,CACjBi4F,cAAe7sF,EAAMmgC,QAAQA,QAAQtyC,OACrCoU,MAAOjC,EAAMgC,YAAYC,MACzB9F,QAAS6D,EAAM7D,QAAQ5M,KACvB+wF,WAAU,UAAEtgF,EAAM7D,QAAQ4/B,mBAAhB,iBAAE,EAA2BukD,kBAA7B,aAAE,EAAuC/wF,KACnDiV,OAAQxE,EAAMwE,OAAOA,OACrBgoF,WAAYxsF,EAAM7D,QAAQnP,IAC1Bi1F,cAAejiF,EAAMwE,OACrBigF,cAAezkF,EAAM7D,QAAQ0vC,OAC7BlpC,SAAU/N,EAAM8N,SAASC,SACzB42E,UAAWv6D,IAAGzN,MAAM3c,EAAM8N,SAAS0e,QAAQw4D,aAE7C,CACEl8D,mBACAY,eACAwC,cACA3B,gBACAC,qBAGJ2H,YAAgB,OA3CH6U,CA4CbuH,I,wuBCxdF,MAAMv4B,EAAWC,yBAAe,CAC9BE,SAAU,CAAF,6EAIRC,UAAW,CAAF,yEAITI,YAAa,CAAF,mEAIXC,KAAM,CAAF,iCAIJK,OAAQ,CAAF,uCAWR,MAAMqhF,UAAkBxvF,YAoDtBzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK4Q,MAAQ,CACXgtF,WAAY,EACZ/8E,OAAQ,GACRg9E,gBAAgB,EAChBn9E,SAAUlb,EAAMkb,UAElB1gB,KAAK89F,UAAY99F,KAAK89F,UAAUv/F,KAAKyB,MACrCA,KAAK8sE,cAAgB9sE,KAAK8sE,cAAcvuE,KAAKyB,MAC7CA,KAAK+9F,YAAc/9F,KAAK+9F,YAAYx/F,KAAKyB,MACzCA,KAAKg+F,aAAeh+F,KAAKg+F,aAAaz/F,KAAKyB,MAC3CA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MAUrC8sE,cAActlE,EAAIxJ,GAChBgC,KAAKoqC,SAAS,CACZ1pB,SAAU,EAAF,KACH1gB,KAAK4Q,MAAM8P,UADR,IAEN,CAAClZ,GAAKxJ,MAUZggG,aAAahhG,GACXgD,KAAKoqC,SAAS,CAAEyzD,gBAAgB,IAUlCE,YAAYv2F,EAAIxJ,GACd,IAAKgC,KAAK4Q,MAAMitF,eAAgB,CAC9B,MAAMh9E,EAAS0B,IAAe9B,0BAA0B,CACtDrL,OAAQpV,KAAKwF,MAAM4P,OACnBsL,SAAU1gB,KAAK4Q,MAAM8P,SACrBC,cAAe3gB,KAAKwF,MAAM++B,KAAK5jB,cAC/BC,aAAc,CAAE,CAACpZ,GAAKxJ,KAGxBgC,KAAKoqC,SAAS,CACZvpB,YAWNkkD,SAASt/C,GACPA,EAAMI,iBACN,MAAMhF,EAAS0B,IAAe9B,0BAA0B,CACtDrL,OAAQpV,KAAKwF,MAAM4P,OACnBsL,SAAU1gB,KAAK4Q,MAAM8P,SACrBC,cAAe3gB,KAAKwF,MAAM++B,KAAK5jB,gBAGjC,GAAI,IAAKE,GAAQ7e,OAAS,EACxBhC,KAAKoqC,SAAS,CACZvpB,eAEG,CACL,IAAIo9E,EAAuBv9E,IACzB1gB,KAAKoqC,SAAS,CAAE1pB,SAAUA,EAAUG,OAAQ,MAE9C7gB,KAAKwF,MAAMu/D,SAAS/kE,KAAK4Q,MAAM8P,SAAUu9E,IAW7CH,UAAUr4E,GAAO,MAAE5Z,IACjB7L,KAAKoqC,SAAS,CACZwzD,WAAY/xF,IAShB6D,SACE,MAAM,OAAE0F,EAAF,SAAU0vD,GAAa9kE,KAAKwF,MAC5B6sE,EAAkBj9D,EAAOoN,UAAUxiB,KAAK4Q,MAAMgtF,YAE9C98E,EAAS,IAAIuxD,EAAgBvxD,OAASxL,GAAD,OACtCF,EAAOC,WAAWC,IADoB,IAEzC9N,GAAI8N,EACJtX,MAAOgC,KAAK4Q,MAAM8P,SAASpL,GAC3BqG,UAA8C,IAApCvG,EAAOuG,SAASzV,QAAQoP,GAClCu2B,SAAU7rC,KAAK8sE,cACftb,OAAQxxD,KAAK+9F,YACbp+D,QAAS3/B,KAAKg+F,gBAGVE,EAAe,IAAKl+F,KAAK4Q,MAAMiQ,QAAQ7e,OAAS,EACtD,OACE,eAAC,QAAD,CAAOmrC,KAAMntC,KAAKwF,MAAM2nC,KAAMj9B,UAAWlQ,KAAKwF,MAAM0K,UAApD,UACE,cAAC,SAAD,UAASlQ,KAAKwF,MAAMyD,QACpB,cAAC,SAAD,CAAQilC,OAAQluC,KAAKwF,MAAMu2C,QAA3B,SACE,cAAC,SAAD,UACG/7C,KAAKwF,MAAM24F,gBACV,cAAC,mBAAD,CAAkB32F,GAAG,UAAUukC,eAAe,iBAIpD,cAAC,QAAMqyB,QAAP,CAAeqE,WAAS,EAAxB,SACE,eAAC,OAAD,CACE1iE,OAAO,OACPglE,SAAU/kE,KAAK+kE,SACfnxD,MAAOsqF,GAAgBzzB,QAAQzqE,KAAKwF,MAAM+xF,aAH5C,UAKE,eAAC,UAAD,CAAS3jF,OAAK,EAAd,UACGsqF,EACC,cAAC,mBAAD,CACE12F,GAAG,0BACHukC,eAAe,4BAGjB,GAEF,8BAAM/rC,KAAKwF,MAAM+xF,iBAElBniF,EAAOoN,UAAUxgB,OAAS,GACzB,cAAC,OAAD,CAAMyuF,SAAO,EAACrpB,WAAS,EAAvB,SACG,IAAIhyD,EAAOoN,UAAW,CAACzO,EAAMlI,IAC5B,cAAC,OAAKy6C,KAAN,CACEhpD,KAAMyW,EAAKvM,GACXqE,MAAOA,EAEPqiC,OAAQluC,KAAK4Q,MAAMgtF,aAAe/xF,EAClC8zB,QAAS3/B,KAAK89F,UALhB,SAOG/pF,EAAK9K,OAJD8K,EAAKvM,OASjBsZ,EAAOvd,IAAK+R,GACX,wBAAC,IAAD,OACMA,GADN,IAEEhX,IAAKgX,EAAM9N,GACXgqD,OAAQxxD,KAAK+9F,YACbp+D,QAAS3/B,KAAKg+F,aACdpqF,MAAO5T,KAAK4Q,MAAMiQ,OAAOvL,EAAM9N,aAKvC,eAAC,QAAMo7D,QAAP,WACE,cAAC,SAAD,CACEx5B,OAAK,EACL+qD,UAAQ,EACRp5D,SAAO,EACPqyB,QAAQ,QACRj7C,aACEnS,KAAKwF,MAAMmkF,YACP3pF,KAAKwF,MAAMmkF,YACX3pF,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASS,MAE7ChT,MACEjJ,KAAKwF,MAAMmkF,YACP3pF,KAAKwF,MAAMmkF,YACX3pF,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASS,MAE7C0jB,QAAS3/B,KAAK+kE,SACdhpB,QAAS/7C,KAAKwF,MAAMu2C,QAhBtB,SAkBE,cAAC,KAAD,CAAMz+C,KAAMk9C,IAAUtqC,UAAU,mBAAmB4jB,KAAK,WAEzDgxC,GACC,cAAC,SAAD,CACE17B,OAAK,EACL+qD,UAAQ,EACRjoD,WAAS,EACT/5B,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,QACnDrT,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,QAC9C8wC,QAAQ,QACRztB,QAASmlC,EAPX,SASE,cAAC,KAAD,CAAMxnE,KAAMk9B,IAAUtqB,UAAU,UAAU4jB,KAAK,kB,IAjQvD6pE,E,eAmCkB,CACpBhU,YAAa,KACb7kB,SAAU,KACVpkD,SAAU,GACVysB,MAAM,EACN4O,QAAS,KACToiD,eAAgB,KAChB5G,YAAa,KACbrnF,UAAW,OA+NAu8B,yBAAWkxD,I,+LCpS1B,MAAMniF,EAAWC,yBAAe,CAC9BkB,KAAM,CAAF,iCAIJk1B,QAAS,CAAF,yCAWT,MAAMwC,UAAgBlmC,YAkCpBzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAKo+F,SAAWp+F,KAAKo+F,SAAS7/F,KAAKyB,MACnCA,KAAK4Q,MAAQ,CAAE4/B,UAAU,GAQ3BjF,oBACEvrC,KAAKwF,MAAM2rB,WAAWiM,YAAWp9B,KAAKwF,MAAM+N,WAC5CvT,KAAKoqC,SAAS,CAAEoG,UAAU,IAS5BM,iCAAiCxiC,GAC3BtO,KAAKwF,MAAM64F,cAActiD,SAAWztC,EAAU+vF,cAAc/mE,QAC9Dt3B,KAAKwF,MAAM2rB,WAAWiM,YAAWp9B,KAAKwF,MAAM+N,WAWhD6qF,SAAS34E,GAAO,MAAEznB,IAChBgC,KAAKwF,MAAM4rB,cAAcgM,YAAWp9B,KAAKwF,MAAM+N,UAAWvV,GAQ5D0R,SACE,MAAM4tC,EAAU,IAAQ,IAAOt9C,KAAKwF,MAAM83C,UAC1C,IAAIr0C,EAAQq0C,EAAQt7C,OAAS,EAAIs7C,EAAQ,GAAGghD,YAAc,GAC1D,IAAK,IAAI/nE,EAAI,EAAGA,EAAI+mB,EAAQt7C,OAAQu0B,GAAK,EACvC+mB,EAAQ/mB,GAAGgoE,iBAAmBt1F,EAC9BA,EAAQq0C,EAAQ/mB,GAAG+nE,aAAer1F,EAGpC,OADA,IAAQq0C,GAEN,eAAC,YAAD,CAAW91C,GAAG,eAAd,UACE,cAAC,IAAD,CAAQyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASq2B,WACtD,eAAC,UAAQnX,MAAT,CAAe+Q,QAAM,EAArB,UACE,cAAC,UAAD,CAASv7B,UAAU,UAAnB,SACE,cAAC,mBAAD,CACE1I,GAAG,qBACHukC,eAAe,qBACfn3B,OAAQ,CACN3L,MAAO,4BAAIjJ,KAAKwF,MAAMyD,aAI5B,cAAC,UAAD,CAASijC,WAAS,EAAlB,SACE,cAAC,mBAAD,CACE1kC,GAAG,+CACHukC,eAAe,mDAGnB,eAAC,QAAD,CAAOyyD,YAAU,EAAChnB,SAAO,EAACggB,YAAU,EAAC7pB,UAAQ,EAA7C,UACE,cAAC,QAAMnL,OAAP,UACE,eAAC,QAAMpI,IAAP,WACE,cAAC,QAAMuM,WAAP,CAAkB9qC,MAAO,EAAzB,SACE,cAAC,mBAAD,CACEr0B,GAAG,yBACHukC,eAAe,QAGnB,cAAC,QAAM46B,WAAP,CAAkB9qC,MAAO,EAAzB,SACE,cAAC,mBAAD,CAAkBr0B,GAAG,OAAOukC,eAAe,WAE7C,cAAC,QAAM46B,WAAP,CAAkB9qC,MAAO,EAAzB,SACE,cAAC,mBAAD,CAAkBr0B,GAAG,MAAMukC,eAAe,UAE5C,cAAC,QAAM46B,WAAP,CAAkB9qC,MAAO,EAAzB,SACE,cAAC,mBAAD,CAAkBr0B,GAAG,OAAOukC,eAAe,WAE7C,cAAC,QAAM46B,WAAP,CAAkB9qC,MAAO,EAAzB,SACE,cAAC,mBAAD,CACEr0B,GAAG,cACHukC,eAAe,kBAGnB,cAAC,QAAM46B,WAAP,SAGJ,cAAC,QAAMC,KAAP,UACG,IAAItpB,EAAU48C,GACb,eAAC,QAAM9/B,IAAP,WACE,cAAC,QAAMyM,KAAP,UACI,YAAaqzB,GAASA,EAAM/qE,QAAU,GACtC,cAAC,OAAD,CACEjf,UAAU,OACVihC,GAAK,GAAE/T,YAAWp9B,KAAKwF,MAAM+N,sBAC3B2mF,EAAM/qE,QAAU,SACV+qE,EAAM/qE,UAJhB,SAMG+qE,EAAM/qE,WAEL,+BAAO+qE,EAAM/qE,YAErB,cAAC,QAAM03C,KAAP,UACI,YAAaqzB,GAASA,EAAM/qE,QAAU,GACtC,cAAC,OAAD,CACEjf,UAAU,OACVihC,GAAK,GAAE/T,YAAWp9B,KAAKwF,MAAM+N,sBAC3B2mF,EAAM/qE,QAAU,SACV+qE,EAAM/qE,UAJhB,SAMG+qE,EAAMuE,oBAGT,iCACGvE,EAAMuE,iBACS,aAAfvE,EAAM95F,MACJ,KACC85F,EAAMtzD,OAAYszD,EAAMqE,iBAAR,MAAgC,KAC/CrE,EAAMoE,oBAIjB,cAAC,QAAMz3B,KAAP,UAAaqzB,EAAM+C,MAAMj3B,WACzB,cAAC,QAAMa,KAAP,UACE,cAAC,KAAD,CAAuB13B,KAAM+qD,EAAMx2C,SAErC,cAAC,QAAMmjB,KAAP,UAAaqzB,EAAM96C,WACnB,cAAC,QAAMynB,KAAP,UACkB,eAAfqzB,EAAM95F,MACL,cAAC,WAAD,CAAUipC,KAAK,sBAAf,SACE,eAAC,WAAS2+C,KAAV,CAAe93E,UAAU,OAAzB,UACG,YAAagqF,GAASA,EAAM/qE,QAAU,GACrC,eAAC,OAAD,CACEjf,UAAU,OACVihC,GAAK,GAAE/T,YACLp9B,KAAKwF,MAAM+N,sBACC2mF,EAAM/qE,QAAU,SAC5B+qE,EAAM/qE,UALV,UAQE,cAAC,OAAD,CAAM7xB,KAAK,SAAU,IACrB,cAAC,mBAAD,CACEkK,GAAG,eACHukC,eAAe,oBAIpB,YAAamuD,GACZ,eAAC,OAAD,CACEhqF,UAAU,OACVihC,GAAK,GAAE/T,YAAWp9B,KAAKwF,MAAM+N,qBAC3B2mF,EAAM/qE,UAHV,UAME,cAAC,OAAD,CAAM7xB,KAAK,QAAS,IACpB,cAAC,mBAAD,CACEkK,GAAG,qBACHukC,eAAe,0BAIpB,YAAamuD,GACZ,eAAC,WAAS5zC,KAAV,CACEtoD,MAAOk8F,EAAM/qE,QACbwQ,QAAS3/B,KAAKo+F,SAFhB,UAIE,cAAC,OAAD,CAAM9gG,KAAK,SAAU,IACrB,cAAC,mBAAD,CACEkK,GAAG,0BACHukC,eAAe,wCAhFfmuD,EAAMx2C,eA6F7B1jD,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,cAAC,OAAD,CACEhB,GAAK,GAAE/T,YAAWp9B,KAAKwF,MAAM+N,UAC7BrD,UAAU,OAFZ,SAIE,cAAC,KAAD,CACE5S,KAAMsuC,IACN17B,UAAU,mBACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmB,kBAYnD6vB,sBACbC,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACE83C,QAAS1sC,EAAMihC,QAAQyL,QACvB/pC,SAAU/N,EAAM8N,SAASC,SACzBtK,MAAO2H,EAAM7D,QAAQ5M,KAAK8I,MAC1Bo1F,cAAeztF,EAAMihC,QAAQ0L,SAE/B,CAAEpsB,eAAYC,qBATHob,CAWb6H,I,00BChRF,MAAM74B,EAAWC,yBAAe,CAC9BijF,qBAAsB,CAAF,yEAIpB1gD,QAAS,CAAF,qGAIP/hC,KAAM,CAAF,iCAIJK,OAAQ,CAAF,qCAINK,KAAM,CAAF,iCAIJmV,QAAS,CAAF,uCAIPhP,KAAM,CAAF,iCAIJ06B,MAAO,CAAF,mCAILmhD,WAAY,CAAF,+CAIVC,eAAgB,CAAF,uDAIdC,mBAAoB,CAAF,+DAIlBC,+BAAgC,CAAF,+GAWhC,MAAMC,UAAyB5wF,YA6C7BzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK8kE,SAAW9kE,KAAK8kE,SAASvmE,KAAKyB,MACnCA,KAAK6rC,SAAW7rC,KAAK6rC,SAASttC,KAAKyB,MACnCA,KAAKm5F,eAAiBn5F,KAAKm5F,eAAe56F,KAAKyB,MAC/CA,KAAK8rC,SAAW9rC,KAAK8rC,SAASvtC,KAAKyB,MACnCA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MACnCA,KAAKg/F,gBAAkBh/F,KAAKg/F,gBAAgBzgG,KAAKyB,MACjDA,KAAK4Q,MAAQ,CACXohB,OAAQ,GACRgsB,QAASx4C,EAAMw4C,QACfV,QAAS93C,EAAM83C,QACf9M,UAAU,GASdjF,oBACEvrC,KAAKwF,MAAMusB,WAAWqL,YAAWp9B,KAAKwF,MAAM+N,UAAWvT,KAAK4Q,MAAMohB,QAClEhyB,KAAKoqC,SAAS,CAAEoG,UAAU,IAS5BM,iCAAiCxiC,GAC3BtO,KAAKwF,MAAM6vF,cAAct5C,SAAWztC,EAAU+mF,cAAc/9D,SAC9Dt3B,KAAKwF,MAAMusB,WAAWqL,YAAWp9B,KAAKwF,MAAM+N,UAAWvT,KAAK4Q,MAAMohB,QAClEgzC,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASqjF,oBAC9C9xF,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,EAASsjF,oCAKjB9+F,KAAKoqC,SAAS,CACZ4T,QACyB,OAAvBh+C,KAAKwF,MAAMw4C,QAAmB1vC,EAAU0vC,QAAUh+C,KAAK4Q,MAAMotC,QAC/DV,QAAS,IAAIhvC,EAAUgvC,QAAU48C,IAC/B,MAAMtlF,EAAS,IAAK5U,KAAK4Q,MAAM0sC,QAAS,CAAE91C,GAAI0yF,EAAM1yF,KACpD,cACK0yF,GADL,IAEEn3E,MAAOnO,EAASA,EAAOmO,MAAQm3E,EAAMn3E,YAY7CgiD,SAASt/C,GACP,MAAMtlB,EAAO,CAAEm9C,QAAS,IACxB73B,EAAMI,iBACF7lB,KAAKwF,MAAMw4C,UAAYh+C,KAAK4Q,MAAMotC,UACpC79C,EAAK69C,QAAUh+C,KAAK4Q,MAAMotC,SAE5B,IAAK,IAAIphD,EAAI,EAAGA,EAAIoD,KAAKwF,MAAM83C,QAAQt7C,OAAQpF,GAAK,EAC7C,IAAQoD,KAAKwF,MAAM83C,QAAQ1gD,GAAGmmB,MAAO/iB,KAAK4Q,MAAM0sC,QAAQ1gD,GAAGmmB,QAC9D5iB,EAAKm9C,QAAQz2C,KAAK,CAChBW,GAAIxH,KAAK4Q,MAAM0sC,QAAQ1gD,GAAG4K,GAC1BpH,KAAMJ,KAAK4Q,MAAM0sC,QAAQ1gD,GAAGwD,KAC5B2iB,MAAO/iB,KAAK4Q,MAAM0sC,QAAQ1gD,GAAGmmB,QAInC/iB,KAAKwF,MAAMqsB,cAAcuL,YAAWp9B,KAAKwF,MAAM+N,UAAWpT,GAS5D2rC,SAASrmB,GACPA,EAAMI,iBACN7lB,KAAKwF,MAAMusB,WAAWqL,YAAWp9B,KAAKwF,MAAM+N,UAAWvT,KAAK4Q,MAAMohB,QASpEmnE,eAAe1zE,GACbzlB,KAAKoqC,SAAS,CACZpY,OAAQvM,EAAM2H,OAAOpvB,QASzBghG,kBACEh/F,KAAKoqC,SAAS,CACZ4T,SAAUh+C,KAAK4Q,MAAMotC,UAWzBnS,SAASpmB,GAAO,MAAEznB,IAChB,MAAOihG,EAAW/sF,GAAQlU,EAAMoM,MAAM,KACtCpK,KAAKoqC,SAAS,CACZkT,QAAS,IAAIt9C,KAAK4Q,MAAM0sC,QAAU48C,GAAD,OAC5BA,GAD4B,IAE/Bn3E,MACEm3E,EAAM1yF,KAAOy3F,EAAb,OAES/E,EAAMn3E,OAFf,IAGM,CAAC7Q,IAAQgoF,EAAMn3E,MAAM7Q,KAEvBgoF,EAAMn3E,WAUlB+hD,WACE9kE,KAAKwF,MAAMqsC,QAAQhrC,KAAKu2B,YAAWp9B,KAAKwF,MAAM+N,WAQhD7D,SAAS,QACP,OACE,eAAC,YAAD,CAAWlI,GAAG,eAAd,UACE,cAAC,IAAD,CAAQyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASsW,WACtD,eAAC,UAAQ4I,MAAT,CAAe+Q,QAAM,EAArB,UACE,cAAC,UAAD,CAASv7B,UAAU,UAAnB,SACE,cAAC,mBAAD,CACE1I,GAAG,sBACHukC,eAAe,sBACfn3B,OAAQ,CAAE3L,MAAO,4BAAIjJ,KAAKwF,MAAMyD,aAGpC,cAAC,UAAD,CAASijC,WAAS,EAAlB,SACE,cAAC,mBAAD,CACE1kC,GAAG,wEACHukC,eAAe,4EAGnB,cAAC,UAAD,UACE,cAAC,OAAD,CAAMg5B,SAAU/kE,KAAK8rC,SAArB,SACE,cAAC,OAAKouB,MAAN,UACE,cAAC,QAAD,CACE58D,KAAK,iBACLspC,OAAQ,CAAEyC,KAAM,UAChB1H,YAAa3hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAASkjF,sBAEX7yD,SAAU7rC,KAAKm5F,uBAKvB,eAAC,OAAD,CAAMp0B,SAAU/kE,KAAK+kE,SAArB,UACE,eAAC,QAAD,CAAO0B,QAAM,EAACC,QAAM,EAAC+wB,SAAO,EAAC9pB,UAAQ,EAArC,UACE,cAAC,QAAMnL,OAAP,UACE,eAAC,QAAMpI,IAAP,WACE,cAAC,QAAMuM,WAAP,UACE,cAAC,mBAAD,CAAkBn/D,GAAG,OAAOukC,eAAe,WAF/C,UAIG/rC,KAAKwF,MAAMu4C,uBAJd,aAIG,EAA4Bx6C,IAAK2O,GAChC,cAAC,QAAMy0D,WAAP,UACGz0D,EAAKjJ,OADeiJ,EAAK1K,UAMlC,cAAC,QAAMo/D,KAAP,oBACG5mE,KAAK4Q,MAAM0sC,eADd,aACG,EAAoB/5C,IAAK22F,IAAD,aACvB,eAAC,QAAM9/B,IAAP,WACE,eAAC,QAAMyM,KAAP,WACE,cAAC,OAAD,CACEvpE,KAAqB,SAAf48F,EAAM95F,KAAkB,OAAS,QACvC6I,MACiB,SAAfixF,EAAM95F,KACFJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASsH,MACvC9iB,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASgiC,SAE5C,IACF08C,EAAMjxF,MACNixF,EAAM1mE,OAAU,KAAI0mE,EAAM1mE,YAX/B,UAaGxzB,KAAKwF,MAAMu4C,uBAbd,aAaG,EAA4Bx6C,IAAK2O,GAChC,eAAC,QAAM20D,KAAP,WAC4B,WAAzBqzB,EAAMn3E,MAAM7Q,EAAK1K,KAChB,cAAC,OAAD,CACElK,KAAK,uBACL2L,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAASmjF,YAEX1kE,MAAM,SAGgB,aAAzBigE,EAAMn3E,MAAM7Q,EAAK1K,KAChB,cAAC,OAAD,CACElK,KAAK,uBACL28B,MAAM,QACNhxB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAASojF,kBAIkB,kBAAzB1E,EAAMn3E,MAAM7Q,EAAK1K,KACvB,cAAC,WAAD,CACEqkC,SAAU7rC,KAAK6rC,SACf7tC,MAAQ,GAAEk8F,EAAM1yF,MAAM0K,EAAK1K,KAC3B2zD,QAAS++B,EAAMn3E,MAAM7Q,EAAK1K,IAC1BshC,SAAUoxD,EAAM1mE,QAAUxzB,KAAKwF,MAAMguB,UAxB1BthB,EAAK1K,OAdV0yF,EAAM1yF,WA+C5B,eAAC,UAAD,CAASmmE,UAAQ,EAAjB,UACE,cAAC,OAAKzT,MAAN,UACE,cAAC,WAAD,CACEiB,QAASn7D,KAAK4Q,MAAMotC,QACpBnS,SAAU7rC,KAAKg/F,gBACfnlE,MAAO75B,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASwiC,aAGlD,mBAAG9tC,UAAU,OAAb,SACE,cAAC,mBAAD,CACE1I,GAAG,uUACHukC,eAAe,uUACfn3B,OAAQ,CACNsqF,UACE,cAAC,OAAD,CAAS5hG,KAAK,uBAAuB28B,MAAM,UAE7CnyB,OACE,cAAC,OAAD,CAASxK,KAAK,uBAAuB28B,MAAM,iBAMrD,eAAC,UAAD,CAAS/pB,UAAU,UAAUy9D,UAAQ,EAAC2c,UAAQ,EAA9C,UACE,cAAC,SAAD,CACElhD,OAAK,EACLrO,SAAO,EACPqyB,QAAQ,QACRhtD,KAAK,SACL+R,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASS,MACnDhT,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASS,MAC9C8/B,QAAS/7C,KAAKwF,MAAM6vF,cAAct5C,QAClCpc,QAAS3/B,KAAK+kE,SARhB,SAUE,cAAC,KAAD,CAAM70D,UAAU,UAAU5S,KAAMk9C,IAAU1mB,KAAK,WAEjD,cAAC,SAAD,CACEsV,OAAK,EACL8C,WAAS,EACT/5B,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,QACnDrT,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,QAC9C8wC,QAAQ,QACRztB,QAAS3/B,KAAK8kE,SANhB,SAQE,cAAC,KAAD,CAAM50D,UAAU,UAAU5S,KAAMk9B,IAAU1G,KAAK,oBAKtD9zB,KAAK4Q,MAAM4/B,UACV,cAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,cAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrBs2E,wBAAsB,EACtB13C,MACE,cAAC,OAAD,CACEhB,GAAK,GAAE/T,YAAWp9B,KAAKwF,MAAM+N,UAC7BrD,UAAU,OAFZ,SAIE,cAAC,KAAD,CACE5S,KAAMsuC,IACN17B,UAAU,mBACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmB,kB,IApW5DoiF,E,eAkCkB,CACpB/gD,QAAS,KACTxqB,MAAO,KA4UIgZ,sBACb72B,aACA82B,aACAC,kBACE,CAAC97B,EAAOpL,KAAR,CACE83C,QAAS1sC,EAAMkhB,QAAQ3xB,KAAKm9C,QAC5BU,QAASptC,EAAMkhB,QAAQ3xB,KAAK69C,QAC5BD,gBAAiBntC,EAAMkhB,QAAQ3xB,KAAK49C,gBACpCs3C,cAAezkF,EAAMkhB,QAAQ2qB,OAC7BlpC,SAAU/N,EAAM8N,SAASC,SACzBtK,MAAO2H,EAAM7D,QAAQ5M,KAAK8I,MAC1BuqB,MAAO5iB,EAAMgC,YAAYC,MACrBG,IAAUpC,EAAMgC,YAAYC,OAAOszD,IACnC,KAEN,CAAEt0C,mBAAeE,iBAfNya,CAiBbuyD,I,8FCzcF,MAAMI,UAAiBhxF,YAuBrBzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAKo/F,UAAYp/F,KAAKo/F,UAAU7gG,KAAKyB,MA0BvCo/F,UAAU35E,GAAO,MAAEznB,IACjBgC,KAAKwF,MAAM6rB,cAAcrzB,GAQ3B0R,SACE,OACE1P,KAAKwF,MAAMgW,UACT,cAAC,YAAD,CAAWtL,UAAU,WAArB,SACG,IAAIlQ,KAAKwF,MAAMgW,SAAU,CAAC8G,EAASzW,IAClC,cAAC,UAAD,CAEE7N,MAAO6N,EACPuzF,UAAWp/F,KAAKo/F,UAChBxrF,MAAyB,UAAlB0O,EAAQm9B,MACf1hC,QAA2B,YAAlBuE,EAAQm9B,MACjB80C,QAA2B,YAAlBjyE,EAAQm9B,MACjBf,KAAwB,SAAlBp8B,EAAQm9B,MACdmuB,OAAQtrD,EAAQrZ,MAChB8D,QAASuV,EAAQngB,MARZmgB,EAAQ9a,QAiBZklC,kBACZ97B,IAAD,CACE4K,SAAU5K,EAAM4K,SAASA,WAE3B,CAAE6V,oBAJWqb,CAKbyyD,I,qyBC9FF,MAAM3jF,EAAWC,yBAAe,CAC9B4jF,KAAM,CAAF,iCAIJC,OAAQ,CAAF,uCAMFC,EAAe,EACnB17D,eACA27D,gBACAC,gBACAC,gBACAC,iBACAr9D,eAAezhC,IAAOqrB,OAAOoW,aAC7Bs9D,kBACAvqF,aAAa,OAEb,MAAMkvB,EAAOkE,oBACPo3D,GAAoB,IAAQH,GAE5BI,EAAuB,IAAOx9D,EAAevuB,GAC7C4rF,GACEE,GACKH,EAActvF,SAAS2D,EAAKvM,IAKjCq4F,EACKH,EAActvF,SAAS2D,EAAKvM,IAKD,mBAApBuM,EAAKgsF,YACdhsF,EAAKgsF,WAAW,CAAE1qF,aAAY60B,MAAOn2B,KACrCA,EAAKgsF,YAKhB,IAAIC,EAAkB,GACtB,MAAMC,EAAiB,IAAOH,EAAuB/rF,GAASA,EAAKmsF,UAC/DD,IACFD,EAAgBE,SAAWD,GAE7B,MAAME,EAAgB,IAAQL,EAAuB/rF,GAASA,EAAKypC,OACnEwiD,EAAkB,EAAH,KACVA,GACAG,GAGL,MAAMC,EAAmB,IAAOv/F,IAAOqrB,OAAOk0E,iBAAmBrsF,GAC/DtW,OAAO+D,KAAKw+F,GAAiB5vF,SAAS2D,EAAKvM,MAEtCib,EAAa49E,GAAkB9zF,IAAM8X,SAAS,GAErD,SAASo/D,EAAYzmF,EAAGsjG,GACtB,MAAM,MAAEz0F,GAAUy0F,EAGlBD,EAFiB59E,IAAgB5W,GAAS,EAAIA,GAKhD,OACE,qBAAKqE,UAAU,iBAAiBoT,IAAKs8E,EAArC,SACE,cAAC,YAAD,CAAW/xB,OAAK,EAACC,QAAM,EAAC59D,UAAU,OAAlC,SACG,IAAIkwF,EAAkB,CAACG,EAAW10F,IACjC,eAAC,IAAM40B,SAAP,WACE,eAAC,YAAUstC,MAAX,CACE57D,aACEsQ,IAAgB5W,EACX,GAAE04B,EAAK5jB,cAAcnF,EAAS6jF,SAC7BkB,EAAUt3F,eAEX,GAAEs7B,EAAK5jB,cAAcnF,EAAS8jF,WAC7BiB,EAAUt3F,eAGlBilC,OAAQzrB,IAAgB5W,EACxBA,MAAOA,EACP8zB,QAAS8jD,EAZX,UAcGl/C,EAAK5jB,cAAc,CAClBnZ,GAAI+4F,EAAU/4F,GACdukC,eAAgBw0D,EAAUt3F,QAE5B,qBAAKiH,UAAU,kBAAf,SACmB,IAAhBuS,EACC,cAAC,KAAD,CAAMnlB,KAAM+8B,IAAOvG,KAAK,SAExB,cAAC,KAAD,CAAMx2B,KAAMg9B,IAASxG,KAAK,cAIhC,cAAC,YAAUsqC,QAAX,CACEluD,UAAWqwF,EAAU/4F,GACrB0mC,OAAQzrB,IAAgB5W,EAF1B,SAIE,cAAC,IAAD,CACEmiE,gBAAc,EACdC,SAAU,IACVp1C,OAAQpW,IAAgB5W,EAAQ,OAAS,EAH3C,SAKG,IAAIm0F,EAAgBO,EAAU/4F,IAAM0iC,GACnC,cAAC,SAAOxP,MAAR,UACE,eAAC,SAAD,CACE2O,MAAI,EACJD,OAAK,EACLl5B,UAAWg6B,EAAM1iC,GACjBm4B,QAAU3iC,IACRwiG,EACIA,EAAc37D,EAAc,CAAE,QAASqG,EAAM1iC,KAC7Ci4F,EAAc57D,EAAc,CAAE,QAASqG,EAAM1iC,KACjDxK,EAAE8oB,mBARN,UAWE,cAAC,KAAD,CAAMxoB,KAAM4sC,EAAMb,KAAMvV,KAAK,SAC5ByQ,EAAK5jB,cAAc,CAClBnZ,GAAI0iC,EAAMjhC,MACV8iC,eAAgB7B,EAAMjhC,YAfTihC,EAAM1iC,WArCZ+4F,EAAU/4F,UA0E1B+E,QAAMqrB,WAAW,CAACpyB,EAAO8d,IACtC,cAACi8E,EAAD,OAAkB/5F,GAAlB,IAAyBo6F,gBAAiBt8E,O,+rBCvJ5C,MAAM9H,EAAWC,yBAAe,CAC9BC,SAAU,CAAF,6CAMG8kF,EAAmBh7F,IAC9B,MAAM++B,EAAOkE,qBACP,UACJv4B,EAAY,mBADR,KAEJ4jB,EAAO,OAFH,mBAGJ2sE,GACEj7F,EAEJ,OACE,cAAC,SAAD,CACE6jC,MAAI,EACJD,OAAK,EACLngC,MAAOs7B,EAAK5jB,cAAcnF,EAASE,UACnCikB,QAAU3iC,IACRA,EAAE6oB,iBACF7oB,EAAE8oB,kBACF26E,KAEFvwF,UAAWA,EATb,SAWE,cAAC,KAAD,CAAM5S,KAAMghE,IAAQpuD,UAAWA,EAAW4jB,KAAMA,OA8EvC4sE,IAzEal7F,IAC1B,MAAM,MACJ0kC,EADI,cAEJw1D,EAFI,eAGJC,EAHI,KAIJx/F,EAJI,cAKJs/F,EALI,cAMJD,EANI,aAOJl9D,EAPI,gBAQJq+D,EARI,WASJtrF,GACE7P,GACE,iBAAEs8B,GAAqB3hC,GACtBygG,EAAmBC,GAAwBt0F,IAAM8X,UAAS,GAE3Du7E,EAAkBrzF,IAAMgX,SAExBilD,EAAqBj8D,IAAMkX,YAAazmB,IAE1C4iG,EAAgBl6F,SAChBie,+BAAqBi8E,EAAgBl6F,QAAS1I,IAGhD6jG,GAAqB,IACpB,IAEG1yF,EAAYwyF,GAAmBH,EASrC,OAPAj0F,IAAMqX,UAAU,KACd9Z,SAAS+Z,iBAAiB,YAAa2kD,GAAoB,GACpD,KACL1+D,SAASga,oBAAoB,YAAa0kD,GAAoB,KAE/D,CAACA,IAGF,sCACI1mC,IAAqBK,YAAchiC,IACnC,cAACgO,EAAD,OACM3I,GADN,IAEEi7F,mBAAoB,IAAMI,GAAqB,MAGlDD,GACC,cAAC,IAAD,CACEnB,cACEA,EACI,CAACj4F,EAAIxJ,KACH6iG,GAAqB,GACrBpB,EAAcj4F,EAAIxJ,IAEpB,KAENwhG,cACEA,EACI,CAACh4F,EAAIxJ,KACH6iG,GAAqB,GACrBrB,EAAch4F,EAAIxJ,IAEpB,KAEN6lC,aAAcqG,EACdw1D,cAAeA,EACfp9D,aAAcA,EACdjtB,WAAYA,EACZsqF,eAAgBA,EAChBr8E,IAAKs8E,S,uMCtFf,MAAMpkF,EAAWC,yBAAe,CAC9B3R,SAAU,CAAF,yCAIRogC,MAAO,CAAF,mCAILtpC,SAAU,CAAF,yCAIRkgG,cAAe,CAAF,qDAIbC,cAAe,CAAF,uDAWf,MAAMC,UAAgB7yF,YA6BpBzO,YAAY8F,GACVmkC,MAAMnkC,GACN,MAAM,QAAE5F,GAAY4F,EACpBxF,KAAKihG,iBAAmBjhG,KAAKihG,iBAAiB1iG,KAAKyB,MACnDA,KAAKkhG,iBAAmBlhG,KAAKkhG,iBAAiB3iG,KAAKyB,MACnDA,KAAKmhG,YAAcnhG,KAAKmhG,YAAY5iG,KAAKyB,MACzCA,KAAK4Q,MAAQ,CACX4tC,SAA8C,UAApC5+C,EAAQhC,IAAI,oBACtBk2B,KAAM,EACNstE,UAAU,EACVC,yBAAyB,GAU7BJ,mBACE,MAAM,QAAErhG,GAAYI,KAAKwF,MACzB5F,EAAQ2B,IAAI,oBAAqBvB,KAAK4Q,MAAM4tC,SAAU1rC,eACtD9S,KAAKoqC,SAAS,CACZoU,UAAWx+C,KAAK4Q,MAAM4tC,WAExBx+C,KAAKshG,uBAOPA,uBACE,IAAKthG,KAAK4Q,MAAM4tC,SAAU,CACxB,MACM+iD,EADiBz3F,SAASiB,cAAc,YACNy2F,uBACtC,qBACA,GACFD,EAAiBpxF,UAAUqD,OAAO,aAClC+tF,EAAiBpxF,UAAUqD,OAAO,cAElCxT,KAAKoqC,SAAS,CACZg3D,UAAU,KAShBF,mBACE,MACMK,EADiBz3F,SAASiB,cAAc,YACNy2F,uBACtC,qBACA,GAEExhG,KAAK4Q,MAAMwwF,UACbG,EAAiBpxF,UAAUG,IAAI,aAC1BtQ,KAAKwF,MAAMi8F,gBAGdF,EAAiBpxF,UAAUqD,OAAO,cAFlC+tF,EAAiBpxF,UAAUG,IAAI,gBAKjCixF,EAAiBpxF,UAAUqD,OAAO,aAClC+tF,EAAiBpxF,UAAUqD,OAAO,eAGpCxT,KAAKoqC,SAAU5I,IAAD,CACZ4/D,UAAW5/D,EAAU4/D,YAWzBD,YAAY17E,EAAOtlB,GACjBslB,EAAM89D,YAAYme,2BAClB1hG,KAAKwF,MAAMsvB,cAAc30B,EAAKsiB,aAQhC/S,SACE,MAAM,SAAE8uC,GAAax+C,KAAK4Q,MAE1B,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CACEV,UAAWsuC,EAAW,cAAgB,0BAExC,sBACEtuC,UAAW24B,IAAG,oBAAqB,CAAEwkD,WAAY7uC,IACjD1wC,MAAO9N,KAAK4Q,MAAMkjB,KAAO,EAAI,CAAE+H,MAAO77B,KAAK4Q,MAAMkjB,MAAS,KAF5D,UAIE,cAAC,SAAD,CACE3hB,aACEqsC,EACIx+C,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASslF,eACvC9gG,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASulF,eAE7C7wF,UACElQ,KAAKwF,MAAMuH,SAAW/M,KAAKwF,MAAMuH,QAAQ+5D,aAClC9mE,KAAKwF,MAAMuH,QAAQ+5D,aAArB,WACD,UAENnnC,QAAS3/B,KAAKihG,mBAEhB,cAAC,SAAD,CACE/wF,UAAU,wBACVyvB,QAAS3/B,KAAKkhG,iBACd/uF,aAAW,sBAHb,SAKE,cAAC,KAAD,CACEjC,UAAU,iBACV5S,KAAM0C,KAAK4Q,MAAMwwF,SAAWO,IAAYC,QAG5C,cAAC,MAAD,CACEpmE,KAAM,CACJ0Q,WAAW,EACXqyB,UAAU,EACVoP,UAAU,EACV8iB,SAAS,EACTvgF,UAAW,YAEbA,UAAU,eACV2xF,kBAAkB,EAClBp/E,YAAaziB,KAAKwF,MAAMy4C,IACxBkjD,YAAanhG,KAAKmhG,YAClB/lD,MAAO,GACHp7C,KAAKwF,MAAM8yF,aAAe,CAC1Bp9C,SAAUl7C,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS1R,UACjDg4F,KACE,cAAC,MAAI3mD,KAAL,CAEEjrC,UAAU,cACV1I,GAAG,oBAFC,eAMRxH,KAAKwF,MAAMu8F,UAAY,CACvB7mD,SAAUl7C,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS0uB,OACjD43D,KACE,cAAC,MAAI3mD,KAAL,CAEEjrC,UAAU,cACV1I,GAAG,qBAHL,SAKE,cAAC,KAAD,CACE0I,UAAU,gBACV5S,KAAM0kG,IACNluE,KAAK,UAPH,iBAYR9zB,KAAKwF,MAAM6yF,aAAe,CAC1Bn9C,SAAUl7C,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS5a,UACjDkhG,KACE,cAAC,MAAI3mD,KAAL,CAEEjrC,UAAU,cACV1I,GAAG,mBAHL,SAKE,cAAC,KAAD,CACE0I,UAAU,gBACV5S,KAAM0kG,IACNluE,KAAK,UAPH,cAYVvuB,OAAQ04C,GAAQA,QAGtB,qBAAK/tC,UAAWlQ,KAAK4Q,MAAM4tC,SAAW,kBAAoB,e,IAtN5DwiD,E,eAiBkB,CACpB1I,aAAa,EACbyJ,UAAU,EACV1J,aAAa,IAwMF7rD,sBACbC,aACAy4B,cACAx4B,kBACG97B,IAAD,CACEqtC,IAAKrtC,EAAMkvC,QAAQ7B,IACnBwjD,gBAAiB7wF,EAAMyvC,QAAQ7B,WAEjC,CAAE1pB,qBARS0X,CAUbw0D,I,6BCtRF,2CA6CeiB,IAlCO,EAAG3yF,WAAUg0B,WAAU2a,MAAM,yBACjD,MAAOzN,EAAU0xD,GAAe31F,IAAM8X,SAAS,MAI/C,OAFA9X,IAAMqX,UAAU,IAAMs+E,GAAY,GAAO,IAGvC,mCACG5+D,GACC,cAAC,SAAD,CAAQ2O,KAAMzB,GAAY1mC,SAASooC,eAAe+L,GAAlD,SACE,qBAAK/rC,KAAK,OAAOpE,MAAO,CAAE+qB,OAAQ,QAAlC,SACE,qBACE/qB,MAAO,CAAE+qB,OAAQ,QACjB3mB,KAAK,eACLytB,QAAU3iC,IACRA,EAAE8oB,mBAEJs0B,UAAYp9C,IACVA,EAAE8oB,mBAPN,SAUGxW,Y,6BC/Bf,qGA8Ce6yF,IArCA38F,IAeb,MAAM,MAAEyD,EAAF,QAAS8D,GAAYvH,EAE3B,OACE,qCACE,cAAC,KAAD,CAAMlI,KAlBV,SAAiBkI,GACf,OAAIA,EAAMk5C,KACD0jD,IACE58F,EAAMuY,QACRskF,IACE78F,EAAMoO,MACR0uF,IACE98F,EAAMoO,MACR2uF,IAEAF,IAQKG,CAAQh9F,GAAQsuB,KAAK,SACjC,sBAAK5jB,UAAU,sBAAf,UACGjH,GAAS,6BAAKA,IACf,4BAAI8D,Y,yyBCNZ,MAAMyO,EAAWC,yBAAe,CAC9BsC,QAAS,CAAF,uCAIP0kF,OAAQ,CAAF,6DAINC,SAAU,CAAF,+EAIRh1F,KAAM,CAAF,iEAIJi1F,OAAQ,CAAF,qEAINruD,mBAAoB,CAAF,+DAIlBsuD,wBAAyB,CAAF,uFAIvBjmF,KAAM,CAAF,mCAgPSiwB,gBA1OapnC,IAC1B,MAAM++B,EAAOkE,oBACPl1B,EAAWwwD,wBAAcxwD,SACzBxG,EAAUmqB,sBAAatmB,GAAUA,EAAM7D,QAAQ5M,MAC/CgT,EAAW6jB,yBAEX,oBAAEgW,EAAF,kBAAuBC,GAAsBznC,EAE7Cq9F,EAAsBt2F,IAAMgX,OAAO,MAEzChX,IAAMqX,UAAU,KACT7W,GACHoG,EAAS+b,YAAWkO,YAAW7pB,MAEhC,CAACJ,EAAUpG,EAASwG,IAEvBhH,IAAMqX,UAAU,MAGTopB,GAAuB61D,EAAoBn9F,SAC9CyN,EACE6hB,YACET,YAAgBxnB,EAAQ,QACxB81F,EAAoBn9F,UAGrBlD,KAAM+2C,IACLyrB,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOs7B,EAAK5jB,cAAcnF,EAASuC,SACnChR,QAASw3B,EAAK5jB,cAAcnF,EAASinF,WAGzCtvF,EAAS+b,YAAWkO,YAAW7pB,OAEhC9Q,MAAOmR,IAGN,MAAMkvF,EAAgB5gF,KAAKC,MAAMvO,EAAMjS,SAASS,MAChD4iE,QAAMpxD,MACJ,cAAC,KAAD,CACEA,OAAK,EACL3K,MAAO65F,EAAclvF,MAAMxT,KAC3B2M,QAAS+1F,EAAclvF,MAAM0O,UAE/B,CAAEqmD,QAAS,kBAKlB,CAAC37B,IAEJ,MAAMq9B,EAAet9D,GACnBA,EAAQ,eAAes9D,aAAav2D,OADjB,GAEjB,CAAC/G,EAAQmoB,SAASriB,OAAQ,CACxBjR,IAAKmL,EAAQ,SAEZ,IACDA,EAAQ,eAAes9D,aAAav2D,MACpC,CAACypB,EAAKv/B,IACJ,OAAYu/B,GAAZ,IAAiB,CAACv/B,EAAMk3B,UAAW,CAAEtzB,IAAK5D,EAAM,UAElD,KAsCN,OACE,eAAC,YAAD,CAAWwJ,GAAG,2BAAd,UACE,cAAC,IAAD,CAAQyB,MAAOs7B,EAAK5jB,cAAcnF,EAAS84B,sBAC3C,eAAC,UAAQ5Z,MAAT,CAAe+Q,QAAM,EAArB,UACE,cAAC,UAAD,CAASv7B,UAAU,UAAnB,SACE,cAAC,mBAAD,CACE1I,GAAG,kCACHukC,eAAe,kCACfn3B,OAAQ,CAAE3L,MAAO,4BAAI8D,EAAQ9D,aAGhC8D,GACC,eAAC,QAAD,CAAOyxF,YAAU,EAAChnB,SAAO,EAACggB,YAAU,EAAC7pB,UAAQ,EAA7C,UACE,cAAC,QAAMnL,OAAP,UACE,eAAC,QAAMpI,IAAP,WACE,cAAC,QAAMuM,WAAP,uBACA,cAAC,QAAMA,WAAP,mBACA,cAAC,QAAMA,WAAP,CAAkB7Z,UAAU,QAA5B,wBAGJ,cAAC,QAAM8Z,KAAP,UACG/lE,IAAOD,SAAS2xC,mBAAmBhvC,IAAK+N,IAAD,eACtC,eAAC,QAAM8oD,IAAP,WACE,cAAC,QAAMyM,KAAP,CAAYk8B,YAAU,EAAtB,SACGzxF,IAASvE,EAAQmoB,SAASriB,MACzB,iCAAS+C,IAAQtE,GAAMyE,aAEvBH,IAAQtE,GAAMyE,aAGlB,cAAC,QAAM8wD,KAAP,UACE,cAAC,OAAD,CAAM11B,GAAI5c,aAAgB,UAAA81C,EAAa/4D,UAAb,eAAoB1P,MAAO,IAArD,SACG2yB,aAAgB,UAAA81C,EAAa/4D,UAAb,eAAoB1P,MAAO,QAGhD,eAAC,QAAMilE,KAAP,CACE/Z,UAAU,QACV58C,UAAU,4BAFZ,UAIE,cAAC,SAAOwqB,MAAR,UACE,cAAC,SAAD,CACE0O,OAAK,EACLC,MAAI,EACJP,SACEx3B,IAASvE,EAAQmoB,SAASriB,QAC1Bw3D,aADA,EACAA,EAAe/4D,IAEjBU,GAAIu4E,OACJp5C,GAAI,CACF59B,SAAaA,EAAF,sBACX3C,MAAO,CACLxQ,KAAM2M,EAAQ,SACd29D,cAAen2C,YAAgBxnB,EAAQ,QACvCmoB,SAAU5jB,IAbhB,SAiBE,cAAC,KAAD,CAAMhU,KAAMghE,IAAQxqC,KAAK,aAG5Bu2C,WAAe/4D,GACd,cAAC,SAAOopB,MAAR,UACE,cAAC,SAAD,CACEvoB,aAAa,GAAEoyB,EAAK5jB,cAClBnF,EAASmnF,WACN/sF,IAAQtE,GAAMyE,WAAW9P,gBAC9BmjC,OAAK,EACLC,MAAI,EACJP,SAAUx3B,IAASvE,EAAQmoB,SAASriB,MACpC8sB,QAAS,IAhGjC,SAA6BruB,GAC3B6B,EAAS8hB,YAAsBV,YAAgBxnB,EAAQ,QAASuE,IAC7D9O,KAAM+2C,IACLyrB,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOs7B,EAAK5jB,cAAcnF,EAASuC,SACnChR,QAASw3B,EAAK5jB,cAAcnF,EAASknF,aAGzCvvF,EAAS+b,YAAWkO,YAAW7pB,OAEhC9Q,MAAOmR,IAGN,MAAMkvF,EAAgB5gF,KAAKC,MAAMvO,EAAMjS,SAASS,MAChD4iE,QAAMpxD,MACJ,cAAC,KAAD,CACEA,OAAK,EACL3K,MAAO65F,EAAclvF,MAAMxT,KAC3B2M,QAAS+1F,EAAclvF,MAAM0O,UAE/B,CAAEqmD,QAAS,iBA0EoBq6B,CAAoB1xF,GAPrC,SASE,cAAC,KAAD,CACEhU,KACEgU,IAASvE,EAAQmoB,SAASriB,MACtB84B,IACAs3D,IAENnvE,KAAK,aAKX,cAAC,SAAO4G,MAAR,UACE,cAAC,SAAD,CACEvoB,aAAa,GAAEoyB,EAAK5jB,cAClBnF,EAAS9N,SACNkI,IAAQtE,GAAMyE,WAAW9P,gBAC9BmjC,OAAK,EACLC,MAAI,EACJP,SAAUx3B,IAASvE,EAAQmoB,SAASriB,MACpC8sB,QAAS,IACPsN,EAAkB,CAChB/uC,KAAM,OACN2uC,SAAS,EACTjC,aAAehpC,IAhI3C,IAAwBwrB,IAiIqBxrB,EA7H3CihG,EAAoBn9F,QAAU0nB,KAiHV,SAiBE,cAAC,KAAD,CAAM9vB,KAAMquC,IAAS7X,KAAK,kBA9EpBxiB,WAwFvB4xF,W,u5BC5NT,MAAMC,UAAah1F,YAgFjBzO,YAAY8F,GACVmkC,MAAMnkC,GADW,qCAoVS,KAC1B,MAAM49F,EAAiB3lG,OAAO+D,KAC5BwjC,YAAWhlC,KAAK4Q,MAAM8P,SAAU1gB,KAAK4Q,MAAMyyF,kBAE7C,cACK,IAAOrjG,KAAK4Q,MAAM8P,SAAU,CAAC1iB,EAAOM,IACrC8kG,EAAehzF,SAAS9R,KAEtB0B,KAAK4Q,MAAM8P,SAAS,sBAAwB,CAC9C,oBAAqB1gB,KAAK4Q,MAAM8P,SAAS,yBA7V5B,oCAwWStL,IAC1B,MAAMkuF,EAAY,EAAH,GAAQluF,GACjBmuF,EAAsB,IAC1BD,EAAU9gF,UACTy4B,GAA6B,WAAhBA,EAASzzC,IAEzB,GAAI+7F,GAAuB,EAAG,CAC5B,MAAMC,EAAeF,EAAU9gF,UAAU+gF,GAAqBziF,OAC9DwiF,EAAU9gF,UAAU+gF,GAAqBziF,OAAS0iF,EAAaj+F,OAC5D+P,GAAoB,WAAVA,GAAgC,kBAAVA,GAE4B,IAA3DguF,EAAU9gF,UAAU+gF,GAAqBziF,OAAO9e,SAClDshG,EAAU9gF,UAAY,IACjB8gF,EAAU9gF,UAAUtX,MAAM,EAAGq4F,MAC7BD,EAAU9gF,UAAUtX,MAAMq4F,EAAsB,KAIzD,OAAOD,IAxXP,MAAM3nD,EAAM,CACV1yC,MAAOi6B,eACP9gC,KAAM8gC,gBAER,IAAI,SAAExiB,GAAalb,EACnB,MAAMu9B,EAAkBf,YAAmBthB,GACrC+hB,EAAwBR,YAAyBvhB,GAElDlb,EAAMoyF,aAETl3E,EAAW,EAAH,KACH,IAAUlb,EAAM4P,OAAOC,WAAY,YACnCqL,IAOLA,EAAS9hB,eAAemkC,IACxBriB,EAAS9hB,eAAe6jC,KAGrB/hB,EAAS+hB,KACV,IAAQ/hB,EAAS+hB,GAAuB3uB,SAExC4M,EAAS+hB,GAAyB,CAChC3uB,MAAO,CAAC6nC,EAAI1yC,MAAO0yC,EAAIv5C,QAGtBse,EAASqiB,KAAoB,IAAQriB,EAASqiB,MACjDriB,EAASqiB,GAAmB,CAC1B,CAAC4Y,EAAI1yC,OAAQ,CACX,QAAS,SAEX,CAAC0yC,EAAIv5C,MAAO,CACV,QAASvB,IAAOD,SAASqiC,qBAMjC,IAAIwgE,EAAgB,KAIlB,QAFA/iF,EAAS9hB,eAAe6jC,IACxB/hB,EAAS+hB,GAAuB3uB,MAAM9R,OAAS,IAE/CyhG,EAAgB/iF,EAAS+hB,GAAuB3uB,MAAM,GAEtD,UAAIjT,IAAOqrB,cAAX,iBAAI,EAAew3E,0BAAnB,OAAI,EAAoC1jG,KAAKwF,MAAMpF,OAEjD3C,OAAO+D,KAAKkf,EAASqiB,IAAkBjjC,QAAS6jG,IAAU,QAEtDjjF,EAASqiB,GAAiB4gE,GAAO,YAAjC,UACA9iG,IAAOqrB,cADP,iBACA,EAAew3E,0BADf,aACA,EAAoC1jG,KAAKwF,MAAMpF,SAE/CqjG,EAAgBE,MAKxB3jG,KAAK4Q,MAAQ,CACX8P,WACA2iF,gBAAiB,IAAU3iF,GAC3BG,OAAQ,GACRyiB,SAAUmgE,EACV50B,cAAe,GACfr+B,UAAU,GAEZxwC,KAAK8sE,cAAgB9sE,KAAK8sE,cAAcvuE,KAAKyB,MAC7CA,KAAK2uE,cAAgB3uE,KAAK2uE,cAAcpwE,KAAKyB,MAC7CA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MACnCA,KAAK8kE,SAAW9kE,KAAK8kE,SAASvmE,KAAKyB,MACnCA,KAAKmhG,YAAcnhG,KAAKmhG,YAAY5iG,KAAKyB,MACzCA,KAAK+9F,YAAc/9F,KAAK+9F,YAAYx/F,KAAKyB,MACzCA,KAAKg+F,aAAeh+F,KAAKg+F,aAAaz/F,KAAKyB,MASrB,yBAACyV,EAAW+rB,GAClC,IAAI,aAAE1f,GAAiB9hB,KAAKwF,MACxBqb,EAAS,GACT4B,EAAc,EAEdX,GAAgBrM,EAAUqM,eAAiBA,IAC7CjB,EAAS0B,IAAeV,sCACtBC,GAEFW,EAAcF,IAAeqhF,uBAAuB,CAClD/iF,SACAzL,OAAQpV,KAAKwF,MAAM4P,SAGrBpV,KAAKoqC,SAAS,CACZvpB,SACA4B,iBAIAziB,KAAKwF,MAAMq+F,kBAGX3hF,KAAK2Q,UAAU2O,aAAf,EAAeA,EAAW9gB,YAC1BwB,KAAK2Q,UAAU7yB,KAAK4Q,MAAM8P,WAE1B1gB,KAAKwF,MAAMq+F,iBAAiB7jG,KAAK4Q,MAAM8P,UAQ7CygF,YAAYnkG,GAAG,YAAEylB,IACfziB,KAAKoqC,SAAS,CAAE3nB,gBAQlBu7E,aAAahhG,GACXgD,KAAKoqC,SAAS,CAAEyzD,gBAAgB,IAUlCE,YAAYv2F,EAAIxJ,GACd,IAAKgC,KAAK4Q,MAAMitF,eAAgB,CAC9B,MAAMh9E,EAAS0B,IAAe9B,0BAA0B,CACtDrL,OAAQpV,KAAKwF,MAAM4P,OACnBsL,SAAU1gB,KAAK4Q,MAAM8P,SACrBC,cAAe3gB,KAAKwF,MAAM++B,KAAK5jB,cAC/BC,aAAc,CAAE,CAACpZ,GAAKxJ,KAGxBgC,KAAKoqC,SAAS,CACZvpB,YAUN0qB,oBACEvrC,KAAKoqC,SAAS,CAAEoG,UAAU,IAGG,gCAAChrC,EAAOoL,GACrC,IAAItI,EAAW,EAAH,GAAQsI,GAKpB,OAJKpL,EAAMuqF,iBACTznF,EAASg7B,SAAW,MAGfh7B,EAWTwkE,cAActlE,EAAIxJ,GAChBgC,KAAKoqC,SAAU5I,IACb,MAAM,OAAE3gB,EAAF,SAAUH,GAAa8gB,EAE7B,cADO3gB,EAAOrZ,GACP,CACLqZ,SACAH,SAAU,EAAF,KACHA,GADG,IAGN,CAAClZ,GACCxJ,QAAoBmH,IAAVnH,GAAuB8lG,IAAU9lG,GAAUA,EAAQ,UAavE2wE,cAAcnnE,EAAIinE,EAAqBhpD,GACrC,IAAIopD,EAAgB,GAChBvrC,EAAW97B,EAEf,GAAIinE,EAAqB,CACvBnrC,EAAW,KACX,MAAMb,EAAwBR,YAC5BjiC,KAAK4Q,MAAM8P,UAGPg2C,EAAgB12D,KAAK4Q,MAAM8P,SAAS+hB,GAAuB3uB,MAEjE,GAAI2R,EAAMipD,SAAU,CAClB,MAAMq1B,EACJ/jG,KAAK4Q,MAAMi+D,cAAc7sE,OAAS,EAC9B00D,EAAcxwD,QAAQlG,KAAK4Q,MAAMi+D,cAAc,IAC/CnY,EAAcxwD,QAAQlG,KAAK4Q,MAAM0yB,UACjCkH,EAAQksB,EAAcxwD,QAAQsB,GAGlCqnE,EADEk1B,IAAWv5D,EACG,CAAChjC,GACRgjC,EAAQu5D,EACD,IAAIrtC,EAAcxrD,MAAM64F,EAAQv5D,EAAQ,IAExC,IAAIksB,EAAcxrD,MAAMs/B,EAAOu5D,EAAS,KAIvDt+E,EAAME,UAAWF,EAAMG,SAAaH,EAAMipD,WAC7CG,EAAgB7uE,KAAK4Q,MAAMi+D,eAAiB,GACvC7uE,KAAK4Q,MAAMi+D,cAAcz+D,SAASpQ,KAAK4Q,MAAM0yB,YAChDurC,EAAgB,IAAIA,EAAe7uE,KAAK4Q,MAAM0yB,UAC9CA,EAAW,MAETtjC,KAAK4Q,MAAMi+D,cAAcz+D,SAAS5I,IACpC87B,EAAW,KACXurC,EAAgB,IAAQA,EAAernE,IAEvCqnE,EAAgB,IAAIA,EAAernE,IAKzCxH,KAAKoqC,SAAS,CACZ9G,WACAurC,kBAGE7uE,KAAKwF,MAAMwqF,eACTvqE,GAAOA,EAAM89D,YAAYme,2BAC7B1hG,KAAKwF,MAAMwqF,gBAYflrB,SAASr/C,GACHA,GACFA,EAAMI,iBAEJ7lB,KAAKwF,MAAMokF,kBACb5pF,KAAKoqC,SAAS,CACZ1pB,SAAU1gB,KAAKwF,MAAMkb,WAGzB1gB,KAAKwF,MAAMs/D,SAASr/C,GAStBs/C,SAASt/C,GACHA,GACFA,EAAMI,iBAGR,MAAMhF,EAAS0B,IAAe9B,0BAA0B,CACtDrL,OAAQpV,KAAKwF,MAAM4P,OACnBsL,SAAU1gB,KAAK4Q,MAAM8P,SACrBC,cAAe3gB,KAAKwF,MAAM++B,KAAK5jB,gBAGjC,GAAI,IAAKE,GAAQ7e,OAAS,EAAG,CAC3B,MAAMygB,EAAcF,IAAeqhF,uBAAuB,CACxD/iF,SACAzL,OAAQpV,KAAKwF,MAAM4P,SAErBpV,KAAKoqC,SACH,CACEvpB,SACA4B,eAEF,KACEhlB,OAAO+D,KAAKqf,GAAQ/gB,QAASf,GAC3BimE,QAAMpxD,MACJ,cAAC,KAAD,CAAOA,OAAK,EAAC3K,MAAOlK,EAAKgO,QAAS8T,EAAO9hB,GAAKkG,KAAK,YAM3DjF,KAAKwF,MAAMsvB,cAAc,QAIrB90B,KAAKwF,MAAMoyF,WACb53F,KAAKwF,MAAMu/D,SAAS/kE,KAAKgkG,6BAEzBhkG,KAAKwF,MAAMu/D,SAAS/kE,KAAK4Q,MAAM8P,UAE7B1gB,KAAKwF,MAAMokF,kBACb5pF,KAAKoqC,SAAS,CACZ1pB,SAAU1gB,KAAKwF,MAAMkb,WA6D7BhR,SACE,MAAM,SAAE9O,GAAaC,KACbuU,OAAQguD,EAAV,SAA0B0B,EAA1B,SAAoCC,GAAa/kE,KAAKwF,OACtD,SAAEkb,GAAa1gB,KAAK4Q,MACpBwE,EAASpV,KAAKikG,yBAAyB7gC,GAE7C,OAAOpjE,KAAKwF,MAAMsqF,OAGhB9vF,KAAK4Q,MAAM4/B,UACT,sBAAKtgC,UAAU,eAAf,UACE,cAAC,IAAD,CACEwQ,SAAU1gB,KAAK4Q,MAAM8P,SACrB+iF,cAAezjG,KAAK4Q,MAAM0yB,SAC1B4gE,eAAgBlkG,KAAK4Q,MAAMi+D,cAC3Bs1B,eAAiBC,GACfpkG,KAAKoqC,SAAS,CACZ1pB,SAAU,EAAF,KACHA,GACA0jF,KAITC,oBAAsBC,GACpBtkG,KAAKoqC,SAAS,CAAEykC,cAAey1B,IAEjC31B,cAAe3uE,KAAK2uE,gBAEtB,cAAC,KAAD,CACE/9D,MAAO,CACL8P,SAAU1gB,KAAK4Q,MAAM8P,SACrB4iB,SAAUtjC,KAAK4Q,MAAM0yB,SACrBurC,cAAe7uE,KAAK4Q,MAAMi+D,eAE5BnqD,eAAa,EACbF,WAAY,EAAG5T,WAAY5Q,KAAKoqC,SAASx5B,KAE3C,cAAC,IAAD,CACEizF,iBAAmB7gE,GACjBhjC,KAAKoqC,SAAS,CACZ1pB,SAAU,EAAF,KACHA,GACAsiB,KAIT8pC,cAAe9sE,KAAK8sE,cACpB6B,cAAe3uE,KAAK2uE,cACpBt5D,WAAYqL,EACZnN,SAAUvT,KAAKwF,MAAM+N,SACrBkwF,cAAezjG,KAAK4Q,MAAM0yB,SAC1BurC,cAAe7uE,KAAK4Q,MAAMi+D,cAC1BV,OAAQnuE,KAAKwF,MAAM4yF,YACnBsH,cAAe1/F,KAAKwF,MAAMk6F,cAC1BC,eAAgB3/F,KAAKwF,MAAMm6F,eAC3BtxB,SAAUruE,KAAKwF,MAAM6oE,SACrBk2B,WAAYvkG,KAAKwF,MAAM6oE,WAExBruE,KAAK4Q,MAAM4/B,UAAYxwC,KAAKwF,MAAM6oE,UACjC,cAAC,SAAD,CACEp8B,MAAMixD,EADR,SAGE,cAAC,OAAD,CACEnjG,OAAO,OACPglE,SAAU/kE,KAAK+kE,SACfnxD,MAAO,IAAK5T,KAAK4Q,MAAMiQ,QAAQ7e,OAAS,EAH1C,SAKGoT,GACC,IAAIA,EAAOoN,UAAYzO,GAAS,CAC9B,cAAC,UAAD,CACEm4B,WAAS,EACTyhC,UAAQ,EACRz9D,UAAY,YAAW6D,EAAKvM,GAH9B,SAMGuM,EAAK9K,OAFD8K,EAAK9K,OAIZ,cAAC,UAAD,CAAS0kE,UAAQ,EAAjB,SACG,IAAI55D,EAAK+M,OAAQ,CAACxL,EAAOzJ,KAAR,aAChB,wBAAC,IAAD,OACMuJ,EAAOC,WAAWC,IADxB,IAEE9N,GAAI8N,EACJoN,SAAU3O,EAAK9K,MAAMhD,cACrBya,SAAU1gB,KAAK4Q,MAAM8P,SACrB8pB,OAAO,EACPxsC,MAAK,UAAEgC,KAAK4Q,MAAM8P,gBAAb,aAAE,EAAsBpL,GAC7BqG,UAA8C,IAApCvG,EAAOuG,SAASzV,QAAQoP,GAClCu2B,SAAU7rC,KAAK8sE,cACftb,OAAQxxD,KAAK+9F,YACbp+D,QAAS3/B,KAAKg+F,aACd1/F,IAAKgX,EACL1B,MAAO5T,KAAK4Q,MAAMiQ,OAAOvL,SAdP,qBAAoBvB,EAAK9K,gBAyB/D,cAAC,YAAD,UACE,cAAC,OAAD,CACElJ,OAAO,OACPglE,SAAU/kE,KAAK+kE,SACfnxD,MAAO,IAAK5T,KAAK4Q,MAAMiQ,QAAQ7e,OAAS,EACxCkO,UAAWtP,EAAS4jG,iBAAmB,gBAAkB,GAJ3D,SAME,0BAAUt0F,UAAU,YAAY44B,UAAW9oC,KAAKwF,MAAM6oE,SAAtD,SACE,eAAC,UAAQ3zC,MAAT,CAAe+Q,QAAM,EAArB,UACGr2B,GAAUA,EAAOoN,UAAUxgB,OAAS,GACnC,qCACGpB,EAAS4jG,kBAAoBxkG,KAAKwF,MAAMyD,OACvC,cAAC,UAAD,CAASijC,WAAS,EAACyhC,UAAQ,EAA3B,SACG3tE,KAAKwF,MAAMyD,OADmBjJ,KAAKwF,MAAMyD,OAI9C,cAAC,MAAD,CACEuyB,KAAM,CACJ0Q,WAAW,EACXqyB,UAAU,EACVoP,UAAU,EACV8iB,SAAS,EACTvgF,UAAW,WACXi8B,SAAUvrC,EAAS4jG,kBAErBC,KAAM,CAAEC,UAAW,EAAGC,SAAU,EAAGv9B,WAAW,GAC9C+5B,YAAanhG,KAAKmhG,YAClB1+E,YAAaziB,KAAK4Q,MAAM6R,YACxB24B,MAAO,IAAIhmC,EAAOoN,UAAYzO,IAAD,CAC3BmnC,SAAUnnC,EAAK9K,MACfyG,OAAQ,IAAM,EACX9O,EAAS4jG,kBAAoBxkG,KAAKwF,MAAMyD,OACvC,cAAC,UAAD,CAASijC,WAAS,EAACyhC,UAAQ,EAA3B,SACG3tE,KAAKwF,MAAMyD,OADmBjJ,KAAKwF,MAAMyD,UAI3C,IAAI8K,EAAK+M,OAAQ,CAACxL,EAAOzJ,KAAR,aAClB,wBAAC,IAAD,OACMuJ,EAAOC,WAAWC,IADxB,IAEE9N,GAAI8N,EACJoL,SAAU1gB,KAAK4Q,MAAM8P,SACrBgC,SAAU3O,EAAK9K,MAAMhD,cACrBukC,MAAiB,IAAV3+B,EACP7N,MAAK,UAAEgC,KAAK4Q,MAAM8P,gBAAb,aAAE,EAAsBpL,GAC7BqG,UAA8C,IAApCvG,EAAOuG,SAASzV,QAAQoP,GAClCu2B,SAAU7rC,KAAK8sE,cACftb,OAAQxxD,KAAK+9F,YACbp+D,QAAS3/B,KAAKg+F,aACd1/F,IAAKgX,EACL1B,MAAO5T,KAAK4Q,MAAMiQ,OAAOvL,iBAQtCF,GAAsC,IAA5BA,EAAOoN,UAAUxgB,QAC1B,eAAC,UAAD,WACGhC,KAAKwF,MAAMyD,OACV,cAAC,UAAD,CAASiH,UAAU,UAAnB,SACE,qBAAIpC,MAAO,CAAE8+C,SAAU,QAAvB,cAAmC5sD,KAAKwF,MAAMyD,WAGjDjJ,KAAKwF,MAAMo8B,aACV,cAAC,UAAD,CAASsK,WAAS,EAAlB,SAAoBlsC,KAAKwF,MAAMo8B,cAEhC,IAAK5hC,KAAK4Q,MAAMiQ,QAAQ7e,OAAS,GAChC,cAAC,UAAD,CACEqnC,KAAK,UACLqkC,UAAQ,EACRC,UAAQ,EACRC,OAAQ5tE,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAAS5H,OAC/C7G,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,IAASe,uBAIdvc,KAAKwF,MAAMoO,OACV,cAAC,UAAD,CACEy1B,KAAK,UACLqkC,UAAQ,EACRC,UAAQ,EACRC,OAAQ5tE,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAAS5H,OAC/C7G,QAAS/M,KAAKwF,MAAMoO,MAAM0O,UAG7B,IAAIlN,EAAOoN,UAAU,GAAG1B,OAASxL,IAAD,aAC/B,wBAAC,IAAD,OACMF,EAAOC,WAAWC,IADxB,IAEE9N,GAAI8N,EACJtX,MAAK,UAAEgC,KAAK4Q,MAAM8P,gBAAb,aAAE,EAAsBpL,GAC7BqG,UAA8C,IAApCvG,EAAOuG,SAASzV,QAAQoP,GAClCu2B,SAAU7rC,KAAK8sE,cACftb,OAAQxxD,KAAK+9F,YACbp+D,QAAS3/B,KAAKg+F,aACd1/F,IAAKgX,EACL1B,MAAO5T,KAAK4Q,MAAMiQ,OAAOvL,YAK/BtV,KAAKwF,MAAMkrF,aACX,eAAC,UAAD,CAASxgF,UAAU,UAAUo6E,UAAQ,EAArC,UACGvlB,GACC,cAAC,SAAD,CACE37B,OAAK,EACLrO,SAAO,EACPqyB,QAAQ,QACRhtD,KAAK,SACL+R,aACEnS,KAAKwF,MAAMmkF,YACP3pF,KAAKwF,MAAMmkF,YACX3pF,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASS,MAE7ChT,MACEjJ,KAAKwF,MAAMmkF,YACP3pF,KAAKwF,MAAMmkF,YACX3pF,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASS,MAE7C8/B,QAAS/7C,KAAKwF,MAAMu2C,QAftB,SAiBE,cAAC,KAAD,CAAM7rC,UAAU,UAAU5S,KAAMk9C,IAAU1mB,KAAK,WAGlDgxC,GACC,cAAC,SAAD,CACE17B,OAAK,EACL8C,WAAS,EACT/5B,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,IAASc,QAEXrT,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,IAASc,QAC9C8wC,QAAQ,QACRztB,QAAS3/B,KAAK8kE,SARhB,SAUE,cAAC,KAAD,CAAM50D,UAAU,UAAU5S,KAAMk9B,IAAU1G,KAAK,wB,IAhsB/DqvE,E,eAkDkB,CACpBziF,SAAU,KACVqkD,SAAU,KACVD,SAAU,KACV6kB,YAAa,KACbC,kBAAkB,EAClBgO,YAAY,EACZQ,aAAa,EACbnvF,MAAO,KACP24B,YAAa,KACbhuB,MAAO,KACPmoC,QAAS,KACT20C,aAAa,EACbZ,QAAQ,EACR5jE,OAAQ,GACR3Y,SAAU,GACV6B,OAAQ,GACR26E,gBAAgB,EAChBC,aAAc,KACd3hB,UAAU,EACVvsD,aAAc,KACd49E,cAAe,OAsoBnB,MAAMkF,EAAWn4D,qBAAW02D,EAAM,CAAEvrE,YAAY,IAEjC4U,sBACbE,kBAAQ,KAAM,CAAE5X,oBAAiB,KAAM,CAAE8C,YAAY,IADxC4U,CAEbo4D,I,+0BC7uBK,MAAMC,UAA+Bt4F,IAAM4B,UAChDzO,YAAY8F,GACVmkC,MAAMnkC,GAENxF,KAAK8kG,sBAAwB9kG,KAAK8kG,sBAAsBvmG,KAAKyB,MAC7DA,KAAK+kG,qBAAuB/kG,KAAK+kG,qBAAqBxmG,KAAKyB,MAC3DA,KAAK6e,aAAe7e,KAAK6e,aAAatgB,KAAKyB,MAC3CA,KAAKglG,gBAAkBhlG,KAAKglG,gBAAgBzmG,KAAKyB,MACjDA,KAAK4e,YAAc5e,KAAK4e,YAAYrgB,KAAKyB,MACzCA,KAAKm1B,mBAAqBn1B,KAAKm1B,mBAAmB52B,KAAKyB,MAGzDglG,kBAAkB,MAChB,MAAM3lD,EAAS,UAAG3nB,eAAK,CAAEutE,OAAQ,CAAC,4BAAnB,aAAG,EAAuC3kD,gBACpD,IAAQjB,EAAWr/C,KAAKwF,MAAM86C,kBACjCtgD,KAAKwF,MAAM2vB,mBAAmBkqB,GAAa,IAG/C9T,oBACE5jC,OAAOkc,iBAAiB,UAAW7jB,KAAKglG,iBAAiB,GAG3DvxC,uBACE9rD,OAAOmc,oBAAoB,UAAW9jB,KAAKglG,iBAG7CnmF,eACE,MAAMylF,EAAWtkG,KAAKwF,MAAM0+F,gBAEtB,SAAExjF,GAAa1gB,KAAKwF,MACpBu9B,EAAkBf,YAAmBthB,GACrC+hB,EAAwBR,YAAyBvhB,GAGvD1gB,KAAKwF,MAAMmpE,cAAc,MACzB,MAAMy1B,EAAe,CACnB,CAACrhE,GAAkB,IAAKriB,EAASqiB,GAAkBuhE,GACnD,CAAC7hE,GAAD,OACK/hB,EAAS+hB,IADd,IAEE3uB,MAAO,IAAQ4M,EAAS+hB,GAAuB3uB,SAAUwwF,MAG7DtkG,KAAKwF,MAAM2+F,eAAeC,GAG5BU,wBACE9kG,KAAKm1B,mBAAmB,QAG1B4vE,uBACE/kG,KAAKm1B,mBAAmB,OACxBn1B,KAAK6e,eAGPsW,mBAAmB0nB,GACjB,MAAM,SAAEn8B,GAAa1gB,KAAKwF,MAEpB0mB,EAASxL,EADSshB,YAAmBthB,IAErCwkF,EAAallG,KAAKwF,MAAM0+F,eAAe3gG,IAC1Cu/B,GAAY5W,EAAO4W,IAEtB9iC,KAAKwF,MAAM2vB,mBAAmB,CAAE,CAAC0nB,GAAaqoD,IAC9CllG,KAAKwF,MAAM6+F,oBAAoB,IAGjCzlF,YAAY5hB,GACV,MAAM,SAAE0jB,EAAF,gBAAY4/B,EAAkB,GAA9B,cAAkCmjD,GAAkBzjG,KAAKwF,MACzDtH,EAAOT,OAAO+D,KAAK8+C,GAAiBlwC,SAAS,OAAS,MAAQ,OAE9D+0F,GADa7kD,EAAgBpiD,IAAS,IAEzCqH,OAAQk2C,KAAgBA,EAAU,UAClCl4C,IAAKk4C,IACJ,MAAM2pD,EAAcvkG,IAAOqrB,OAAOoW,aAAamZ,EAAU,UACzD,MAAgB,SAATv9C,GACHknG,EAAYC,UACVD,EAAYC,UAAU5pD,GAExB,CAACvY,eAAQuY,KAEdl2C,OAAQm5C,KAAWA,GAChB3b,EAAkBf,YAAmBthB,GACrC+hB,EAAwBR,YAAyBvhB,GACjD4kF,EACJ5kF,EAAS+hB,GAAuB3uB,MAAM5N,QAAQu9F,GAAiB,EAE3DW,EAAe,CACnB,CAACrhE,GAAD,OACKriB,EAASqiB,IACTtlC,OAAOgT,OACR,MACG00F,EAAa5hG,IAAI,EAAEiE,EAAIrH,MAAN,CAAmB,CAACqH,GAAKrH,OAGjD,CAACsiC,GAAD,OACK/hB,EAAS+hB,IADd,IAEE3uB,MAAO,IACF4M,EAAS+hB,GAAuB3uB,MAAM5I,MAAM,EAAGo6F,MAC/CH,EAAa5hG,IAAI,EAAEiE,KAAQA,MAC3BkZ,EAAS+hB,GAAuB3uB,MAAM5I,MAAMo6F,OAK/CtoG,EAAE2oB,SAAW3oB,EAAE4oB,SAAU5lB,KAAKwF,MAAM8vB,uBAC1Ct1B,KAAKwF,MAAM2+F,eAAeC,GAG5B10F,SACE,MAAM,gBACJ4wC,EAAkB,GADd,cAEJmjD,EAFI,eAGJS,EAHI,KAIJ3/D,GACEvkC,KAAKwF,MACT,OACE,qCACG0+F,EAAeliG,OAAS,EACvB,qCACE,cAAC,IAAD,CAAM4+B,UAAU,sBAAsBp5B,GAAG,oBAAzC,SACE,wBACE2K,aAAYoyB,EAAK5jB,cAAcnF,IAASqD,cACxC8gB,QAAS3/B,KAAK6e,aACdw7B,SAAU,EACVnqC,UAAU,eACV1I,GAAG,wBALL,SAOE,cAAC,KAAD,CAAMlK,KAAM+gE,IAAUvqC,KAAK,aAG/B,cAAC,IAAD,CAAM8M,UAAU,sBAAsBp5B,GAAG,iBAAzC,SACE,wBACE2K,aAAYoyB,EAAK5jB,cAAcnF,IAASmD,WACxCghB,QAAS3/B,KAAK+kG,qBACd1qD,SAAU,EACVnqC,UAAU,YACV1I,GAAG,qBALL,SAOE,cAAC,KAAD,CAAMlK,KAAMioG,IAAQzxE,KAAK,aAG7B,cAAC,IAAD,CAAM8M,UAAU,sBAAsBp5B,GAAG,kBAAzC,SACE,wBACE2K,aAAYoyB,EAAK5jB,cAAcnF,IAASkD,YACxCihB,QAAS3/B,KAAK8kG,sBACdzqD,SAAU,EACVnqC,UAAU,aACV1I,GAAG,sBALL,SAOE,cAAC,KAAD,CAAMlK,KAAMkoG,IAAS1xE,KAAK,gBAKhC,GAED2vE,KAAkBnjD,aAAA,EAAAA,EAAiB9yB,OAAO8yB,aAAxB,EAAwBA,EAAiBhzB,QAC1D,cAAC,IAAD,CAAMsT,UAAU,sBAAsBp5B,GAAG,kBAAzC,SACE,yBACE2K,aAAYoyB,EAAK5jB,cAAcnF,IAASoD,aACxC+gB,QAAS3/B,KAAK4e,YACdy7B,SAAU,EACVnqC,UAAU,cACV1I,GAAG,uBALL,UAOE,sBAAM0I,UAAU,aAAhB,UACIowC,EAAgB9yB,KAAO8yB,EAAgBhzB,MAAMtrB,SAEjD,cAAC,KAAD,CAAM1E,KAAMmoG,IAAU3xE,KAAK,kBAS1B0Y,sBACbC,aACAC,kBACG97B,IACQ,CACL0vC,iBAAiB1vC,aAAA,EAAAA,EAAO0vC,kBAAmB,KAG/C,CAAEnrB,wBAAoBG,4BARXkX,CAUbq4D,I,6BCjNF,+FAWA,MAAMrpF,EAAWC,yBAAe,CAC9B0J,KAAM,CAAF,iCAIJI,KAAM,CAAF,mCA6DSmgF,IAvDK,EAAG90F,QAAO4T,aAAYC,gBAAeC,oBACvD,MAAM6f,EAAOkE,oBACPk9D,EAAalhF,UAAiB5jB,IAAOD,SAAS6jB,eAC9C,OAAES,EAAF,OAAUI,EAAV,QAAkBX,EAAlB,QAA2BE,GAAYN,aAC3C3T,EACA4T,EACA,CACEC,cAAekhF,IAInB,OACE,qCACE,cAAC,IAAD,CACE/kE,UAAU,sBACVp5B,GAAG,WACHq5B,aAAc,CAAClc,EAASE,GAH1B,SAKE,cAAC,SAAD,CACE3U,UAAU,OACVyvB,QAAS,IAAMza,IACf/S,aAAYoyB,EAAK5jB,cAAcnF,EAAS2J,MACxC2jB,UAAWnkB,EAJb,SAME,cAAC,KAAD,CACErnB,KAAMsoG,IACN11F,UAAU,UACV4jB,KAAK,OACL7qB,MAAOs7B,EAAK5jB,cAAcnF,EAAS2J,YAIzC,cAAC,IAAD,CACEyb,UAAU,sBACVp5B,GAAG,WACHq5B,aAAc,CAAClc,EAASE,GAH1B,SAKE,cAAC,SAAD,CACE3U,UAAU,OACVyvB,QAAS,IAAMra,IACfnT,aAAYoyB,EAAK5jB,cAAcnF,EAAS+J,MACxCujB,UAAWjkB,EAJb,SAME,cAAC,KAAD,CACEvnB,KAAMuoG,IACN31F,UAAU,UACV4jB,KAAK,OACL7qB,MAAOs7B,EAAK5jB,cAAcnF,EAAS+J,iB,6BCrE/C,iDAYA,MAAMwO,EAAa,kCAOnB,MAAM+xE,UAAmB33F,YAevBo9B,oBACEvrC,KAAKwF,MAAMmuB,cAAc,CAAEC,eAAgBG,IAQ7CrkB,SACE,OAAO1P,KAAKwF,MAAMugG,OAAS/lG,KAAKwF,MAAMugG,MAAM/jG,OAAS,EACnD,8BACGhC,KAAKwF,MAAMugG,MAAMxiG,IAAKqnF,GACrB,cAAC,OAAD,CACE16E,UAAU,WACVihC,GAAK,mBAAkBy5C,EAAK3hF,MAF9B,SAKG2hF,EAAK3hF,OAFD2hF,EAAK3hF,UAOhB,0BAKSyjC,sBACZ97B,IAAD,CACEm1F,MACEn1F,EAAMovC,aAAajsB,IAAenjB,EAAMovC,aAAajsB,GAAYgyE,MAC7Dn1F,EAAMovC,aAAajsB,GAAYgyE,MAC/B,KAER,CAAEpyE,mBAPW+Y,CAQbo5D,I,4GCxDF,MAAMtqF,EAAWC,yBAAe,CAC9BuqF,YAAa,CAAF,iDAIXlhE,QAAS,CAAF,uCAIPkmD,QAAS,CAAF,yCAWT,MAAMib,UAAyB93F,YAmC7BzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MASrC8wC,iCAAiCxiC,GAC3BtO,KAAKwF,MAAMjF,QAAQw7C,SAAWztC,EAAU/N,QAAQ+2B,QAClDt3B,KAAKwF,MAAM8nF,OAUfvoB,SAAS5kE,GACPH,KAAKwF,MAAM0oB,cAAcluB,KAAKwF,MAAMgC,GAAIrH,EAAKiC,MAQ/CsN,SACE,OACE1P,KAAKwF,MAAM2nC,MACT,cAAC,KAAD,CACEA,KAAMntC,KAAKwF,MAAM2nC,KACjB43B,SAAU/kE,KAAK+kE,SACfD,SAAU9kE,KAAKwF,MAAMs/D,SACrBpkD,SAAU,CAAEte,KAAMpC,KAAKwF,MAAMpD,MAC7B6G,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASwqF,aAC9C5wF,OAAQ,CACNoN,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASspB,SAC9ChkB,OAAQ,CAAC,UAGbzL,WAAY,CACVjT,KAAM,CACJ6G,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASwvE,SAC9C5qF,KAAM,SACNwhC,YAAa,KAGjBjmB,SAAU,CAAC,Y,IA3FjBsqF,E,eAwBkB,CACpBz+F,GAAI,GACJpF,KAAM,KAyEKoqC,sBACbC,aACAC,kBACG97B,IAAD,CACErQ,QAASqQ,EAAMwuC,SAAS3C,SAE1B,CAAEvuB,qBANSse,CAQby5D,I,6BC7IF,6CAMA,MAAMzqF,EAAWC,yBAAe,CAC9ByrE,KAAM,CAAF,iCAIJ3qC,KAAM,CAAF,mCAiES2pD,IA3Dc1gG,IAAU,MACrC,MAAM,SAAE5E,GAAaC,KACf,MAAEiT,GAAUtO,EACZ++B,EAAOkE,oBACPl1B,EAAWwwD,wBAAcxwD,SACzBjC,EAAOiC,EAASnJ,MAAM,KAAK,GAEjC,OACE,eAAC,aAAD,WACGxJ,EAAS8uB,gBACR,qCACE,cAAC,OAAD,CACEyhB,GAAG,YACHjhC,UAAU,UACVjH,MAAOs7B,EAAK5jB,cAAcnF,EAAS+gC,MAHrC,SAKGhY,EAAK5jB,cAAcnF,EAAS+gC,QAE/B,cAAC,aAAWlQ,QAAZ,OAGHzrC,EAAS8uB,iBAAkBnc,SAAA,UAAAA,EAAUnJ,MAAM,YAAhB,eAAsBpI,QAAS,GACzD,cAAC,OAAD,CACEmvC,GAAK,IAAG7/B,aACRpB,UAAU,UACVjH,MAAOs7B,EAAK5jB,cAAcnF,EAAS0rE,MAHrC,SAKG51E,KAGH1Q,EAAS8uB,gBACT,cAAC,OAAD,CACEyhB,GAAG,YACHjhC,UAAU,UACVjH,MAAOs7B,EAAK5jB,cAAcnF,EAAS0rE,MAHrC,SAKG3iD,EAAK5jB,cAAcnF,EAAS0rE,QAGhCpzE,EAAMvQ,IAAI,CAAC4iG,EAAYt6F,EAAOszC,IAAgB,CAC7C,cAAC,aAAW9S,QAAZ,GAA0B,WAAU85D,EAAWvkG,KAC/CiK,EAAQszC,EAAYn9C,OAAS,EAC3B,cAAC,OAAD,CAEEmvC,GAAOg1D,EAAWvkG,IAAb,YACLsO,UAAU,UAHZ,SAKGi2F,EAAWC,WAAaD,EAAWl9F,OAJ/Bk9F,EAAWvkG,KAOlB,cAAC,aAAWwqC,QAAZ,CAAyC8B,QAAM,EAA/C,SACGi4D,EAAWC,WAAaD,EAAWl9F,OADbk9F,EAAWvkG,Y,6TCzD9C,MAAMykG,EAAc,CAClB,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,MACA,SACA,SACA,WACA,WACA,WACA,WAQWC,EAA+B,EAC1C/hE,OACA1I,QACAhC,QACAyyC,oBACAH,oBACAO,gBAEAP,EACEG,EACE,oBACEp8D,UAAcm2F,EAAYxqE,EAAQ,GAAtB,QACZ/tB,MAAO,CAAEy4F,QAAS75B,EAAa,GAAM,EAAG85B,OAAQ,QAFlD,SAIGjiE,EAAK5jB,cAAc,CAClBnZ,GAAIqyB,EACJkS,eAAgBlS,QAoEX1B,gBAAe,WAAfA,CA/CY3yB,IACzB,MAAM,WAAEkmE,EAAF,WAAcC,GAAenmE,EAAMomE,SAEnC66B,EAAkCl6F,IAAMi0B,QAC5C,IACEkrC,EACE,QACA,CACEI,MAAMtmE,EAAOumE,GACX,MAAMC,EAAYD,EAAQE,UAAUj9C,MAC9Bk9C,EAAa1mE,EAAMwpB,MAErBg9C,IAAcE,IAIlB1mE,EAAMkhG,aAAa16B,EAAWE,EAAaF,GAE3CD,EAAQE,UAAUj9C,MAAQk9C,KAG7Bx/B,IAAD,CACEy/B,kBAAmBz/B,EAAQ0/B,eAjB/BV,CAoBEC,EACE,QACA,CACEU,UAAU7mE,IACD,CACLgC,GAAIhC,EAAMq0B,MACV7K,MAAOxpB,EAAMwpB,SAInB,CAAC0d,EAASq/B,KAAV,CACEO,kBAAmB5/B,EAAQ6/B,aAC3BG,WAAYX,EAAQW,eAZxBf,CAcEl/B,qBAAW65D,KAEjB,CAAC36B,EAAYD,IAGf,OAAO,cAAC+6B,E,iWAAD,IAAqCjhG,O,gkBCvF9C,MAAMgW,EAAWC,yBAAe,CAC9BkrF,QAAS,CAAF,uCAIPC,UAAW,CAAF,2CAITC,SAAU,CAAF,yCAIRC,MAAO,CAAF,mCAILC,kBAAmB,CAAF,2DAIjBC,KAAM,CAAF,mCAMN,SAASzhE,EAASn4B,GAChB,OAAQA,GACN,IAAK,UACH,MAAO,UACT,IAAK,YACH,MAAO,UACT,IAAK,WACH,MAAO,UACT,IAAK,QACH,MAAO,UACT,QACE,MAAO,QASN,MAAM65F,EAAwB,EACnClzF,OACAuvB,WACA3D,UACA+d,UACAwpD,QACAC,SACAz1C,WACA01C,cACAC,iBACA76B,qBACAF,oBACAH,oBACAO,aACA19C,YAEA,MAAMuV,EAAOkE,oBAEb,OAAO0jC,EACLK,EACE,qBAAsBt8D,UAAW24B,IAAG,GAAI,CAAE,eAAgB6jC,IAA1D,UACE,cAAC,QAAM7F,KAAP,CAAY32D,UAAW24B,IAAG,GAAI,CAAE,gBAAiB6jC,IAAjD,SACGJ,EACC,qBAAKx+D,MAAO,CAAEuuB,QAAS,gBAAvB,SACE,cAAC,SAAD,CAAQgN,MAAI,EAACD,OAAK,EAAlB,SACE,cAAC,KAAD,CACE9rC,KAAM06E,IACNlkD,KAAK,OACLmG,MAAM,UACN/pB,UAAU,+BAMpB,cAAC,QAAM22D,KAAP,CAAY32D,UAAW24B,IAAG,GAAI,CAAE,gBAAiB6jC,IAAjD,SACGppC,EACC,cAAC,SAAD,CACE+F,MAAI,EACJD,OAAK,EACLj3B,aAAW,YACXwtB,QAAU3iC,GAAM2iC,EAAQ3iC,EAAG+W,EAAK,QAJlC,SAME,cAAC,KAAD,CACEzW,KAAMgqG,IACNrtE,MAAM,UACNnG,KAAK,OACL5jB,UAAU,cAId,cAAC,SAAD,CACEm5B,MAAI,EACJD,OAAK,EACLj3B,aAAW,UACXwtB,QAAU3iC,GAAM2iC,EAAQ3iC,EAAG+W,EAAK,QAJlC,SAME,cAAC,KAAD,CACEzW,KAAMiqG,IACNttE,MAAM,UACNnG,KAAK,OACL5jB,UAAU,kBAKlB,cAAC,QAAM22D,KAAP,CAAY32D,UAAW24B,IAAG,GAAI,CAAE,gBAAiB6jC,IAAjD,SACE,eAAC,OAAD,CACEx8D,UAAU,kBACVihC,GAAK,GAAEp9B,EAAK,SAASA,EAAK60B,aAAe,YAAc,KAFzD,UAIE,sBAAK14B,UAAU,eAAf,UACE,cAAC,KAAD,CACE5S,KAAMwX,YAAef,EAAK,SAAUA,EAAK60B,cACzC9U,KAAK,OACL5jB,UAAU,cACV+pB,MAAM,UACNhxB,MAAO8K,EAAK,WACX,IACH,uBAAM9K,MAAO8K,EAAK9K,MAAlB,cAA2B8K,EAAK9K,YAET,SAAxB8K,EAAKyzF,gBACJ,IAAItgG,KAAK6M,EAAKyzF,gBAAgBt0F,WAC5B,IAAIhM,MAAOgM,WACX,cAAC,SAAD,CAAQhD,UAAU,gBAAgB4jB,KAAK,OAAvC,SACE,cAAC,mBAAD,CAAkBtsB,GAAG,UAAUukC,eAAe,mBAKvD,IAAI2R,EAAU7xC,IAAD,aACZ,eAAC,QAAMg7D,KAAP,CACE32D,UAAW24B,IAAG,GAAI,CAAE,gBAAiB6jC,IADvC,UAIkB,YAAf7gE,EAAMzL,OACJ2T,EAAKlI,EAAMrE,IACV,cAAC,mBAAD,CAAkBA,GAAG,MAAMukC,eAAe,QAE1C,cAAC,mBAAD,CAAkBvkC,GAAG,KAAKukC,eAAe,QAE7B,WAAflgC,EAAMzL,MACQ,iBAAbyL,EAAMrE,IACNuM,EAAKlI,EAAMrE,IACC,iBAAbqE,EAAMrE,IACL,gCACE,+BACE,cAAC,IAAD,CAAQyyB,MAAOsL,EAASxxB,EAAKlI,EAAMrE,KAAMssB,KAAK,WAE/CtY,EAASzH,EAAKlI,EAAMrE,KACjB+8B,EAAK5jB,cAAcnF,EAASzH,EAAKlI,EAAMrE,MACvCuM,EAAI,cACJA,EAAI,cACJwwB,EAAK5jB,cAAcnF,EAASurF,sBAGpB,SAAfl7F,EAAMzL,MACL,mCACsB,SAAnB2T,EAAKlI,EAAMrE,IACV,cAAC,KAAD,CAAe2nC,KAAMp7B,EAAKlI,EAAMrE,MAEhC+8B,EAAK5jB,cAAcnF,EAASwrF,QAIlB,UAAfn7F,EAAMzL,MACL,yCAAO2T,EAAKlI,EAAMrE,WAAlB,aAAO,EAAgBvC,KAAK,UAjCzB4G,EAAMrE,MAqCf,cAAC,QAAMq/D,KAAP,CACE32D,UAAW24B,IAAG,GAAI,CAAE,gBAAiB6jC,IACrC5f,UAAU,QAFZ,SAIE,cAAC,WAAD,CACE58C,UAAU,cACVm5B,KAAM,cAAC,KAAD,CAAM/rC,KAAMmqG,IAAS3zE,KAAK,OAAOmG,MAAM,YAF/C,SAIE,eAAC,WAAS+tD,KAAV,CAAe93E,UAAU,OAAzB,UACE,eAAC,OAAD,CAAMA,UAAU,kBAAkBihC,GAAOp9B,EAAK,OAAP,QAAvC,UACE,cAAC,KAAD,CAAMzW,KAAMglE,IAAYroC,MAAM,UAAUnG,KAAK,SAAU,IACvD,cAAC,mBAAD,CAAkBtsB,GAAG,OAAOukC,eAAe,YAE7C,eAAC,OAAD,CAAM77B,UAAU,iCAAiCihC,GAAIp9B,EAAK,OAA1D,UACE,cAAC,KAAD,CAAMzW,KAAMw/E,IAAS7iD,MAAM,UAAUnG,KAAK,SAAU,IACpD,cAAC,mBAAD,CAAkBtsB,GAAG,OAAOukC,eAAe,YAE7C,cAAC,WAASM,QAAV,IACA,eAAC,WAASia,KAAV,CACE3mB,QAASunE,EACTlpG,MAAO+V,EAAK,OACZ7D,UAAU,4BAHZ,UAKE,cAAC,KAAD,CAAM5S,KAAMioG,IAAQtrE,MAAM,UAAUnG,KAAK,SAAU,IACnD,cAAC,mBAAD,CAAkBtsB,GAAG,MAAMukC,eAAe,WAE5C,eAAC,WAASua,KAAV,CACE3mB,QAASwnE,EACTnpG,MAAO+V,EAAK,OACZ7D,UAAU,4BAHZ,UAKE,cAAC,KAAD,CAAM5S,KAAMkoG,IAASvrE,MAAM,UAAUnG,KAAK,SAAU,IACpD,cAAC,mBAAD,CAAkBtsB,GAAG,OAAOukC,eAAe,YAE7C,eAAC,WAASua,KAAV,CACE3mB,QAAS+xB,EACT1zD,MAAO+V,EAAK,OACZ7D,UAAU,4BAHZ,UAKE,cAAC,KAAD,CAAM5S,KAAM2zD,IAAWh3B,MAAM,UAAUnG,KAAK,SAAU,IACtD,cAAC,mBAAD,CAAkBtsB,GAAG,SAASukC,eAAe,cAE/C,cAAC,WAASM,QAAV,IACA,eAAC,WAASia,KAAV,CACE3mB,QAASynE,EACTppG,MAAOgxB,EACP9e,UAAU,4BAHZ,UAKE,cAAC,KAAD,CAAM5S,KAAMoqG,IAAWztE,MAAM,UAAUnG,KAAK,SAAU,IACtD,cAAC,mBAAD,CACEtsB,GAAG,wBACHukC,eAAe,6BAGnB,eAAC,WAASua,KAAV,CACE3mB,QAAS0nE,EACTrpG,MAAOgxB,EACP9e,UAAU,4BAHZ,UAKE,cAAC,KAAD,CAAM5S,KAAMqqG,IAAa1tE,MAAM,UAAUnG,KAAK,SAAU,IACxD,cAAC,mBAAD,CACEtsB,GAAG,2BACHukC,eAAe,yCA5KlBh4B,EAAK,WAuRLokB,gBAAe,WAAfA,CA/DY3yB,IACzB,MAAM,WAAEkmE,EAAF,WAAcC,GAAenmE,EAAMomE,SAEnCg8B,EAA2Br7F,IAAMi0B,QACrC,IACEkrC,EACE,OACA,CACEI,MAAMtmE,EAAOumE,GACX,MAAMvkE,EAAKukE,EAAQE,UAAUzkE,GACvBwkE,EAAYD,EAAQE,UAAUj9C,MAC9Bk9C,EAAa1mE,EAAMwpB,MAErBg9C,IAAcE,IAIlB1mE,EAAMqiG,YAAYrgG,EAAIwkE,EAAWE,EAAaF,GAAW,GAEzDD,EAAQE,UAAUj9C,MAAQk9C,IAE5B47B,KAAKtiG,EAAOumE,GACV,MAAMvkE,EAAKukE,EAAQE,UAAUzkE,GACvBwkE,EAAYD,EAAQE,UAAU87B,WAC9BC,EAAYxiG,EAAMwpB,MAEpBg9C,IAAcg8B,IAIlBxiG,EAAMqiG,YAAYrgG,EAAIwkE,EAAWg8B,EAAYh8B,GAAW,GAExDD,EAAQE,UAAUj9C,MAAQg5E,KAG7Bt7D,IAAD,CACEy/B,kBAAmBz/B,EAAQ0/B,eA/B/BV,CAkCEC,EACE,OACA,CACEU,UAAU7mE,IACD,CACLgC,GAAIhC,EAAMuO,KAAK,OACfib,MAAOxpB,EAAMwpB,MACb+4E,WAAYviG,EAAMwpB,SAIxB,CAAC0d,EAASq/B,KAAV,CACEO,kBAAmB5/B,EAAQ6/B,aAC3BC,mBAAoB9/B,EAAQ+/B,cAC5BC,WAAYX,EAAQW,eAdxBf,CAgBEs7B,IAEN,CAACt7B,EAAYD,IAGf,OAAO,cAACk8B,E,iWAAD,IAA8BpiG,O,01BCvVvC,MAAMoqD,EAAWvwD,IAAS,CAAD,iIAAC,IAAM,6CAAP,qMAEnBmc,EAAWC,yBAAe,CAC9Ba,OAAQ,CAAF,qCAIN2rF,OAAQ,CAAF,yKAQFC,EAAa,eAOnB,MAAMC,UAA4Bh6F,YAwBhCzO,YAAY8F,GACVmkC,MAAMnkC,GADW,kBAgDV85E,UACP,IAAK,IAAI1iF,EAAI,EAAGA,EAAI2zD,EAAMvuD,OAAQpF,UAC1B6zD,wBAAcF,EAAM3zD,IAAI4F,KAAMrC,IAClC,MAAM2gB,EAAS3gB,EAAKimC,MAAM,yBAC1BmqB,EAAM3zD,GAAGypE,QAAUvlD,EAAO,KAG9B9gB,KAAKoqC,SAAS,CACZmmB,MAAO,IAAOvwD,KAAK4Q,MAAM2/C,MAAOA,OAtDlCvwD,KAAKooG,aAAepoG,KAAKooG,aAAa7pG,KAAKyB,MAC3CA,KAAKswD,OAAStwD,KAAKswD,OAAO/xD,KAAKyB,MAC/BA,KAAK8kE,SAAW9kE,KAAK8kE,SAASvmE,KAAKyB,MACnCA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MACnCA,KAAK4Q,MAAQ,CACX2/C,MAAO,IAUXzf,iCAAiCxiC,GAC3BtO,KAAKwF,MAAMjF,QAAQw7C,SAAWztC,EAAU/N,QAAQ+2B,SAClDt3B,KAAKwF,MAAM8nF,OACXttF,KAAKoqC,SAAS,CACZmmB,MAAO,MAWb63C,aAAa3iF,GACXzlB,KAAKoqC,SAAS,CACZmmB,MAAO,IACLvwD,KAAK4Q,MAAM2/C,MACX,CAACC,EAAM3kD,IACLA,IAAU0uD,SAAS90C,EAAM2H,OAAOljB,aAAa,SAAU,OA4B/D46D,WACE9kE,KAAKwF,MAAMs/D,WACX9kE,KAAKoqC,SAAS,CACZmmB,MAAO,KASXwU,WACE9nE,QAAQ04C,IAAI,IAAI31C,KAAK4Q,MAAM2/C,MAAQC,GAASC,wBAAcD,KAAQhuD,KAC/D+tD,IACCvwD,KAAKwF,MAAM2oB,cACTnuB,KAAKwF,MAAM+N,SACX,IAAIvT,KAAK4Q,MAAM2/C,MAAO,CAACC,EAAM3kD,KAC3B,MAAMiV,EAASyvC,EAAM1kD,GAAOu6B,MAAM,yBAC5BmG,EAAoC,UAA5BzrB,EAAO,GAAG1W,MAAM,KAAK,GACnC,MAAO,CACL,QAASmiC,EAAQ,QAAU,OAC3BtjC,MAAOunD,EAAKlzD,KACZ,CAACivC,EAAQ,QAAU,QAAS,CAC1BpsC,KAAM2gB,EAAO,GACbq3B,SAAUr3B,EAAO,GACjB,eAAgBA,EAAO,GACvB4vC,SAAUF,EAAKlzD,SAIrB4qG,KAWRx4F,SACE,OACE1P,KAAKwF,MAAM2nC,MACT,eAAC,QAAD,CAAOA,KAAMntC,KAAKwF,MAAM2nC,KAAxB,UACE,cAAC,SAAD,UACE,cAAC,mBAAD,CAAkB3lC,GAAG,eAAeukC,eAAe,mBAErD,cAAC,SAAD,CAAQmC,OAAQluC,KAAKwF,MAAMjF,QAAQw7C,QAAnC,SACE,cAAC,SAAD,UACE,cAAC,mBAAD,CACEv0C,GAAG,kBACHukC,eAAe,wBAIrB,eAAC,QAAMqyB,QAAP,WACE,cAACxO,EAAD,CACEU,OAAQtwD,KAAKswD,OACbpgD,UAAU,WACVm4F,sBAAsB,EACtB9pD,UAAU,EAJZ,SAMG,EAAGuS,eAAcC,mBAChB,2BAASD,EAAa,CAAE5gD,UAAW,YAAnC,aACE,cAAC,UAAD,UACE,cAAC,QAAD,CAAOk5B,MAAM,OAAb,SACE,cAAC,QAAMw9B,KAAP,UACE,eAAC,QAAMxM,IAAP,WACE,cAAC,QAAMyM,KAAP,UACE,cAAC,mBAAD,CACEr/D,GAAG,sFACHukC,eAAe,0FAGnB,eAAC,QAAM86B,KAAP,WACE,cAAC,SAAD,CAAQ32D,UAAU,oBAAlB,SACE,cAAC,mBAAD,CACE1I,GAAG,SACHukC,eAAe,aAGnB,2BACMglB,EAAc,CAChB3wD,KAAM,OACN0N,MAAO,CAAEuuB,QAAS,6BAWrCr8B,KAAK4Q,MAAM2/C,MAAMvuD,OAAS,GACzB,eAAC,QAAD,CAAOw1E,SAAO,EAACggB,YAAU,EAAzB,UACE,cAAC,QAAMh1B,OAAP,UACE,eAAC,QAAMpI,IAAP,WACE,cAAC,QAAMuM,WAAP,CAAkB9qC,MAAO,EAAzB,SACE,cAAC,mBAAD,CACEr0B,GAAG,WACHukC,eAAe,eAGnB,cAAC,QAAM46B,WAAP,CAAkB9qC,MAAO,EAAzB,SACE,cAAC,mBAAD,CACEr0B,GAAG,gBACHukC,eAAe,oBAGnB,cAAC,QAAM46B,WAAP,CAAkB9qC,MAAO,EAAzB,SACE,cAAC,mBAAD,CACEr0B,GAAG,YACHukC,eAAe,gBAGnB,cAAC,QAAM46B,WAAP,CAAkB9qC,MAAO,EAAzB,SACE,cAAC,mBAAD,CAAkBr0B,GAAG,UAAUukC,eAAe,cAEhD,cAAC,QAAM46B,WAAP,SAGJ,cAAC,QAAMC,KAAP,UACG,IAAI5mE,KAAK4Q,MAAM2/C,MAAO,CAACC,EAAM3kD,IAC5B,eAAC,QAAMuuD,IAAP,CAAWlqD,UAAU,aAArB,UACE,cAAC,QAAM22D,KAAP,UAAarW,EAAKlzD,OAClB,cAAC,QAAMupE,KAAP,UACGrW,EAAK83C,kBACJ,cAAC,KAAD,CAAuBn5D,KAAMqhB,EAAK83C,qBAGtC,cAAC,QAAMzhC,KAAP,UACG0hC,IAAS/3C,EAAK18B,KAAM,CAAEqc,MAAO,MAEhC,cAAC,QAAM02B,KAAP,UAC+B,UAA5BrW,EAAKpwD,KAAKgK,MAAM,KAAK,IACpB,cAAC,QAAD,CAAO4iD,IAAKwD,EAAK6V,QAASxtC,OAAQ,OAGtC,cAAC,QAAMguC,KAAP,UACE,cAAC,OAAD,CACEvpE,KAAK,QACLU,MAAO6N,EACP6B,MAAI,EACJiyB,QAAS3/B,KAAKooG,mBApBmB53C,EAAKlzD,eA6BtD,eAAC,QAAMslE,QAAP,WACG5iE,KAAK4Q,MAAM2/C,MAAMvuD,OAAS,GACzB,cAAC,SAAD,CACEonC,OAAK,EACL+qD,UAAQ,EACRp5D,SAAO,EACPqyB,QAAQ,QACR/jB,KAAK,cACLl3B,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASysF,OAAQ,CACzD/sC,MAAOl7D,KAAK4Q,MAAM2/C,MAAMvuD,SAE1B29B,QAAS3/B,KAAK+kE,SACd97D,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASysF,OAAQ,CACpD/sC,MAAOl7D,KAAK4Q,MAAM2/C,MAAMvuD,SAE1B8xB,KAAK,QAGT,cAAC,SAAD,CACEsV,OAAK,EACL+qD,UAAQ,EACRjoD,WAAS,EACT7C,KAAK,SACLl3B,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,QACnDrT,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASc,QAC9C8wC,QAAQ,QACRt5B,KAAK,MACL6L,QAAS3/B,KAAK8kE,kBASbt4B,sBACbC,aACAC,kBACG97B,IAAD,YAAY,CACVrQ,SAAS,UAAAqQ,EAAM7D,QAAQ4/B,mBAAd,eAA4Bu7D,KAAe,KAEtD,CAAE/5E,oBANSqe,CAQb27D,I,8HCpUF,MAAM3sF,EAAWC,yBAAe,CAC9BpG,WAAY,CAAF,6CAIVyvB,QAAS,CAAF,uCAIP0jE,eAAgB,CAAF,uDAIdC,qBAAsB,CAAF,mOAMpBC,aAAc,CAAF,uDAIZC,mBAAoB,CAAF,2MAMlBC,YAAa,CAAF,qCAIXC,kBAAmB,CAAF,mJAKjBC,cAAe,CAAF,yCAIbC,oBAAqB,CAAF,iUAMnBC,oBAAqB,CAAF,uEAInBC,0BAA2B,CAAF,qJAY3B,MAAMC,UAAgC/6F,YAwBpCzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MASrC8wC,iCAAiCxiC,GAC3BtO,KAAKwF,MAAMjF,QAAQw7C,SAAWztC,EAAU/N,QAAQ+2B,QAClDt3B,KAAKwF,MAAM8nF,OAUfvoB,SAAS5kE,GACH,IAAQA,GACVH,KAAKwF,MAAM8nF,OAEXttF,KAAKwF,MAAM8oB,cACTtuB,KAAKwF,MAAMsO,MACX,IAAI9T,KAAKwF,MAAMsO,MAAO,IAAM3T,IAUlCuP,SACE,OACE1P,KAAKwF,MAAM2nC,MACT,cAAC,KAAD,CACEA,KAAMntC,KAAKwF,MAAM2nC,KACjB43B,SAAU/kE,KAAK+kE,SACfD,SAAU9kE,KAAKwF,MAAMs/D,SACrB77D,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASnG,YAC9CD,OAAQ,CACNoN,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASspB,SAC9ChkB,OAAQ,CACN,YACA,UACA,SACA,WACA,sBAINzL,WAAY,CACV8zF,UAAW,CACTvnE,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAASitF,sBAEXx/F,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASgtF,gBAC9CpoG,KAAM,SACN4gB,OAAQ,YAEVjO,QAAS,CACP6uB,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAASmtF,oBAEX1/F,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASktF,cAC9CtoG,KAAM,SACN4gB,OAAQ,YAEVooF,OAAQ,CACNxnE,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAASqtF,mBAEX5/F,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASotF,aAC9CxoG,KAAM,SACN4gB,OAAQ,YAEVqoF,SAAU,CACRznE,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAASutF,qBAEX9/F,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASstF,eAC9C1oG,KAAM,SAERkpG,iBAAkB,CAChB1nE,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAASytF,2BAEXhgG,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAASwtF,qBAEX5oG,KAAM,QACNmjD,QAAS,CACP,EAAC,EAAM,OACP,EAAC,EAAO,SAId5nC,SAAU,OAQP6wB,sBACbC,aACAC,kBACG97B,IAAD,CACErQ,QAASqQ,EAAM7D,QAAQ0vC,SAEzB,CAAEnuB,qBANSke,CAQb08D,I,gJCnNF,MAAM1tF,EAAWC,yBAAe,CAC9B8tF,YAAa,CAAF,iDAIXzkE,QAAS,CAAF,uCAIP77B,MAAO,CAAF,mCAILugG,UAAW,CAAF,6CAITC,qBAAsB,CAAF,uGAIpBtL,eAAgB,CAAF,wEAWhB,MAAMuL,UAA4Bv7F,YA8BhCzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MASrC8wC,iCAAiCxiC,GAC3BtO,KAAKwF,MAAMjF,QAAQw7C,SAAWztC,EAAU/N,QAAQ+2B,QAClDt3B,KAAKwF,MAAM8nF,OAUfvoB,SAAS5kE,GACPH,KAAKwF,MAAM8oB,cACT,IAAItuB,KAAKwF,MAAMsO,MAAQC,GAASA,EAAKnS,KACrC,IAAI5B,KAAKwF,MAAMsO,MAAO,CAACC,EAAMlI,KAAP,CACpBrE,GAAIrH,EAAQ0L,EAAF,OACV5C,MAAO9I,EAAQ0L,EAAF,cAUnB6D,SACE,OACE1P,KAAKwF,MAAM2nC,MACT,cAAC,KAAD,CACEA,KAAMntC,KAAKwF,MAAM2nC,KACjB4O,QAAS/7C,KAAKwF,MAAMjF,QAAQw7C,QAC5BoiD,eAAgBn+F,KAAKwF,MAAM++B,KAAK5jB,cAC9BnF,EAAS2iF,gBAEXp5B,SAAU/kE,KAAK+kE,SACfD,SAAU9kE,KAAKwF,MAAMs/D,SACrBpkD,SAAU,OACL,IAAI1gB,KAAKwF,MAAMsO,MAAO,CAACC,EAAMlI,KAAP,CACvB,CAAIA,EAAF,UAAkBkI,EAAK9K,MACzB,CAAI4C,EAAF,OAAekI,EAAKvM,OAG1ByB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS+tF,aAC9Cn0F,OAAQ,CACNoN,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASspB,SAC9ChkB,OAAQ,OACH,IAAI9gB,KAAKwF,MAAMsO,MAAO,CAACC,EAAMlI,IAAU,CACrCA,EAAF,SACEA,EAAF,WAKTwJ,WAAY,OACP,IAAIrV,KAAKwF,MAAMsO,MAAO,CAACC,EAAMlI,KAAP,CACvB,CAAIA,EAAF,UAAkB,CAClB5C,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASvS,OAC9C7I,KAAM,SACNwhC,YAAa,IAEf,CAAI/1B,EAAF,OAAe,CACf5C,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASguF,WAC9CppG,KAAM,KACNwhC,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAASiuF,2BAKjB9tF,SAAU,OAQP6wB,sBACbC,aACAC,kBACG97B,IAAD,CACErQ,QAASqQ,EAAM7D,QAAQ0vC,SAEzB,CAAEnuB,qBANSke,CAQbk9D,I,iLCnKF,MAAMluF,EAAWC,yBAAe,CAC9BqpB,QAAS,CAAF,uCAIP6kE,WAAY,CAAF,iDAIVC,qBAAsB,CAAF,2FAIpBC,iBAAkB,CAAF,uJAKhB1L,eAAgB,CAAF,qFAWhB,MAAM2L,UAA8B37F,YAiClCzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MAGrCurC,oBACEvrC,KAAKwF,MAAM4uB,YAAYp0B,KAAKwF,MAAMsO,OASpCg9B,iCAAiCxiC,GAC3BtO,KAAKwF,MAAMjF,QAAQw7C,SAAWztC,EAAU/N,QAAQ+2B,QAClDt3B,KAAKwF,MAAM8nF,OAUfvoB,UAAS,MAAEn0D,EAAF,iBAAS0jB,IACX1jB,GAIL5Q,KAAKwF,MAAM6uB,mBACT,IACE,IACE,OACK,IAAIr0B,KAAKwF,MAAMukG,UAAY3pD,GAAaA,EAAS9B,cAErDvqC,GAASA,EAAK,QAEhBwiB,GAAM,IAAKA,EAAEnsB,MAAM,QAAUwG,GAEhC0jB,GASJ5kB,SACE,OACE1P,KAAKwF,MAAM2nC,MACXntC,KAAKwF,MAAMukG,UAAU/nG,OAAS,GAC5B,cAAC,KAAD,CACEmrC,KAAMntC,KAAKwF,MAAM2nC,KACjB4O,QAAS/7C,KAAKwF,MAAMjF,QAAQw7C,QAC5BoiD,eAAgBn+F,KAAKwF,MAAM++B,KAAK5jB,cAC9BnF,EAAS2iF,gBAEXp5B,SAAU/kE,KAAK+kE,SACfD,SAAU9kE,KAAKwF,MAAMs/D,SACrB77D,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmuF,YAC9Cv0F,OAAQ,CACNoN,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASspB,SAC9ChkB,OAAQ,CAAC,QAAS,sBAGtBzL,WAAY,CACVzE,MAAO,CACLgxB,YAAa5hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,EAASquF,kBAEX5gG,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmuF,YAC9CvpG,KAAM,SACNmjD,QAAS,IACP,IACE,OACK,IACDvjD,KAAKwF,MAAMukG,UACV3pD,GAAaA,EAAS9B,cAG1B/nB,GAAMA,EAAEttB,OAEVigF,GAAM,CAAC,IAAKA,EAAE,OAAO9+E,MAAM,MAAO8+E,EAAEjgF,SAGzCqrB,iBAAkB,CAChBrrB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAASouF,sBAEXxpG,KAAM,YAGVub,SAAU,OAQP6wB,sBACbC,aACAC,kBACG97B,IAAD,CACErQ,QAASqQ,EAAMwvC,SAAS/B,WACxB0rD,UAAWn5F,EAAMwvC,SAAS7B,WAE5B,CAAEnqB,gBAAaC,0BAPJmY,CASbs9D,I,6GClLF,MAAMtuF,EAAWC,yBAAe,CAC9BqpB,QAAS,CAAF,uCAIPl6B,KAAM,CAAF,iCAIJo/F,aAAc,CAAF,qDAIZC,UAAW,CAAF,iDAWX,MAAMC,UAA0B/7F,YA6B9BzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MASrC8wC,iCAAiCxiC,GAC3BtO,KAAKwF,MAAMjF,QAAQw7C,SAAWztC,EAAU/N,QAAQ+2B,QAClDt3B,KAAKwF,MAAM8nF,OAUfvoB,UAAS,YAAEolC,EAAc,GAAhB,eAAoBC,EAAiB,KAC5CpqG,KAAKwF,MAAM8oB,cACT,IAAItuB,KAAKwF,MAAMsO,MAAQC,GAASA,EAAKnS,KACrC,IAAI5B,KAAKwF,MAAMsO,MAAQC,IAAD,YAAW,CAC/Bg+B,SAAU,IACL,IAAIs4D,KACL,UAACt2F,EAAKg+B,gBAAN,QAAkB,IACfxsC,OAAQrG,IAAOkrG,EAAeh6F,SAASlR,IACvCiH,OAAOgkG,SAYpBz6F,SACE,MAAM46F,EAAiB,IAClB,IAAID,IAAIrqG,KAAKwF,MAAMsO,MAAMvQ,IAAKwQ,GAASA,EAAKg+B,UAAUw4D,SAG3D,OACEvqG,KAAKwF,MAAM2nC,MACT,cAAC,KAAD,CACEA,KAAMntC,KAAKwF,MAAM2nC,KACjB43B,SAAU/kE,KAAK+kE,SACfD,SAAU9kE,KAAKwF,MAAMs/D,SACrB77D,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS5Q,MAC9CwK,OAAQ,CACNoN,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASspB,SAC9ChkB,OAAQ,CAAC,iBAAkB,iBAG/BzL,WAAY,CACV+0F,eAAgB,CACdhqG,KAAM,QACN4gB,OAAQ,QACR/X,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASwuF,cAC9CzmD,QAAS+mD,EAAe/mG,IAAKwC,GAAQ,CAACA,EAAKA,KAE7CokG,YAAa,CACX/pG,KAAM,QACN4gB,OAAQ,QACR/X,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASyuF,WAC9Cn2F,MAAO,CACLigB,WAAY,CAAE,MAAO,sCAI3BpY,SAAU,OAQP6wB,sBACbC,aACAC,kBACG97B,IAAD,CACErQ,QAASqQ,EAAM7D,QAAQ0vC,SAEzB,CAAEnuB,qBANSke,CAQb09D,I,6BCnKF,+EAiBA,MAAMM,UAAoBr8F,YA0BxBzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK4Q,MAAQ,GACb5Q,KAAK6rC,SAAW7rC,KAAK6rC,SAASttC,KAAKyB,MAQrC6rC,SAASpmB,GAAO,MAAEznB,IAChB,MAAO8kB,EAAM5Q,GAAQlU,EAAMoM,MAAM,KACjCpK,KAAKwF,MAAMutB,WAAWjQ,EAAM5Q,GAO9BxC,SACE,OACE,eAAC,QAAM0qD,IAAP,WACE,cAAC,QAAMyM,KAAP,CAAY32D,UAAU,WAAtB,SACGlQ,KAAKwF,MAAMsd,KAAKkjD,SACbhmE,KAAKwF,MAAMsd,KAAKkjD,SAChBhmE,KAAKwF,MAAMsd,KAAK2Q,WAErBzzB,KAAKwF,MAAMud,MAAMxf,IAAK2O,GACrB,cAAC,QAAM20D,KAAP,UACG7mE,KAAKwF,MAAMg1F,eACZx6F,KAAKwF,MAAMg1F,cAAcpqF,SAAS8B,EAAK1K,IACrC,cAAC,KAAD,CACElK,KAAM+8F,IACNvmE,KAAK,OACLmG,MAAM,UACNhxB,MAAO,cAGT,cAAC,WAAD,CACEkyD,QAASn7D,KAAKwF,MAAMsd,KAAKC,MAAM3S,SAAS8B,EAAK1K,IAC7CqkC,SAAU7rC,KAAK6rC,SACf7tC,MAAQ,GAAEgC,KAAKwF,MAAMsd,KAAKtb,MAAM0K,EAAK1K,QAb1B0K,EAAK1K,KAkBxB,cAAC,QAAMq/D,KAAP,CAAY/Z,UAAU,QAAtB,SACE,cAAC,WAAD,CAAUzjB,KAAK,sBAAf,SACE,cAAC,WAAS2+C,KAAV,CAAe93E,UAAU,OAAzB,SACE,eAAC,WAASo2C,KAAV,CACE3mB,QAAS3/B,KAAKwF,MAAMksD,SACpB1zD,MAAOgC,KAAKwF,MAAMsd,KAAK,OAFzB,UAIE,cAAC,KAAD,CAAMxlB,KAAM+gE,IAAUvqC,KAAK,SAC3B,cAAC,mBAAD,CAAkBtsB,GAAG,SAASukC,eAAe,sBAjCvC/rC,KAAKwF,MAAMsd,KAAK2Q,WA2CvBgZ,yBAAW+9D,I,8HC3F1B,MAAMC,UAAqBt8F,YA+BzBzO,YAAY8F,GACVmkC,MAAMnkC,GADW,uBAoBJklG,GACN1qG,KAAKwF,MAAMg1F,cAAcpqF,SAASs6F,IAnBzC1qG,KAAK6rC,SAAW7rC,KAAK6rC,SAASttC,KAAKyB,MAQrC6rC,SAASpmB,GAAO,MAAEznB,IAChB,MAAOw/C,EAAOtrC,GAAQlU,EAAMoM,MAAM,KAClCpK,KAAKwF,MAAMqY,aAAa2/B,EAAOtrC,GAgBjCxC,SACE,OACE,eAAC,QAAM0qD,IAAP,WACE,cAAC,QAAMyM,KAAP,UAAa7mE,KAAKwF,MAAMg4C,MAAMk+C,YAC7B17F,KAAKwF,MAAMud,MAAMxf,IAAK2O,GACrB,cAAC,QAAM20D,KAAP,UACG7mE,KAAKwF,MAAMg1F,eACZx6F,KAAKwF,MAAMg1F,cAAcpqF,SAAS8B,EAAK1K,KACvCxH,KAAKwF,MAAMg4C,MAAMz6B,MAAM3S,SAAS,iBAC9B,cAAC,KAAD,CACE9S,KAAM+8F,IACNvmE,KAAK,OACLmG,MAAM,UACNhxB,MAAO,cAGT,cAAC,WAAD,CACEkyD,QAC0B,uBAAxBn7D,KAAKwF,MAAMg4C,MAAMh2C,GACbxH,KAAK2qG,YAAYz4F,EAAK1K,IACtBxH,KAAKwF,MAAMg4C,MAAMz6B,MAAM3S,SAAS8B,EAAK1K,IAE3CqkC,SAAU7rC,KAAK6rC,SACf7tC,MAAQ,GAAEgC,KAAKwF,MAAMg4C,MAAMh2C,MAAM0K,EAAK1K,QAlB3B0K,EAAK1K,KAuBxB,cAAC,QAAMq/D,KAAP,CAAY/Z,UAAU,QAAtB,SACE,cAAC,WAAD,CAAUzjB,KAAK,sBAAf,SACE,cAAC,WAAS2+C,KAAV,CAAe93E,UAAU,OAAzB,SACE,eAAC,WAASo2C,KAAV,CACE3mB,QAAS3/B,KAAKwF,MAAMksD,SACpB1zD,MAAOgC,KAAKwF,MAAMg4C,MAAM,OAF1B,UAIE,cAAC,KAAD,CAAMlgD,KAAM+gE,IAAUvqC,KAAK,SAC3B,cAAC,mBAAD,CAAkBtsB,GAAG,SAASukC,eAAe,sBAlCvC/rC,KAAKwF,MAAMg4C,MAAMv0C,QA4CxBwjC,yBAAWg+D,I,gLC2EXtyE,gBAAe,UAAfA,CAhKG,EAChBzH,MACAC,MACAusE,aACAC,aACAt/D,OACAzoB,SACAw1F,cAEA,MAAM11E,EAAWgC,sBAAatmB,GAAUA,EAAM2zB,KAAK1O,QAC7Cg1E,EAAuB,CAC3B/7D,UAAW,OACXC,UAAW,SAEP+7D,EAAY,CAACC,EAAQC,IAClBJ,EAAQE,UAAUtmG,OAAOumG,GAASvmG,OAAOwmG,IAGlD,IAAIC,EAAOC,EAAUC,EACrB,GAAI/1F,EAAO4L,OACT,OAAQ5L,EAAO4L,QACb,IAAK,WACHiqF,EAAQH,EAAUp6E,aAAD,EAACA,EAAKvwB,KAAMwwB,aAAZ,EAAYA,EAAKxwB,MAClC,MACF,IAAK,WACH8qG,EAAQH,EACN,IAAIt7D,KAAKC,eAAeva,EAAU21E,GAAsB/kE,OACtD,IAAI5+B,KAAKwpB,IAEX,IAAI8e,KAAKC,eAAeva,EAAU21E,GAAsB/kE,OACtD,IAAI5+B,KAAKypB,KAGb,MACF,IAAK,OACH,MAAMklB,EAAM,IAAIp2C,IACVoyC,EAAU0+C,iCACVt/E,EAAQmlC,YAAezuC,OAAO6oF,OAAQ3+C,EAASgE,GACrDo1D,EAAQH,EACNz0B,IAAeC,qBACb,cAAC,WAAD,CAAUrlE,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAiB4gC,QAASA,EAA1B,SACE,cAAC,IAAD,CAAa9kC,QAASmwF,SAI5B7mB,IAAeC,qBACb,cAAC,WAAD,CAAUrlE,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAiB4gC,QAASA,EAA1B,SACE,cAAC,IAAD,CAAa9kC,QAASowF,UAK9B,MACF,IAAK,WACL,QACE8N,EAAQH,EAAUp6E,EAAKC,OAGF,WAAhBvb,EAAOhV,KAChB6qG,EAAQH,GAAUp6E,aAAA,EAAAA,EAAKggC,WAAYhgC,GAAKC,aAAA,EAAAA,EAAK+/B,WAAY//B,GAChC,UAAhBvb,EAAOhV,MAChB8qG,GAAYx6E,GAAO,IAAIntB,IAAK3G,IAAMA,aAAA,EAAAA,EAAGqM,QAASrM,GAC9CuuG,GAAYx6E,GAAO,IAAIptB,IAAK6nG,IAAMA,aAAA,EAAAA,EAAGniG,QAASmiG,GAC9CH,EAAQH,EAAUI,EAAUC,IAE5BF,EAAQH,GAAUp6E,aAAA,EAAAA,EAAKznB,QAASynB,GAAKC,aAAA,EAAAA,EAAK1nB,QAAS0nB,GAErD,OACE,eAAC,QAAD,CAAO6mD,SAAO,EAAC6zB,cAAY,YAA3B,UACE,cAAC,QAAM7oC,OAAP,UACE,cAAC,QAAMpI,IAAP,UACE,cAAC,QAAMuM,WAAP,CAAkB2kC,QAAS,EAA3B,SAA+Bl2F,EAAOnM,YAG1C,eAAC,QAAM29D,KAAP,WACY,UAAT/oC,GACC,eAAC,QAAMu8B,IAAP,WACE,cAAC,QAAMyM,KAAP,CAAYhrC,MAAO,EAAGmiC,cAAc,MAApC,SACE,sBACEhxD,wBAAyB,CACvBC,OAAQ,IACN,IACEg+F,EACCM,GACEA,EAAKC,SACH,0BAAyBD,EAAKvtG,iBAC/ButG,EAAKE,OAAU,SAAQF,EAAKvtG,gBAC9B,IAEJ,SAKR,cAAC,QAAM6oE,KAAP,CAAYhrC,MAAO,EAAGmiC,cAAc,MAApC,SACE,sBACEhxD,wBAAyB,CACvBC,OAAQ,IACN,IACEg+F,EACCM,GACEA,EAAKE,OACH,0BAAyBF,EAAKvtG,iBAC/ButG,EAAKC,SAAY,SAAQD,EAAKvtG,gBAChC,IAEJ,YAOF,YAAT6/B,GACC,cAAC,QAAMu8B,IAAP,UACE,cAAC,QAAMyM,KAAP,CAAYhrC,MAAO,GAAImiC,cAAc,MAArC,SACE,sBACEhxD,wBAAyB,CACvBC,OAAQ,IACN,IACEg+F,EACCM,GACEA,EAAKC,SACH,0BAAyBD,EAAKvtG,gBAChCutG,EAAKE,OACH,0BAAyBF,EAAKvtG,iBAC/ButG,EAAKE,OAAU,SAAQF,EAAKvtG,gBAElC,oB,0qBClKpB,MAAM0tG,EAAiB,CAACC,EAAYC,EAAaC,KAU/C,MAAMC,EAAgB,IAAIH,EAAW5/F,WAAWuD,UAEhDw8F,EAAcphG,OAAOkhG,EAAa,GAElCE,EAAcphG,QAAQ,EAAG,GACzB,MAAMqhG,EAAaJ,EAAW5/F,WAAWojD,wBACnC68C,EAAWF,EAAcD,EAAmB,GAC5CI,EAAWH,EAAcD,GAC/B,IAAIpwE,EAAKywE,EACT,GAAIF,EAAU,CACZ,MAAMG,EAAWH,EAAS78C,wBAC1B1zB,EAAM0wE,EAAS1wE,IAAM0wE,EAAStzE,OAASkzE,EAAWtwE,SAElDA,EAAM,EAER,GAAIwwE,EAAU,CAEZC,EADiBD,EAAS98C,wBACR1zB,IAAMswE,EAAWtwE,SAEnCywE,EACEH,EAAWG,OACXP,EAAWx8C,wBAAwBt2B,OACnCkzE,EAAWtwE,IAEf,MAAO,CACL2wE,QAAS3wE,EACT4wE,aAAcH,EAASzwE,EACvB6wE,QAASr5B,WACPtrE,OAAO4kG,iBAAiBZ,EAAW5/F,YAAYgwB,aAEjDywE,YAAab,EAAWa,cAoHbr0E,gBAAe,CAAC,qBAAhBA,CAhHO3yB,IACpB,MAAM,UACJmyE,EADI,SAEJroE,EAFI,WAGJsoE,EAHI,GAIJ5lE,EAAK,MAJD,MAKJlE,EALI,wBAMJ4pE,EANI,kBAOJpE,GACE9tE,GACE,gBAAEguE,EAAF,UAAmBD,EAAnB,UAA8BE,GAAcH,GAC3Cm5B,EAAkBC,GAAuBngG,IAAM8X,SAAS,KACxDsoF,GAAOpgG,IAAM8X,SAAS6e,gBAEvB0pE,EAAQrpF,iBAAO,MAEfspF,EAActgG,IAAMkX,YAAagC,IACrChe,aAAamlG,EAAMlnG,SACnB,MACMonG,EAAY,2BAAiBrnF,EAAMsuD,gBACnC43B,EAAa7hG,SAASiB,cAAc+hG,GAC1C,IAAKnB,EACH,OAEF,MAAMC,EAAcnmF,EAAM0H,OAAOthB,MACjC6gG,EAAoBhB,EAAeC,EAAYC,EAAaA,KAC3D,IAEGx5B,EAAY7lE,IAAMkX,YACrB5P,IACCpM,aAAamlG,EAAMlnG,SACnBkyE,EAAW/jE,GACX64F,EAAoB,KAEtB,CAAC90B,IAGGm1B,EAAexgG,IAAMkX,YAAag5B,IAGtC,GAFAh1C,aAAamlG,EAAMlnG,SACnBgnG,EAAoB,KACfjwD,EAAO9Z,YACV,OAEF,MAEMmqE,EAAY,2BAFErwD,EAAOs3B,gBAGrB43B,EAAa7hG,SAASiB,cAAc+hG,GAC1C,IAAKnB,EACH,OAEF,MAAMC,EAAcnvD,EAAOtvB,OAAOthB,MAC5BggG,EAAmBpvD,EAAO9Z,YAAY92B,MAE5C+gG,EAAMlnG,QAAU4B,WACd,IACEolG,EACEhB,EAAeC,EAAYC,EAAaC,IAE5C,MAED,IAEGmB,EAAiBh7F,EACvB,OACE,cAACwhE,EAAD,CACEq5B,YAAaA,EACbE,aAAcA,EACd36B,UAAWA,EAHb,SAKE,cAACqB,EAAD,CAAWJ,YAAas5B,EAAxB,SACG,CAAC34B,EAAUC,IACV,eAAC+4B,EAAD,KACE1pF,IAAK0wD,EAASE,UACVF,EAASi5B,gBAFf,IAGEn/F,MAAK,OAAOA,GAAP,IAAc81C,SAAU,aAC7B1J,kBAAiBw9B,EAJnB,UAMGC,EACEpyE,OAAO,EAAEiC,EAAIiH,KAAWjH,GAAMiH,GAC9BlL,IAAI,EAAEs0E,EAASppE,GAAQ5C,IACtB,cAAC0nE,EAAD,CACEQ,YAAa8D,EAAQprE,WACrBZ,MAAOA,EAEPiC,MAAO,CACLgjE,WAAY,QALhB,SAQIgH,GAAaxoE,EAAS,CAAEb,QAAOopE,UAAShsE,QAAOisE,cAL5CD,IAQV7D,EAASryC,aACR,IAAQ8qE,IAAqBx4B,EAASM,gBACtC,qBACEzmE,MAAO,CACL81C,SAAU,WACVnoB,IAAKgxE,EAAiBL,QACtBj1E,KAAMs1E,EAAiBH,QACvBzzE,OAAQ4zE,EAAiBJ,aACzBt7B,WAAY,OACZl1C,MAAO4wE,EAAiBD,YACxB5xE,aAAc,oB,6BCtJhC,kBAGA,MAAMsyE,EAAgB1pC,aAA4BqJ,MAEnCqgC,O,qpBC0FA/0E,gBAAe,CAAC,qBAAhBA,CA7E8B,EAE3ClvB,QACA+lB,QACAkf,SACA2jC,qBACAE,uBACApyC,UACAixC,eACA6D,cACAh4C,aACA62C,uBAEA,cAACA,EAAkBC,UAAnB,CAA6BQ,YAAa9qE,EAAO4C,MAAOmjB,EAAxD,SACG,CAACglD,EAAUC,IACV,0BACE/jE,UAAY,QAAMg+B,EAAS,UAAY,IACvCvO,QAAS,IAAMA,EAAQ3Q,GACvB1L,IAAK0wD,EAASE,UACVF,EAASG,gBAJf,IAKErmE,MAAO8iE,EAAaqD,EAASvH,WAAYsH,EAASG,eAAermE,OALnE,UAOG2mE,GACC,qBACEnF,cAAY,OACZp/D,UAAU,8BACN8jE,EAASI,kBAGhBnrE,GACCwzB,GACA,wBACEvsB,UAAU,0BACVyvB,QAAUla,IACRA,EAAMK,kBACNL,EAAMI,iBACNgsD,EAAmB7iD,IALvB,SAQE,cAAC,OAAD,CAAM1xB,KAAK,eAAew2B,KAAK,QAAQmG,MAAM,YAI/CwC,GACA,wBACEvsB,UAAU,0BACVyvB,QAAUla,IACRA,EAAMK,kBACNL,EAAMI,iBACNksD,EAAqB/iD,IALzB,SAQE,cAAC,OAAD,CAAM1xB,KAAK,QAAQw2B,KAAK,QAAQmG,MAAM,eAvCoBhxB,K,ssBCpBtE,MAAMuS,EAAWC,yBAAe,CAC9BknE,OAAQ,CAAF,uCAIN1e,iBAAkB,CAAF,2DAIhBkpC,QAAS,CAAF,2CA6FM1gE,yBAvFK,EAClBtsC,OACA+pC,QACAS,gBACAsC,oBACAtxB,YAAW,EACX++D,iBACAn2C,UAGE,eAAC,UAAQ7J,MAAT,CAAe+Q,QAAM,EAArB,UACE,wBAAQv7B,UAAU,gBAAlB,SACE,6BACE,cAAC,mBAAD,CAAkB1I,GAAG,MAAMukC,eAAe,aAI5C5rC,EAAKyB,KACL,mCACE,eAAC,UAAD,CAASsO,UAAU,6BAA6Bg8B,WAAS,EAAzD,UACE,cAAC,mBAAD,CACE1kC,GAAG,kBACHukC,eAAe,oBAEjB,cAAC,KAAD,CAAMzuC,KAAM8vG,IAAUt5E,KAAK,QAAQmG,MAAM,iBAI9C95B,EAAKyB,KACJ,mCACE,eAAC,UAAD,CAASsO,UAAU,0BAAnB,UACG/P,EAAKyB,KACJ,cAAC,KAAD,CACE4F,GAAG,WACHyB,MAAOs7B,EAAK5jB,cAAcnF,EAAS2xF,SACnCxxF,UAAU,EACV3d,MAAOmC,EAAKyB,IACZynC,KAAM7O,IACNyf,WAAY,KACVygC,IACA/vC,EAAcT,EAAD,OACR/pC,GADQ,IAEXyB,IAAK,OAGTiqC,SAAU,SAGd,cAAC,OAAKquB,MAAN,CAAYC,QAAM,EAACx+C,SAAUA,EAA7B,SACE,cAAC,OAAD,UACE,eAAC,OAAKy+C,IAAN,WACE,cAAC,OAAK3D,OAAN,CAAa56B,MAAM,IAAnB,SACE,qBAAK3rB,UAAU,UAAf,SACE,uBAAOoqD,QAAQ,cAAf,SACE,cAAC,mBAAD,CACE9yD,GAAG,YACHukC,eAAe,oBAKvB,cAAC,OAAK0qB,OAAN,CAAa56B,MAAM,IAAI3rB,UAAU,cAAjC,SACE,cAAC,IAAD,CACE89B,MAAO7tC,EAAK6tC,MACZrD,cAAeA,EACfxqC,KAAMA,EACN+pC,MAAOA,uB,kwBC9E7B,MAAM1uB,EAAWC,yBAAe,CAC9BknE,OAAQ,CAAF,uCAIN1e,iBAAkB,CAAF,2DAIhBopC,SAAU,CAAF,2CAIRC,cAAe,CAAF,6DA8LA7gE,yBAxLM,EACnBtsC,OACA+pC,QACAS,gBACAsC,oBACAtxB,YAAW,EACX++D,iBACAn2C,WACI,MACJ,MAAOgpE,EAAgBC,GAAqBnpF,mBAAS,GASrD,OACE,eAAC,UAAQqW,MAAT,CAAe+Q,QAAM,EAArB,UACE,wBAAQv7B,UAAU,gBAAlB,SACE,6BACE,cAAC,mBAAD,CAAkB1I,GAAG,QAAQukC,eAAe,eAI9C5rC,EAAKyB,KACL,mCACE,eAAC,UAAD,CAASsO,UAAU,6BAA6Bg8B,WAAS,EAAzD,UACE,cAAC,mBAAD,CACE1kC,GAAG,oBACHukC,eAAe,sBAEjB,cAAC,KAAD,CAAMzuC,KAAMmwG,IAAU35E,KAAK,QAAQmG,MAAM,iBAI9C95B,EAAKyB,KACJ,qCACE,eAAC,UAAD,CAASsO,UAAU,0BAAnB,UACG/P,EAAKyB,KACJ,qCACE,cAAC,KAAD,CACE4F,GAAG,WACHyB,MAAOs7B,EAAK5jB,cAAcnF,EAAS6xF,UACnC1xF,UAAU,EACV3d,MAAOmC,EAAKyB,IACZynC,KAAM7O,IACNyf,WAAY,KACVygC,IACA/vC,EAAcT,EAAD,OACR/pC,GADQ,IAEXyB,IAAK,OAGTiqC,SAAU,SAEZ,cAAC,KAAD,CACErkC,GAAG,sBACHyB,MAAOs7B,EAAK5jB,cAAcnF,EAAS8xF,eACnC3xF,UAAU,EACV3d,MACEsgC,YAAcn+B,EAAK4iF,eAAnB,UACI5iF,EAAK4iF,qBADT,aACI,EACIt+E,QAAQ,MAAO,IAChB2F,MAAM,KACNc,OAAO,GAAG,GACb/K,EAAK4iF,cAEX15C,KAAMlpC,EAAK4iF,cAAgBvoD,IAAWwf,IACtCC,WACE95C,EAAK4iF,cACD,KACEp4C,EAAcT,EAAD,OACR/pC,GADQ,IAEX4iF,cAAe,OAGnB,IACE91C,EAAkB,CAChB/uC,KAAM,QACNwsC,SAAU,kBAGpBmB,SAAU,CAACrkC,EAAIxJ,KACb2sC,EAAcT,EAAD,OACR/pC,GADQ,IAEX4iF,cAAe/kF,WAMzB,cAAC,OAAKk8D,MAAN,CAAYC,QAAM,EAACx+C,SAAUA,EAA7B,SACE,cAAC,OAAD,UACE,eAAC,OAAKy+C,IAAN,WACE,cAAC,OAAK3D,OAAN,CAAa56B,MAAM,IAAnB,SACE,qBAAK3rB,UAAU,UAAf,SACE,uBAAOoqD,QAAQ,cAAf,SACE,cAAC,mBAAD,CACE9yD,GAAG,YACHukC,eAAe,oBAKvB,cAAC,OAAK0qB,OAAN,CAAa56B,MAAM,IAAI3rB,UAAU,cAAjC,SACE,cAAC,IAAD,CACE89B,MAAO7tC,EAAK6tC,MACZrD,cAAeA,EACfxqC,KAAMA,EACN+pC,MAAOA,gBAOlB/pC,EAAKyB,IAAIwkC,MAAM,SACd,eAAC,YAAD,CAAWynC,OAAK,EAACC,QAAM,EAAC59D,UAAU,OAAlC,UACE,eAAC,YAAU69D,MAAX,CACE7/B,OAA2B,IAAnBq/D,EACR1hG,MAAO,EACP8zB,QAhHd,SAAwB3iC,EAAGsjG,GACzB,MAAM,MAAEz0F,GAAUy0F,EAGlBkN,EAFiBD,IAAmB1hG,GAAS,EAAIA,IA2GvC,0BAMsB,IAAnB0hG,EACC,cAAC,KAAD,CAAMjwG,KAAM+8B,IAAOvG,KAAK,SAExB,cAAC,KAAD,CAAMx2B,KAAMg9B,IAASxG,KAAK,YAG9B,eAAC,YAAUsqC,QAAX,CAAmBlwB,OAA2B,IAAnBq/D,EAA3B,UACE,cAAC,KAAD,CACE/lG,GAAG,OACHyB,MAAOs7B,EAAK5jB,cAAcnF,EAASmnE,QACnChnE,UAAU,EACV3d,MAAOu2B,YAAgBp0B,EAAKuR,MAC5B23B,KAAMlpC,EAAKuR,KAAO8oB,IAAWwf,IAC7BC,WACE95C,EAAKuR,KACD,KACEi5B,EAAcT,EAAD,OACR/pC,GADQ,IAEXuR,KAAM,OAGV,IAAMu7B,EAAkB,CAAE/uC,KAAM,SAEtC2tC,SAAU,CAACvuC,EAAMU,KACf2sC,EAAcT,EAAD,OACR/pC,GADQ,IAEXuR,KAAM6iB,YAAgBv2B,SAI5B,cAAC,IAAD,CACEwJ,GAAG,mBACHyB,MAAOs7B,EAAK5jB,cAAcnF,EAASyoD,kBACnCjmE,QAAOmC,EAAK8jE,kBAAmB9jE,EAAK8jE,iBACpCp4B,SAAU,CAACvuC,EAAMU,KACf2sC,EAAcT,EAAD,OACR/pC,GADQ,IAEX8jE,iBAAkBjmE,uB,iwBCrLxC,MAAMwd,EAAWC,yBAAe,CAC9Bq6C,MAAO,CAAF,mCAIL43C,OAAQ,CAAF,qCAINC,QAAS,CAAF,yCAIPC,MAAO,CAAF,2CAILjrB,OAAQ,CAAF,uCAIN1e,iBAAkB,CAAF,2DAIhB4pC,gBAAiB,CAAF,+FAIfC,YAAa,CAAF,mDA8JErhE,yBAxJU,EACvBp3B,aACAlV,OACA+pC,QACAS,gBACAsC,oBACAtxB,YAAW,EACXmxD,gBACAvoC,WAEA,MAAOgpE,EAAgBC,GAAqBnpF,mBAAS,GASrD,OACE,eAAC,UAAQqW,MAAT,CAAe+Q,QAAM,EAArB,UACE,wBAAQv7B,UAAU,gBAAlB,SACE,6BACE,cAAC,mBAAD,CAAkB1I,GAAG,aAAaukC,eAAe,oBAInD12B,EAAWk3B,OACX,mCACE,eAAC,UAAD,CAASr8B,UAAU,6BAA6Bg8B,WAAS,EAAzD,UACE,cAAC,mBAAD,CACE1kC,GAAG,2CACHukC,eAAe,6CAEjB,cAAC,KAAD,CAAMzuC,KAAMywG,IAAUj6E,KAAK,QAAQmG,MAAM,iBAI9C5kB,EAAWk3B,OACV,qCACE,eAAC,UAAD,CAASr8B,UAAU,6BAA6Bg8B,WAAS,EAAzD,UACG72B,EAAWk3B,MAAMmkB,SAClB,qBACE1D,IACE33C,EAAWk3B,MAAMpsC,KACZ,QAAOkV,EAAWk3B,MAAM,0BAA0Bl3B,EAAWk3B,MAAMpsC,OACpEo0B,YAAgBlf,EAAWk3B,MAAM0gB,OAAOsZ,KAAKpZ,UAEnDriB,IAAKz1B,EAAWmxD,eAAiB,QAGrC,eAAC,UAAD,CAASt2D,UAAU,0BAAnB,UACE,cAAC,KAAD,CACE1I,GAAG,MACHyB,MAAOs7B,EAAK5jB,cAAcnF,EAASmyF,SACnChyF,UAAU,EACV3d,MAAOqX,EAAWmxD,cAClBn9B,KAAMh0B,EAAWmxD,cAAgBhsC,IAAW,KAC5Cyf,WAAY,IAAM6yB,EAAc,gBAAiB,IACjDjhC,SAAU,CAACvuC,EAAMU,KACf8uE,EAAc,gBAAiB9uE,MAGnC,cAAC,OAAKk8D,MAAN,CAAYC,QAAM,EAACx+C,SAAUA,EAA7B,SACE,cAAC,OAAD,UACE,eAAC,OAAKy+C,IAAN,WACE,cAAC,OAAK3D,OAAN,CAAa56B,MAAM,IAAnB,SACE,qBAAK3rB,UAAU,UAAf,SACE,uBAAOoqD,QAAQ,cAAf,SACE,cAAC,mBAAD,CACE9yD,GAAG,YACHukC,eAAe,oBAKvB,cAAC,OAAK0qB,OAAN,CAAa56B,MAAM,IAAI3rB,UAAU,cAAjC,SACE,cAAC,IAAD,CACE89B,MAAO7tC,EAAK6tC,MACZrD,cAAeA,EACfxqC,KAAMA,EACN+pC,MAAOA,gBAOnB,eAAC,YAAD,CAAW2jC,OAAK,EAACC,QAAM,EAAC59D,UAAU,OAAlC,UACE,eAAC,YAAU69D,MAAX,CACE7/B,OAA2B,IAAnBq/D,EACR1hG,MAAO,EACP8zB,QAhFZ,SAAwB3iC,EAAGsjG,GACzB,MAAM,MAAEz0F,GAAUy0F,EAGlBkN,EAFiBD,IAAmB1hG,GAAS,EAAIA,IA2EzC,0BAMsB,IAAnB0hG,EACC,cAAC,KAAD,CAAMjwG,KAAM+8B,IAAOvG,KAAK,SAExB,cAAC,KAAD,CAAMx2B,KAAMg9B,IAASxG,KAAK,YAG9B,eAAC,YAAUsqC,QAAX,CAAmBlwB,OAA2B,IAAnBq/D,EAA3B,UACE,cAAC,KAAD,CACE/lG,GAAG,OACHyB,MAAOs7B,EAAK5jB,cAAcnF,EAASmnE,QACnChnE,UAAU,EACV3d,MAAOu2B,YAAgBp0B,EAAKuR,MAC5B23B,KAAMlpC,EAAKuR,KAAO8oB,IAAWwf,IAC7BC,WACE95C,EAAKuR,KACD,KACEi5B,EAAcT,EAAD,OACR/pC,GADQ,IAEXuR,KAAM,OAGV,IAAMu7B,EAAkB,CAAE/uC,KAAM,SAEtC2tC,SAAU,CAACvuC,EAAMU,KACf2sC,EAAcT,EAAD,OACR/pC,GADQ,IAEXuR,KAAM6iB,YAAgBv2B,SAI5B,cAAC,IAAD,CACEwJ,GAAG,mBACHyB,MAAOs7B,EAAK5jB,cAAcnF,EAASyoD,kBACnCjmE,QAAOmC,EAAK8jE,kBAAmB9jE,EAAK8jE,iBACpCp4B,SAAU,CAACvuC,EAAMU,KACf2sC,EAAcT,EAAD,OACR/pC,GADQ,IAEX8jE,iBAAkBjmE,uB,6BCtLtC,iB,spBC4BeyuC,yBAvBE,EAAGtsC,OAAM+pC,QAAOS,gBAAev1B,YAE5C,cAAC,IAAD,CACEA,OAAQA,EACRnM,MAAOmM,EAAOnM,MACd6jE,cAAe,CAACtlE,EAAIxJ,KAClB2sC,EAAcT,EAAD,OACR/pC,GADQ,IAEX,CAACqH,GAAKxJ,MAGV0iB,SAAUvgB,M,gFChBhB,8BAmFe6tG,IA/EcxoG,IAC3B,MAAM,gBACJyoG,EADI,sBAEJC,EAFI,UAGJC,EAHI,gBAIJC,EAJI,kBAKJC,EALI,MAMJplG,EANI,YAOJ24B,GACEp8B,EAAMuH,QA+BJuhG,EA7BsB,MAAM,cAChC,MAAM,8BAAEC,GAAkC1tG,IAAOD,SAC3C2rC,EAAQ/mC,EAAMuH,QAAQwhG,IACtB,gBAAEC,GAAoBhpG,EAAMuH,QAE5BuhG,EAAmB,CACvBG,iBAAiB,EACjB7sG,IAAK,KACLi3B,OAAQ,KACRgD,MAAO,MAiBT,OAfAyyE,EAAiBG,iBACfD,SAAA,UAAAA,EAAiBvhD,cAAjB,mBAAyB4sB,aAAzB,eAAgC1sB,YAChC5gB,SADA,UACAA,EAAO0gB,cADP,iBACA,EAAe4sB,aADf,aACA,EAAsB1sB,YACtB,EAEEmhD,EAAiBG,iBAAjBH,MAAoCE,GAApC,UAAoCA,EAAiBvhD,cAArD,OAAoC,EAAyB4sB,OAC/Dy0B,EAAiB1sG,IAAM4sG,EAAgBvhD,OAAO4sB,MAAM1sB,SACpDmhD,EAAiBz1E,OAAS21E,EAAgBvhD,OAAO4sB,MAAMhhD,OACvDy1E,EAAiBzyE,MAAQ2yE,EAAgBvhD,OAAO4sB,MAAMh+C,OAC7CyyE,EAAiBG,kBAC1BH,EAAiB1sG,IAAM2qC,EAAM0gB,OAAO4sB,MAAM1sB,SAC1CmhD,EAAiBz1E,OAAS0T,EAAM0gB,OAAO4sB,MAAMhhD,OAC7Cy1E,EAAiBzyE,MAAQ0Q,EAAM0gB,OAAO4sB,MAAMh+C,OAGvCyyE,GAGgBI,GAEzB,OACE,mCACE,eAAC,IAAD,WACE,gCAAQP,GAAallG,IACrB,sBAAM3L,KAAK,cAAcyP,QAASqhG,GAAmBxsE,IACrD,sBACEljC,SAAS,WACTqO,QAASkhG,GAAmBE,GAAallG,IAE3C,sBACEvK,SAAS,SACTqO,QAASshG,GAAqBr6F,aAAYxO,EAAMuH,QAAQ,UAEzDuhG,EAAiBG,iBAChB,sBACE/vG,SAAS,WACTqO,QAASiH,aAAYs6F,EAAiB1sG,OAGzC0sG,EAAiBG,iBAChB,sBAAM/vG,SAAS,iBAAiBqO,QAASuhG,EAAiBzyE,QAE3DyyE,EAAiBG,iBAChB,sBAAM/vG,SAAS,kBAAkBqO,QAASuhG,EAAiBz1E,UAE3Dq1E,GAAyBE,GAAmBxsE,IAC5C,sBACEljC,SAAS,iBACTqO,QAASmhG,GAAyBE,GAAmBxsE,IAGzD,sBAAMtkC,KAAK,eAAeyP,QAAQ,+B,gpBCpC3B4hG,IAlCO,EACpBx/D,OACArJ,SACAsJ,OACAC,cACAu/D,WACA1+F,YACA2lB,SACAvmB,eAEA,MAAM4lB,EAAWgC,sBAAatmB,GAAUilB,GAAUjlB,EAAM2zB,KAAK1O,QAEvDqR,EAAO,CAAEiI,OAAMC,OAAMC,cAAavJ,SAAQjQ,OAAQX,GAExD,OACE,sBACEhlB,UAAWA,EACX2+F,SAAU1/D,EACVlmC,MAAO,IAAIumC,KAAKC,eAAeva,EAAU8Z,KAAkBlJ,OACzD,IAAI5+B,MARM7J,EAQM8xC,EARc,iBAAN9xC,EAAiB,IAAI6J,KAAK7J,GAAKA,KAI3D,SAOGiS,EACGA,EACE4/B,YAAW,EAAD,KACLhI,GADK,IAERoI,eAAe,MAGnBJ,YAAWhI,KAlBH7pC,Q,ypBCsCHyxG,IAhDe,EAC5B3/D,OACArhC,QACA6hC,aACAz/B,YACA2lB,SACAvmB,WACAy/F,QAAO,EACPC,UAAU,QAEV,MAAM95E,EAAWgC,sBAAatmB,GAAUilB,GAAUjlB,EAAM2zB,KAAK1O,SACtDo5E,EAAgBC,GAAqB3iG,IAAM8X,SAChDsrB,EAAaV,YAAOU,GAAc,IAAIzoC,MAGlC+wD,EAAW1rD,IAAMgX,SAEvBhX,IAAMqX,UAAU,KACVmrF,IACF92C,EAASvyD,QAAUypG,YAAY,KAC7BD,EAAkB,IAAIhoG,OACrB8nG,IAEE,IAAM/2C,EAASvyD,SAAW0pG,cAAcn3C,EAASvyD,UACvD,CAACspG,EAASD,IAEb,MAAM7nE,EAAO,CAAErR,OAAQX,EAAUia,OAAMrhC,QAAO6hC,WAAYs/D,GAE1D,OACE,sBACE/+F,UAAWA,EACX2+F,SAAU1/D,EACVlmC,MAAO,IAAIumC,KAAKC,eAAeva,EAAU8Z,KAAkBlJ,OACzD,IAAI5+B,KAAKioC,IAJb,SAOG7/B,EACGA,EACEogC,YAAmB,EAAD,KACbxI,GADa,IAEhBoI,eAAe,MAGnBI,YAAmBxI,O,wUCjCd/4B,IAZG,IAAgC,UAA/B,cAAEkhG,GAA6B,EAAX7qE,EAAW,SAChD,MAAMr2B,EAAS,UAAG8d,IAAS/uB,QAAQmyG,UAApB,aAAG,EAAiC3iF,UAEnD,OAAKve,EAME,cAACA,E,iWAAD,IAAeq2B,KAJpBr8B,QAAQ5B,KAAM,oCAAmC8oG,GAC1C,Q,cCZX1yG,EAAOD,QAAUyC,QAAQ,2B,cCCzBxC,EAAOD,QAAU,I,cCDjBC,EAAOD,QAAUyC,QAAQ,6B,cCAzBxC,EAAOD,QAAUyC,QAAQ,wB,cCAzBxC,EAAOD,QAAUyC,QAAQ,wB,cCAzBxC,EAAOD,QAAUyC,QAAQ,yB,cCAzBxC,EAAOD,QAAUyC,QAAQ,kC,cCAzBxC,EAAOD,QAAUyC,QAAQ,iB,cCAzBxC,EAAOD,QAAUyC,QAAQ,uB,cCAzBxC,EAAOD,QAAUyC,QAAQ,gC,cCAzBxC,EAAOD,QAAUyC,QAAQ,uB,cCAzBxC,EAAOD,QAAUyC,QAAQ,2B,cCAzBxC,EAAOD,QAAUyC,QAAQ,iC,cCAzBxC,EAAOD,QAAUyC,QAAQ,S,cCAzBxC,EAAOD,QAAUyC,QAAQ,W,cCAzBxC,EAAOD,QAAUyC,QAAQ,gB,cCAzBxC,EAAOD,QAAUyC,QAAQ,c,cCAzBxC,EAAOD,QAAUyC,QAAQ,4B,cCAzBxC,EAAOD,QAAUyC,QAAQ,c,cCAzBxC,EAAOD,QAAUyC,QAAQ,a,cCAzBxC,EAAOD,QAAUyC,QAAQ,oC,cCAzBxC,EAAOD,QAAUyC,QAAQ,oB,cCAzBxC,EAAOD,QAAUyC,QAAQ,mC,cCAzBxC,EAAOD,QAAUyC,QAAQ,yB,cCAzBxC,EAAOD,QAAUyC,QAAQ,mC,cCAzBxC,EAAOD,QAAUyC,QAAQ,uD,cCAzBxC,EAAOD,QAAUyC,QAAQ,sD,cCAzBxC,EAAOD,QAAUyC,QAAQ,2B,cCAzBxC,EAAOD,QAAUyC,QAAQ,mB,uFCKlB,MAAMm+B,EAAmB,CAC9B,QACA,SACA,YACA,UACA,QACA,UACA,WACA,UACA,SACA,UACA,WACA,YACA,WACA,UACA,mBACA,sBACA,gBACA,gBACA,wBACA,wBACA,YACA,wBACA,kBACA,sBACA,2BACI,UAAAz8B,IAAOD,gBAAP,mBAAiB6zC,sBAAjB,eAAiClxC,IAAK06B,GAAUA,EAAMmI,MAAMnmC,QAAS,I,sHCkC5DqwC,MAhDF,EAAGnwC,OAAMkV,gBACpB,mBACEnF,UAAW24B,IACT,oBACA,CACEiF,QAAS28B,QAAQtqE,EAAK6tC,QAExB7tC,EAAK6tC,OANT,SASG34B,EAAWk3B,OACV,mCACG,MACC,MAAMA,EACJ,qBACEr8B,UAAW24B,IAAG,CAAE,aAA6B,SAAf1oC,EAAK6tC,QACnCgf,IAAKz4B,YAAgBlf,EAAWk3B,MAAM4gB,UACtCriB,IAAKz1B,EAAWmxD,eAAiB,KAGrC,OAAIrmE,EAAKuR,KAEL,cAAC,KAAD,CACEA,KAAMvR,EAAKuR,KACXuyD,iBAAkB9jE,EAAK8jE,iBAFzB,SAIG13B,IAIEA,GAlBV,O,uFC+BM+D,MA3CF,EAAGnwC,UACdA,GACAA,EAAKmvG,OACH,cAAC,QAAD,CACEztE,MAAO1hC,EAAKmvG,MAAMztE,MAClB21C,QAASr3E,EAAKmvG,MAAM93B,QACpBpuC,QAAOjpC,EAAKmvG,MAAMlmE,OAAQ,OAC1Bq9B,OAAQtmE,EAAKmvG,MAAM7oC,OACnB8b,SAAUpiF,EAAKmvG,MAAM/sB,SACrBkV,QAASt3F,EAAKmvG,MAAM7X,QANtB,SAQE,cAAC,QAAM7wB,KAAP,UACG,IAAIzmE,EAAKmvG,MAAMC,KAAOC,GACrB,cAAC,QAAMp1C,IAAP,UACG,IAAIo1C,EAAIC,MAAQC,GACf,cAAC,QAAM7oC,KAAP,CAEE70D,GAAkB,WAAd09F,EAAKtvG,KAAoB,KAAO,KAFtC,SAIGsvG,EAAK1xG,OAAS0xG,EAAK1xG,MAAMkuB,QAAUwjF,EAAK1xG,MAAMkuB,OAAO,GAAG9pB,KACrDm0E,IACEm5B,EAAK1xG,MACL6C,IAAOD,SAAS61E,qBAAqBC,gBACrC71E,IAAOD,SAAS61E,qBAAqBE,eAEvC,KATC+4B,EAAKpxG,OAHAkxG,EAAIlxG,U,ypBCZ9B,MAAMkd,EAAWC,yBAAe,CAC9Bg+D,2BAA4B,CAAF,uIAW5B,MAAM1lC,UAAa5lC,YAAU,8CAuCpB5B,IAAM++B,aAhBb2C,aAAaD,GACXhuC,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,OACKlqC,KAAKwF,MAAMrF,MADhB,IAEE6tC,WASJ3/B,sBAAsBC,GACpB,OAAOtO,KAAKwF,MAAM89B,WAAa,IAAQtjC,KAAKwF,MAAMrF,KAAMmO,EAAUnO,MAUpEuP,SACE,MAAM,KAAEvP,EAAF,WAAQkV,GAAerV,KAAKwF,MAC5Bm8B,EACJ3hC,KAAKwF,MAAMrF,KAAKwhC,aAChB3hC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASi+D,4BAEzC,OACE,sBACEvpE,UAAW24B,IACT,oBACA,CACEiF,QAAS28B,QAAQtqE,EAAK6tC,QAExB7tC,EAAK6tC,OANT,WASI34B,EAAWk3B,OACX,cAAC,UAAD,UACE,mCACE,qBAAKygB,IAAKotB,IAAetvC,IAAI,KAC7B,qBAAK56B,UAAU,eAAf,SAA+ByxB,SAIpCtsB,EAAWk3B,OACV,qBACEr8B,UAAW24B,IAAG,CAAE,aAA6B,SAAf1oC,EAAK6tC,QACnCgf,IACE33C,EAAWk3B,MAAMpsC,KACZ,QAAOkV,EAAWk3B,MAAM,0BAA0Bl3B,EAAWk3B,MAAMpsC,OACpEo0B,YAAgBlf,EAAWk3B,MAAM4gB,UAEvCriB,IAAK3qC,EAAKqmE,eAAiB,KAG/B,cAAC,KAAD,CAAeljC,SAAUtjC,KAAKwF,MAAM89B,SAApC,SACE,cAAC,KAAD,KAAsBtjC,KAAKwF,cAOtBgnC,wBAAQC,aAARD,CAAoBuH,G,iBC1EpB47D,OAtCS,EAAG77F,QAAO+uE,YAAWC,WAAUnI,iBAAiB,MACtE,IAAIjtE,EAAO,KACPgE,GAAOoxE,SAAA,UAAAA,EAAW,UAAX,eAAgB,SAAU,GAYrC,OAVIxkD,YAAc5sB,GAChBhE,EACE,cAAC,IAAD,CAAiByjC,GAAI5c,YAAgB7iB,GAAO43E,WAAY3O,EAAxD,SACGkI,GAAanxE,IAGTA,IACThE,EAAO,mBAAGgE,KAAMA,EAAT,SAAgBmxE,GAAanxE,KAIpC,qCACE,qBAAKxB,UAAU,QAAf,SACG4D,EAAMvQ,IAAKwQ,GACV,qBAAK7D,UAAU,eAAf,SACE,cAAC,IAAD,CAAiB6D,KAAMA,EAAMu1E,WAAY3O,EAAzC,SACE,sBAAKzqE,UAAU,eAAf,UACE,6BAAK6D,EAAK9K,MAAQ8K,EAAK9K,MAAQ8K,EAAKvM,KACpC,4BAAIuM,EAAK6tB,oBAJoB7tB,EAAK,WAW3CrG,GAAQ,qBAAKwC,UAAU,SAAf,SAAyBxC,QCYzBkiG,OAzCS,EAAG97F,QAAO+uE,YAAWC,WAAUnI,iBAAiB,MACtE,IAAIjtE,EAAO,KACPgE,GAAOoxE,SAAA,UAAAA,EAAW,UAAX,eAAgB,SAAU,GAYrC,OAVIxkD,YAAc5sB,GAChBhE,EACE,cAAC,IAAD,CAAiByjC,GAAI5c,YAAgB7iB,GAAO43E,WAAY3O,EAAxD,SACGkI,GAAanxE,IAGTA,IACThE,EAAO,mBAAGgE,KAAMA,EAAT,SAAgBmxE,GAAanxE,KAIpC,qCACE,qBAAKxB,UAAU,QAAf,SACG4D,EAAMvQ,IAAKwQ,GACV,qBAAK7D,UAAU,eAAf,SACE,eAAC,IAAD,CAAiB6D,KAAMA,EAAMu1E,WAAY3O,EAAzC,UACE,cAAC,IAAD,CAAW00B,cAAc,eAAet7F,KAAMA,EAAM+2B,IAAI,KACxD,sBAAK56B,UAAU,eAAf,UACE,6BAAK6D,EAAK9K,MAAQ8K,EAAK9K,MAAQ8K,EAAKvM,KACpC,4BAAIuM,EAAK6tB,qBALoB7tB,EAAK,WAY3CrG,GAAQ,qBAAKwC,UAAU,SAAf,SAAyBxC,Q,2xBCZxC,MAAMiwB,GAAQ,IAAM+H,KAAKC,MAAMD,KAAKE,SAAWF,KAAKmqE,IAAI,EAAG,KAAKpjG,SAAS,IAEnEqjG,GAAgB9xG,IAAD,CACnBkuB,OAAQ,CACN,CACE/rB,KAAM,GACNqxB,MAAO,EACPu+E,aAAc,GACdC,kBAAmB,GACnB1xG,IAAKq/B,KACLv7B,KAAMpE,EACNoC,KAAM,aAGV6vG,UAAW,KAGPC,GAAa9vG,IAAD,CAChB9B,IAAKq/B,KACLv9B,KAAMA,GAAQ,OACdpC,MAAO8xG,GAAa,MAGhBK,GAAYV,IAAD,CACfnxG,IAAKq/B,KACL8xE,MAAO,IAAIA,EAAO,IAAMS,QAGpBE,GAAe,KAAM,CACzBvuE,OAAO,EACP21C,SAAS,EACTpuC,OAAO,EACPq9B,QAAQ,EACR8b,UAAU,EACVkV,SAAS,EACT8X,KAAM,CACJ,CACEjxG,IAAKq/B,KACL8xE,MAAO,CACL,CACEnxG,IAAKq/B,KACLv9B,KAAM,SACNpC,MAAO8xG,GAAa,KAEtB,CACExxG,IAAKq/B,KACLv9B,KAAM,SACNpC,MAAO8xG,GAAa,OAI1B,CACExxG,IAAKq/B,KACL8xE,MAAO,CACL,CACEnxG,IAAKq/B,KACLv9B,KAAM,OACNpC,MAAO8xG,GAAa,KAEtB,CACExxG,IAAKq/B,KACLv9B,KAAM,OACNpC,MAAO8xG,GAAa,UAOxBt0F,GAAWC,yBAAe,CAC9B40F,gBAAiB,CAAF,2DAIfC,eAAgB,CAAF,yDAIdC,UAAW,CAAF,6CAITC,gBAAiB,CAAF,2DAIfC,eAAgB,CAAF,yDAIdC,UAAW,CAAF,6CAIT7uE,MAAO,CAAF,mEAIL21C,QAAS,CAAF,kEAIPpuC,MAAO,CAAF,mEAILq9B,OAAQ,CAAF,uFAINgxB,QAAS,CAAF,uFAIPkZ,WAAY,CAAF,iDAWZ,MAAM58D,WAAa5lC,YAqCjBzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK4Q,MAAQ,CACX0yB,SAAU,CACRksE,IAAK,EACLE,KAAM,GAERl/D,UAAU,GAEZxwC,KAAK4wG,aAAe5wG,KAAK4wG,aAAaryG,KAAKyB,MAC3CA,KAAK6wG,kBAAoB7wG,KAAK6wG,kBAAkBtyG,KAAKyB,MACrDA,KAAK8wG,iBAAmB9wG,KAAK8wG,iBAAiBvyG,KAAKyB,MACnDA,KAAK+wG,kBAAoB/wG,KAAK+wG,kBAAkBxyG,KAAKyB,MACrDA,KAAKgxG,iBAAmBhxG,KAAKgxG,iBAAiBzyG,KAAKyB,MACnDA,KAAKixG,YAAcjxG,KAAKixG,YAAY1yG,KAAKyB,MACzCA,KAAKkxG,YAAclxG,KAAKkxG,YAAY3yG,KAAKyB,MACzCA,KAAKmxG,aAAenxG,KAAKmxG,aAAa5yG,KAAKyB,MAC3CA,KAAKoxG,eAAiBpxG,KAAKoxG,eAAe7yG,KAAKyB,MAC/CA,KAAKqxG,WAAarxG,KAAKqxG,WAAW9yG,KAAKyB,MACvCA,KAAKsxG,YAActxG,KAAKsxG,YAAY/yG,KAAKyB,MACzCA,KAAKuxG,cAAgBvxG,KAAKuxG,cAAchzG,KAAKyB,MAC7CA,KAAKwxG,YAAcxxG,KAAKwxG,YAAYjzG,KAAKyB,MACzCA,KAAKyxG,aAAezxG,KAAKyxG,aAAalzG,KAAKyB,MAC3CA,KAAK0xG,cAAgB1xG,KAAK0xG,cAAcnzG,KAAKyB,MAE7C,MAAM,aAAEm2E,GAAiB3wE,EAAMswE,QAC/B91E,KAAKm2E,aAAeA,EAQtB5qC,oBACOvrC,KAAKwF,MAAMrF,KAAKmvG,OACnBtvG,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,SACKlqC,KAAKwF,MAAMrF,MADhB,IAEEmvG,MAAOc,QAGXpwG,KAAKoqC,SAAS,CAAEoG,UAAU,IAS5BM,iCAAiCxiC,GAC1BA,EAAUnO,KAAKmvG,OAClBtvG,KAAKwF,MAAMmlC,cAAcr8B,EAAU47B,MAAnC,SACK57B,EAAUnO,MADf,IAEEmvG,MAAOc,QAYbQ,aAAapB,EAAKE,GAChB1vG,KAAKoqC,SAAS,CAAE9G,SAAU,CAAEksE,MAAKE,UAWnCyB,aAAa3B,EAAKE,EAAMx5B,GACtB,MAAMo5B,EAAQ,MAAKtvG,KAAKwF,MAAMrF,KAAKmvG,OACnCA,EAAMC,KAAKC,GAAKC,MAAMC,GAAM1xG,MAAQgC,KAAKm2E,aACvCD,EAAYM,qBAEdx2E,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,SACKlqC,KAAKwF,MAAMrF,MADhB,IAEEmvG,WASJ8B,iBACE,MAAM9B,EAAQ,MAAKtvG,KAAKwF,MAAMrF,KAAKmvG,OACnC,IAAIlvG,EACFkvG,EAAMC,KAAKvvG,KAAK4Q,MAAM0yB,SAASksE,KAAKC,MAAMzvG,KAAK4Q,MAAM0yB,SAASosE,MAAMtvG,KACtEkvG,EAAMC,KAAKvvG,KAAK4Q,MAAM0yB,SAASksE,KAAKC,MAAMzvG,KAAK4Q,MAAM0yB,SAASosE,MAAMtvG,KACzD,WAATA,EAAoB,OAAS,SAC/BJ,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,SACKlqC,KAAKwF,MAAMrF,MADhB,IAEEmvG,WASJuB,kBAAkB7zG,GAChBA,EAAE6oB,iBACF7oB,EAAE8oB,kBACF,MAAMwpF,EAAQtvG,KAAKwF,MAAMrF,KAAKmvG,MAC9BtvG,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,SACKlqC,KAAKwF,MAAMrF,MADhB,IAEEmvG,MAAO,SACFA,GADA,IAEHC,KAAM,IACDD,EAAMC,KAAKrkG,MAAM,EAAGlL,KAAK4Q,MAAM0yB,SAASksE,KAC3CW,GAASb,EAAMC,KAAK,GAAGE,UACpBH,EAAMC,KAAKrkG,MAAMlL,KAAK4Q,MAAM0yB,SAASksE,WAI9CxvG,KAAKoqC,SAAS,CACZ9G,SAAU,CACRksE,IAAKxvG,KAAK4Q,MAAM0yB,SAASksE,IAAM,EAC/BE,KAAM1vG,KAAK4Q,MAAM0yB,SAASosE,QAUhCoB,iBAAiB9zG,GACfA,EAAE6oB,iBACF7oB,EAAE8oB,kBACF,MAAMwpF,EAAQtvG,KAAKwF,MAAMrF,KAAKmvG,MAC9BtvG,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,SACKlqC,KAAKwF,MAAMrF,MADhB,IAEEmvG,MAAO,SACFA,GADA,IAEHC,KAAM,IACDD,EAAMC,KAAKrkG,MAAM,EAAGlL,KAAK4Q,MAAM0yB,SAASksE,IAAM,GACjDW,GAASb,EAAMC,KAAK,GAAGE,UACpBH,EAAMC,KAAKrkG,MAAMlL,KAAK4Q,MAAM0yB,SAASksE,IAAM,SAWtDuB,kBAAkB/zG,GAChBA,EAAE6oB,iBACF7oB,EAAE8oB,kBACF,MAAMwpF,EAAQtvG,KAAKwF,MAAMrF,KAAKmvG,MAC9BtvG,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,SACKlqC,KAAKwF,MAAMrF,MADhB,IAEEmvG,MAAO,SACFA,GADA,IAEHC,KAAM,IAAID,EAAMC,KAAM,CAACC,EAAK3jG,IAAN,GAAC,MAClB2jG,GADiB,IAEpBC,MAAO,IACFD,EAAIC,MAAMvkG,MAAM,EAAGlL,KAAK4Q,MAAM0yB,SAASosE,MAC1CQ,GAAUZ,EAAMC,KAAK1jG,GAAO4jG,MAAMzvG,KAAK4Q,MAAM0yB,SAASosE,MAAMtvG,SACzDovG,EAAIC,MAAMvkG,MAAMlL,KAAK4Q,MAAM0yB,SAASosE,eAK/C1vG,KAAKoqC,SAAS,CACZ9G,SAAU,CACRksE,IAAKxvG,KAAK4Q,MAAM0yB,SAASksE,IACzBE,KAAM1vG,KAAK4Q,MAAM0yB,SAASosE,KAAO,KAUvCsB,iBAAiBh0G,GACfA,EAAE6oB,iBACF7oB,EAAE8oB,kBACF,MAAMwpF,EAAQtvG,KAAKwF,MAAMrF,KAAKmvG,MAC9BtvG,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,SACKlqC,KAAKwF,MAAMrF,MADhB,IAEEmvG,MAAO,SACFA,GADA,IAEHC,KAAM,IAAID,EAAMC,KAAM,CAACC,EAAK3jG,IAAN,GAAC,MAClB2jG,GADiB,IAEpBC,MAAO,IACFD,EAAIC,MAAMvkG,MAAM,EAAGlL,KAAK4Q,MAAM0yB,SAASosE,KAAO,GACjDQ,GAAUZ,EAAMC,KAAK1jG,GAAO4jG,MAAMzvG,KAAK4Q,MAAM0yB,SAASosE,MAAMtvG,SACzDovG,EAAIC,MAAMvkG,MAAMlL,KAAK4Q,MAAM0yB,SAASosE,KAAO,YAYxDwB,YAAYl0G,GACVA,EAAE6oB,iBACF7oB,EAAE8oB,kBACF,MAAMwpF,EAAQtvG,KAAKwF,MAAMrF,KAAKmvG,MAE1BtvG,KAAK4Q,MAAM0yB,SAASosE,OAASJ,EAAMC,KAAK,GAAGE,MAAMztG,OAAS,GAC5DhC,KAAKoqC,SAAS,CACZ9G,SAAU,CACRksE,IAAKxvG,KAAK4Q,MAAM0yB,SAASksE,IACzBE,KAAM1vG,KAAK4Q,MAAM0yB,SAASosE,KAAO,KAKvC1vG,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,SACKlqC,KAAKwF,MAAMrF,MADhB,IAEEmvG,MAAO,SACFA,GADA,IAEHC,KAAM,IAAID,EAAMC,KAAOC,GAAD,GAAC,MAClBA,GADiB,IAEpBC,MAAO,KACLD,EAAIC,MACJ,CAACC,EAAM7jG,IAAUA,IAAU7L,KAAK4Q,MAAM0yB,SAASosE,cAYzDuB,YAAYj0G,GACVA,EAAE6oB,iBACF7oB,EAAE8oB,kBACF,MAAMwpF,EAAQtvG,KAAKwF,MAAMrF,KAAKmvG,MAE1BtvG,KAAK4Q,MAAM0yB,SAASksE,MAAQF,EAAMC,KAAKvtG,OAAS,GAClDhC,KAAKoqC,SAAS,CACZ9G,SAAU,CACRksE,IAAKxvG,KAAK4Q,MAAM0yB,SAASksE,IAAM,EAC/BE,KAAM1vG,KAAK4Q,MAAM0yB,SAASosE,QAKhC1vG,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,SACKlqC,KAAKwF,MAAMrF,MADhB,IAEEmvG,MAAO,SACFA,GADA,IAEHC,KAAM,KACJD,EAAMC,KACN,CAACC,EAAK3jG,IAAUA,IAAU7L,KAAK4Q,MAAM0yB,SAASksE,UAYtD6B,WAAWrzG,GACT,MAAMsxG,EAAQtvG,KAAKwF,MAAMrF,KAAKmvG,MAC9BtvG,KAAKwF,MAAMmlC,cAAc3qC,KAAKwF,MAAM0kC,MAApC,SACKlqC,KAAKwF,MAAMrF,MADhB,IAEEmvG,MAAO,SACFA,GADA,IAEH,CAACtxG,IAASsxG,EAAMtxG,QAUtBszG,cACEtxG,KAAKqxG,WAAW,SAQlBE,gBACEvxG,KAAKqxG,WAAW,WAQlBG,cACExxG,KAAKqxG,WAAW,SAQlBI,eACEzxG,KAAKqxG,WAAW,UAQlBK,gBACE1xG,KAAKqxG,WAAW,WAQlB3hG,SACE,OAAK1P,KAAK4Q,MAAM4/B,SAKd,sBAAKtgC,UAAW24B,IAAG,cAAe,CAAEvF,SAAUtjC,KAAKwF,MAAM89B,WAAzD,UACGtjC,KAAKwF,MAAM89B,UACV,sBAAKpzB,UAAU,UAAf,UACE,cAAC,SAAOwqB,MAAR,UACE,cAAC,SAAD,CACE2O,MAAI,EACJD,OAAK,EACLzJ,QAAS3/B,KAAK6wG,kBACd5nG,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAAS60F,iBAC9Cl+F,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,GAAS60F,iBANb,SASE,cAAC,KAAD,CAAM/yG,KAAMq0G,KAAc79E,KAAK,aAGnC,cAAC,SAAO4G,MAAR,UACE,cAAC,SAAD,CACE2O,MAAI,EACJD,OAAK,EACLzJ,QAAS3/B,KAAK8wG,iBACd7nG,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAAS80F,gBAC9Cn+F,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,GAAS80F,gBANb,SASE,cAAC,KAAD,CAAMhzG,KAAMs0G,KAAa99E,KAAK,aAGlC,cAAC,SAAO4G,MAAR,UACE,cAAC,SAAD,CACE2O,MAAI,EACJD,OAAK,EACLzJ,QAAS3/B,KAAKixG,YACdnoE,SACE9oC,KAAKwF,MAAMrF,KAAKmvG,OACsB,IAAtCtvG,KAAKwF,MAAMrF,KAAKmvG,MAAMC,KAAKvtG,OAE7BiH,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAAS+0F,WAC9Cp+F,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAAS+0F,WATrD,SAWE,cAAC,KAAD,CAAMjzG,KAAMu0G,KAAc/9E,KAAK,aAGnC,cAAC,SAAO4G,MAAR,UACE,cAAC,SAAD,CACE2O,MAAI,EACJD,OAAK,EACLzJ,QAAS3/B,KAAK+wG,kBACd9nG,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASg1F,iBAC9Cr+F,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,GAASg1F,iBANb,SASE,cAAC,KAAD,CAAMlzG,KAAMw0G,KAAch+E,KAAK,aAGnC,cAAC,SAAO4G,MAAR,UACE,cAAC,SAAD,CACE2O,MAAI,EACJD,OAAK,EACLzJ,QAAS3/B,KAAKgxG,iBACd/nG,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASi1F,gBAC9Ct+F,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,GAASi1F,gBANb,SASE,cAAC,KAAD,CAAMnzG,KAAMy0G,KAAaj+E,KAAK,aAGlC,cAAC,SAAO4G,MAAR,UACE,cAAC,SAAD,CACE2O,MAAI,EACJD,OAAK,EACLzJ,QAAS3/B,KAAKkxG,YACdpoE,SACE9oC,KAAKwF,MAAMrF,KAAKmvG,OAC+B,IAA/CtvG,KAAKwF,MAAMrF,KAAKmvG,MAAMC,KAAK,GAAGE,MAAMztG,OAEtCiH,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASk1F,WAC9Cv+F,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASk1F,WATrD,SAWE,cAAC,KAAD,CAAMpzG,KAAM00G,KAAcl+E,KAAK,gBAKtC9zB,KAAKwF,MAAMrF,KAAKmvG,OACf,cAAC,QAAD,CACEztE,MAAO7hC,KAAKwF,MAAMrF,KAAKmvG,MAAMztE,MAC7B21C,QAASx3E,KAAKwF,MAAMrF,KAAKmvG,MAAM93B,QAC/BpuC,QAAOppC,KAAKwF,MAAMrF,KAAKmvG,MAAMlmE,OAAQ,OACrCq9B,OAAQzmE,KAAKwF,MAAMrF,KAAKmvG,MAAM7oC,OAC9B8b,SAAUviF,KAAKwF,MAAMrF,KAAKmvG,MAAM/sB,SAChCkV,QAASz3F,KAAKwF,MAAMrF,KAAKmvG,MAAM7X,QANjC,SAQE,cAAC,QAAM7wB,KAAP,UACG,IAAI5mE,KAAKwF,MAAMrF,KAAKmvG,MAAMC,KAAM,CAACC,EAAKyC,IACrC,cAAC,QAAM73C,IAAP,UACG,IAAIo1C,EAAIC,MAAO,CAACC,EAAMwC,KAAP,aACd,cAAC,QAAMrrC,KAAP,CAEE70D,GAAkB,WAAd09F,EAAKtvG,KAAoB,KAAO,KACpC8P,UACE+hG,IAAajyG,KAAK4Q,MAAM0yB,SAASksE,KACjC0C,IAAclyG,KAAK4Q,MAAM0yB,SAASosE,MAClC1vG,KAAKwF,MAAM89B,SACP,WACA,GARR,SAWE,cAACujC,GAAA,EAAD,CACEwH,SAAUruE,KAAKwF,MAAM6oE,SACrBrwE,MAAO0xG,EAAK1xG,MACZwxG,IAAKyC,EACLvC,KAAMwC,EACNtB,aAAc5wG,KAAK4wG,aACnBttE,SACE2uE,IAAajyG,KAAK4Q,MAAM0yB,SAASksE,KACjC0C,IAAclyG,KAAK4Q,MAAM0yB,SAASosE,KAEpCyC,qBAAsBnyG,KAAKwF,MAAM89B,SACjC8uE,WAAYpyG,KAAKwF,MAAM4sG,WACvBzjC,cAAe3uE,KAAKwF,MAAMmpE,cAC1B9iC,SAAU7rC,KAAKmxG,aACftlG,MAAO7L,KAAKwF,MAAMqG,MAClBi2B,iBAAgB,UAAE9hC,KAAKwF,MAAMrF,YAAb,aAAE,EAAiB2hC,oBAzBhC4tE,EAAKpxG,QAHAkxG,EAAIlxG,UAqC3B0B,KAAKwF,MAAM89B,UAAYtjC,KAAK4Q,MAAM4/B,UACjC,cAAC,UAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,sBAAtC,SACE,eAAC,OAAD,CACEnyC,OAAO,OACPglE,SAAWt/C,IACTA,EAAMI,iBACNJ,EAAMK,mBAJV,UAOE,cAAC,UAAD,CAASomB,WAAS,EAACyhC,UAAQ,EAA3B,SACE,cAAC,mBAAD,CAAkBnmE,GAAG,QAAQukC,eAAe,YAE9C,eAAC,UAAD,CAAS4hC,UAAQ,EAAjB,UACE,cAAC,IAAD,CACEnmE,GAAG,QACHyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASqmB,OAC9CzhC,KAAK,UACLpC,MAAOgC,KAAKwF,MAAMrF,KAAKmvG,OAAStvG,KAAKwF,MAAMrF,KAAKmvG,MAAMztE,MACtDgK,SAAU,IAAM7rC,KAAKsxG,gBAEvB,cAAC,IAAD,CACE9pG,GAAG,SACHyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASirD,QAC9CrmE,KAAK,UACLpC,MAAOgC,KAAKwF,MAAMrF,KAAKmvG,OAAStvG,KAAKwF,MAAMrF,KAAKmvG,MAAM7oC,OACtD56B,SAAU7rC,KAAKyxG,eAEjB,cAAC,IAAD,CACEjqG,GAAG,UACHyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASi8E,SAC9Cr3F,KAAK,UACLpC,MAAOgC,KAAKwF,MAAMrF,KAAKmvG,OAAStvG,KAAKwF,MAAMrF,KAAKmvG,MAAM7X,QACtD5rD,SAAU7rC,KAAK0xG,gBAEjB,cAAC,IAAD,CACElqG,GAAG,UACHyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASg8D,SAC9Cp3E,KAAK,UACLpC,MAAOgC,KAAKwF,MAAMrF,KAAKmvG,OAAStvG,KAAKwF,MAAMrF,KAAKmvG,MAAM93B,QACtD3rC,SAAU,IAAM7rC,KAAKuxG,kBAEvB,cAAC,IAAD,CACE/pG,GAAG,QACHyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAAS4tB,OAC9ChpC,KAAK,UACLpC,MAAOgC,KAAKwF,MAAMrF,KAAKmvG,OAAStvG,KAAKwF,MAAMrF,KAAKmvG,MAAMlmE,MACtDyC,SAAU7rC,KAAKwxG,iBAGnB,cAAC,UAAD,CAAStlE,WAAS,EAACyhC,UAAQ,EAA3B,SACE,cAAC,mBAAD,CAAkBnmE,GAAG,OAAOukC,eAAe,WAE7C,cAAC,UAAD,CAAS4hC,UAAQ,EAAjB,SACE,cAAC,IAAD,CACEnmE,GAAG,WACHyB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASm1F,YAC9CvwG,KAAK,UACLpC,MACEgC,KAAKwF,MAAMrF,KAAKmvG,OAGL,WAFXtvG,KAAKwF,MAAMrF,KAAKmvG,MAAMC,KAAKvvG,KAAK4Q,MAAM0yB,SAASksE,KAAKC,MAClDzvG,KAAK4Q,MAAM0yB,SAASosE,MACpBtvG,KAEJyrC,SAAU7rC,KAAKoxG,2BA1MpB,yB,IA/XPr9D,G,eA2BkB,CACpBylC,UAAU,IAwjBChtC,yBAAQrU,aAAe,CAAC,YAAasU,aAArCD,CAAiDuH,I,o7BC9tBhE,MAAMs+D,GAAyB,CAC7B,iBACA,SACA,QACA,UACA,cAGIC,GAAO,kCAmHb,MAgEMC,GAAsB,CAACC,EAAU73B,KACrC,MAAO83B,EAAWC,GApDC,MACnB,MAAMp/F,EAAWywD,yBACXlyB,EAAU6a,wBAEVimD,EAAWpmG,IAAMi0B,QAAQ,IAC7B,SACK5Q,KAAGzN,MAAM7O,EAAS0e,SAClBpC,KAAGzN,MAAM7O,EAASu3C,OAEtB,CAACv3C,EAASu3C,KAAMv3C,EAAS0e,SAkC5B,MAAO,CA/BSv0B,OAAOgT,OACrB,MACG1L,MAAMsP,KAAK5W,OAAO+D,KAAKmxG,IAAWpvG,IAAKq2D,IAAD,CAAU,CAACA,GAAI+4C,EAAS/4C,OAG7CrtD,IAAMkX,YACzBmvF,IACC,MAAMC,EAAYjjF,KAAGzN,MAAM7O,EAASu3C,MAEpC,IAAIioD,GAAU,EAEdr1G,OAAO+D,KAAKoxG,GACT3jF,OACAnvB,QAAS85D,IACJg5C,EAAWh5C,KACbi5C,EAAUj5C,GAAKg5C,EAAWh5C,GACtB+4C,EAAS/4C,KAAOg5C,EAAWh5C,KAC7Bk5C,GAAU,MAKdA,GACFjhE,EAAQhrC,KAAK,CACXgkD,KAAMj7B,KAAGiD,UAAUggF,MAIzB,CAAChhE,EAAS8gE,EAAUr/F,EAASu3C,SAYGkoD,IAC3BC,EAAeC,GAAoB1mG,IAAM8X,SAAS,IAEzD,OAAOs2D,EACH,CAACq4B,EAAeC,GAChB,CAACR,EAAWC,IAUZQ,GAAkBv+E,GACfzS,KAAK2Q,UACV8B,aADK,EACLA,EAAGpxB,IAAK4vG,GAAD,GAAC,MAAcA,GAAf,IAAoB31G,EAAG21G,EAAI31G,EAAEiH,QAAQ6tG,GAAM,YA8HvCc,OA1HKrtF,GAAa8R,IAC/B,MAAM,WAAEw7E,EAAa,KAASttF,GAAW,GAEzC,SAASutF,EAAW9tG,GAAO,oBACzB,MAAM,KAAErF,EAAF,GAAQqH,EAAR,SAAY6mE,GAAW,GAAU7oE,GAEhC+tG,EAAoBC,GAAyBjB,GAClD/qG,EACA6mE,GAGIolC,EAAWF,EAAmBlyG,OAvBdszB,EAwBD4+E,EAAmBlyG,MAvB1C,UAAO6gB,KAAKC,MAAMwS,UAAlB,aAAO,EAAepxB,IAAK4vG,GAAD,GAAC,MACtBA,GADqB,IAExB31G,EAAG21G,EAAI31G,EAAEiH,QAAQ,QAAS6tG,QAsBtB,GAzBkB39E,MAAM,EA0B5B,MAAM++E,EACJH,EAAmB9oE,iBAAnB,UACAgpE,EAAS1rE,KAAK,EAAGnrC,OAAc,mBAANA,UADzB,aACA,EAAkDg4B,IAClD,IAGK++E,EAAYC,GAAiBrnG,IAAM8X,SAASqvF,GAC7CG,GACJ,UAAA1zG,EAAK2zG,cAAL,eAAavwG,IAAKwwG,IAAD,aAAWA,SAAX,UAAWA,EAAOz+F,aAAlB,aAAW,EAActX,UAAU,GAChDg2G,EAAW,UAAG7zG,EAAK2zG,cAAR,aAAG,EAChBvuG,OAAQwuG,GAAUA,aAAX,EAAWA,EAAOx1D,UAC1Bh7C,IAAKwwG,IAAD,aAAWA,SAAX,UAAWA,EAAOz+F,aAAlB,aAAW,EAActX,SACzB81G,EAAQG,GAAa1nG,IAAM8X,SAChC5mB,OAAOgT,OACL,MACGgjG,EAASlwG,IAAI,EAAG3G,IAAGg4B,QAAN,CAAiB,CAACh4B,GAAIg4B,QAOnCi/E,EAAiBtwG,IAAK4/C,GACvBowD,EAAmBpwD,GACf,CACE,CAACA,GACC6wD,EAAY9tG,QAAQi9C,IAAM,EACtB,CAACowD,EAAmBpwD,IACpBowD,EAAmBpwD,IAE3B,OAKH+wD,EAAQC,GAAa5nG,IAAM8X,SAASlkB,SAAf,UAAeA,EAAMkB,aAArB,aAAe,EAAa2oC,UACjDoqE,EAAWC,GAAgB9nG,IAAM8X,SAASlkB,SAAf,UAAeA,EAAMkB,aAArB,aAAe,EAAawzB,aAEvD+9E,EAAY0B,GAAiB/nG,IAAM8X,SArP9C,SAAyBlkB,EAAM2zG,EAAQJ,EAAelsG,GAAI,cACxD,MACE02C,MAAOq2D,GACL1zG,IAAOqrB,OAAOoW,aAAatQ,OAAOqV,WAAWmtE,aAC3CC,GAAgBt0G,aAAA,EAAAA,EAAM2zG,SAAU,GAEtC,MAAO,CACLzyG,MAAO,KACD,UAAAlB,EAAKkB,aAAL,eAAYA,QAAS,OACrBozG,GAAiB,IAClBlxG,IAAKwwG,IACJ,GAAKA,YAAOz+F,MAAO,OAAO,KAE1B,MAAM,aAAEo/F,GAAiBttE,aACvB,OACAmtE,EACAR,GAGIz2G,EAAOy2G,EAAMz+F,MAAMtX,MAGzB,OAAO02G,EAAa,CAAE12G,MAFR81G,EAAOx2G,GAEQy2G,YAE9BxuG,OAAQ49C,KAAQA,MACfuwD,EACA,CACE,CACE92G,EAAG,iBACHY,EAAG,kDACHo3B,EAAG8+E,IAGP,IAEN1pE,QAAO,UAAE7pC,EAAKkB,aAAP,aAAE,EAAY2oC,QACrBnV,WAAU,UAAE10B,EAAKkB,aAAP,aAAE,EAAYwzB,WACxBpF,OAAM,UAAEtvB,EAAKkB,aAAP,aAAE,EAAYouB,OACpB8C,MAAK,UAAEpyB,EAAKkB,aAAP,aAAE,EAAYkxB,MACnB2X,MAAO1iC,GA+MLmtG,CAAgBx0G,EAAM2zG,EAAQJ,EAAelsG,IAGzCotG,EAAaroG,IAAMgX,SACnBkxF,EAAgBt0G,aAAH,EAAGA,EAAM2zG,OAEtBe,EAAkBtoG,IAAMkX,YAC5B,CAACqxF,EAAcC,EAAgBC,EAAUC,KACnCL,EAAWlvG,SAAS+B,aAAamtG,EAAWlvG,SAChDkvG,EAAWlvG,QAAU4B,WACnB,KACE,MAAMsrG,EA/MlB,UAAwB,MACtBvxG,EADsB,OAEtByyG,EAFsB,GAGtBtsG,EAHsB,WAItBmsG,EAJsB,OAKtBO,EALsB,UAMtBE,EANsB,cAOtBK,IAEA,MACEv2D,MAAOq2D,GACL1zG,IAAOqrB,OAAOoW,aAAatQ,OAAOqV,WAAWmtE,aAE3Ct0G,EAAS,CACbmB,MAAO,IACDA,EAAMA,OAAS,OACfozG,GAAiB,IAAIlxG,IAAKwwG,IAC5B,GAAKA,YAAOz+F,MAAO,OAAO,KAE1B,MAAM,aAAEo/F,GAAiBttE,aACvB,OACAmtE,EACAR,GAGIz2G,EAAOy2G,EAAMz+F,MAAMtX,MAGzB,OAAO02G,EAAa,CAAE12G,MAFR81G,EAAOx2G,GAEQy2G,aAE/BxuG,OAAQ/H,KAAQA,GAClBwsC,QAASkqE,GAAU7yG,EAAM2oC,QACzBnV,WAAYu/E,GAAa/yG,EAAMwzB,WAC/BpF,OAAQpuB,EAAMouB,OACd8C,MAAOlxB,EAAMkxB,MACb2X,MAAO1iC,GAmBT,OAbAtH,EAAOmB,MAAQnB,EAAOmB,MAAM6C,OAE1B,CAACq5B,EAAK41E,IAAmB,mBAAVA,EAAIv2G,EAAyB2gC,EAAM,IAAIA,EAAK41E,GAC3D,IAEEQ,GACFzzG,EAAOmB,MAAMwF,KAAK,CAChBjK,EAAG,iBACHY,EAAG,kDACHo3B,EAAG++E,IAIAzzG,EAyJsBg1G,CAAe,CAChC1tG,KACAnG,MAAOlB,EAAKkB,OAAS,GACrByyG,OAAQiB,GAAkBjB,EAC1BH,WAAYmB,EACZZ,OAAQc,GAAYd,EACpBE,UAAWa,GAAeb,EAC1BK,kBAEEM,GAAgBd,EAAUc,GAC1BC,GAAUb,EAAUa,GACpBC,GAAaZ,EAAaY,GAC9BX,EAAc1B,GACdY,EAnKaZ,IAChBn1G,OAAOgT,OACZ,MACG4hG,GAAuB9uG,IAAKq2D,GACtBg5C,EAAWh5C,GAAK,CAAE,CAACA,GAAIg5C,EAAWh5C,IAAO,IAElDg5C,EAAWvxG,MAAQ,CAAEA,MAAO6xG,GAAeN,EAAU,QAAe,IA6JtCuC,CAAgBvC,KAExCmC,EAAiB1B,EAAa,EAAIA,IAGtC,CACElzG,EAAKkB,MACLyyG,EACAtsG,EACAgsG,EACAU,EACAE,EACAK,IAIEh0B,EAAqBvpD,uBACxBtmB,GAAUA,EAAMgvC,kBAAkBjT,aAE/BvJ,GACJ,UAAAq9C,EAAmBj5E,UAAnB,eAAwBo2C,SAAxB,UAAiC6iC,EAAmBj5E,UAApD,iBAAiC,EAAwBsM,aAAzD,aAAiC,EAA+B9R,QAElE,OACE,cAAC61B,EAAD,SACMryB,GADN,IAEEotG,WAAYA,EACZkB,OAAQA,EACRG,UAAWA,EACXE,UAAWA,EACXE,aAAcA,EACdH,OAAQA,EACRE,UAAWA,EACXgB,aAAc1B,EACdC,WAAYA,EACZC,cAAeA,EACfiB,gBAAiBA,EACjBzxE,WAAYA,KAMlB,OAFAkwE,EAAWv7E,YAAe,cA1U5B,SAAwBF,GACtB,OAAOA,EAAiBE,aAAeF,EAAiBv6B,MAAQ,YAyUzB06B,CAAeH,MAE/Cy7E,G,qkBCxUT,MAYM+B,GAAalxG,GACjB1G,OAAOgT,OACL,MACGhT,OAAO+D,KAAK2C,GAAKZ,IAAKq2D,GACF,eAANA,IANLz1D,IAAQ,KAAWA,IAAuB,mBAARA,EAMNmxG,CAAOnxG,EAAIy1D,IACjC,CAAE,CAACA,GAAIz1D,EAAIy1D,IAAO,KAIlC27C,GAAuB,CAAC9/F,EAAWnH,KACvC,MAAM6yE,EAAOk0B,GAAU5/F,GACjBmgC,EAAOy/D,GAAU/mG,GAEvB,OAAO,IAAQ6yE,EAAMvrC,IA0CV4/D,GAA2BhpE,kBACtC9E,KACCv5B,GAAc5B,IAAM65C,KAAKj4C,EAAWonG,IAFC/oE,CAvBfhnC,IACvB,MAAM,KAAErF,EAAF,WAAQyyG,EAAR,KAAoB10G,EAAO,OAA3B,UAAmC4pC,GAActiC,EAEjDiwG,EAAS3tE,EAAUjK,KAEnB63E,EAjDyBv1G,KAC/B,MAAM,WAAEynC,GAAe/mC,IAAOqrB,OAAOoW,aAAakgD,QAMlD,OAJkBriF,EAAKw1G,oBACnB/tE,EAAWG,KAAK,EAAGvgC,QAASA,IAAOrH,EAAKw1G,qBACxC/tE,EAAWG,KAAK,EAAGN,eAAgBA,IA4CVmuE,CAAwBz1G,GAE/C01G,EAvBc,EAAC11G,EAAMo8C,KAAS,MACpC,MAAMu5D,EAAe,CACnB,CACEl5G,EAAG,OACHY,EAAG,sDACHo3B,EAAG2nB,GAAQ,MAGf,gBACKp8C,GADL,IAEE6pC,SAAS7pC,aAAA,EAAAA,EAAM6pC,UAAW,YAC1BnV,YAAY10B,aAAA,EAAAA,EAAM00B,aAAc,aAChCxzB,MAAOlB,SAAA,UAAAA,EAAMkB,aAAN,SAAaW,OAAS7B,EAAKkB,MAAQy0G,KAWpBC,CAAcnD,EADzB17E,uBAAatmB,GAAUA,EAAMuuC,YAAY5C,OAGtD,OACE,qBAAKrsC,UAAU,eAAf,SACE,cAACulG,EAAD,SAAYjwG,GAAZ,IAAmBm1E,WAAqB,SAATz8E,EAA/B,SACE,cAACmiF,GAAA,EAAD,CACEv4C,UAAS,SAAO3nC,GAASu1G,GACzBv1G,KAAM01G,EACN51G,KAAMuF,EAAMvF,KACZ06E,WAAqB,SAATz8E,WAYPsuC,yBAAQwpE,KAAiB5C,KAAzB5mE,CAAuCgpE,I,kDCpF/C,MAAMS,GAAsB,IAAI5L,IAAI,CACzC,kDACA,mDAGW6L,GAAkB,IAAI7L,IAAI,CACrC,iDAGW8L,GAAwBC,GAC5BA,EAAI7wG,OAAQgxB,GAAM0/E,GAAoBI,IAAI9/E,IAAIv0B,OAAS,EAGnDs0G,GAAoBF,GACxBA,EAAI7wG,OAAQgxB,GAAM2/E,GAAgBG,IAAI9/E,IAAIv0B,OAAS,ECTtDwZ,GAAWC,yBAAe,CAC9B86F,YAAa,CAAF,iDAIX7yB,SAAU,CAAF,yCAIR8yB,gBAAiB,CAAF,2DAIfC,aAAc,CAAF,mDAIZC,SAAU,CAAF,yCAIRC,kBAAmB,CAAF,6DAIjBrsE,gBAAiB,CAAF,6DAIfssE,sBAAuB,CAAF,+DAIrBC,4BAA6B,CAAF,qMAM3BC,kBAAmB,CAAF,+DAIjBC,wBAAyB,CAAF,qCAIvBC,WAAY,CAAF,mDAIVC,YAAa,CAAF,mDAIXC,cAAe,CAAF,uDAIbpD,OAAQ,CAAF,qCAINC,MAAO,CAAF,mCAILl6E,MAAO,CAAF,mCAILvkB,MAAO,CAAF,mCAIL6hG,gBAAiB,CAAF,2DAIfC,eAAgB,CAAF,+CAIdC,qBAAsB,CAAF,+LAMpBC,YAAa,CAAF,mDAMPC,GAAgB,CAACn0C,EAAgB1iD,KAAa,MAClD,MAEMknB,EACJ/mC,IAAOqrB,OAAOoW,aAAatQ,OAAOqV,WAAlC,aAA4D6W,MAExDolB,EAAiB5iD,aAAH,EAAGA,EAAQ,KAC/B,IAAI6iD,EAAa37B,aAAH,EAAGA,EAAYG,KAAMh0B,GAASA,EAAKvM,KAAO87D,GACnDC,IAAYA,EAAa37B,aAAH,EAAGA,EAAYG,KAAMh0B,GAASA,EAAK0zB,YAE9D,MAAM47B,EAAc,UAAGE,SAAH,aAAG,iBAMvB,OAJaF,EACTA,EAAe,CAAEjuD,OAAQ,KAAUguD,GAAiB1iD,aACpD,KAAU0iD,IAKVo0C,GAAc,EAAGjzE,WAAH,CAClBt7B,MAAOs7B,EAAK5jB,cAAcnF,GAASu4F,OACnCvxF,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAO,UACP6X,OAAQ,CAAC,QAAS,QAAS,OAAQ,YAGvCzL,WAAY,CACVpM,MAAO,CACLA,MAAOs7B,EAAK5jB,cAAcnF,GAASqe,QAErCvkB,MAAO,CACLrM,MAAOs7B,EAAK5jB,cAAcnF,GAASlG,OACnC0L,OAAQ,2BACR+S,WAAY,CAAE,MAAO,yCACrB0jF,cAAgB1xF,GAKPtoB,OAAOgT,OACZ,MACGhT,OAAO+D,KAAKukB,GAASxiB,IAAKq2D,GAC3Bn8D,OAAO+D,KAAKukB,EAAQ6zC,GAAGhlD,QAAU,IAAI5S,QACrCm0G,GAAqBpwF,EAAQ6zC,GAAG89C,aAChCpB,GAAiBvwF,EAAQ6zC,GAAG89C,YACxB,CAAE,CAAC99C,GAAI7zC,EAAQ6zC,IACf,MAKZrb,SAAU,CACRn+C,KAAM,UACN6I,MAAOs7B,EAAK5jB,cAAcnF,GAAS27F,iBACnCryE,SAAS,GAEX6yE,OAAQ,CACNv3G,KAAM,UACN6I,MAAOs7B,EAAK5jB,cAAcnF,GAAS47F,gBACnCtyE,SAAS,EACTlD,YAAa2C,EAAK5jB,cAAcnF,GAAS67F,uBAE3Cj3G,KAAM,CACJ6I,MAAOs7B,EAAK5jB,cAAcnF,GAAS87F,aACnC/zD,QAAS1iD,IAAOqrB,OAAOoW,aAAatQ,OAAOqV,WAAWmtE,aAAat2D,MAAM36C,IACvE,EAAGiE,KAAIyB,WAAY,CAACzB,EAAIyB,IAE1B0xC,aAAc95C,IAAOqrB,OAAOoW,aAAatQ,OAAOqV,WAAWmtE,aAAat2D,MAAMnW,KAC5E,EAAGN,eAAgBA,GACnBjgC,KAGNmU,SAAU,CAAC,WAGE,SAAGxb,OAAO,GAAIokC,WAAW,MACtC,MAAO,CACLt7B,MAAOs7B,EAAK5jB,cAAcnF,GAAS+6F,aACnC/zF,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAO,UACP6X,OAAQ,CAAC,aAEX,CACEtZ,GAAI,cACJyB,MAAOs7B,EAAK5jB,cAAcnF,GAASg7F,iBACnC11F,OAAQ,CAAC,UAEX,CACEtZ,GAAI,SACJyB,MAAOs7B,EAAK5jB,cAAcnF,GAASs4F,QACnChzF,OAAQ,CAAC,cAAe,WAE1B,CACEtZ,GAAI,WACJyB,MAAOs7B,EAAK5jB,cAAcnF,GAASkoE,UACnC5iE,OAAQ,CACN,gBACI3gB,EAAK62G,WAAa,CAAC,eAAiB,MACpC72G,EAAK62G,WAAa,CAAC,iBAAmB,GAC1C,qBACI,UAAA72G,EAAKmqC,uBAAL,SAA+B,CAAC,oBAAsB,MAMhEj1B,WAAY,CACVqhG,SAAU,CACRztG,MAAOs7B,EAAK5jB,cAAcnF,GAASk7F,WAErCC,kBAAmB,CACjB1tG,MAAOs7B,EAAK5jB,cAAcnF,GAASm7F,oBAErCrsE,gBAAiB,CACflqC,KAAM,UACN6I,MAAOs7B,EAAK5jB,cAAcnF,GAAS8uB,iBACnCxF,SAAS,GAEX8yE,iBAAkB,CAChBx3G,KAAM,UACN6I,MAAOs7B,EAAK5jB,cAAcnF,GAASo7F,uBACnCh1E,YAAa2C,EAAK5jB,cAAcnF,GAASq7F,8BAE3CC,kBAAmB,CACjB7tG,MAAOs7B,EAAK5jB,cAAcnF,GAASs7F,mBACnCn1E,YAAa4C,EAAK5jB,cAAcnF,GAASu7F,0BAE3CC,WAAY,CACV52G,KAAM,UACN6I,MAAOs7B,EAAK5jB,cAAcnF,GAASw7F,aAErCC,YAAa,CACXhuG,MAAOs7B,EAAK5jB,cAAcnF,GAASy7F,cAErCC,cAAe,CACbjuG,MAAOs7B,EAAK5jB,cAAcnF,GAAS07F,eACnCl2F,OAAQ,SAEV8yF,OAAQ,CACN7qG,MAAOs7B,EAAK5jB,cAAcnF,GAASs4F,QACnC9yF,OAAQ,cACR5L,OAAQoiG,GAAY,CAAEjzE,SACtB6yC,eAAgBmgC,IAElBM,YAAa,CACX5uG,MAAOs7B,EAAK5jB,cAAcnF,GAASi7F,eAErCp1G,MAAO,CACL4H,MAAO,UAGX0S,SAAU,K,qkBChPd,MAAMH,GAAWC,yBAAe,CAC9B6lE,SAAU,CAAF,2DAyEK90C,yBAAQwpE,KAAiB5C,KAAzB5mE,CAnEUhnC,IAAU,QACjC,MAAM,MACJ0kC,EADI,cAEJS,EAFI,KAGJxqC,EAHI,SAIJmjC,EAJI,KAKJiB,EALI,gBAMJswE,EANI,YAOJt8D,EAAc,IACZ/yC,GACE,iBAAEm4C,EAAmB,IAAOpF,EAElC,IAAInjC,EAASssB,GAAO,CAAEvhC,OAAMokC,SAE5BnvB,EAAS4tD,aAA0B,CACjC5tD,SACA9X,KAAM,sBACNwW,MAAOjT,IAAOqrB,OAAOoW,aAAakgD,QAAQ56C,WAC1CrD,OACAt7B,MAAO,CAAEzB,GAAI+8B,EAAK5jB,cAAcnF,GAAS8lE,aAG3C,IAAI/d,GADmB,UAAG1iE,IAAOqrB,OAAOoW,oBAAjB,iBAAG,EAA4BkgD,eAA/B,aAAG,EAAqC56C,YAC5BG,KAChCh0B,GAASA,EAAKvM,KAAOrH,EAAKw1G,qBAE7B,MAAMmC,EAAwBv0C,aAAH,EAAGA,EAAYF,eACtCy0C,IACF1iG,EAAS0iG,EAAsB,CAC7B1iG,OAAQ,KAAUA,GAClBjV,OACAokC,UAEJnvB,EAAOC,WAAW6hG,cAAcpjG,MAAQ,CACtCyvC,QAAS9lD,OAAO+D,KAAKm8C,GAAkBp6C,IAAKq2D,GAAM,CAChDA,EACAjc,EAAiBic,GAAG3wD,SAIxB,MAAM,MAAE5H,EAAQ,IAAOlB,GAAQ,GAK/B,OAJAmkB,KAAqB,KACnBuwF,KACC,CAACxzG,EAAOwzG,IAGT,qCACE,cAACW,GAAD,SACMhwG,GADN,IAEEvF,KAAMm9B,YAAW53B,EAAM+N,UACvBrV,KAAK,UAEP,cAAC,KAAD,CAAeolC,SAAUA,EAAzB,SACE,cAAC,IAAD,CACEluB,OAAQA,EACR03D,cAAe,CAACtlE,EAAIxJ,KAClB2sC,EAAcT,EAAD,GAAC,MACT/pC,GADQ,IAEX,CAACqH,GAAKxJ,MAGV0iB,SAAUvgB,WC/EpB,MAAMqb,GAAWC,yBAAe,CAC9Bs8F,cAAe,CAAF,qDAIbC,YAAa,CAAF,mDAiBEC,OAXO,EAAGr6D,QAAOx7C,OAAM4P,KAAK,SACzC,MAAMkmG,EAAKlmG,EACLuyB,EAAOkE,oBACb,OACE,eAACyvE,EAAD,CAAIhoG,UAAU,iBAAd,UACG9N,EAAQ,GAAEmiC,EAAK5jB,cAAcnF,GAASw8F,iBAAiB51G,MAAW,GAClEmiC,EAAK5jB,cAAcnF,GAASu8F,eAF/B,KAEiDn6D,M,qkBC4EtCu6D,OAjFC3yG,IAAU,UACxB,MAAM,YACJ+yC,EADI,KAEJp4C,EAAO,GAFH,OAGJ2zG,EAHI,UAIJG,EAJI,aAKJmE,EALI,WAMJz9B,GACEn1E,GACE,OAAEwsB,GAAWnxB,IAAOqrB,OAAOoW,aAE3B+1E,EAAeD,EACfE,EAAkB76G,OAAOgT,OAC7B,OACItQ,SAAA,UAAAA,EAAMkB,aAAN,mBAAaA,aAAb,eAAoBkC,IAAI,EAAG3G,IAAGg4B,QAAN,CAAiB,CAACh4B,GAAIg4B,OAAS,IAG7D,OACE,mCACGz0B,SADH,UACGA,EAAM2zG,cADT,aACG,EACGvuG,OAAQkvG,IAAmBA,EAAckD,QAC1Cp0G,IAAKkxG,IAAkB,UACtB,MAAMn/F,EAAQm/F,SAAH,UAAGA,EAAen/F,aAAlB,aAAG,EAAsBtX,MAC9B6N,EAAQ0sC,EAAYmF,QAAQpoC,IAAU,IACtC,OAAEV,EAAS,IAAO/I,EAExB,IAAI03C,EAAU9lD,OAAO+D,KAAKoT,GACvBrR,IAAKjG,IAAD,CACHU,MAAOV,EACPu8B,MAAOjlB,EAAOtX,GAAM2L,SAIrB1D,OAAO,EAAGvH,YACTs6G,EAAgBhjG,IACZgjG,EAAgBhjG,GAAOlF,SAASpS,IAIxCulD,EAAUA,EAAQt0B,KAAK,CAAC4P,EAAGxJ,IACzBwJ,EAAEhF,MAAM0+E,cAAcljF,EAAEwE,MAAO,KAAM,CAAE2+E,YAAa,UAGtD,MAAM9oD,EAAU+kD,EAAcl2D,SACxBk6D,EAAgB3E,EAAOW,SAAD,UAACA,EAAen/F,aAAhB,aAAC,EAAsBtX,QAI3C6/B,KAAM66E,EAAR,aAAqBC,GAAiBvxE,aAC1C,OACApV,EAAOqV,WAAWmtE,aAAat2D,MAC/Bu2D,GAGF,IAAIz2G,EAAQ26G,EAAa,CAAElE,gBAAe5oG,QAAO4sG,kBAEjD,MAAM,eACJG,EAAiB,EAACt7G,EAAMyoB,IAAYA,IAClCiM,EAAOqV,WAAWmtE,aAEtB,OAAO6D,IAAiB19B,GAtEf9uE,KACjB,MAAM,OAAE+I,GAAW/I,EACnB,OAAOA,MACHsqG,GAAqBtqG,EAAM6rG,YAAc,MACzCpB,GAAiBzqG,EAAM6rG,YAAc,MAGrC9iG,GAAUnX,OAAO+D,KAAKoT,GAAQ5S,OAAS,GA+DG62G,CAAUhtG,IAC9C,cAACwsG,EAAD,UACE,cAACK,EAAD,CACE3E,MAAOU,EACPlxD,QAASq1D,EAAenE,SAAD,UAACA,EAAen/F,aAAhB,aAAC,EAAsBtX,MAAOulD,GACrDmM,QAASA,EACT1xD,MAAOA,EACP28E,WAAYA,EACZ9uC,SAAU,CAACrkC,EAAIxJ,MACZ28E,GAAcs5B,EAAU,SAAKH,GAAN,IAAc,CAACtsG,GAAKxJ,SAR/By2G,EAAc,QAajC,Q,8kBCzFL,MAAMh6E,GAAeE,GAAD,GAAC,MACvBA,GADsB,IAEzBC,aAAc,EACdC,OAAQ,SACHF,EAAME,QADL,IAEJC,UAAW,UACXC,QAAS,cAIAC,GAAqB,CAChCC,QAAS,CAACC,EAAQtqB,IAAT,GAAC,MACLsqB,GADI,IAEPC,OAAQ,OACRC,aAAc,oBACdC,UAAW,OACXC,kBAAmB1qB,EAAMwpB,WAAa,SAAW,QACjDmB,UAAW,SAEbC,KAAM,CAACN,EAAQtqB,IAAT,GAAC,MACFsqB,GADC,IAEJO,IAAK,KACLC,UAAW,EACXL,UAAW,OACXD,aAAc,oBACdO,OAAQ,IAEVC,mBAAqBV,GAAD,GAAC,MAChBA,GADe,IAElBW,MAAO,OAETC,eAAiBZ,GAAD,GAAC,MACZA,GADW,IAEdsB,QAAS,MACTT,YAAa,IAEfC,kBAAoBd,IAAD,CACjBe,aAAc,EACd68E,WAAY,QAEd38E,OAAQ,CAACjB,EAAQtqB,IAAT,GAAC,MACJsqB,GADG,IAENkB,gBAAiB,KACjBb,UAAW,OACXc,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,QAAS,UACTvC,MAAOrpB,EAAMmpB,WACT,UACAnpB,EAAMkpB,UACN,UACA,UACJ,UAAW,CACTsC,gBAAiB,MAEnBM,IAAK,CACHC,KAAM,WACN9D,OAAQ,kBACRgD,MAAO,sBAKAk9E,GAAqB,CAChC99E,QAAS,CAACC,EAAQtqB,IAAT,GAAC,MACLsqB,GADI,IAEPC,OAAQ,oBACRP,aAAc,MACdS,UAAW,OACXE,UAAW,OACXM,MAAO,UAETL,KAAM,CAACN,EAAQtqB,IAAT,GAAC,MACFsqB,GADC,IAEJO,IAAK,KACLC,UAAW,EACXL,UAAW,OACXF,OAAQ,oBACRQ,OAAQ,EACRE,MAAO,UAETD,mBAAqBV,GAAD,GAAC,MAChBA,GADe,IAElBW,MAAO,OAETG,kBAAoBd,GAAD,GAAC,MACfA,GADc,IAEjBsB,QAAS,QAEXL,OAAQ,CAACjB,EAAQtqB,IAAT,GAAC,MACJsqB,GADG,IAENkB,gBAAiB,KACjBb,UAAW,OACXc,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,QAAS,UACTvC,MAAOrpB,EAAMmpB,WACT,UACAnpB,EAAMkpB,UACN,UACA,UACJ,UAAW,CACTsC,gBAAiB,MAEnBM,IAAK,CACHC,KAAM,WACN9D,OAAQ,kBACRgD,MAAO,sB,wBCtGN,MAAMm9E,GAA0B,EACrCvE,gBACA5oG,QACA4sG,oBACI,QACJ,MAAM/oD,EAAU+kD,EAAcl2D,SAC9B,OAAOk6D,EACH/oD,EACE3qD,MAAMC,QAAQyzG,GACZA,EAAcl1G,IAAKqxB,IAAD,cAAQ,CACxB52B,MAAO42B,EACPiF,MAAK,UAAEhuB,EAAM+I,cAAR,iBAAE,EAAeggB,UAAjB,aAAE,EAAmB3rB,SAE5B,GACF,CACEjL,MAAOy6G,EACP5+E,MAAK,UAAEhuB,EAAM+I,cAAR,iBAAE,EAAe6jG,UAAjB,aAAE,EAA+BxvG,OAE1C,IAGOgwG,GAA4B,EAAG7jG,SAAQsL,eAElD,IAAI,OAAEI,GAAW1L,EAAOoN,UAAU,GAClC,MAAM0tB,EAAMpvB,EAAO5a,QAAQ,QAAU,EAOrC,OANA4a,EAAS,IACJA,EAAO5V,MAAM,EAAGglC,GACnB,cACGpvB,EAAO5V,MAAMglC,EAAKpvB,EAAO9e,SAE9BoT,EAAOoN,UAAU,GAAG1B,OAASA,EACtB1L,GAGI8jG,GAA0B,EAAGl7G,QAAO+1G,WACvC,KAAQ/1G,QAQZmH,EAPA,CACEvI,EAAGm3G,EAAMz+F,MAAMtX,MACfR,EAAGuH,MAAMC,QAAQhH,GACb,gDACA,+CACJ42B,EAAG52B,GCnCLm7G,GAAe3zG,IAAU,QAC7B,MAAM,MACJuuG,EADI,QAEJxwD,EAFI,YAGJpqB,EAHI,QAIJu2B,EAJI,SAKJ7jB,EALI,MAMJ7tC,EANI,WAOJ28E,GACEn1E,EACEmpD,EAASx1B,EAAY2L,QACrBlQ,EAAI7vB,MAAMC,QAAQhH,IAA2B,IAAjBA,EAAMgE,OAAe,KAAOhE,EAE9D,OACE,cAAC2wD,EAAD,CACEhtB,YAAW,UAAEoyE,aAAF,EAAEA,EAAO9qG,aAAT,SAAmB8qG,SAAA,UAAAA,EAAOz+F,aAAP,eAAcukB,QAAS,YACrD3pB,UAAU,yBACVk/C,gBAAgB,eAChBrpC,QAASw9B,EACTroB,OAAQF,GACRL,MAAOF,GACPhO,WAAY,CAAEyN,uBAAmBN,aACjC6C,WAAYk+C,EACZ9uC,SAAW1rC,IAEP0rC,EACEkoE,EAAMz+F,MAAMtX,MAFZmC,EAGAuvD,EAAUvvD,EAAKoD,IAAI,EAAGvF,WAAYA,GAAS,CAACmC,EAAKnC,OAIvB,KAGhC0xD,QAASqkD,EAAMx1D,SACfkR,aAAW,EACXzxD,MAAO42B,KAKbukF,GAAY91C,eAAiB41C,GAC7BE,GAAYR,aAAeK,GAC3BG,GAAYzE,aAAewE,GAEZ/gF,oBAAe,cAAfA,CAA8BghF,IC9C7C,MAAMC,GAAiB5zG,IAAU,QAC/B,MAAM,MAAEuuG,EAAF,QAASxwD,EAAT,QAAkBmM,EAAlB,SAA2B7jB,EAA3B,MAAqC7tC,EAArC,WAA4C28E,GAAen1E,EAC3D6zG,EAAar7G,EAEnB,OACE,sBAAKkS,UAAU,iBAAf,UACE,cAAC,SAAD,CAAQ8B,GAAG,KAAX,mBAAiB+hG,EAAM9qG,aAAvB,QAAgC8qG,SAAhC,UAAgCA,EAAOz+F,aAAvC,aAAgC,EAAcukB,QAC9C,qBAAK3pB,UAAU,UAAf,SACGqzC,EAAQhgD,IAAI,EAAGs2B,QAAO77B,SAASpB,IAC9B,qBAAKsT,UAAU,QAAf,SACE,cAAC,WAAD,CACE44B,SAAU6xC,EACV9gD,MAAOA,EACPy/E,OAAQ5pD,EACRyL,QACEzL,IACM2pD,YAAYtxE,KAAMob,GAAMA,EAAEnlD,QAAUA,IACtCq7G,GAAcA,EAAWr7G,QAAUA,EAEzC6tC,SAAU,CAAC7uC,GAAKm+D,aACdtvB,EACEkoE,EAAMz+F,MAAMtX,MACZ0xD,EACI,IACK2pD,EACA9zG,OAAQ49C,GAAMA,EAAEnlD,QAAUA,GAC1BuF,IAAK4/C,GAAMA,EAAEnlD,UACZm9D,EAAU,CAACn9D,GAAS,IAE1Bm9D,EACAn9D,EACA,SAtBgBA,UAiCtCo7G,GAAc/1C,eAAiB41C,GAC/BG,GAAcT,aAAeK,GAC7BI,GAAc1E,aAAewE,GAEdE,U,0EC3Cf,MAAM59F,GAAWC,yBAAe,CAC9B89F,UAAW,CAAF,6CAITC,QAAS,CAAF,2CAMH71D,GAAW,IACf,qBACEzzC,UAAU,YACVpC,MAAO,CACLmsB,MAAO,OACP9C,KAAM,OACNqF,QAAS,MACTonB,SAAU,WACVnoB,IAAK,QAGP4e,SAAS,IAVX,SAYE,cAAC,KAAD,CAAM/8C,KAAMumD,KAAS/vB,KAAK,WAGxBgwB,GAAW,IACf,qBACE5zC,UAAU,YACVpC,MAAO,CACLmsB,MAAO,OACP7C,MAAO,OACPoF,QAAS,MACTonB,SAAU,WACVnoB,IAAK,QAGP4e,SAAS,IAVX,SAYE,cAAC,KAAD,CAAM/8C,KAAMymD,KAAUjwB,KAAK,WAIzB2lF,GAAY,IAAM,cAAC,KAAD,CAAMn8G,KAAMk9B,KAAU1G,KAAK,OAAO5jB,UAAU,UAE9DwpG,GAAkBl0G,IAAU,QAChC,MAAM,MAAEuuG,EAAF,WAASp5B,EAAT,SAAqB9uC,EAArB,MAA+B7tC,EAA/B,WAAsCinD,EAAtC,KAAkD1gB,EAAlD,KAAwDjzB,GAAS9L,EACjEugC,EAASvgC,EAAMugC,OAAOjB,SACtB,gBAAE60E,GAAoB10D,GACrBJ,EAAS+0D,GAAcv1F,mBAAS,MAEvC,OACE,sBAAKnU,UAAU,kBAAf,UACE,cAAC,SAAD,CAAQ8B,GAAG,KAAX,mBAAiB+hG,aAAjB,EAAiBA,EAAO9qG,aAAxB,QAAiC8qG,SAAjC,UAAiCA,EAAOz+F,aAAxC,aAAiC,EAAcukB,QAC/C,qBAAK3pB,UAAU,mCAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,cAACypG,EAAD,CACEJ,UAAWv7G,GAASA,EAAM,GAAK+nC,EAAO/nC,EAAM,IAAM,KAClD67G,YAAgB9F,EAAM,OAAR,cACd+F,yBAA0Bv1E,EAAK5jB,cAAcnF,GAAS+9F,WACtDC,QAASx7G,GAASA,EAAM,GAAK+nC,EAAO/nC,EAAM,IAAM,KAChD+7G,UAAchG,EAAM,OAAR,YACZiG,uBAAwBz1E,EAAK5jB,cAAcnF,GAASg+F,SACpDn0D,eAAgB,EAChBvc,SAAU6xC,EACVn1B,UAAQ,EACRy0D,gBAAc,EACdC,gBAAiB,cAACT,GAAD,IACjBh0D,cAAe1f,EAAOE,WAAW30B,GAAMo0C,eAAe,KACtDy0D,aAAct1D,EACdU,cAAgB40D,GAAiBP,EAAWO,GAC5CC,cAAe,EAAGb,YAAWC,cAC3B3tE,EAASkoE,EAAMz+F,MAAMtX,MAAO,CAC1Bu7G,EAAYA,EAAUzzE,OAAO,cAAgB,KAC7C0zE,EAAUA,EAAQ1zE,OAAO,cAAgB,QAG7Cwf,eAAgB,KAAM,EACtBK,QAAS,cAAChC,GAAD,IACTiC,QAAS,cAAC9B,GAAD,cAQrB41D,GAAef,aAAe,EAAGlE,gBAAe5oG,QAAO4sG,mBAC9CA,GAAiB,CAAC,KAAM,MAGjCiB,GAAehF,aAAe,EAAG12G,QAAO+1G,WAC/B/1G,GAA6B,iBAAbA,EAAM,IAAuC,iBAAbA,EAAM,GACzD,CACEpB,EAAGm3G,EAAMz+F,MAAMtX,MACfR,EAAG,+CACHo3B,EAAG52B,GAEL,KAGSwuC,yBACbrU,aAAe,CAAC,aAAc,WAC9BuU,mBAAS97B,IAAD,CACNU,KAAMV,EAAM2zB,KAAK1O,UAEnB4W,aALaD,CAMbktE,ICrHF,MAAMl+F,GAAWC,yBAAe,CAC9BuW,OAAQ,CAAF,uCAsCOqoF,OAhCM70G,IACnB,MAAM,KAAErF,EAAF,WAAQwzG,EAAR,cAAoBC,EAApB,OAAmC0G,EAAnC,gBAA2CzF,GAAoBrvG,EAC/D++B,EAAOkE,oBAEb,OACE,sBAAKv4B,UAAU,eAAf,UACE,cAAC,QAAD,CACE1I,GAAOhC,EAAMgC,GAAR,cACLxJ,MAAO21G,EACPhyE,YACExhC,EAAKw2G,mBAAqBpyE,EAAK5jB,cAAcnF,GAASwW,QAExD67C,OAAK,EACLyV,WAAa79D,KACP60F,GAAwB,UAAd70F,EAAMnnB,MAAiBu2G,EAAgBlB,IAEvD9nE,SAAU,CAACpmB,GAASznB,YAClB41G,EAAc51G,GACVs8G,GACFzF,EAAgB72G,MAIrBs8G,GACC,cAAC,SAAD,CAAQlxE,OAAK,EAACC,MAAI,EAACn5B,UAAU,gCAA7B,SACE,cAAC,KAAD,CAAM5S,KAAMi9G,a,ylBC9BtB,MAAM/+F,GAAWC,yBAAe,CAC9B++F,eAAgB,CAAF,uEAIdC,aAAc,CAAF,qDA+ECC,OArEKl1G,IAAU,MAC5B,MAAM,KAAErF,EAAO,GAAT,OAAa2zG,EAAS,GAAtB,UAA0BG,EAA1B,WAAqCt5B,GAAen1E,EACpDm1G,EAAgBx6G,EAAK2zG,QAAU,IAC9B8G,EAAUC,GAAetuG,IAAM8X,UAAS,GAEzCy2F,EAAeH,EAAcp1G,OACjC,EAAG+P,WACDA,GAAS7X,OAAO+D,KAAKsyG,GAAQ1jG,SAASkF,EAAMtX,QAAU81G,EAAOx+F,EAAMtX,QACrEgE,QAGAk8C,MAAOq2D,GACL1zG,IAAOqrB,OAAOoW,aAAatQ,OAAOqV,WAAWmtE,aAE3CjwE,EAAOkE,oBAEb,OAAOqyE,EACL,eAAC,YAAD,CAAW5qG,UAAU,iBAArB,UACE,eAAC,YAAU69D,MAAX,CACE79D,UAAU,qBACVg+B,OAAQ0sE,EACRj7E,QAAS,IAAMk7E,GAAaD,GAH9B,UAKE,sBAAK1qG,UAAU,oBAAf,UACE,cAAC,KAAD,CAAW5S,KAAMg9B,KAASxG,KAAK,SAC9ByQ,EAAK5jB,cAAcnF,GAASg/F,gBAF/B,KAEkDM,KAElD,eAAC,SAAD,CACEzxE,MAAI,EACJD,OAAK,EACLouC,SAAO,EACP1jD,KAAK,QACL6L,QAAU3iC,IACRA,EAAE8oB,mBACD60D,GAAcs5B,EAAU,KAP7B,UAUE,cAAC,OAAD,CAAM32G,KAAK,UACVinC,EAAK5jB,cAAcnF,GAASi/F,oBAGjC,cAAC,YAAUr8C,QAAX,CAAmBluD,UAAU,sBAAsBg+B,OAAQ0sE,EAA3D,SACE,qBAAK1qG,UAAU,cAAf,mBACG/P,EAAK2zG,cADR,aACG,EAAavwG,IAAI,CAACkxG,EAAe73G,KAAM,UACtC,MACEm+G,oBAAqBC,GACnB5zE,aAAiB,OAAQmtE,EAAkBE,GACzCV,EAAQU,SAAH,UAAGA,EAAen/F,aAAlB,aAAG,EAAsBtX,MACpC,OAAK+1G,EAGH,8BACGt2G,OAAO+D,KAAKsyG,GAAQ1jG,SAAS2jG,MAAYD,EAAOC,IAC/C,sBAAK7jG,UAAU,oBAAf,UACE,sBAAMA,UAAU,cAAhB,mBACGukG,EAAcxrG,aADjB,QAC0BwrG,SAD1B,UAC0BA,EAAen/F,aADzC,aAC0B,EAAsBukB,QAEhD,cAACmhF,EAAD,SAAyBx1G,GAAzB,IAAgCuuG,MAAOA,OAJDn3G,IAFlCA,GAHO,cAkBzB,M,0CCzEN,MAAM4e,GAAWC,yBAAe,CAC9Bw/F,YAAa,CAAF,iDAIX/G,OAAQ,CAAF,uCAINgH,UAAW,CAAF,2CAITC,WAAY,CAAF,+CA2FG3uE,yBAAQC,aAAYtU,aAAe,CAAC,gBAApCqU,CArFChnC,IAAU,QACxB,MAAM,KACJrF,EAAO,GADH,YAEJg5B,EAFI,OAGJ+6E,EAAS,KAHL,UAIJE,EAAY,KAJR,UAKJD,EALI,aAMJE,EANI,WAOJ15B,EAPI,YAQJpiC,EAAc,GARV,KASJhU,GACE/+B,GACE,iBAAEm4C,GAAqBpF,EACvBoW,EAASx1B,EAAY2L,QAErBs2E,EAAelH,IAAU/zG,SAAJ,UAAIA,EAAMkB,aAAV,aAAI,EAAa2oC,UAAW,IAEjD,cAAEktE,EAAgB,IAAO/2G,EACzBnC,EAAQ,CACZA,MAAOo9G,GAAgB72E,EAAK5jB,cAAcnF,GAASy/F,aACnDphF,MACEuhF,GAAgBz9D,EAAhB,UACIA,EAAiBy9D,UADrB,aACI,EAAgCnyG,MAChCmyG,GAAgB72E,EAAK5jB,cAAcnF,GAASy/F,cAGpD,OACE,sBAAK/qG,UAAU,sBAAf,UACE,sBAAKA,UAAU,iBAAf,UACG/P,EAAK82G,aACJ,sBAAM/mG,UAAU,aAAhB,SAA8B/P,EAAK82G,cAErC,cAACtoD,EAAD,CACEnnD,GAAG,wBACHlK,KAAK,6BACL4S,UAAU,gCACVk/C,gBAAgB,eAChBztB,YAAa4C,EAAK5jB,cAAcnF,GAAS04F,QACzCh5E,OAAQ69E,GACRp+E,MAAOF,GACPhO,WAAY,CAAEyN,uBAAmBN,aACjC7T,QAAS,IACJmxF,EAAc3zG,IAAKq2D,IAAD,YAAQ,CAC3B57D,MAAO47D,EACP//B,OAAO,UAAA8jB,EAAiBic,UAAjB,eAAqB3wD,QAAS2wD,MAGzC57D,MAAOA,EACP6tC,SAAW1rC,KACRw6E,GAAcw5B,EAAUh0G,EAAKnC,aAIpC,cAAC,SAAD,CACEqrC,MAAI,EACJD,OAAK,EACLouC,SAAO,EACPvuE,MAAOs7B,EAAK5jB,cAAcnF,GAAS0/F,WACnChrG,UAAW24B,IAAG,CACZqF,OAAsB,cAAdkmE,IAEVz0E,QAAS,MACNg7C,GAAc05B,EAAa,cAThC,SAYE,cAAC,KAAD,CAAM/2G,KAAM+8B,KAAOvG,KAAK,WAE1B,cAAC,SAAD,CACEuV,MAAI,EACJD,OAAK,EACLouC,SAAO,EACPvuE,MAAOs7B,EAAK5jB,cAAcnF,GAAS2/F,YACnCjrG,UAAW24B,IAAG,CACZqF,OAAsB,eAAdkmE,IAEVz0E,QAAS,MACNg7C,GAAc05B,EAAa,eAThC,SAYE,cAAC,KAAD,CAAM/2G,KAAMg9B,KAASxG,KAAK,gBC/GlC,MAAMunF,GAAe71G,IAAU,QAC7B,MAAM,MAAEuuG,EAAF,WAASp5B,EAAT,SAAqB9uC,EAArB,MAA+B7tC,GAAUwH,EAE/C,OACE,sBAAK0K,UAAU,iBAAf,UACE,cAAC,SAAD,CAAQ8B,GAAG,KAAX,mBAAiB+hG,aAAjB,EAAiBA,EAAO9qG,aAAxB,QAAiC8qG,SAAjC,UAAiCA,EAAOz+F,aAAxC,aAAiC,EAAcukB,QAC/C,qBAAK3pB,UAAU,QAAf,SACE,cAAC,QAAD,CACEorG,QAAM,EACNngD,QAASn9D,GAA0B,iBAAVA,EACzB8qC,SAAU6xC,EACV9uC,SAAU,CAAC7uC,GAAKm+D,cACdtvB,EAASkoE,EAAMz+F,MAAMtX,MAAOm9D,YAQxCkgD,GAAY1C,aAAe,EAAGlE,gBAAe5oG,QAAO4sG,mBAC3CA,GAA0C,iBAAlBA,EAGjC4C,GAAY3G,aAAe,EAAG12G,QAAO+1G,WAC5B/1G,GAA0B,iBAAVA,EACnB,CACEpB,EAAGm3G,EAAMz+F,MAAMtX,MACfR,EAAG,iDACHo3B,EAAG,IAEL,KAGSymF,U,qkBCIAE,OAtCf,SAAoC/1G,GAClC,MAAM,MAAEuuG,EAAF,WAASp5B,EAAT,UAAqBs5B,EAArB,OAAgCH,GAAWtuG,EACjD,MAAgC,iBAAlBsuG,EAAOC,GACnB,eAAC,QAAD,CAAOjgF,KAAK,QAAZ,UACGggF,EAAOC,GACR,cAAC,OAAD,CACEz2G,KAAK,SACLqiC,QAAS,MACNg7C,GACCs5B,EAAU,SACLH,GADI,IAEP,CAACC,GAAQ,YAMnB,mCACGD,EAAOC,GAAOxwG,IAAI,CAAC22F,EAAOt9F,IACzB,eAAC,QAAD,CAAOk3B,KAAK,QAAZ,UACGomE,EACD,cAAC,OAAD,CACE58F,KAAK,SACLqiC,QAAS,KACP,MAAM2d,EAAUw2D,EAAOC,GAAOxuG,OAAQwO,GAASA,IAASmmF,IACvDvf,GACCs5B,EAAU,SACLH,GADI,IAEP,CAACC,GAAQz2D,UATM1gD,OClBjC,MAAM4e,GAAWC,yBAAe,CAC9Bq6E,IAAK,CAAF,+BAIHt8E,GAAI,CAAF,+BA6BWgiG,OAvBf,SAAoCh2G,GAClC,MAAM,MAAEuuG,EAAF,WAASp5B,EAAT,UAAqBs5B,EAArB,OAAgCH,GAAWtuG,EAC3C++B,EAAOkE,oBAEb,OACE,eAAC,QAAD,CAAO3U,KAAK,QAAZ,UACGyQ,EAAK5jB,cAAcmzF,EAAOC,GAASv4F,GAASs6E,IAAMt6E,GAAShC,IAC5D,cAAC,OAAD,CACElc,KAAK,SACLqiC,QAAS,KACP,MAAM87E,EAAiBh+G,OAAOgT,OAC5B,MACGhT,OAAO+D,KAAKsyG,GACZvuG,OAAQ49C,GAAMA,IAAM4wD,GACpBxwG,IAAK4/C,IAAD,CAAU,CAACA,GAAI2wD,EAAO3wD,QAE9Bw3B,GAAcs5B,EAAUwH,UC3BnC,MAAMjgG,GAAWC,yBAAe,CAC9Bq6E,IAAK,CAAF,+BAIHt8E,GAAI,CAAF,+BA6BWkiG,OAvBf,SAAuCl2G,GACrC,MAAM,MAAEuuG,EAAF,WAASp5B,EAAT,UAAqBs5B,EAArB,OAAgCH,GAAWtuG,EAC3C++B,EAAOkE,oBAEb,OACE,eAAC,QAAD,CAAO3U,KAAK,QAAZ,UACGyQ,EAAK5jB,cAAcmzF,EAAOC,GAASv4F,GAASs6E,IAAMt6E,GAAShC,IAC5D,cAAC,OAAD,CACElc,KAAK,SACLqiC,QAAS,KACP,MAAM87E,EAAiBh+G,OAAOgT,OAC5B,MACGhT,OAAO+D,KAAKsyG,GACZvuG,OAAQ49C,GAAMA,IAAM4wD,GACpBxwG,IAAK4/C,IAAD,CAAU,CAACA,GAAI2wD,EAAO3wD,QAE9Bw3B,GAAcs5B,EAAUwH,U,8kBClBnC,MAAMjgG,GAAWC,yBAAe,CAC9BkgG,iBAAkB,CAAF,uCAMZtD,GAAe,EAAG/oG,cACtB,cAAC,UAAD,CAAS85B,OAAK,EAACl5B,UAAU,QAAzB,SACGZ,IA8HUssG,OA1HYp2G,IAAU,UACnC,MAAM,SACJ8J,EADI,KAEJnP,EAFI,WAGJijC,EAHI,OAIJ0wE,EAJI,UAKJG,EALI,UAMJE,EANI,aAOJE,EAPI,OAQJH,EARI,UASJE,EATI,gBAUJS,EAVI,aAWJO,EAXI,WAYJzB,EAZI,WAaJh5B,EAbI,YAcJpiC,EAAc,IAIZ/yC,GACE,iBAAEoyG,GAAqBz3G,EACvBm6G,GAAU1C,EACVrzE,EAAOkE,oBAEb,OACE,eAAC,OAAD,CAAMv4B,UAAU,yCAAyCk3D,WAAS,EAAlE,UACE,cAAC,OAAKhN,IAAN,UACE,cAAC,OAAK3D,OAAN,UACGt2D,EAAKu2G,UAAY,oBAAIxmG,UAAU,WAAd,SAA0B/P,EAAKu2G,eAIrD,eAAC,OAAKt8C,IAAN,WACE,eAAC,OAAK3D,OAAN,CACEolD,OAAQ,GACRC,OAAQ,UAAA37G,EAAK2zG,cAAL,SAAa9xG,OAAS,EAAI,GAClC+5G,SAAU,UAAA57G,EAAK2zG,cAAL,SAAa9xG,OAAS,EAAI,GAHtC,YAKIvE,OAAO+D,KAAKrB,GAAMiQ,SAAS,oBACzBjQ,EAAKmqC,kBAEP,sBAAKp6B,UAAU,iBAAf,UACE,cAAC,GAAD,SAAiB1K,GAAjB,IAAwB80G,OAAQA,KAC/Bn6G,EAAKy3G,kBACJ,cAAC,SAAD,CAAQ78E,SAAO,EAAC4E,QAAS,IAAMk1E,EAAgBlB,GAA/C,SACGxzG,EAAK22G,mBACJvyE,EAAK5jB,cAAcnF,GAASmgG,uBAMtC,8BACE,cAAC,GAAD,SACMn2G,GADN,IAEEm1E,WAAYA,EACZs5B,UAAY9wD,IACV64D,qBAAU,KACR/H,EAAU9wD,GACV0xD,EAAgBO,GAAgB,GAAIjyD,WAM5C,sBAAKjzC,UAAU,4BAAf,UACE,cAAC,GAAD,CAAe9N,KAAMgzG,EAAcx3D,MAAOxa,IACzCjjC,EAAK62G,YACJ,cAAC,GAAD,CACE72G,KAAMA,EACNo4C,YAAaA,EACboiC,WAAYA,EACZy5B,UAAWA,EACXF,OAAQA,EACRC,UAAYD,IACV8H,qBAAU,KACR7H,EAAUD,GACVW,EAAgBO,GAAgB,GAAItB,EAAQI,MAGhDG,aAAeD,IACb4H,qBAAU,KACR3H,EAAaD,GACbS,EACEO,GAAgB,GAChBtB,EACAI,EACAE,WAOX9kG,MAGF,UAAAnP,EAAK2zG,cAAL,eAAa9xG,SACZ,cAAC,OAAKy0D,OAAN,CAAaolD,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,EAA9C,SACE,sBAAK7rG,UAAU,SAAf,UACG/P,EAAK03G,aAAe,6BAAK13G,EAAK03G,cAC/B,cAAC,GAAD,CACEt/D,YAAaA,EACbp4C,KAAMA,EACN2zG,OAAQA,EACRn5B,WAAYA,EACZs5B,UAAY9wD,IACV64D,qBAAU,KACR/H,EAAU9wD,GACV0xD,EAAgBO,GAAgB,GAAIjyD,MAGxCi1D,aAAcC,iB,qkBC7H9B,MAAM78F,GAAWC,yBAAe,CAC9BkgG,iBAAkB,CAAF,uCAMZtD,GAAe,EAAG/oG,cACtB,cAAC,UAAD,CAAS85B,OAAK,EAACl5B,UAAU,QAAzB,SACGZ,IA8HU2sG,OA1HWz2G,IAAU,UAClC,MAAM,SACJ8J,EADI,KAEJnP,EAFI,WAGJijC,EAHI,OAIJ0wE,EAJI,UAKJG,EALI,UAMJE,EANI,aAOJE,EAPI,OAQJH,EARI,UASJE,EATI,gBAUJS,EAVI,aAWJO,EAXI,WAYJzB,EAZI,WAaJh5B,EAbI,YAcJpiC,EAAc,IAIZ/yC,GACE,iBAAEoyG,GAAqBz3G,EACvBm6G,GAAU1C,EACVrzE,EAAOkE,oBAEb,OACE,eAAC,OAAD,CAAMv4B,UAAU,wCAAwCk3D,WAAS,EAAjE,UACE,cAAC,OAAKhN,IAAN,UACE,cAAC,OAAK3D,OAAN,UACGt2D,EAAKu2G,UAAY,oBAAIxmG,UAAU,WAAd,SAA0B/P,EAAKu2G,eAIrD,eAAC,OAAKt8C,IAAN,YACG,UAAAj6D,EAAK2zG,cAAL,eAAa9xG,SACZ,cAAC,OAAKy0D,OAAN,CAAaolD,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,EAA9C,SACE,sBAAK7rG,UAAU,SAAf,UACG/P,EAAK03G,aAAe,6BAAK13G,EAAK03G,cAC/B,cAAC,GAAD,CACEt/D,YAAaA,EACbp4C,KAAMA,EACN2zG,OAAQA,EACRG,UAAY9wD,IACV64D,qBAAU,KACR/H,EAAU9wD,GACV0xD,EAAgBO,GAAgB,GAAIjyD,MAGxCi1D,aAAcC,UAMtB,eAAC,OAAK5hD,OAAN,CACEolD,OAAQ,GACRC,OAAQ,UAAA37G,EAAK2zG,cAAL,SAAa9xG,OAAS,EAAI,GAClC+5G,SAAU,UAAA57G,EAAK2zG,cAAL,SAAa9xG,OAAS,EAAI,GAHtC,YAKIvE,OAAO+D,KAAKrB,GAAMiQ,SAAS,oBACzBjQ,EAAKmqC,kBAEP,sBAAKp6B,UAAU,iBAAf,UACE,cAAC,GAAD,SAAiB1K,GAAjB,IAAwB80G,OAAQA,KAC/Bn6G,EAAKy3G,kBACJ,cAAC,SAAD,CAAQ78E,SAAO,EAAC4E,QAAS,IAAMk1E,EAAgBlB,GAA/C,SACGxzG,EAAK22G,mBACJvyE,EAAK5jB,cAAcnF,GAASmgG,uBAMtC,8BACE,cAAC,GAAD,SACMn2G,GADN,IAEEm1E,WAAYA,EACZs5B,UAAY9wD,IACV64D,qBAAU,KACR/H,EAAU9wD,GACV0xD,EAAgBO,GAAgB,GAAIjyD,WAM5C,sBAAKjzC,UAAU,4BAAf,UACE,cAAC,GAAD,CAAe9N,KAAMgzG,EAAcx3D,MAAOxa,IAEzCjjC,EAAK62G,YACJ,cAAC,GAAD,CACEz+D,YAAaA,EACbp4C,KAAMA,EACNw6E,WAAYA,EACZu5B,OAAQA,EACRE,UAAWA,EACXD,UAAYD,IACV8H,qBAAU,KACR7H,EAAUD,GACVW,EAAgBO,GAAgB,GAAItB,EAAQI,MAGhDG,aAAeD,IACb4H,qBAAU,KACR3H,EAAaD,GACbS,EACEO,GAAgB,GAChBtB,EACAI,EACAE,WAOX9kG,Y,qkBChIX,MAAMkM,GAAWC,yBAAe,CAC9BkgG,iBAAkB,CAAF,uCAMZtD,GAAe,EAAG/oG,cACtB,cAAC,OAAKmnD,OAAN,CAAaolD,OAAQ,GAAIC,OAAQ,EAAGC,SAAU,EAA9C,SACGzsG,IAyHU4sG,OArHQ12G,IAAU,MAC/B,MAAM,SACJ8J,EADI,KAEJnP,EAFI,WAGJijC,EAHI,OAIJ0wE,EAJI,UAKJG,EALI,UAMJE,EANI,aAOJE,EAPI,OAQJH,EARI,UASJE,EATI,gBAUJS,EAVI,aAWJO,EAXI,WAYJzB,EAZI,WAaJh5B,EAbI,YAcJpiC,EAAc,IAIZ/yC,GACE,iBAAEoyG,GAAqBz3G,EACvBm6G,GAAU1C,EACVrzE,EAAOkE,oBAEb,OACE,eAAC,OAAD,CAAMv4B,UAAU,qBAAqBk3D,WAAS,EAA9C,UACE,cAAC,OAAKhN,IAAN,UACE,cAAC,OAAK3D,OAAN,UACGt2D,EAAKu2G,UAAY,oBAAIxmG,UAAU,WAAd,SAA0B/P,EAAKu2G,eAIrD,cAAC,OAAKt8C,IAAN,UACE,eAAC,OAAK3D,OAAN,aACIh5D,OAAO+D,KAAKrB,GAAMiQ,SAAS,oBACzBjQ,EAAKmqC,kBAEP,sBAAKp6B,UAAU,iBAAf,UACE,cAAC,GAAD,SAAiB1K,GAAjB,IAAwB80G,OAAQA,KAC/Bn6G,EAAKy3G,kBACJ,cAAC,SAAD,CAAQ78E,SAAO,EAAC4E,QAAS,IAAMk1E,EAAgBlB,GAA/C,SACGxzG,EAAK22G,mBACJvyE,EAAK5jB,cAAcnF,GAASmgG,uBAMtC,sBAAKzrG,UAAU,sBAAf,UACE,cAAC,GAAD,SACM1K,GADN,IAEEm1E,WAAYA,EACZs5B,UAAY9wD,IACV64D,qBAAU,KACR/H,EAAU9wD,GACV0xD,EAAgBO,GAAgB,GAAIjyD,SAKzChjD,EAAK62G,YACJ,cAAC,GAAD,CACE72G,KAAMA,EACNo4C,YAAaA,EACboiC,WAAYA,EACZu5B,OAAQA,EACRE,UAAWA,EACXD,UAAYD,IACV8H,qBAAU,KACR7H,EAAUD,GACVW,EAAgBO,GAAgB,GAAItB,EAAQI,MAGhDG,aAAeD,IACb4H,qBAAU,KACR3H,EAAaD,GACbS,EACEO,GAAgB,GAChBtB,EACAI,EACAE,YAOX,UAAAj0G,EAAK2zG,cAAL,eAAa9xG,QAAS,GACrB,sBAAKkO,UAAU,SAAf,UACG/P,EAAK03G,aAAe,6BAAK13G,EAAK03G,cAC/B,cAAC,OAAD,CAAM75C,cAAc,SAASqJ,QAAS,GAAtC,SACE,cAAC,GAAD,CACElnE,KAAMA,EACNo4C,YAAaA,EACbu7D,OAAQA,EACRG,UAAY9wD,IACV64D,qBAAU,KACR/H,EAAU9wD,GACV0xD,EAAgBO,GAAgB,GAAIjyD,MAGxCi1D,aAAcC,UAKtB,cAAC,GAAD,CAAej2G,KAAMgzG,EAAcx3D,MAAOxa,EAAYpxB,GAAG,YAI7D,cAAC,OAAKooD,IAAN,UACE,cAAC,OAAK3D,OAAN,UAAcnnD,U,6kBCvIP,I,ylBCqEfmM,yBAAe,CACbxS,MAAO,CAAF,mCAIL24B,YAAa,CAAF,+CAIXx/B,KAAM,CAAF,iCAIJ+5G,IAAK,CAAF,6CAIH5vE,MAAO,CAAF,mCAIL6vE,MAAO,CAAF,mCAILC,KAAM,CAAF,iCAIJ/M,MAAO,CAAF,mCAILgN,KAAM,CAAF,iCAIJn+E,KAAM,CAAF,iCAIJo+E,UAAW,CAAF,kDAIT/5B,QAAS,CAAF,uCAKP0d,SAAU,CAAF,0CAIRsc,MAAO,CAAF,mCAILC,OAAQ,CAAF,qCAKNC,QAAS,CAAF,uCAIPC,aAAc,CAAF,mDAKZC,gBAAiB,CAAF,iEAIfC,eAAgB,CAAF,+DAIdC,cAAe,CAAF,qDAMf,MAOMx6E,GAAe,CACnBr5B,MAAO,CACLzB,GAAI,QACJyB,MAAO,QACPogC,KAAM0zE,KACNv/D,MAAO,OACP3f,KAAMm/E,IACNvkE,KAAMwkE,IACN7nG,OAAQm5D,KACRwxB,WAAY,EAAG1qF,aAAY60B,YAAf,yBACV70B,EAAWqhD,qBADD,iBACV,EAA0B5iD,aADhB,aACV,EAAiCi0B,KAC9B4kE,IAAD,eAAS,UAAAt3F,EAAW6W,cAAX,mBAAoBygF,UAApB,eAA2B,YAAaziE,EAAM1iC,MAE3D04F,UAAU,EACV1xB,4BAA4B,EAC5BJ,WAAY,EACZ8uC,SAAU,CACRC,cAAe,GACft/E,KAAM,KAGV+D,YAAa,CACXp6B,GAAI,cACJyB,MAAO,cACPogC,KAAM+zE,KACN5/D,MAAO,OACP3f,KAAMw/E,IACN5kE,KAAM6kE,IACNloG,OAAQm5D,KACRwxB,YAAY,EACZG,UAAU,EACV1xB,4BAA4B,EAC5BJ,WAAY,EACZ8uC,SAAU,CACRC,cAAe,GACft/E,KAAM,KAGVz7B,KAAM,CACJoF,GAAI,OACJyB,MAAO,OACPogC,KAAMk0E,KACN//D,MAAO,OACP3f,KAAM2/E,IACN/kE,KAAMglE,IACNroG,OAAQsoG,KACR3d,YAAY,EACZG,UAAU,EACV1xB,4BAA4B,EAC5BJ,WAAY,EACZ8uC,SAAU,CACRC,cAAe,GACft/E,KAAM,IAERsE,cAAgBhiC,IAAS,QAIvB,SAFGA,EAAKiC,MACyB,KAA9B,UAAAjC,EAAKiC,YAAL,mBAAW8pB,cAAX,eAAmBlqB,SAA6C,KAA7B7B,EAAKiC,KAAK8pB,OAAO,GAAG9pB,QAI9DmqC,MAAO,CACL/kC,GAAI,QACJyB,MAAO,QACPogC,KAAM8gC,KACN3sB,MAAO,QACP3f,KAAM8/E,IACNllE,KAAMmlE,IACNxoG,OAAQyoG,KACR9d,YAAY,EACZG,UAAU,EACV9xB,WAAY,EACZ8uC,SAAU,CACRC,cAAe,GACft/E,KAAM,KAGV0+E,UAAW,CACT/0G,GAAI,YACJyB,MAAO,mBACPogC,KAAM8gC,KACN3sB,MAAO,QACP3f,KAAMigF,EACNrlE,KAAMslE,EACN3oG,OAAQm5D,KACRwxB,WAAY,EAAG1qF,iBAAkBA,EAAWzW,eAAe,SAC3DshG,UAAU,EACV9xB,WAAY,EACZ8uC,SAAU,CACRC,cAAe,GACft/E,KAAM,KAGV2kD,QAAS,CACPh7E,GAAI,UACJyB,MAAO,UACPogC,KAAM20E,KACNxgE,MAAO,SACP3f,KAAMogF,IACNxlE,KAAMylE,IACN9oG,OAAQm5D,KACR7pC,YAAay5E,KACbpe,YAAY,EACZG,UAAU,EACV9xB,WAAY,EACZwU,cAAc,EACds6B,SAAU,CACRC,cAAe,GACft/E,KAAM,IAER+J,WAAY,CACV,CACEpgC,GAAI,UACJigC,WAAW,EACXx+B,MAAO,UACPq4E,SAAU88B,IAEZ,CACE52G,GAAI,eACJyB,MAAO,gBACPq4E,SAAU+8B,MAEZ,CACE72G,GAAI,UACJyB,MAAO,UACPq4E,SAAUg9B,KAGd9+B,aDlSW,EAAGrsE,WAAUhT,OAAMF,WAAW,MAC3C,MAAO,CACLkT,EACEshB,aACEx0B,EADmB,GAAC,MAGfE,EAAKo4C,aACJ,UAAAp4C,EAAK2nC,iBAAL,SAAgBzY,YAChB,CAAEA,YAAa,GACf,CAAE4a,gBAAiB,SAEzB9pC,EAAK+pC,WCyRXkyE,MAAO,CACL50G,GAAI,QACJyB,MAAO,QACPogC,KAAMokE,KACNjwD,MAAO,QACP3f,KAAM0gF,IACN9lE,KAAM+lE,KACNppG,OAAQm5D,KACRwxB,YAAY,EACZG,UAAU,EACV9xB,WAAY,EACZ8uC,SAAU,CACRC,cAAe,GACft/E,KAAM,KAGVs+E,IAAK,CACH30G,GAAI,MACJyB,MAAO,oBACPogC,KAAMo1E,KACNjhE,MAAO,SACP3f,KAAM6gF,IACNjmE,KAAMkmE,IACNvpG,OAAQwpG,KACR7e,YAAY,EACZG,UAAU,EACV9xB,WAAY,EACZ8uC,SAAU,CACRC,cAAe,GACft/E,KAAM,KAGVw+E,KAAM,CACJ70G,GAAI,OACJyB,MAAO,OACPogC,KAAMw1E,KACNrhE,MAAO,SACP3f,KAAMihF,IACNrmE,KAAMsmE,KACN3pG,OAAQm5D,KACR7pC,YAAas6E,KACbjf,YAAY,EACZG,UAAU,EACV1xB,4BAA4B,EAC5BJ,WAAY,EACZ8uC,SAAU,CACRC,cAAe,GACft/E,KAAM,KAIVy+E,KAAM,CACJ90G,GAAI,OACJyB,MAAO,OACPogC,KAAM+jE,KACN5vD,MAAO,SACP3f,KAAMohF,IACNxmE,KAAMymE,KACN9pG,OAAQm5D,KACRwxB,YAAY,EACZG,UAAU,EACV9xB,WAAY,EACZ8uC,SAAU,CACRC,cAAe,GACft/E,KAAM,KAGVM,KAAM,CACJ32B,GAAI,OACJyB,MAAO,OACPogC,KAAMwzC,KACNr/B,MAAO,SACP3f,KAAMshF,IACN1mE,KAAM2mE,KACNhqG,OAAQm5D,KACRwxB,YAAY,EACZG,UAAU,EACV9xB,WAAY,EACZ8uC,SAAU,CACRC,cAAe,GACft/E,KAAM,KAGVyxE,MAAO,CACL9nG,GAAI,QACJyB,MAAO,QACPogC,KAAMg2E,KACN7hE,MAAO,SACP3f,KAAMyhF,EACN7mE,KAAM8mE,GACNnqG,OAAQm5D,KACRwxB,YAAY,EACZG,UAAU,EACV1xB,4BAA4B,EAC5BJ,WAAY,EACZ8uC,SAAU,CACRC,cAAe,GACft/E,KAAM,KAGV7L,OAAQ,CACNxqB,GAAI,SACJyB,MAAO,SACPogC,KAAM4C,KACNuR,MAAO,SACP3f,KAAM2hF,GACN/mE,KAAMgnE,GACN/6E,YAAag7E,GACb3f,YAAY,EACZG,UAAU,EACV9xB,WAAY,EACZ8uC,SAAU,CACRC,cAAe,GACft/E,KAAM,IAER+J,WAAY,CACV,CACEpgC,GAAI,kBACJyB,MAAO,uBACP40B,KAAM+9E,GACNn0E,WAAW,GAEb,CACEjgC,GAAI,iBACJyB,MAAO,sBACP40B,KAAMo+E,GACNx0E,WAAW,GAEb,CACEjgC,GAAI,gBACJyB,MAAO,gBACP40B,KAAMq+E,GACNz0E,WAAW,IAGfJ,WAAY,CACVmtE,aAAc,CACZoE,eAAgB,CAACt7G,EAAMimD,IACL,iBAATjmD,EACHimD,EAAQhgD,IAAKk9D,GAAD,GAAC,MACRA,GADO,IAEV5mC,MAAO4mC,EAAI5mC,MAAMp1B,QAAQ,SAAU,IAAIs4B,UAEzCwmB,EAENrF,MAAO,CACL,CACE12C,GAAI,cACJyB,MAAO,SACP40B,KAAMs7E,GACN1xE,WAAW,EACX47B,eAAgB81C,GAAY91C,eAC5Bs1C,aAAcQ,GAAYR,aAC1BjE,aAAcyE,GAAYzE,aAC1BqG,oBAAqBQ,IAEvB,CACE/zG,GAAI,gBACJyB,MAAO,WACP40B,KAAMu7E,GACN3xE,WAAW,EACX47B,eAAgB+1C,GAAc/1C,eAC9Bs1C,aAAcS,GAAcT,aAC5BjE,aAAc0E,GAAc1E,aAC5BqG,oBAAqBQ,IAEvB,CACE/zG,GAAI,iBACJyB,MAAO,aACP40B,KAAM67E,GACNjyE,WAAW,EACXkxE,aAAce,GAAef,aAC7BjE,aAAcgF,GAAehF,aAC7BqG,oBAAqBW,IAEvB,CACEl0G,GAAI,cACJyB,MAAO,SACP40B,KAAMw9E,GACN5zE,WAAW,EACXkxE,aAAc0C,GAAY1C,aAC1BjE,aAAc2G,GAAY3G,aAC1BqG,oBAAqBS,SC1dpB/uF,GAAa,CACxBi3C,aAAc,CAAEh3C,UAAWg3C,O,cCDtB,MAAMi8C,GAAgB,CAiB3BC,aAAc,CACZ,I,OAAIC,gBAAe,CACjBC,OAAQ,CAAC,a,oJCbR,MAAM9qG,GAAe,CAC1B+qG,SAAUC,KACV/qG,OAAQy2B,KACR,YAAau0E,KACbjqD,MAAOkqD,KACPpqD,MAAOi4C,KACP74F,KAAMirG,KACN51B,KAAM5+C,M,yQCGD,MAAMgqD,GAAqB,CAChC7wD,Q,QAASs7E,EACT,kBAAmBC,KACnB,gBAAiBH,KACjBhrF,SAAUorF,KACVC,KAAMC,KACN7gE,WAAY8gE,KACZ75B,KAAM85B,KACN1uF,OAAQy1D,KACRk5B,YAAaC,KACbC,QAASv+C,KACTw+C,QAAS/S,KACT/8F,OAAQ6rE,KACR,oBAAqBkkC,KACrB7D,SAAU8D,KACV9iG,MAAOgrD,KACPzqD,OAAQwiG,KACRliE,OAAQmiE,M,mlBC9BV,MAAMhmF,GAAS,CACbj5B,KAAM,CACJm6B,gBAAiB,sBACjBuwB,WAAY,gDACZC,SAAU,GACVpwB,QAAS,GAEX2kF,UAAW,CACT/kF,gBAAiB,sBACjBuwB,WAAY,gDACZC,SAAU,GACVpwB,QAAS,KAIP4kF,GAAuB9xG,IAC3B,GAA0B,iBAAfA,EAAS,GAAgB,CAClC,MAAMpQ,EAAIoQ,EAAS,GAEnB,GAAIpQ,EAAEkL,MAAM,MAAMpI,OAAS,EACzB,OAAO9C,EAAEkL,MAAM,MAAM7G,IAAI,CAACkL,EAAO5C,IAC/B,eAAC,IAAM40B,SAAP,WACGhyB,GACAA,aAAA,EAAAA,EAAOzM,QAAS,GAAK,yBAFHyM,EAAQ5C,IAOnC,OAAOyD,GAIH6qD,GAAS,CACbknD,KAAM,CAAC/xG,GAAYhR,SACjB,iCAAmB8iH,GAAoB9xG,IAA1BhR,GAEfgjH,OAAQ,CAAChyG,GAAYhR,SACnB,6BAAe8iH,GAAoB9xG,IAA1BhR,GAEXijH,UAAW,CAACjyG,GAAYhR,SACtB,4BAAc8iH,GAAoB9xG,IAA1BhR,GAEVkjH,KAAM,CAAClyG,GAAYhR,SACjB,sBAAgBwP,MAAOotB,GAAOj5B,KAA9B,SACGqN,GADQhR,IAMTmjH,GAAiBnyG,GACrBA,EAAS/L,IAAKkL,GACLA,EAAM,GAAGlL,IAAKkL,GAAU,CAC7B,eAAC,IAAMgyB,SAAP,WACGhyB,EACD,yBAFmBA,MAOrBizG,GAAoBpyG,GACxBA,EAAS/L,IAAKkL,GACLA,EAAMlL,IAAKwQ,GACZhP,MAAMC,QAAQ+O,GACTA,EAAK,GAAG3J,MAAM,MAEhB2J,IAKP4tG,GAAyBryG,GAC7BA,EAAS/L,IAAI,CAACkL,EAAO5C,IAEjB,6BACG4C,EAAMlL,IAAKq+G,GACN78G,MAAMC,QAAQ48G,GACTA,EAASr+G,IAAKs+G,IACnB,GAA2B,iBAAhBA,EAA0B,CACnC,MAAMvoD,EAAOuoD,EAAYz3G,MAAM,MAAMpI,OAAS,EAC9C,OAAO6/G,EAAYz3G,MAAM,MAAM7G,IAAI,CAACwQ,EAAMlI,IACxC,eAAC,IAAM40B,SAAP,WACG1sB,EACAlI,IAAUytD,GAAQ,yBAFAztD,IAMvB,OAAOg2G,IAIJD,IAjBJ/1G,IAyBTi2G,GAAWC,GAAY,CAACzyG,GAAYkiB,QAAOhwB,UAC/CugH,EACE,oBAAkBvgH,KAAMA,EAAMgwB,MAAOA,EAArC,SACGmwF,GAAsBryG,IADhB9N,EAAK,IAId,oBAAkBA,KAAMA,EAAMgwB,MAAOA,EAArC,SACGmwF,GAAsBryG,IADhB9N,EAAK,IAsDZ0qB,GAAS,CACb81F,SAAU,CAAC1yG,GAAY9N,UAlCD,EAAC8N,EAAU9N,IACP8N,EAAS/L,IAAK40F,GACtCA,EAAO50F,IAAI,CAACkL,EAAO5C,IACb9G,MAAMC,QAAQyJ,GAEZ,KAAQA,GACH,sBAAS5C,GAEX4C,EAAMlL,IAAI,CAACq+G,EAAU/1G,KAC1B,GAAwB,iBAAb+1G,EAAuB,CAChC,MAAMtoD,EAAOsoD,EAASx3G,MAAM,MAAMpI,OAAS,EAC3C,OAAO4/G,EAASx3G,MAAM,MAAM7G,IAAI,CAACwQ,EAAMlI,IACrC,eAAC,IAAM40B,SAAP,WACG1sB,EACAlI,IAAUytD,GAAQ,yBAFAztD,IAMvB,OAAO+1G,IAIJnzG,IAIYlL,IACvB,CAAC0+G,EAAOp2G,IAAUo2G,GAAS,4BAAsBA,GAAdzgH,EAAKqK,KAQjCq2G,CAAgB5yG,EAAU9N,GAEnC2gH,OAAS7yG,GAAaA,EAAS,GAC/B8yG,WAAY,CAAC9yG,GAAY9N,UACvB,qCACGigH,GAAcC,GAAiBpyG,KADjB9N,EAAK,IAIxB,aAAc,CAAC8N,GAAY9N,UACzB8N,EAAS/L,IAAI,CAACkL,EAAO7R,IAAM,6BAAmB6R,GAAVjN,EAAK5E,KAC3C,aAAc,CAAC0S,GAAY9N,UACzB8N,EAAS/L,IAAI,CAACkL,EAAO7R,IACnB,oBAAI4K,GAAIhG,EAAK5E,GAAb,SACG6R,GADmBjN,EAAK5E,KAI/B,eAAgB,CAAC0S,GAAY9N,UAC3B8N,EAAS/L,IAAI,CAACkL,EAAO7R,IACnB,oBAAI4K,GAAIhG,EAAK5E,GAAb,SACG6R,GADmBjN,EAAK5E,KAI/B,cAAe,CAAC0S,GAAY9N,UAC1B8N,EAAS/L,IAAI,CAACkL,EAAO7R,IACnB,oBAAI4K,GAAIhG,EAAK5E,GAAb,SACG6R,GADmBjN,EAAK5E,KAI/B,cAAe,CAAC0S,GAAY9N,UAC1B8N,EAAS/L,IAAI,CAACkL,EAAO7R,IACnB,oBAAI4K,GAAIhG,EAAK5E,GAAb,SACG6R,GADmBjN,EAAK5E,KAI/B,aAAc,CAAC0S,GAAY9N,UACzB8N,EAAS/L,IAAI,CAACkL,EAAO7R,IACnB,oBAAI4K,GAAIhG,EAAK5E,GAAb,SACG6R,GADmBjN,EAAK5E,KAI/B,aAAc,CAAC0S,GAAY9N,UACzB,qBAAmBsM,MAAOotB,GAAOimF,UAAjC,SACGM,GAAcnyG,IADP9N,EAAK,IAIjB,sBAAuBsgH,KACvB,oBAAqBA,IAAQ,GAC7BO,QAAS,CAAC/yG,GAAY9N,UACpB8N,EAAS/L,IAAI,CAACkL,EAAO7R,IACnB,mBAAiBsT,UAAU,UAA3B,SACGzB,GADKjN,EAAK5E,MAMb0lH,GAAa51E,mBAAS97B,IAAD,CACzBiC,MAAOjC,EAAMgC,YAAYC,QADR65B,CAEf,EAAG75B,QAAOvU,MAAKsD,MAAKwrB,SAAQm1F,YAAWp1D,WAAU79C,eACnD,MAAM6hC,EAAKt+B,EAAQjR,EAAM2gH,GAAa3gH,EAEtC,OACE,cAACoiE,GAAA,EAAD,CACEtyD,KAAMy/B,EACN8yB,iBAA6B,WAAX72C,QAAuBjoB,EACzCgoD,SAAUA,EAHZ,SAKG79C,MA4BQkzG,OANG,CAChBroD,UACAjuC,UACAotD,SApBe,CACft2E,KAAM,CAACsM,EAAU9J,GAASlH,SACxB,cAACgkH,GAAD,SAA0B98G,GAA1B,aACG8J,IADchR,GAKnBmkH,MAAO,CAACnzG,EAAUozG,GAAUpkH,SAC1B,qBAAe0uD,IAAK01D,EAAO11D,IAAKliB,IAAK43E,EAAO53E,KAAlCxsC,K,qBCxOd,MAAMisF,GAAO,EAAGj7E,WAAUY,YAAWyyG,YAAWC,iBAAgBx1F,aAC9D,MAAMs1F,EAASE,IAAiBpsC,oBAAoBqsC,UAAUF,GACxDG,EAAaJ,EAASA,EAAO9kH,IAAI,aAAUuH,EAC3CuM,EAAQoxG,GAAcA,EAAWlhH,UAAQuD,EAE/C,OACE,mBACE+K,UAAWA,EACXjH,MAAOyI,EACPA,KAAM4sB,YAAc5sB,GAAQ6iB,YAAgB7iB,GAAQA,EACpD0b,OAAQA,EACR3b,IAAI,sBALN,SAOGnC,KAMPi7E,GAAKt6E,aAAe,CAClBC,UAAW,KACXyyG,UAAW,KACXv1F,OAAQ,MAEKm9D,UCpCA,KAAGzU,cAAH,CACbitC,sBAAsB7sC,EAAat0E,GACjC,MAGM+gH,EAHezsC,EAClBM,oBACAwsC,aAAa,OAAQ,UAAW,CAAEphH,QACNqhH,0BACzBC,EAAWptC,EAAQqtC,UAAUC,WACjCltC,EACAA,EAAY0C,eACZ+pC,GAEF,OAAO7sC,EAAQD,YAAYwtC,eACzBH,EACAhtC,EAAY0C,iBAIhB0qC,sBAAsBptC,GACpB,MAAMpG,EAAYoG,EAAY0C,eAC9B,OAAO9C,EAAQqtC,UAAUC,WAAWltC,EAAapG,EAAW,OAG9DyzC,oBAAoBrtC,GAClB,MAAMpG,EAAYoG,EAAY0C,eACxB4qC,EAAY1zC,EAAU2zC,eAEtBC,EADextC,EAAYM,oBACAmtC,eAAeH,GAC1C33G,EAAQikE,EAAU8zC,WACpB9zC,EAAU+zC,YACV/zC,EAAUg0C,aAEd,OAAOJ,EAAYK,YAAYl4G,IAGjCm4G,iBAAiB9tC,GACf,MAAMmC,EAAenC,EAAYM,oBAC3BmsC,EAAY3iH,KAAKujH,oBAAoBrtC,GAC3C,OAAOysC,EAAYtqC,EAAawqC,UAAUF,GAAa,MAGzDsB,UAAU/tC,EAAaguC,GACrB,MAAMxB,EAAS1iH,KAAKgkH,iBAAiB9tC,GACrC,OAAOwsC,GAAUA,EAAOyB,YAAcD,K,+CCX1C,MAAM1oG,GAAWC,yBAAe,CAC9BkmB,YAAa,CAAF,iFAWb,MAAMyiF,WAAoBj2G,YAmBxBzO,YAAY8F,GACVmkC,MAAMnkC,GADW,8BA6BGxI,IAElBgD,KAAKqkH,kBAAkB3+G,SACvBie,gCAAqB3jB,KAAKqkH,kBAAkB3+G,QAAS1I,IAGnDgD,KAAKqkH,kBAAkB3+G,SAAW1F,KAAKwF,MAAMwnC,qBAEjDhtC,KAAKotC,YArCY,6BAkDC7gC,IAAM++B,aAlDP,wBAoFJ,CAACtuC,EAAG4E,KACjB5E,EAAE6oB,iBACF7lB,KAAKoqC,SAAS,CACZpsC,MAAO4D,EACPskF,WAAW,IAEblmF,KAAKwF,MAAM4gF,cAAchoD,YAAUx8B,MA1FlB,mBA+GT,IAAM5B,KAAKwF,MAAM8+G,uBAAkBn/G,IA5G3CnF,KAAK4Q,MAAQ,CACX5S,MAAOsgC,YAAc94B,EAAMrF,KAAKyB,KAC5B2yB,YAAgB/uB,EAAMrF,KAAKyB,KAC3B4D,EAAMrF,KAAKyB,KAAO,GACtBskF,WAAW,GAEblmF,KAAKukH,MAAQvkH,KAAKukH,MAAMhmH,KAAKyB,MAC7BA,KAAK6rC,SAAW7rC,KAAK6rC,SAASttC,KAAKyB,MACnCA,KAAKo6C,UAAYp6C,KAAKo6C,UAAU77C,KAAKyB,MACrCA,KAAK+kE,SAAW/kE,KAAK+kE,SAASxmE,KAAKyB,MAQrCurC,oBACEjkC,WAAW,IAAMtH,KAAKwkH,MAAMh6E,QAAS,IACrC1gC,SAAS+Z,iBAAiB,YAAa7jB,KAAKwoE,oBAAoB,GAGlE/U,uBACE3pD,SAASga,oBAAoB,YAAa9jB,KAAKwoE,oBAAoB,GAoBrE+7C,MAAMtyE,GACJjyC,KAAKwkH,MAAQvyE,EAWfpG,SAAS7tC,EAAO49E,GACd,IAAI5C,EAAY,CAAEh7E,SACb49E,IAED57E,KAAK4Q,MAAMs1E,WACXhnD,IAASV,MAAMU,IAASH,aAAa/gC,MAErCg7E,EAAUkN,WAAY,GAGpB5nD,YAActgC,KAChBg7E,EAAY,CAAEh7E,MAAOu2B,YAAgBv2B,MAGzCgC,KAAKoqC,SAAS4uC,GAEV4C,GAAO57E,KAAKwF,MAAMi/G,UAyBxB7oC,QAEE57E,KAAKoqC,SADa,CAAEpsC,MAAO,KAG3BgC,KAAKwF,MAAMi/G,UAgBbrqE,UAAUp9C,GACM,UAAVA,EAAEsB,KACJtB,EAAE6oB,iBACF7oB,EAAE8oB,kBACF9lB,KAAK+kE,YACc,WAAV/nE,EAAEsB,MACXtB,EAAE6oB,iBACF7lB,KAAKotC,WAST23B,WACE,IAAM/mE,MAAO4D,GAAQ5B,KAAK4Q,MAE1B,MAAM6zD,EAAavlC,IAASM,qBAAqB59B,GAEjD,GADAA,EAAM6iE,EAAW7iE,KACZ6iE,EAAWvlD,QAEd,YADAlf,KAAKoqC,SAAS,CAAE87C,WAAW,IAI7B,MAAMw+B,EAAiBpmF,YAAc18B,GAAOw8B,YAAUx8B,GAAOA,EAE7D5B,KAAKwF,MAAM4gF,cAAcs+B,GACzB1kH,KAAKotC,UAQP19B,SACE,MAAM,MAAE1R,EAAF,UAASkoF,GAAclmF,KAAK4Q,MAC5BV,EAAYg2E,EACdr9C,IACE,uBACA,yBACA,kCAEFA,IAAG,uBAAwB,0BAE/B,OACE,qBAAK34B,UAAU,sBAAsBoT,IAAKtjB,KAAKqkH,kBAA/C,SACE,sBACEv2G,MAAO,CAAE62G,WAAY,MAAOtoF,QAAS,OAAQE,WAAY,UAD3D,UAGE,qBACEqD,MAAM,6BACN/D,MAAM,KACNhD,OAAO,KACPgH,QAAQ,YACRC,KAAK,UALP,SAOE,oBAAG8kF,SAAS,UAAZ,UACE,sBAAMvnH,EAAE,i3BACR,sBAAMA,EAAE,47BAGZ,cAAC,OAAK68D,MAAN,CAAYC,QAAM,EAAlB,SACE,sBAAKjqD,UAAU,UAAf,UACE,cAAC,QAAD,CACEA,UAAWA,EACX1I,GAAK,aACLlK,KAAK,OACLU,MAAOA,GAAS,GAChB6tC,SAAU,EAAGze,YAAaptB,KAAK6rC,SAASze,EAAOpvB,OAC/C2jC,YAAa3hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,GAASmmB,aAEXyY,UAAWp6C,KAAKo6C,UAChB92B,IAAKtjB,KAAKukH,QAEXvmH,EAAMgE,OAAS,EACd,cAAC,SAAO04B,MAAR,UACE,cAAC,SAAD,CACE0O,OAAK,EACLl5B,UAAU,SACVyvB,QAAU3iC,IACRA,EAAE6oB,iBACF7oB,EAAE8oB,kBACF9lB,KAAK47E,SANT,SASE,cAAC,KAAD,CAAMt+E,KAAMk9B,KAAU1G,KAAK,aAI/B,cAAC,SAAO4G,MAAR,UACE,cAAC,SAAD,CACE0O,OAAK,EACLC,MAAI,EACJ1J,QAAU3iC,IACRA,EAAE6oB,iBACF7oB,EAAE8oB,kBACF9lB,KAAKwF,MAAMynC,kBAAkB,CAC3B/uC,KAAM,OACN2uC,SAAS,EACTjC,aAAehpC,IACb5B,KAAK6rC,SAASjqC,GACd5B,KAAK+kE,eAXb,SAgBE,cAAC,KAAD,CAAMznE,KAAM08C,KAAYlmB,KAAK,aAInC,cAAC,SAAO4G,MAAR,UACE,cAAC,SAAD,CACE0O,OAAK,EACLrO,SAAO,EACP+N,UAAW9qC,EAAMgE,OAAS,EAC1B29B,QAAU3iC,IACRA,EAAE6oB,iBACF7oB,EAAE8oB,kBACF9lB,KAAK+kE,YAPT,SAUE,cAAC,KAAD,CAAMznE,KAAMk9C,KAAU1mB,KAAK,wB,IAvQvCswF,G,eASkB,CACpBziF,YAAa,gCAwQF6K,yBAAQC,aAAY92B,cAAYi3B,KAAhCJ,CAAmD43E,I,mmBC1SlE,MAAMS,WAAmB12G,YASvBzO,YAAY8F,GACVmkC,MAAMnkC,GADW,uBAWJigB,IACbA,EAAMI,mBAZW,0BAeD7oB,IAAM,QACtBA,EAAE6oB,iBACF7oB,EAAE8oB,kBACF,MAAM,SAAEg/F,EAAF,YAAYnjF,EAAZ,kBAAyB2iF,GAAsBtkH,KAAKwF,MACpDkI,EAAI,UAAG1N,KAAK+kH,YAAYf,iBAC5BhkH,KAAKwF,MAAMo9G,yBADH,iBAAG,EAEVoC,iBAFO,aAAG,EAECpjH,IA2Bd0iH,EAzBiB9+G,GACf,cAAC,GAAD,SACMA,GADN,IAEEm8B,YAAaA,EACbhH,MAAOmqF,EACP56E,MAAM,WACN/pC,KAAM,CAAEyB,IAAK8L,GAAQ,IACrBi9B,cAAe,OACf85E,QAAS,KACPzkH,KAAKwF,MAAMy/G,eACTjlH,KAAKklH,iBAAiB5B,sBACpBtjH,KAAKwF,MAAMo9G,oBAIjBx8B,cAAgBxkF,IACd5B,KAAKwF,MAAMy/G,eACTjlH,KAAKklH,iBAAiBnC,sBACpB/iH,KAAKwF,MAAMo9G,iBACXhhH,WAvCV5B,KAAKklH,iBAAmB1/G,EAAM2/G,oBAAoBrgF,QAClD9kC,KAAK+kH,YAAcA,GAAYv/G,GAoDjCkK,SACE,MAAM,MAAEirB,GAAU36B,KAAKwF,MACjB4/G,EAAkBplH,KAAK+kH,YAAYd,UACvCjkH,KAAKwF,MAAMo9G,iBACX,QAEI1yG,EAAYk1G,EACdv8E,IAAGlO,EAAM0qF,OAAQ1qF,EAAMuT,QACvBvT,EAAM0qF,OAEV,OACE,qBACEn1G,UAAWyqB,EAAM2qF,cACjB/rF,YAAav5B,KAAKu5B,YAClBrnB,KAAK,eAHP,SAKE,wBACEhC,UAAWA,EACXyvB,QACE3/B,KAAKulH,eASPnlH,KAAK,SAZP,SAcIglH,EAGA,cAAC1lF,GAAA,EAAD,CAAMpiC,KAAM2lG,KAAWnvE,KAAK,SAF5B,cAAC4L,GAAA,EAAD,CAAMpiC,KAAMquC,KAAS7X,KAAK,c,IAhGhC+wF,G,eAgBkB,CACpBljF,YAAa,KAyFFxJ,oBAAe,CAAC,UAAW,uBAA3BA,CAAmD0sF,IC7H3D,MAAMW,GAAqBplH,GAAkB,SAATA,EAW5B,SAASqlH,GAASC,EAAcn9G,EAAI8vE,GAC5CA,GACLqtC,EAAaC,iBAAkBC,IAC7B,MAAMjD,EAAYiD,EAAU/C,YAC5B,OACgB,OAAdF,GACA6C,GAAkBntC,EAAawqC,UAAUF,GAAWwB,YAErD57G,GCbL,SAASs9G,GAAoB3vC,GAC3B,MAAMmC,EAAenC,EAAYM,oBAC3BmC,EAAiBzC,EAAY0C,eAC7BktC,EAAWntC,EAAeotC,cAC1BL,EAAertC,EAAasrC,eAAemC,GAC3CE,EAAcrtC,EAAeE,iBAC7B6pC,EAASgD,EAAa3B,YAAYiC,GAExC,IAAKtD,EACH,OAAOxsC,EAGT,IAAI+vC,EAAkB,KAEtBP,EAAaC,iBACVC,GAAcA,EAAU/C,cAAgBH,EACzC,CAAC7uF,EAAOnyB,KACNukH,EAAkBttC,EAAe5uB,MAAM,CACrC+5D,aAAcjwF,EACdgwF,YAAaniH,EACbkiH,YAAY,MAKlB,MAAMsC,EAAkBlmH,KAAKmmH,SAASC,YACpC/tC,EACA4tC,EACA,MASF,OANuBjmH,KAAK61E,YAAYhvE,KACtCqvE,EACAgwC,EACA,gBAMW,I,oFC1Cf,MAAMG,GAAkB,CACtBC,qBAAsB,CACpB,sBACA,oBACA,cAEFC,eAAgB,CACd,aACA,aACA,eACA,YACA,aACA,YA2CWxqC,OArCEv2E,IACf,MAAM,2BAAEuwE,EAAF,2BAA8BywC,GAA+BhhH,GAC7D,UAAEihH,GAAc1wC,EAChB2wC,EAAsBF,EAA2B1hF,QACrDuhF,IAGIM,EDiBO,EAAC9lH,EAAS,MAEvB,MAAM+lH,EAAe,IAEf,MACJjsF,EAAQisF,EADJ,YAEJjlF,EAFI,KAGJ4oD,EAHI,WAIJs8B,EAJI,UAKJ/vF,GACEj2B,EAEEimH,EAAejB,GAAoBtnH,KAAKu4B,GAE9C,MAAO,CACLiwF,WAAY,CACV,CACEtB,SAAUuB,GACVxB,qBACA94F,UACE69D,GACA08B,KAA2BC,GAAa,CACtCh3G,UAAW,wBACXkd,OAAQy5F,MAKhBhC,WAAYoC,KAA2BpC,GAAY,CACjDC,SAAUnqF,EACVgH,cACAwlF,wBAAyB,CAAClC,EAAgBrC,IACxCqC,EAAe6B,EAAalE,UCjDfwE,CAAiB,CAAEtwF,UAAWtxB,IAE3C6hH,EChBO,SAAU7hH,GACvB,MAAM8hH,EAA0B9hH,EAAM+hH,+BAA+BziF,QAC/D0iF,EAAyBhiH,EAAMiiH,8BAA8B3iF,QAE7D4iF,EAAaJ,EAAwB,CACzCx5G,MAAO,OACPwB,SAAU,cAACowB,GAAA,EAAD,CAAMpiC,KAAMqqH,KAAS7zF,KAAK,WAGhC8zF,EAAeN,EAAwB,CAC3Cx5G,MAAO,SACPwB,SAAU,cAACowB,GAAA,EAAD,CAAMpiC,KAAMuqH,KAAW/zF,KAAK,WAGlCg0F,EAAoBN,EAAuB,CAC/CplF,UAAW,aACX9yB,SAAU,cAACowB,GAAA,EAAD,CAAMpiC,KAAMigH,KAASzpF,KAAK,WAGhCi0F,EAAsBP,EAAuB,CACjDplF,UAAW,eACX9yB,SAAU,cAACowB,GAAA,EAAD,CAAMpiC,KAAM0qH,KAAYl0F,KAAK,WAGnCm0F,EAAsBT,EAAuB,CACjDplF,UAAW,sBACX9yB,SAAU,cAACowB,GAAA,EAAD,CAAMpiC,KAAM4qH,KAAkBp0F,KAAK,WAGzCq0F,EAAoBX,EAAuB,CAC/CplF,UAAW,oBACX9yB,SAAU,cAACowB,GAAA,EAAD,CAAMpiC,KAAM8qH,KAAgBt0F,KAAK,WAY7C,MAAO,CACLu0F,iBAVuBb,EAAuB,CAC9CplF,UAAW,aACX9yB,SAAU,cAACowB,GAAA,EAAD,CAAMpiC,KAAMgrH,KAAex0F,KAAK,WAS1C4zF,aACAa,cAPoBf,EAAuB,CAC3CplF,UAAW,UACX9yB,SAAU,cAACowB,GAAA,EAAD,CAAMpiC,KAAMkrH,KAAY10F,KAAK,WAMvC8zF,eACAE,oBACAC,sBACAI,oBACAF,uBDnCcQ,CAAOjjH,IACjB,WACJkiH,EADI,aAEJE,EAFI,kBAGJE,EAHI,oBAIJC,EAJI,oBAKJE,EALI,kBAMJE,EANI,iBAOJE,EAPI,cAQJE,GACElB,EAeJ,MAAO,CAAEqB,qBAboB,CAC3BhB,EACAE,EACAjB,EAAW9B,WACX4B,EACAqB,EACAC,EACAE,EACAE,EACAE,EACAE,GAG6BxsC,QAAS,CAAC4qC,EAAYD,KExDvC9qD,MACY,YAAtBA,EAAQ1rD,UACH,CACL9P,KAAM,WAGH,KCDF,MAiBMq2E,GAAuB,CAClCC,mBACAC,cVgOqB,CACrBgyC,SAAS,IWpPLC,GAAsB,EAAQ,KA0BrB,OATD/nH,IACZ,MAAMgoH,EAAe,GACrB,IAAIA,EAAavwD,MAAOrhD,GAAqB,mBAAPA,GACpC,MAAM,IAAI6xC,UACR,kGAGJ,MAXoB,CAACjoD,GACyB,mBAAhC+nH,GAAoB9jF,QAAyB8jF,GAAoB9jF,QAAQjkC,GAAUA,EAU1FioH,CAAcD,EAAa3kH,OAAO,CAACq5B,EAAKohB,KAAUoqE,OAnBtC/8D,EAmBkDrN,EAnBxC99C,IAC7B,MAAM4+B,EAAMusB,EAAKnrD,GACjB,QAAmB,IAAR4+B,EACT,MAAM,IAAI9wB,MAAM,gDAElB,OAAO8wB,IAcqElC,GAnB1D,IAACyuB,GAmB+DnrD,K,qkBCIpF,MACMmoH,GAAOhqH,QAAQwR,IAAIy4G,MAAQ,OAE3B/nH,GACJlC,QAAQwR,IAAI6lC,iBACkC,GAe1CllC,GACJnS,QAAQwR,IAAI04G,mBAdQtnH,KACpB,IAAKA,EAAK,OACV,MAAMunH,EAAa9xE,gBAASz1C,GAC5B,MAAQ,GAAEunH,EAAWhjG,aAAagjG,EAAWC,WAC3CD,EAAWH,KAAQ,IAAGG,EAAWH,KAAS,MAaxCK,CAAarqH,QAAQwR,IAAI6lC,kBAAqB,oBAAiB2yE,GAE/DrxE,GAEAx4C,EAAQ,KAAY2lC,QAG1B,IAAIjkC,GAAS,CACXD,SAAU,CACR01C,KAjCSt3C,YAkCTgqH,QAEA73G,aACAjQ,WACAslC,aAAc,GAKd4R,kBACEp5C,QAAQwR,IAAI84G,2BACZtqH,QAAQwR,IAAI6lC,iBACZ,8BAIFkzE,mBAAoBvqH,QAAQwR,IAAIg5G,kCAA+BrkH,EAG/D+8C,2BAA4B,CAAC,cAAe,kBAC5C/gD,gBAAiBnC,QAAQwR,IAAIi5G,+BAA4BtkH,EACzDi9C,WAAYpjD,QAAQwR,IAAIk5G,oBAAqB,EAE7C3oH,eAAgB/B,QAAQwR,IAAIm5G,yBAA0B,EACtDvjG,cAAe,QACfkX,mBACA24C,uBFxFmCzwE,IACrC,MAAM,QAAEu2E,EAAF,qBAAW2sC,GAAyBkB,GAAQpkH,IAC5C,uBAAEqkH,EAAF,aAA0BC,EAA1B,eAAwCC,GGPhCvkH,KACd,MAAM,QAAEswE,EAAF,aAAW+J,GAAiBr6E,GAC5B,2BAAEwkH,GAA+Bl0C,GACjC,IAAE8J,GAAQC,EAEVoqC,EAAiBrqC,EAAI,CACzByiC,QAAS,CACPzmD,QAAS,KAEXomD,SAAU,CACRpmD,QAAS,SAkBb,MAAO,CAAEiuD,uBAdsBG,EAA2BjgE,MACxDkgE,GAa+BH,aAVXpE,GAEP,YADAA,EAAavB,UAEjB,UAEF,KAKsC4F,eAFxB,CAAC,sBAAuB,uBHnBkBG,CAC/D1kH,GAGF,MAAO,CACLqkH,yBACAC,aAAcA,EACdC,eAAgBA,EAChBI,sBAAuBpuC,EACvBquC,mCAAoC1B,EACpC2B,yBACAC,eAAgB,OE4EhB7zC,wBACA1tC,aAAc,CAAC,SACfsoB,YAAa,CAAC,QAAS,SAAU,QAAS,MAAO,cACjD8S,oBAAqB,CAAC,QACtBC,yBAA0B,GAC1BmmD,yBAA0B,QAC1BliC,qBAAsB,CAAC,MACvB74D,gBAAiB,GACjBE,gBAAgB,EAChB6iB,mBAAoB,CAAC,MACrBuD,gBAAiB,KACjB6pC,SAAU,EACVjqC,kBAAmBiC,GAAajC,kBAChCzS,iBAAkB,OAClBuhE,kBAAkB,EAClBhW,iBAAiB,EACjBg8B,mBAAoB,CAAC,mBACrB35G,yBAA0B,GAC1BmjD,oBAAqB,GACrB2rD,cAAe,MACVA,IAEL3qG,aAAcA,GACdwhB,eACAC,YAAa,CACXg0F,IAAK,CACH,qBACA,qBACA,YACA,WACA,cACA,qBAGFC,YAAa,CACX,eACA,UACA,+BACA,iBACA,6BACA,oBACA,+BAGJn+F,UAAW,GACXjqB,gBAAiB,IACjBq1C,gBACA8K,eAAgB,GAChB3Q,UAAU,EACV6jD,sBACAlhD,eAAgB,GAahBwyC,sBAAsB,EACtBsnB,8BAA+B,QAC/BplC,uBAAuB,EACvB1kD,cAAe,IACf83E,WD1Je,IC4JjBnwE,QAAS,SACJy3D,KADE,IAEL/+C,QAASsgD,MAEXj5D,MAAO,CACLwkB,gBACAD,sBACAD,gBACAa,gBAEFplB,OAAQ,CACNy+F,ejBsTmB,CAAC,SiBrTpBroF,gBACA89D,iBjBnBqB,CACvB,CAAE54F,GAAI,WAAYyB,MAAO,aACzB,CAAEzB,GAAI,OAAQyB,MAAO,QACrB,CAAEzB,GAAI,QAASyB,MAAO,SACtB,CAAEzB,GAAI,SAAUyB,MAAO,WiBgBrBspF,cjBqTkB,GiBpTlBmR,mBjBqTuB,GiBpTvBp1B,2BAA2B,GAE7BhiD,YAAa,GACbD,cAAe,GACfI,eAGF5rB,GAAS+pH,GAAwB/pH,IAEjCgqH,IAAejqH,SAAWC,GAAOD,SACjCiqH,IAAe3+F,OAASrrB,GAAOqrB,OAC/B2+F,IAAe1+F,MAAQtrB,GAAOsrB,MAC9B0+F,IAAez+F,QAAUvrB,GAAOurB,QAChCy+F,IAAev+F,YAAczrB,GAAOyrB,YACpCu+F,IAAex+F,cAAgBxrB,GAAOwrB,cACtCw+F,IAAet+F,UAAY1rB,GAAO0rB,UAClCs+F,IAAep+F,WAAa5rB,GAAO4rB,Y,4IE9JpBq+F,MAhCC,EAAG/2G,OAAMzC,WACvB,MAAM,SAAE1Q,GAAaC,IAGrB,OAAIy9B,YAAcvqB,EAAKnS,MAAqB,KAAbmS,EAAKnS,IAEhC,cAAC,UAAD,CACEuvC,GAAiB,KAAbp9B,EAAKnS,IAAa,IAAMmS,EAAKnS,IAEjCsO,UAAU,OACV66G,gBAAgB,SAChB7tF,MACEt8B,EAAS8uB,eAAiB3b,EAAKnS,MAAS,IAAG0P,EAAsB,KAAbyC,EAAKnS,IAN7D,SASGmS,EAAK9K,OAPD8K,EAAKnS,KAYZ,mBACE8P,KAAMqC,EAAKnS,IAEXsO,UAAU,OACVuB,IAAI,sBAJN,SAMGsC,EAAK9K,OAJD8K,EAAKnS,MCdHopH,MAVE,EAAGl3G,QAAOxC,UAEvB,mCACGwC,EAAMvQ,IAAKwQ,GACV,cAAC,EAAD,CAASA,KAAMA,EAAMzC,KAAMA,GAAWyC,EAAKnS,QCWnD,MAAM4Z,EAAWC,yBAAe,CAC9BwvG,gBAAiB,CAAF,6CAIfC,eAAgB,CAAF,6CAWhB,MAAMC,UAAmBh9G,YAwBvBzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAKorH,iBAAmBprH,KAAKorH,iBAAiB7sH,KAAKyB,MACnDA,KAAKirH,gBAAkBjrH,KAAKirH,gBAAgB1sH,KAAKyB,MACjDA,KAAK4Q,MAAQ,CACXy6G,kBAAkB,GAItB9/E,oBACE,MAAM,SAAE3qC,GAAaC,IAChBylC,YAAe,aAAclJ,YAAWp9B,KAAKwF,MAAM+N,YACtDvT,KAAKwF,MAAM+rB,cACT6L,YAAWp9B,KAAKwF,MAAM+N,UACtB3S,EAAS++E,UAWf7uC,iCAAiCxiC,GAC/B,MAAM,SAAE1N,GAAaC,IAEnByN,EAAUiF,WAAavT,KAAKwF,MAAM+N,UAClCjF,EAAUuE,QAAU7S,KAAKwF,MAAMqN,OAE1ByzB,YAAe,aAAclJ,YAAWp9B,KAAKwF,MAAM+N,YACtDvT,KAAKwF,MAAM+rB,cACT6L,YAAW9uB,EAAUiF,UACrB3S,EAAS++E,UAWjByrC,mBACEprH,KAAKoqC,SAAS,CAAEihF,kBAAmBrrH,KAAK4Q,MAAMy6G,mBAQhDJ,kBACOjrH,KAAK4Q,MAAMy6G,kBAGhBrrH,KAAKoqC,SAAS,CAAEihF,kBAAkB,IAQpC37G,SACE,OACE,sBAAKQ,UAAU,aAAa1I,GAAG,aAAa2K,aAAW,aAAvD,UACE,qBAAKjC,UAAU,uCAAf,SACE,wBACEA,UAAW24B,IAAG,4BAA6B,CACzC,YAAa7oC,KAAK4Q,MAAMy6G,mBAE1Bl5G,aACEnS,KAAK4Q,MAAMy6G,iBACPrrH,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASyvG,gBAAiB,CACtD7qH,KAAMJ,KAAKwF,MAAMpF,OAEnBJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS0vG,eAAgB,CACrD9qH,KAAMJ,KAAKwF,MAAMpF,OAGzB6I,MACEjJ,KAAK4Q,MAAMy6G,iBACPrrH,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASyvG,gBAAiB,CACtD7qH,KAAMJ,KAAKwF,MAAMpF,OAEnBJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS0vG,eAAgB,CACrD9qH,KAAMJ,KAAKwF,MAAMpF,OAGzBA,KAAK,SACLu/B,QAAS3/B,KAAKorH,iBAvBhB,SAyBE,sBAAMl7G,UAAU,gBAAhB,SACE,sBAAMA,UAAU,0BAItB,cAAC,OAAD,CACEk3D,WAAS,EACT7I,UAAQ,EACRryB,WAAS,EACTh8B,UAAU,wCACVyvB,QAAS3/B,KAAKirH,gBALhB,SAOE,cAAC,EAAD,CAAUn3G,MAAO9T,KAAKwF,MAAMsO,MAAOxC,KAAMtR,KAAKwF,MAAM8L,SAEtD,cAAC,gBAAD,CACEunD,GAAI74D,KAAK4Q,MAAMy6G,iBACfzgD,QAAS,IACTC,WAAW,cACXC,eAAa,EAJf,SAME,sBAA2B56D,UAAU,cAArC,UACE,cAAC,IAAD,CAAWA,UAAU,yBACrB,qBAAKA,UAAU,kBAAf,SACE,cAAC,OAAD,CAAMk3D,WAAS,EAAC7I,UAAQ,EAACryB,WAAS,EAACvM,QAAS3/B,KAAKirH,gBAAjD,SACE,cAAC,EAAD,CAAUn3G,MAAO9T,KAAKwF,MAAMsO,MAAOxC,KAAMtR,KAAKwF,MAAM8L,aAJjD,yBAeJk7B,sBACbC,aACAC,kBACG97B,IAAD,CACEiC,MAAOjC,EAAMgC,YAAYC,MACzBiB,MAAOlD,EAAM+uC,WAAW7rC,MACxBxC,KAAMV,EAAM2zB,KAAK1O,SAEnB,CAAEtE,oBARSib,CAUb2+E,I,oQC+HaG,MAtTS,EACtBC,aACAC,cACAl5F,gBACAm5F,oBACAC,aACAC,kBACI,UACJ,MAAMpnF,EAAOkE,oBACPt1B,EAAW6jB,yBAGV40F,EAAWC,GAAgBxnG,mBADjB,IAIjB,IAAIvQ,EAAQojB,sBAAatmB,GAAUA,EAAMsN,MAAMA,OAC3C4tG,GACDJ,GACAA,GAAcH,EAAWvpH,OAAS,GAClC0pH,GAAcp5F,EAActwB,OAAS,EACpC8pH,EACFh4G,EAAMmb,MAAK,SAAU4P,EAAGxJ,GACtB,IAAI02F,EACDltF,EAAEmnC,UAAYnnC,EAAEmnC,SAAS57D,MAAM,KAAKvE,UAAUZ,KAAK,MAAS45B,EAAEr3B,GAC7DwkH,EACD32F,EAAE2wC,UAAY3wC,EAAE2wC,SAAS57D,MAAM,KAAKvE,UAAUZ,KAAK,MAASowB,EAAE7tB,GACjE,OAAIukH,EAASC,GACH,EAEND,EAASC,EACJ,EAEF,KAGTl4G,EAAQ,GAIV,IAMIm4G,EANAxtG,EAASyY,sBAAatmB,GAAUA,EAAM6N,OAAOA,QAC7CytG,GACDP,GACAA,GAAeH,EAAYxpH,OAAS,GACrCswB,EAActwB,OAAS,GACvBypH,EAEES,GACFD,GACGN,GAAgBA,GAAeH,EAAYxpH,OAAS,EACjD,IAAUyc,GACV,GACFgtG,GACF33G,EAAMvQ,IAAKwQ,IACTk4G,EAAeplH,QAAQkN,EAAK0K,OAAO3K,OAC5BC,EAAK0K,OAAO3K,QAGvBm4G,EAAiBA,EAAe1oH,IAAKi6C,IAAD,CAClCx/C,MAAOw/C,EAAMh2C,GACbqyB,MAAO2jB,EAAMv0C,OAAU,GAAEu0C,EAAMh2C,MAE7B8qB,EAActwB,OAAS,IACzBiqH,EAAiB35F,EAAcnsB,OAAO8lH,IAExCA,EAAiB,IAAOA,EAAiB11F,GAAMA,EAAEv4B,OACjDiuH,EAAiBA,EAAe1mH,OAAQi4C,GACf,uBAAhBA,EAAMx/C,OAEfiuH,EAAeh9F,MAAK,SAAU4P,EAAGxJ,GAC/B,IAAI02F,EAASltF,EAAEhF,MAAMte,cACjBywG,EAAS32F,EAAEwE,MAAMte,cACrB,OAAIwwG,EAASC,GACH,EAEND,EAASC,EACJ,EAEF,MAGTC,EAAiB,GAGnBroG,oBAAU,KAEJkoG,GACF34G,EACEkf,YAAU,CACRL,OAAQu5F,EACRj5F,cAAeA,EAAc/uB,IAAK0T,GAAOA,EAAGjZ,OAC5Cu0B,MAAOq5F,MAIZ,CAACz4G,EAAUo4G,EAAYj5F,EAAew5F,EAAYF,IAErDhoG,oBAAU,KAEJsoG,GACF/4G,EAAS6d,YAAWw6F,KAErB,CAACr4G,EAAUq4G,EAAaU,EAAqB55F,IAEhD,MAkCM65F,EAAqB,CAACC,EAAWjxD,KACrC,IACIkxD,EADAC,EAAWxiH,SAASmB,iBAAkB,gBAAemhH,WAErDG,EAAoB,GACxBD,EAASxsH,QAAS87D,IAChBywD,EAAazwD,EAAQt+D,KAAK8M,MAAM,OAChCmiH,EAAkBF,EAAW,MAAMlxD,IAGrChoD,EACE+d,aAAYm7F,EAAW,GAAI,CACzBnuG,MAAOquG,KAGR/pH,KAAK,KACJ2Q,EACEkf,YAAU,CACRL,OAAQu5F,EACRj5F,cAAeA,EAAc/uB,IAAK0T,GAAOA,EAAGjZ,OAC5Cu0B,MAAOq5F,OAIZppH,KAAK,KACJwiE,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOs7B,EAAK5jB,cAAcnF,IAASuC,SACnChR,QAAQ,2BAMlB,OACE,sBAAKmD,UAAU,wBAAf,UACG+7G,IAAgC,QAAd,EAAAA,SAAA,eAAgBjqH,QAAS,GAC1C,qBAAKkO,UAAU,gBAAf,mBACG+7G,SADH,aACG,EAAgB1oH,IAAKipH,GACpB,qBACEt8G,UAAU,+BADZ,SAIE,8BACE,sBAAMA,UAAU,QAAhB,SAAyBs8G,EAAc3yF,WAHpC2yF,EAAcxuH,UAU3B,qBAAKkS,UAAU,QAAf,SACG4D,EAAM9R,OAAS,EACd,qCACE,qBAAKkO,UAAU,wBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,wBACA,qBAAKA,UAAU,iBAAf,mBACG+7G,SADH,aACG,EAAgB1oH,IAAKipH,GACpB,gCACE,cAAC,SAAD,CACEnjF,MAAI,EACJD,OAAK,EACLzJ,QAAS,IACPwsF,EAAmBK,EAAcxuH,OAAO,GAE1CkS,UAAU,aACViC,aACEoyB,EAAK5jB,cAAcnF,IAAS+C,iBAC3B,IAAGiuG,EAAc3yF,MAEpB5wB,MACEs7B,EAAK5jB,cAAcnF,IAAS+C,iBAC3B,IAAGiuG,EAAc3yF,MAbtB,SAgBE,cAAC,KAAD,CACEv8B,KAAMgT,IACNwjB,KAAK,OACL5jB,UAAU,UACV+pB,MAAM,YAGV,cAAC,SAAD,CACEoP,MAAI,EACJD,OAAK,EACLzJ,QAAS,IACPwsF,EAAmBK,EAAcxuH,OAAO,GAE1CkS,UAAU,gBACViC,aACEoyB,EAAK5jB,cAAcnF,IAASgD,sBAC3B,IAAGguG,EAAc3yF,MAEpB5wB,MACEs7B,EAAK5jB,cAAcnF,IAASgD,sBAC3B,IAAGguG,EAAc3yF,MAbtB,SAgBE,cAAC,KAAD,CACEv8B,KAAMkW,IACNsgB,KAAK,OACL5jB,UAAU,UACV+pB,MAAM,cA5CFuyF,EAAcxuH,cALW,aA0D3C,+BAAK8V,EAAM9R,OAAX,aACC8R,EAAMvQ,IAAKwQ,IAAD,aACT,qBAAK7D,UAAU,cAAf,SACE,sBAAKA,UAAU,eAAf,UACE,8BACE,+BACG6D,EAAKiyD,SADR,KACoBjyD,EAAKvM,GADzB,SAIF,qBAAK0I,UAAU,iBAAf,mBACG+7G,SADH,aACG,EAAgB1oH,IAAKipH,IAAD,eACnB,cAAC,WAAD,CACElvH,KAAO,YAAWyW,EAAKvM,QAAQglH,EAAcxuH,QAC7CkS,UAAY,YAAWs8G,EAAcxuH,MAErCiL,MAAOujH,EAAcvjH,MACrBkyD,QAAO,UAAEpnD,EAAK0K,cAAP,iBAAE,EAAa3K,aAAf,aAAE,EACLvQ,IAAK0T,GAAOA,EAAGzP,IAChB4I,SAASo8G,EAAcxuH,OAC1B6tC,SAAU,CAACpmB,GAAS01C,cArKZ,EAACpnD,EAAM04G,EAAetxD,EAASuxD,KAAgB,MAC3EA,EAAW,UAAGA,SAAH,SACX,IAAIlvE,EAAQivE,EAAcvjC,EACtBz1D,EAAWg5F,EAAcl2F,EAE7BpjB,EACE+d,aAAYssB,EAAO,CACjBt/B,MAAO,CACL,CAACuV,KAAW0nC,MAIf34D,KAAM+2C,IACLmzE,GACEv5G,EACEkf,YAAU,CACRL,OAAQu5F,EACRj5F,cAAeA,EAAc/uB,IAAK0T,GAAOA,EAAGjZ,OAC5Cu0B,MAAOq5F,OAIdppH,KAAK,KACJkqH,GACE1nD,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOs7B,EAAK5jB,cAAcnF,IAASuC,SACnChR,QAAQ,2BA0II4/G,CACE54G,EACA,CAAEm1E,EAAGsjC,EAAcxuH,MAAOu4B,EAAGxiB,EAAKvM,IAClC2zD,GACA,KAVCqxD,EAAcxuH,aAXQ+V,EAAK,SADRA,EAAKvM,MA+BtCsM,EAAM9R,OA/QF,GA0RH,KAVF,qBAAKkO,UAAU,YAAf,SACE,cAAC,SAAD,CACEm5B,MAAI,EACJD,OAAK,EACLzJ,QAAS,IAAMksF,EAAaD,EApR3B,IAqRD17G,UAAU,mBAJZ,SAME,cAAC,KAAD,CAAM5S,KAAMsvH,IAAU94F,KAAK,gBAMnC,8BACGyQ,EAAK5jB,cACJmrG,GACIP,EACE/vG,IAAS6C,YAEX7C,IAAS8C,mCChHZuuG,MAlMmB,EAAGnB,aAAYC,kBAAkB,MACjE,MAAMpnF,EAAOkE,oBACPt1B,EAAW6jB,yBAEVu0F,EAAYuB,GAAiBzoG,mBAAS,KACtCmnG,EAAauB,GAAkB1oG,mBAAS,KACxC4M,EAAoB+7F,GAAyB3oG,mBAAS,KACtDiO,EAAe26F,GAAoB5oG,mBAAS,KAC5ConG,EAAmByB,GAAwB7oG,oBAAS,GAE3D,IAAI8oG,EAAiBj2F,sBAAatmB,GAAUA,EAAM6N,OAAO+gC,eACrD2tE,IACFA,EAAiBA,EAAe5pH,IAAKi6C,IAAD,CAClCx/C,MAAOw/C,EAAMh2C,GACbqyB,MAAO2jB,EAAMv0C,OAASu0C,EAAMh2C,MAE9B2lH,EAAel+F,MAAK,SAAU4P,EAAGxJ,GAC/B,IAAI02F,EAASltF,EAAEhF,MAAMte,cACjBywG,EAAS32F,EAAEwE,MAAMte,cACrB,OAAIwwG,EAASC,GACH,EAEND,EAASC,EACJ,EAEF,MAIXpoG,oBAAU,OAEH+nG,GAAgBA,GAAe16F,EAAmBjvB,OAAS,IAC9DmR,EAAS6d,YAAW,GAAIC,KAEzB,CAAC9d,EAAUw4G,EAAa16F,IAE3B,MAAMm8F,EAAW3nG,IAEf,IAAIm2C,EAAUn2C,EAAM2H,OAAOriB,cAAc,SAIzC,OAHA6wD,EAAQ59D,MAAQ,GAChB49D,EAAQpxB,QACSoxB,EAAQt+D,MAEvB,IAAK,aACHwvH,EAAc,IACd,MACF,IAAK,cACHC,EAAe,IACf,MACF,IAAK,oBACHC,EAAsB,IACtBC,EAAiB,MAOjBI,EAAuB5nG,IACvBimG,GAAcC,EAEM,KAAlBlmG,EAAM+9D,UACRspC,EAAcrnG,EAAM2H,OAAOpvB,OAC3BynB,EAAMI,kBAGRinG,EAAcrnG,EAAM2H,OAAOpvB,QAIzBsvH,EAAwB7nG,IACxBimG,GAAcC,EAEM,KAAlBlmG,EAAM+9D,UACRupC,EAAetnG,EAAM2H,OAAOpvB,OAC5BynB,EAAMI,kBAGRknG,EAAetnG,EAAM2H,OAAOpvB,QAqB1BuvH,EAA8B9nG,IAC9BimG,GAAcC,EAEM,KAAlBlmG,EAAM+9D,UACRwpC,EAAsBvnG,EAAM2H,OAAOpvB,OACnCynB,EAAMI,kBAGRmnG,EAAsBvnG,EAAM2H,OAAOpvB,QAIvC,OACE,sBAAKkS,UAAU,sBAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,cAAC,OAAD,CAAMA,UAAU,eAAe60D,SAAUqoD,EAAzC,SACE,cAAC,OAAKlzD,MAAN,UACE,cAAC,QAAD,CACE58D,KAAK,aACLspC,OAAQ,CAAEyC,KAAM,UAChB1H,YAAa4C,EAAK5jB,cAAcnF,IAASgB,aACzCqvB,SAAUwhF,EACVjzE,UAAWizE,EACX7lH,GAAG,4BAKX,qBAAK0I,UAAU,wBAAf,SACE,eAAC,OAAD,CAAMA,UAAU,gBAAgB60D,SAAUqoD,EAA1C,UACE,cAAC,OAAKlzD,MAAN,UACE,cAAC,QAAD,CACE58D,KAAK,cACLspC,OAAQ,CAAEyC,KAAM,UAChB1H,YAAa4C,EAAK5jB,cAAcnF,IAASiB,cACzCovB,SAAUyhF,EACVlzE,UAAWkzE,EACX9lH,GAAG,yBAGP,cAAC,OAAK0yD,MAAN,UACE,cAAC,WAAD,CACE58D,KAAK,kBACLu8B,MAAO0K,EAAK5jB,cAAcnF,IAASwD,iBACnC/V,MAAOs7B,EAAK5jB,cAAcnF,IAASwD,iBACnCwuG,gBAAgB,EAChB3hF,SAAU,CAACpmB,GAAS01C,cAlDFA,KAC5B+xD,EAAqB/xD,IAkDTsyD,CAAqBtyD,aAM/B,sBAAKjrD,UAAU,sBAAf,UACE,6BAAKq0B,EAAK5jB,cAAcnF,IAASkB,kBAEjC,cAAC,OAAD,CAAMxM,UAAU,uBAAuB60D,SAAUqoD,EAAjD,SACE,cAAC,OAAKlzD,MAAN,UACE,cAAC,QAAD,CACE58D,KAAK,oBACLspC,OAAQ,CAAEyC,KAAM,UAChB1H,YAAa4C,EAAK5jB,cAAcnF,IAASiB,cACzCovB,SAAU0hF,EACVnzE,UAAWmzE,EACX/lH,GAAG,mCAKNmkH,GAAe16F,EAAmBjvB,OAAS,KAA7C,UACCmrH,SADD,aACC,EAAgB5pH,IAAKmqH,GACnB,cAAC,WAAD,CACEpwH,KAAO,iBAAgBowH,EAAc1vH,MAErCiL,MAAOykH,EAAc7zF,MACrBA,MAAO6zF,EAAc7zF,MACrB2zF,gBAAgB,EAChB3hF,SAAU,CAACpmB,GAAS01C,cA9FF,EAACuyD,EAAevyD,KAC5C,IAAIwyD,EAAwB,GAE1BA,EADExyD,EACsB,IAAIkvC,IAAI,IAAI/3E,EAAeo7F,IAE3Bp7F,EAAc/sB,OACnC0R,GAAOA,EAAGjZ,QAAU0vH,EAAc1vH,OAGlC,IAAQ2vH,EAAuB,IAAItjB,IAAI/3E,KAC1C26F,EAAiB,IAAIU,KAqFXhB,CAAsBe,EAAevyD,KALlCuyD,EAAc1vH,YAU3B,cAAC4vH,EAAD,CACErC,WAAYA,EACZC,YAAaA,EACbl5F,cAAeA,EACfm5F,kBAAmBA,EACnBC,WAAYA,EACZC,YAAaA,Q,aCnDNkC,IA5HkB,KAC/B,MAAMtpF,EAAOkE,oBAGPt1B,GAFUu5C,uBACCqX,wBAAcxwD,SACdyjB,yBAEX00F,EAAax0F,sBAChBtmB,IAAD,yBAAWA,EAAMusC,cAAcD,oBAA/B,iBAAW,EAAkC/8C,YAA7C,aAAW,EAAwCurH,aAE/CC,EAAcz0F,sBACjBtmB,IAAD,yBAAWA,EAAMusC,cAAcD,oBAA/B,iBAAW,EAAkC/8C,YAA7C,aAAW,EAAwCwrH,cAE/CvuE,EAAoBlmB,sBACvBtmB,GAAUA,EAAMusC,cAAcC,mBAE3B0wE,IAAiC1wE,GACnC,IAASA,aAAT,EAASA,EAAmBg/C,sBAAsBlxF,MAAM,EAAG,KAAO,KAEhE6lC,EAAU7Z,sBAAatmB,IAAD,mCAAWA,EAAMmgC,eAAjB,aAAW,EAAeA,eAA1B,QAAqC,KACxC,IAAKA,EAAQjuB,KAAM,CAC1Ctb,GAAI,gBAmBN,OAhBAoc,oBAAU,KACRzQ,EAAS0Z,YAAY,OACpB,CAAC1Z,IAEJyQ,oBAAU,KACRzQ,EAAS+c,YAAgB,eACxB,CAAC/c,IAEJyQ,oBAAU,KACRzQ,EAASod,gBACR,CAACpd,IAOF,qCACE,eAAC,YAAD,CAAWjD,UAAU,sBAArB,UACE,cAAC,IAAD,CAAQjH,MAAOs7B,EAAK5jB,cAAcnF,IAAS4C,0BAC3C,eAAC,UAAQsc,MAAT,CAAe+Q,QAAM,EAArB,UACE,cAAC,UAAD,CAASv7B,UAAU,UAAnB,SACGq0B,EAAK5jB,cAAcnF,IAAS4C,0BAE9B0vG,QACc3oH,IAAfumH,QACgBvmH,IAAhBwmH,EACED,GAAcC,EACZ,qCACE,cAAC,UAAD,CAASz/E,WAAS,EAAlB,SACE,cAAC,mBAAD,CACE1kC,GAAG,wBACHukC,eAAe,oPAGnB,cAAC,UAAD,CAAS77B,UAAU,sBAAnB,SACE,cAAC,EAAD,CACEw7G,WAAYA,EACZC,YAAaA,SAKnB,cAAC,UAAD,CAASz7G,UAAU,sBAAnB,SACE,cAAC,EAAD,CACEw7G,WAAYA,EACZC,YAAaA,MAKnB,cAAC,UAAD,CAASz/E,WAAS,EAACh8B,UAAU,mCAA7B,SACE,8BACE,cAAC,mBAAD,CACE1I,GAAG,6CACHukC,eAAe,0DAQ1Bm3D,O,uICtGA,MAAM6qB,EAAkB,CAACl6F,EAAOnyB,EAAKqkC,KAC1C,MAAMioF,EAASjoF,EAAOlS,GAChBo6F,EAAOloF,EAAOrkC,GACpB,IAAKssH,EAAO9uG,YAAc+uG,EAAK/uG,UAC7B,OAAO,KAIT,MAAO,CACLgvG,QAHcF,EAAOG,OAAOF,EAAM,OAIlCG,SAHeJ,EAAOG,OAAOF,EAAM,UAInC1U,UAAWyU,EAAOloF,OAAO,MACzBuoF,UAAWL,EAAOloF,OAAO,MACzB0zE,QAASyU,EAAKnoF,OAAO,MACrBwoF,QAASL,EAAKnoF,OAAO,QA+EZyoF,EAAOp2F,YAAe,CAAC,UAAhBA,CA3EN,EAAGtE,QAAOnyB,MAAK8sH,YAAWC,WAAU1oF,OAAQ00B,MACxD,MAAMnpD,EAAO4lB,sBAAatmB,GAAUA,EAAM2zB,KAAK1O,QAEzCkQ,EAAS00B,EAAU31B,QACzBiB,EAAOlQ,OAAOvkB,GAEd,MAAMo9G,EAAYX,EAAgBl6F,EAAOnyB,EAAKqkC,GAC9C,GAAK2oF,EAIL,OACE,mBACEx+G,UAAW24B,IAAG,aAAc,CAC1B,WAAY6lF,EAAUR,QACtB,YAAaQ,EAAUN,SACvB,YAAaI,EACb,WAAYC,IALhB,SAQIC,EAAUR,QA6BV,qCACGM,GACC,sBAAMt+G,UAAU,aAAhB,SAA8Bw+G,EAAUnV,YAEzCkV,IAAaD,GACZ,qCACE,sBAAMt+G,UAAU,aAAhB,SAA8Bw+G,EAAUnV,YAD1C,SAGE,sBAAMrpG,UAAU,aAAhB,SAA8Bw+G,EAAUL,iBAGzCG,GAAaC,IACd,qCACE,sBAAMv+G,UAAU,aAAhB,SAA8Bw+G,EAAUnV,YAD1C,SAGE,sBAAMrpG,UAAU,aAAhB,SAA8Bw+G,EAAUL,YAH1C,OAKE,sBAAMn+G,UAAU,WAAhB,SAA4Bw+G,EAAUJ,gBA7C5C,qCACE,uBAAMp+G,UAAU,QAAhB,UACE,sBAAMA,UAAU,aAAhB,SAA8Bw+G,EAAUnV,aACtCiV,GACA,qCAEE,qCACA,sBAAMt+G,UAAU,aAAhB,SAA8Bw+G,EAAUL,mBAI5CI,GACA,4CAEE,uBAAMv+G,UAAU,MAAhB,UACE,sBAAMA,UAAU,WAAhB,SAA4Bw+G,EAAUlV,WACpCgV,GACA,qCAEE,qCACA,sBAAMt+G,UAAU,WAAhB,SAA4Bw+G,EAAUJ,0BAoC1DC,EAAKziE,UAAY,CACfj4B,MAAO2qC,IAAUpxD,OAAO6+C,WACxBvqD,IAAK88D,IAAUpxD,OACfohH,UAAWhwD,IAAUpS,KACrBqiE,SAAUjwD,IAAUpS,MAGf,MAmBMuiE,EAAax2F,YAAe,CAAC,UAAhBA,CAnBC,EAAG6rD,aAAYnwD,QAAOkS,OAAQ00B,MACvD,MAAM10B,EAAS00B,EAAU31B,QACrBk/C,EAAW99E,QAAQ,WAAa,IAIlC89E,EAHcltB,QAAM83D,gBAAgB,CAClC/tD,QAAS,IAAI35D,KAAK2sB,KAEG,KAAOmwD,GAEhC,MAAMhsB,EAAQiK,mBAAS+hB,EAAY,CAAEsb,QAAQ,EAAMn9B,UAAU,IAE7D,OACE,cAAC,OAAD,CACEruD,MAAOkkD,EACJriB,MACApyC,IAAK4rC,GAAS4+E,EAAgB5+E,OAAMhqC,EAAW4gC,IAC/CxiC,IAAK4rC,GAASA,EAAKoqE,eAM5BoV,EAAW7iE,UAAY,CACrBk4B,WAAYxlB,IAAUpxD,OAAO6+C,WAC7Bp4B,MAAO2qC,IAAUpxD,OAAO6+C,Y,qmBCzH1B,MAAMzwC,EAAWC,yBAAe,CAC9BozG,KAAM,CAAF,uCAIJC,KAAM,CAAF,uCAIJC,SAAU,CAAF,gDAIRC,cAAe,CAAF,qDAIbC,MAAO,CAAF,yCAILC,YAAa,CAAF,sDAIXC,aAAc,CAAF,wDAIZC,UAAW,CAAF,iDAITC,QAAS,CAAF,6CAIPC,aAAc,CAAF,uEA6GCC,IAvGM,EAAGxiH,UAAS4pD,aAAa,YAC5C,MAAMpyB,EAAOkE,oBACb,OACE,eAAC,UAAD,KACEz2B,GAAI2kD,GACgB,UAAfA,EAAyB,CAAEvJ,QAAS,SAAY,IAFvD,cAIGrgD,EAAQglC,SAAS/vC,OAAS,GACzB,qCACE,cAAC,SAAD,CAAQwtH,UAAQ,EAACrpD,KAAG,EAApB,SACG5hC,EAAK5jB,cAAcnF,EAASqzG,QAE/B,cAAC,OAAD,CAAM/6G,MAAO/G,EAAQglC,cAGzB,cAAC,SAAD,CAAQy9E,UAAQ,EAACrpD,KAAG,EAApB,SACG5hC,EAAK5jB,cAAcnF,EAASszG,QAE/B,cAACP,EAAD,CACE16F,MAAO9mB,EAAQ8mB,MACfnyB,IAAKqL,EAAQrL,IACb8sH,UAAWzhH,EAAQyhH,UACnBC,SAAU1hH,EAAQ0hH,WAEnB1hH,EAAQi3E,YACP,qCACE,cAAC,SAAD,CAAQwrC,UAAQ,EAACrpD,KAAG,EAApB,SACG5hC,EAAK5jB,cAAcnF,EAASuzG,YAE/B,cAACJ,EAAD,CAAY3qC,WAAYj3E,EAAQi3E,WAAYnwD,MAAO9mB,EAAQ8mB,WAG9D9mB,EAAQuG,UACP,qCACE,cAAC,SAAD,CAAQk8G,UAAQ,EAACrpD,KAAG,EAApB,SACG5hC,EAAK5jB,cAAcnF,EAASyzG,SAE/B,4BAAIliH,EAAQuG,cAGfvG,EAAQ0iH,cACP,qCACE,cAAC,SAAD,CAAQD,UAAQ,EAACrpD,KAAG,EAApB,SACG5hC,EAAK5jB,cAAcnF,EAAS0zG,eAE/B,4BACGniH,EAAQ2iH,cACP,mBAAGh+G,KAAO,UAAS3E,EAAQ2iH,cAA3B,SACG3iH,EAAQ0iH,eAGX1iH,EAAQ0iH,kBAKf1iH,EAAQ4iH,eACP,qCACE,cAAC,SAAD,CAAQH,UAAQ,EAACrpD,KAAG,EAApB,SACG5hC,EAAK5jB,cAAcnF,EAAS2zG,gBAE/B,4BAAIpiH,EAAQ4iH,mBAGf5iH,EAAQqiH,UAAUptH,OAAS,GAC1B,qCACE,cAAC,SAAD,CAAQwtH,UAAQ,EAACrpD,KAAG,EAApB,SACG5hC,EAAK5jB,cAAcnF,EAAS4zG,aAE/B,cAAC,OAAD,CAAMt7G,MAAO/G,EAAQqiH,eAGxBriH,EAAQ6iH,WACP,qCACE,cAAC,SAAD,CAAQJ,UAAQ,EAACrpD,KAAG,EAApB,SACG5hC,EAAK5jB,cAAcnF,EAAS6zG,WAE/B,4BACE,mBACE39G,KAAM3E,EAAQ6iH,UACdxiG,OAAO,SACP3b,IAAI,sBAHN,SAKG8yB,EAAK5jB,cAAcnF,EAAS8zG,qBAKrC,sBAAKp/G,UAAU,iBAAf,UACE,cAAC,KAAD,CAAM5S,KAAM4iH,MACZ,mBACEhwG,UAAU,eACVkd,OAAO,SACP3b,IAAI,aACJC,KAAS2sB,YAAmBtxB,EAAQ,QAA7B,YAJT,SAMGw3B,EAAK5jB,cAAcnF,EAASwzG,0B,gSClJxB,GACba,eAAgB,CAAEh2F,MAAO,QAASz5B,KAAM,SAAU4pC,QAAS,kBAC3D88B,aAAc,CAAEjtC,MAAO,eAAgBz5B,KAAM,UAC7C0vH,iBAAkB,CAChBj2F,MAAO,gBACPz5B,KAAM,OACN4pC,QAAS,YAEX+lF,cAAe,CACbl2F,MAAO,mBACPz5B,KAAM,OACN4pC,QAAS,aAEXxiC,GAAI,CAAEqyB,MAAO,KAAMz5B,KAAM,SAAU4pC,QAAS,MAC5Cw9D,eAAgB,CAAE3tE,MAAO,kBAAmBz5B,KAAM,QAClD4vH,aAAc,CAAEn2F,MAAO,aAAcz5B,KAAM,OAAQ4pC,QAAS,WAC5DimF,QAAS,CAAEp2F,MAAO,OAAQz5B,KAAM,SAChCy7F,YAAa,CAAEhiE,MAAO,OAAQz5B,KAAM,SAAU4pC,QAAS,eACvDpB,aAAc,CAAE/O,MAAO,SAAUz5B,KAAM,WACvCkpG,iBAAkB,CAAEzvE,MAAO,2BAA4Bz5B,KAAM,WAC7D8vH,WAAY,CAAEr2F,MAAO,cAAez5B,KAAM,UAC1C+vH,kBAAmB,CAAEt2F,MAAO,oBAAqBz5B,KAAM,QACvDgwH,eAAgB,CAAEv2F,MAAO,iBAAkBz5B,KAAM,UACjDsB,IAAK,CAAEm4B,MAAO,WAAYz5B,KAAM,QAChCsiE,YAAa,CAAE7oC,MAAO,cAAez5B,KAAM,UAC3CiwH,QAAS,CAAEx2F,MAAO,UAAWz5B,KAAM,UACnCkT,SAAU,CAAEumB,MAAO,WAAYz5B,KAAM,UACrCkwH,IAAK,CAAEz2F,MAAO,MAAOz5B,KAAM,UAC3ByzB,MAAO,CAAEgG,MAAO,aAAcz5B,KAAM,QACpCmwH,KAAM,CAAE12F,MAAO,OAAQz5B,KAAM,WAGxB,MAAMowH,EAAiB,CAC5B,eACA,mBACA,iB,i9BCkDF,MAAMh1G,GAAWC,yBAAe,CAC9BkB,KAAM,CAAF,iCAIJ8zG,SAAU,CAAF,yCAIRnjG,KAAM,CAAF,iCAIJE,IAAK,CAAF,+BAIH5Z,MAAO,CAAF,2FAIL8kC,OAAQ,CAAF,qCAINg4E,cAAe,CAAF,2HAIbC,YAAa,CAAF,qFAIX50E,QAAS,CAAF,uCAIPmrC,KAAM,CAAF,iCAIJ3hF,OAAQ,CAAF,uCAINwsF,cAAe,CAAF,uDAIbC,WAAY,CAAF,iDAIV4+B,cAAe,CAAF,2EAIbC,eAAgB,CAAF,uEAId3+B,cAAe,CAAF,uDAIb4+B,sBAAuB,CAAF,uFAIrBj/B,MAAO,CAAF,mCAILx8E,WAAY,CAAF,6CAIV07G,YAAa,CAAF,+DAIXj/B,OAAQ,CAAF,qCAIN5pD,OAAQ,CAAF,uCAIN5E,SAAU,CAAF,yDAIR0tF,cAAe,CAAF,qEAIb/hG,KAAM,CAAF,iCAIJre,MAAO,CAAF,mCAILhG,KAAM,CAAF,iCAIJq9F,OAAQ,CAAF,qCAINlqF,QAAS,CAAF,uCAIPkzG,gBAAiB,CAAF,yDAIfC,UAAW,CAAF,6CAITC,eAAgB,CAAF,uDAId3pH,GAAI,CAAF,6BAIFmlG,IAAK,CAAF,+BAIHykB,YAAa,CAAF,iDAIXC,OAAQ,CAAF,qCAINC,uBAAwB,CAAF,yEAItBC,WAAY,CAAF,+CAIVC,kBAAmB,CAAF,2DAIjBC,cAAe,CAAF,qDAIbnoD,QAAS,CAAF,uCAIPkwC,QAAS,CAAF,yCAIPD,UAAW,CAAF,6CAIT5jE,IAAK,CAAF,iCAWL,MAAM3B,WAAiB7lC,YA6ErBzO,YAAY8F,GAAO,QACjBmkC,MAAMnkC,GACNxF,KAAK0xH,WAAa1xH,KAAK0xH,WAAWnzH,KAAKyB,MACvCA,KAAK2xH,SAAW3xH,KAAK2xH,SAASpzH,KAAKyB,MACnCA,KAAK4xH,YAAc5xH,KAAK4xH,YAAYrzH,KAAKyB,MACzCA,KAAK6xH,cAAgB7xH,KAAK6xH,cAActzH,KAAKyB,MAC7CA,KAAK8xH,aAAe9xH,KAAK8xH,aAAavzH,KAAKyB,MAC3CA,KAAK42F,WAAa52F,KAAK42F,WAAWr4F,KAAKyB,MACvCA,KAAK22F,eAAiB32F,KAAK22F,eAAep4F,KAAKyB,MAC/CA,KAAK+xH,WAAa/xH,KAAK+xH,WAAWxzH,KAAKyB,MACvCA,KAAKgyH,eAAiBhyH,KAAKgyH,eAAezzH,KAAKyB,MAC/CA,KAAKmyF,WAAanyF,KAAKmyF,WAAW5zF,KAAKyB,MACvCA,KAAKoyF,eAAiBpyF,KAAKoyF,eAAe7zF,KAAKyB,MAC/CA,KAAKiyH,SAAWjyH,KAAKiyH,SAAS1zH,KAAKyB,MACnCA,KAAKkyH,aAAelyH,KAAKkyH,aAAa3zH,KAAKyB,MAC3CA,KAAKmyH,eAAiBnyH,KAAKmyH,eAAe5zH,KAAKyB,MAC/CA,KAAKoyH,mBAAqBpyH,KAAKoyH,mBAAmB7zH,KAAKyB,MACvDA,KAAKqyH,aAAeryH,KAAKqyH,aAAa9zH,KAAKyB,MAC3CA,KAAKsyH,iBAAmBtyH,KAAKsyH,iBAAiB/zH,KAAKyB,MACnDA,KAAKuyH,eAAiBvyH,KAAKuyH,eAAeh0H,KAAKyB,MAC/CA,KAAK8nF,aAAe9nF,KAAK8nF,aAAavpF,KAAKyB,MAC3CA,KAAK+nF,iBAAmB/nF,KAAK+nF,iBAAiBxpF,KAAKyB,MACnDA,KAAK0mG,aAAe1mG,KAAK0mG,aAAanoG,KAAKyB,MAC3CA,KAAK6nG,YAAc7nG,KAAK6nG,YAAYtpG,KAAKyB,MACzCA,KAAKwyH,YAAcxyH,KAAKwyH,YAAYj0H,KAAKyB,MACzCA,KAAKonG,YAAcpnG,KAAKonG,YAAY7oG,KAAKyB,MACzCA,KAAKyyH,iBAAmBzyH,KAAKyyH,iBAAiBl0H,KAAKyB,MACnDA,KAAKqnG,eAAiBrnG,KAAKqnG,eAAe9oG,KAAKyB,MAC/CA,KAAKwtB,IAAMxtB,KAAKwtB,IAAIjvB,KAAKyB,MACzBA,KAAKstB,KAAOttB,KAAKstB,KAAK/uB,KAAKyB,MAC3BA,KAAK04C,OAAS14C,KAAK04C,OAAOn6C,KAAKyB,MAC/BA,KAAKioG,OAASjoG,KAAKioG,OAAO1pG,KAAKyB,MAC/BA,KAAK8xF,OAAS9xF,KAAK8xF,OAAOvzF,KAAKyB,MAC/BA,KAAK4K,KAAO5K,KAAK4K,KAAKrM,KAAKyB,MAC3BA,KAAKqV,WAAarV,KAAKqV,WAAW9W,KAAKyB,MACvCA,KAAKogD,SAAWpgD,KAAKogD,SAAS7hD,KAAKyB,MACnCA,KAAK6xF,MAAQ7xF,KAAK6xF,MAAMtzF,KAAKyB,MAC7BA,KAAK0yH,cAAgB1yH,KAAK0yH,cAAcn0H,KAAKyB,MAC7CA,KAAK2yH,aAAe,KACpB3yH,KAAK4Q,MAAQ,CACX0yB,SAAU,GACV0zD,YAAY,EACZ47B,YAAY,EACZvgC,YAAY,EACZvgD,UAAU,EACV+gF,gBAAgB,EAChBC,cAAc,EACd/4B,cAAe,GACfjmF,MAAO9T,KAAKwF,MAAMsO,MAClBvO,OAAQ,GACR4e,YAAa,EACbyjE,SAAU,GACV/7E,MAAO7L,KAAKwF,MAAMqG,OAAS,CACzBmjB,MAAO,IAAK+jG,GACZn+G,OAAQ,IAAUm+G,EAAS,CAAC/0H,EAAOM,IAAR,SACtBN,GADsB,IAEzBslC,UAA4C,IAAlC,IAAQktF,EAAgBlyH,MAEpC00H,cAAexC,EAAexuH,OAAS,GAEzCgoC,SAAS,UAAAhqC,KAAKwF,MAAMypB,YAAX,eAAiBF,KAAM,yBAChC8F,YAAY,UAAA70B,KAAKwF,MAAMypB,YAAX,eAAiBD,QAAS,YACtCwhB,UAAU,GAEZxwC,KAAKizH,cAAgB,KAQvB1nF,oBACEvrC,KAAK0yH,gBACL1yH,KAAKoqC,SAAS,CAAEoG,UAAU,IAS5BM,iCAAiCxiC,IAE5BtO,KAAKwF,MAAM0tH,iBAAiBn3E,SAC3BztC,EAAU4kH,iBAAiB57F,QAC5Bt3B,KAAKwF,MAAMymF,cAAclwC,SAAWztC,EAAU29E,cAAc30D,QAC5Dt3B,KAAKwF,MAAM6vF,cAAct5C,SAAWztC,EAAU+mF,cAAc/9D,SAE7Dt3B,KAAK0yH,cAAcpkH,EAAUiF,UAE3BvT,KAAKwF,MAAM6vF,cAAct5C,SAAWztC,EAAU+mF,cAAc/9D,QAC9Dt3B,KAAKwF,MAAM2tH,SAASnuD,MAAMjnD,QACxB,eAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASo1G,kBAIlD5wH,KAAKwF,MAAM+N,WAAajF,EAAUiF,UACpCvT,KAAKoqC,SACH,CACEjmB,YAAa,GAEf,IAAMnkB,KAAK0yH,cAAcpkH,EAAUiF,WAGnCvT,KAAKwF,MAAM4tH,cAAcr3E,SAAWztC,EAAU8kH,cAAc97F,QAC9Dt3B,KAAKoqC,SAAS,CACZt2B,MAAOxF,EAAUwF,QAInB9T,KAAKwF,MAAM0tH,iBAAiBn3E,SAC5BztC,EAAU4kH,iBAAiBt/G,OAE3B5T,KAAKwF,MAAM2tH,SAASnuD,MAAMpxD,MACxB,eAAC,KAAD,CACEA,OAAK,EACL3K,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAAS5H,OAC9C7G,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAAS5H,UAMpD5T,KAAKwF,MAAM0tH,iBAAiBn3E,SAC5BztC,EAAU4kH,iBAAiB57F,QAE3Bt3B,KAAKwF,MAAM2tH,SAASnuD,MAAMjnD,QACxB,eAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAAS02E,kBAKlDlyF,KAAKwF,MAAMymF,cAAclwC,SAAWztC,EAAU29E,cAAcr4E,OAC9D5T,KAAKwF,MAAM2tH,SAASnuD,MAAMpxD,MACxB,eAAC,KAAD,CACEA,OAAK,EACL3K,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASm1G,aAC9C5jH,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASm1G,gBAKlD3wH,KAAKwF,MAAM6tH,aAAat3E,SAAWztC,EAAU+kH,aAAa/7F,QAC5Dt3B,KAAKwF,MAAM2tH,SAASnuD,MAAMjnD,QACxB,eAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASq1G,mBAaxDa,WAAWjsG,GAAO,MAAEznB,IAClBgC,KAAKoqC,SAAS,CACZ9G,SAAU,IAAKtjC,KAAK4Q,MAAM0yB,SAAUtlC,KAUxC2zH,SAASlsG,EAAOje,IAC4B,IAAtC,IAAQxH,KAAK4Q,MAAM0yB,SAAU97B,GAC/BxH,KAAKoqC,SAAS,CACZ9G,SAAU,IAAOtjC,KAAK4Q,MAAM0yB,SAAU97B,KAGxCxH,KAAKoqC,SAAS,CACZ9G,SAAU,IAAKtjC,KAAK4Q,MAAM0yB,SAAU97B,KAU1CoqH,cACE5xH,KAAKoqC,SAAS,CACZ9G,SAAU,IAAItjC,KAAK4Q,MAAMkD,MAAQC,GAASA,EAAK,UASnD+9G,eACE9xH,KAAKoqC,SAAS,CACZ9G,SAAU,KAWduuF,cAAcpsG,GAAO,MAAEznB,IACrB,IAAI+lC,EAAW,GAAH,MACP/jC,KAAK4Q,MAAM/E,OADJ,IAEVmnH,cACEhzH,KAAK4Q,MAAM/E,MAAMmnH,eAChBhzH,KAAK4Q,MAAM/E,MAAM+I,OAAO5W,GAAOslC,UAAY,EAAI,GAClD1uB,OAAQ,IAAU5U,KAAK4Q,MAAM/E,MAAM+I,OAAQ,CAAC0+G,EAAYC,IAAb,SACtCD,GADsC,IAEzChwF,SACEiwF,IAAav1H,GAASs1H,EAAWhwF,SAAWgwF,EAAWhwF,cAG7DtjC,KAAKoqC,SAAS,CACZv+B,MAAOk4B,IAET/jC,KAAKwF,MAAMqqB,qBAAqBuN,YAAWp9B,KAAKwF,MAAM+N,UAAWwwB,GAUnEwuF,eAAe9sG,GAAO,MAAEznB,IACtB,MAAM2pD,EAAO3nD,KACbyH,aAAakgD,EAAKsrE,eAClBjzH,KAAKoqC,SACH,CACE7kC,OAAQvH,GAEV,KACE2pD,EAAKsrE,cAAgB3rH,WAAW,KAC9BqgD,EAAK+qE,iBACJ,OAYTD,iBAAiBhtG,GAAO,MAAEznB,IACxBynB,EAAMK,kBACN,MAAM,MAAEhS,EAAF,SAASwvB,GAAatjC,KAAK4Q,MAE3B4iH,EAAgB,IAAOlwF,EAAWmwF,GACtC,IAAK3/G,EAAQC,GAASA,EAAK,SAAW0/G,GACnCxqH,MAAMhD,cACNmK,SAASpS,EAAMiI,gBAGpBjG,KAAKoqC,SAAS,CACZopF,kBAWJ1rC,aAAariE,GAAO,MAAEznB,IACpBgC,KAAKoqC,SACH,CACEjmB,YAAanmB,GAEf,IAAMgC,KAAK0yH,iBAWf3qC,iBAAiBtiE,GAAO,MAAEznB,IACxBgC,KAAKoqC,SACH,CACEw9C,SAAU5pF,EACVmmB,YAAa,GAEf,IAAMnkB,KAAK0yH,iBAWfhsB,aAAa76F,EAAO4iB,GAClBzuB,KAAKoqC,SAAS,CACZv+B,MAAO,GAAF,MACA7L,KAAK4Q,MAAM/E,OADX,IAEHmjB,MAAO4T,IAAK5iC,KAAK4Q,MAAM/E,MAAMmjB,MAAOnjB,EAAOA,EAAQ4iB,OAGvDzuB,KAAKwF,MAAMqqB,qBACTuN,YAAWp9B,KAAKwF,MAAM+N,UACtBvT,KAAK4Q,MAAM/E,OAYfg8F,YAAYrgG,EAAIksH,EAAWjlG,EAAOklG,GAC5BA,EACF3zH,KAAKwF,MAAM+oB,aACT6O,YAAWp9B,KAAKwF,MAAM+N,UACtB/L,EAAG/C,QAAQ,QAAS,IACpBgqB,GAGFzuB,KAAKoqC,SAAS,CACZt2B,MAAO8uB,IAAK5iC,KAAK4Q,MAAMkD,MAAO4/G,EAAWA,EAAYjlG,KAY3D+jG,YAAY/sG,GAAO,MAAEznB,IACnB,MAAM4W,EAAS5W,EAAMoM,MAAM,KAC3BpK,KAAKoqC,SAAS,CACZJ,QAASp1B,EAAO,GAChBigB,WAAYjgB,EAAO,KAErB5U,KAAKwF,MAAMspB,YACTsO,YAAWp9B,KAAKwF,MAAM+N,UACtBqB,EAAO,GACPA,EAAO,IAWXwyF,YAAY3hF,GAAO,MAAEznB,IACnB,MAAMwJ,EAAKxH,KAAK4Q,MAAMkD,MAAM9V,GAAO,OACnCA,EAAQgC,KAAK4Q,MAAMuT,YAAcnkB,KAAK4Q,MAAMg3E,SAAW5pF,EACvDgC,KAAKwF,MAAM+oB,aACT6O,YAAWp9B,KAAKwF,MAAM+N,UACtB/L,EAAG/C,QAAQ,QAAS,KACnBzG,GAEHgC,KAAKoqC,SACH,CACEjmB,YAAa,GAEf,IAAMnkB,KAAK0yH,iBAWfrrB,eAAe5hF,GAAO,MAAEznB,IACtBgC,KAAK6nG,YACH7nG,KAAK4Q,MAAMkD,MAAM9V,GAAO,OACxBA,EACAgC,KAAK4Q,MAAMkD,MAAM9R,OAAS,EAAIhE,GAC9B,GAEFgC,KAAK6nG,YACH7nG,KAAK4Q,MAAMkD,MAAM9V,GAAO,OACxBA,EACAgC,KAAK4Q,MAAMkD,MAAM9R,OAAS,EAAIhE,GAC9B,GASJ44F,aACE52F,KAAKwF,MAAM6oB,cAAcruB,KAAK4Q,MAAMmpF,eACpC/5F,KAAKoqC,SAAS,CACZ4sD,YAAY,EACZ+C,cAAe,GACfz2D,SAAU,KASdqzD,iBACE32F,KAAKoqC,SAAS,CACZ4sD,YAAY,EACZ+C,cAAe,KASnBg4B,aACE/xH,KAAK0yH,gBACL1yH,KAAKoqC,SAAS,CACZwoF,YAAY,IAShBZ,iBACEhyH,KAAKoqC,SAAS,CACZwoF,YAAY,IAShBzgC,aACEnyF,KAAKoqC,SAAS,CACZioD,YAAY,EACZ/uD,SAAU,KASd8uD,iBACEpyF,KAAKoqC,SAAS,CACZioD,YAAY,IAShB4/B,WACEjyH,KAAKoqC,SAAS,CACZ0H,UAAU,EACVxO,SAAU,KASd4uF,eACElyH,KAAKoqC,SAAS,CACZ0H,UAAU,IASdqgF,iBACEnyH,KAAKoqC,SAAS,CACZyoF,gBAAgB,EAChBvvF,SAAU,KASd8uF,qBACEpyH,KAAKoqC,SAAS,CACZyoF,gBAAgB,IASpBR,eACEryH,KAAK0yH,gBACL1yH,KAAKoqC,SAAS,CACZ0oF,cAAc,EACdxvF,SAAU,KAEZtjC,KAAKwF,MAAM2tH,SAASnuD,MAAMjnD,QACxB,eAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASs1G,0BAUtDwB,mBACEtyH,KAAKoqC,SAAS,CACZ0oF,cAAc,IAWlBc,aAAapsH,EAAI8N,GACf,MAAMvB,EAAO,IAAK/T,KAAK4Q,MAAMkD,MAAO,CAAE,MAAOtM,IAC7C,OAAOuM,EAAOA,EAAKuB,GAAS,GAS9Bo9G,cAAcn/G,GACRvT,KAAK4Q,MAAMg3E,WAAa5nF,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASm6B,KAEjE31C,KAAKwF,MAAMukC,cAAc3M,YAAW7pB,GAAYvT,KAAKwF,MAAM+N,UAA3D,IACE,aAAc,EACdy2B,QAAShqC,KAAK4Q,MAAMo5B,QACpBnV,WAAY70B,KAAK4Q,MAAMikB,WACvBoV,gBAAiB,OACjBxa,OAAQ,KACJzvB,KAAK4Q,MAAMrL,QAAU,CAAEklC,eAAmBzqC,KAAK4Q,MAAMrL,OAAb,OAG9CvF,KAAKwF,MAAMukC,cAAc3M,YAAW7pB,GAAYvT,KAAKwF,MAAM+N,UAA3D,OACE,aAAc,EACdy2B,QAAShqC,KAAK4Q,MAAMo5B,QACpBnV,WAAY70B,KAAK4Q,MAAMikB,WACvBoV,gBAAiB,QACbjqC,KAAK4Q,MAAMrL,QAAU,CAAEklC,eAAmBzqC,KAAK4Q,MAAMrL,OAAb,MAL9C,IAMEkqB,OAAQzvB,KAAK4Q,MAAMg3E,SACnBr4D,QAASvvB,KAAK4Q,MAAMuT,YAAcnkB,KAAK4Q,MAAMg3E,YAYnDp6D,IAAI/H,GAAO,MAAEznB,IACXgC,KAAKwF,MAAMgoB,IAAIxvB,EAAQ,CAACA,GAASgC,KAAK4Q,MAAM0yB,UAC5CtjC,KAAK8xH,eACL9xH,KAAKwF,MAAM2tH,SAASnuD,MAAMjnD,QACxB,eAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASw2E,eAYtD1kE,KAAK7H,GAAO,MAAEznB,IACZgC,KAAKwF,MAAM8nB,KAAKtvB,EAAQ,CAACA,GAASgC,KAAK4Q,MAAM0yB,UAC7CtjC,KAAK8xH,eACL9xH,KAAKwF,MAAM2tH,SAASnuD,MAAMjnD,QACxB,eAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASuC,SAC9ChR,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASu2E,kBAYtDr5C,OAAOjzB,GAAO,MAAEznB,IACdgC,KAAKoqC,SAAS,CACZ4sD,YAAY,EACZ+C,cAAe/7F,EAAQ,CAACA,GAASgC,KAAK4Q,MAAM0yB,WAShD2kE,SACEjoG,KAAKoqC,SAAS,CACZwoF,YAAY,IAShB9gC,SACE9xF,KAAKoqC,SAAS,CACZioD,YAAY,IAShBznF,OACE5K,KAAKoqC,SAAS,CACZ0H,UAAU,IASdz8B,aACErV,KAAKoqC,SAAS,CACZyoF,gBAAgB,IASpBzyE,WACEpgD,KAAKoqC,SAAS,CACZ0oF,cAAc,IASlBjhC,QAC4B,SAAtB7xF,KAAKwF,MAAMohC,QACb5mC,KAAKwF,MAAM0nB,YACTltB,KAAKwF,MAAM2nB,OACXiQ,YAAWp9B,KAAKwF,MAAM+N,WAGA,QAAtBvT,KAAKwF,MAAMohC,QACb5mC,KAAKwF,MAAM6nB,YACTrtB,KAAKwF,MAAM2nB,OACXiQ,YAAWp9B,KAAKwF,MAAM+N,WAU5B7D,SAAS,0BACP,MAAM4zB,EAAWtjC,KAAK4Q,MAAM0yB,SAASthC,OAAS,EACxCwxH,EAAgBxzH,KAAK4Q,MAAM4iH,eAAiBxzH,KAAK4Q,MAAM0yB,SACvDrjC,EAAOm9B,YAAWp9B,KAAKwF,MAAM+N,UAC7BsgH,EAAuB,IAAK7zH,KAAKwF,MAAMi4F,cAAe,CAC1Dj2F,GAAI,mBAGAu0C,GACH,UAAA/7C,KAAKwF,MAAM0tH,wBAAX,eAA6Bn3E,YAC5B,UAAC/7C,KAAKwF,MAAM0tH,wBAAZ,OAAC,EAA6Bt/G,SAC/B,UAAA5T,KAAKwF,MAAMymF,qBAAX,eAA0BlwC,YAAW,UAAC/7C,KAAKwF,MAAMymF,qBAAZ,OAAC,EAA0Br4E,SAChE,UAAA5T,KAAKwF,MAAM6vF,qBAAX,eAA0Bt5C,YAAW,UAAC/7C,KAAKwF,MAAM6vF,qBAAZ,OAAC,EAA0BzhF,SAChE,UAAA5T,KAAKwF,MAAM6tH,oBAAX,eAAyBt3E,YAAW,UAAC/7C,KAAKwF,MAAM6tH,oBAAZ,OAAC,EAAyBz/G,SAC9D,UAAA5T,KAAKwF,MAAM4tH,qBAAX,eAA0Br3E,YAAW,UAAC/7C,KAAKwF,MAAM4tH,qBAAZ,OAAC,EAA0Bx/G,OAEnE,OAAO5T,KAAKwF,MAAMqN,QAAS,UAAA7S,KAAKwF,MAAMi4F,qBAAX,eAA0Bz7F,QAAS,EAC5D,qCACG6xH,EACC,eAAC,YAAD,CAAWrsH,GAAG,gBAAgB0I,UAAU,kBAAxC,SACE,gBAAC,SAAO4jH,SAAR,CAAiB9hH,GAAG,MAAM+hH,UAAQ,EAACC,OAAQj4E,EAA3C,UACE,eAAC,SAAD,CAAQ7N,OAAQ6N,EAASwmC,UAAQ,EAAjC,SACE,eAAC,SAAD,CAAQpI,eAAa,EAACrmD,KAAK,UAA3B,SACG9zB,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASugC,aAI5C,eAAC,IAAD,CACE9yC,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASi1G,YAEhD,sBAAKvgH,UAAU,YAAf,SACE,2BAAS1I,GAAG,UAAZ,UACE,eAAC,UAAD,CACE2lC,KAAMntC,KAAK4Q,MAAMomF,WACjBppB,OAAQ5tE,KAAKwF,MAAM++B,KAAK5jB,cACtBnF,GAASk1G,eAEX3jH,QACE,sBAAKmD,UAAU,UAAf,SACE,qBAAIA,UAAU,UAAd,SACG,IAAIlQ,KAAK4Q,MAAMmpF,cAAgBhmF,GAC9B,8BACG/T,KAAK4zH,aAAa7/G,EAAM,UADlBA,QAOjB+wD,SAAU9kE,KAAK22F,eACf9hB,UAAW70E,KAAK42F,WAChB9iE,KAAK,SAEP,eAAC,IAAD,CACEqZ,KAAMntC,KAAK4Q,MAAMgiH,WACjB9tD,SAAU9kE,KAAKgyH,eACf1kC,KAAMttF,KAAK+xH,WACXx+G,SAAU6pB,YAAWp9B,KAAKwF,MAAM+N,YAElC,eAAC,IAAD,CACE45B,KAAMntC,KAAK4Q,MAAMyhF,WACjBvtB,SAAU9kE,KAAKoyF,eACf9E,KAAMttF,KAAKmyF,WACXr+E,MAAO,IAAI9T,KAAK4Q,MAAM0yB,SAAWvvB,IAAD,CAC9BnS,IAAKmS,EACL9K,MAAOjJ,KAAK4zH,aAAa7/G,EAAM,SAC/BvM,GAAIxH,KAAK4zH,aAAa7/G,EAAM,WAGhC,eAAC,IAAD,CACEo5B,KAAMntC,KAAK4Q,MAAMkhC,SACjBgzB,SAAU9kE,KAAKkyH,aACf5kC,KAAMttF,KAAKiyH,SACXn+G,MAAO,IAAI9T,KAAK4Q,MAAM0yB,SAAWvvB,IAAD,CAC9BnS,IAAKmS,EACLg+B,SAAU/xC,KAAK4zH,aAAa7/G,EAAM,gBAGtC,eAAC,IAAD,CACEo5B,KAAMntC,KAAK4Q,MAAMiiH,eACjB/tD,SAAU9kE,KAAKoyH,mBACf9kC,KAAMttF,KAAKmyH,eACXr+G,MAAO9T,KAAK4Q,MAAM0yB,WAEnBtjC,KAAK4Q,MAAMkiH,cACV,eAAC,IAAD,CACE3lF,KAAMntC,KAAK4Q,MAAMkiH,aACjBhuD,SAAU9kE,KAAKsyH,iBACfhlC,KAAMttF,KAAKqyH,aACXv+G,MAAO9T,KAAK4Q,MAAM0yB,WAGtB,0BAAS97B,GAAG,eAAZ,SACE,gBAAC,UAAQkzB,MAAT,CAAe+Q,QAAM,EAArB,UACE,gBAAC,OAAD,CAAMS,WAAS,EAACyhC,UAAQ,EAACz9D,UAAU,WAAnC,UACE,eAAC,OAAK83E,KAAN,CAAW93E,UAAU,gBAArB,SACE,eAAC,QAAD,CACEg5B,QACE,eAAC,OAAKod,KAAN,CACEjd,MAAI,EACJr3B,GAAIiiH,SACJt0F,QAAS3/B,KAAKioG,OACd/3F,UAAU,SAJZ,SAME,eAAC,KAAD,CACE5S,KAAM+8E,IACNpgD,MAAM,UACNnG,KAAK,OACL5jB,UAAU,aAIhB0zC,SAAS,aACT72C,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,GAASysF,QAEXn0E,KAAK,WAGT,gBAAC,OAAKk0D,KAAN,CAAW93E,UAAU,gBAArB,UACE,eAAC,QAAD,CACEg5B,QACE,eAAC,OAAKod,KAAN,CACEjd,MAAI,EACJr3B,GAAIiiH,SACJt0F,QAAS3/B,KAAK8xF,OACdhpD,UAAWxF,EAJb,SAME,eAAC,KAAD,CACEhmC,KAAM42H,IACNj6F,MAAOqJ,EAAW,UAAY,OAC9BxP,KAAK,OACL5jB,UAAU,aAIhB0zC,SAAS,aACT72C,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,GAASs2E,QAEXh+D,KAAK,SAEP,eAAC,QAAD,CACEoV,QACE,eAAC,OAAKod,KAAN,CACEjd,MAAI,EACJr3B,GAAIiiH,SACJt0F,QAAS3/B,KAAKogD,SACdtX,UAAWxF,EAJb,SAME,eAAC,KAAD,CACEhmC,KAAM62H,IACNl6F,MAAOqJ,EAAW,UAAY,OAC9BxP,KAAK,OACL5jB,UAAU,gBAIhB0zC,SAAS,aACT72C,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,GAAS5K,OAEXkjB,KAAK,SAEP,eAAC,QAAD,CACEoV,QACE,eAAC,OAAKod,KAAN,CACEjd,MAAI,EACJr3B,GAAIiiH,SACJt0F,QAAS3/B,KAAK4K,KACdk+B,UAAWxF,EAJb,SAME,eAAC,KAAD,CACEhmC,KAAM82H,IACNn6F,MAAOqJ,EAAW,UAAY,OAC9BxP,KAAK,OACL5jB,UAAU,UAIhB0zC,SAAS,aACT72C,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,GAAS5Q,MAEXkpB,KAAK,SAGP,eAAC,QAAD,CACEoV,QACE,eAAC,OAAKod,KAAN,CACEjd,MAAI,EACJr3B,GAAIiiH,SACJt0F,QAAS3/B,KAAKqV,WACdyzB,UAAWxF,EAJb,SAME,eAAC,KAAD,CACEhmC,KAAM+2H,KACNp6F,MAAOqJ,EAAW,UAAY,OAC9BxP,KAAK,OACL5jB,UAAU,iBAIhB0zC,SAAS,aACT72C,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,GAASnG,YAEXye,KAAK,YAGT,gBAAC,OAAKk0D,KAAN,CAAW93E,UAAU,gBAArB,UACE,eAAC,QAAD,CACEg5B,QACE,eAAC,OAAKod,KAAN,CACEjd,MAAI,EACJr3B,GAAIiiH,SACJt0F,QAAS3/B,KAAKwtB,IACdsb,UAAWxF,EAJb,SAME,eAAC,KAAD,CACEhmC,KAAMioG,IACNtrE,MAAOqJ,EAAW,UAAY,OAC9BxP,KAAK,OACL5jB,UAAU,UAIhB0zC,SAAS,aACT72C,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,GAASgS,KAEXsG,KAAK,SAEP,eAAC,QAAD,CACEoV,QACE,eAAC,OAAKod,KAAN,CACEjd,MAAI,EACJr3B,GAAIiiH,SACJt0F,QAAS3/B,KAAKstB,KACdwb,UAAWxF,EAJb,SAME,eAAC,KAAD,CACEhmC,KAAMkoG,IACNvrE,MAAOqJ,EAAW,UAAY,OAC9BxP,KAAK,OACL5jB,UAAU,WAIhB0zC,SAAS,aACT72C,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,GAAS8R,MAEXwG,KAAK,SAGP,eAAC,QAAD,CACEoV,QACE,eAAC,OAAKod,KAAN,CACEjd,MAAI,EACJr3B,GAAIiiH,SACJt0F,QAAS3/B,KAAK6xF,MACd/oD,UAAW9oC,KAAKwF,MAAMohC,OAJxB,SAME,eAAC,KAAD,CACEtpC,KAAMmoG,KACNxrE,MAAOqJ,EAAW,UAAY,OAC9BxP,KAAK,OACL5jB,UAAU,YAIhB0zC,SAAS,aACT72C,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,GAASq2E,OAEX/9D,KAAK,SAGP,eAAC,QAAD,CACEoV,QACE,eAAC,OAAKod,KAAN,CACEjd,MAAI,EACJr3B,GAAIiiH,SACJt0F,QAAS3/B,KAAK04C,OACd5P,UAAWxF,EAJb,SAME,eAAC,KAAD,CACEhmC,KAAM2zD,IACNh3B,MAAOqJ,EAAW,UAAY,OAC9BxP,KAAK,OACL5jB,UAAU,aAIhB0zC,SAAS,aACT72C,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,GAASk9B,QAEX5kB,KAAK,YAGT,eAAC,OAAKk0D,KAAN,CACEpkC,SAAS,QACT1zC,UAAU,qBAFZ,SAIE,uBAAKA,UAAU,wCAAf,UACE,eAAC,QAAD,CACE9P,KAAK,OACLonF,aAAW,EACX7lD,YAAa3hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,GAASjW,QAEXuuB,KAAK,QACL91B,MAAOgC,KAAK4Q,MAAMrL,OAClBsmC,SAAU7rC,KAAKuyH,iBAEjB,eAAC,KAAD,CACEj1H,KAAMmqF,KACN3zD,KAAK,OACLmG,MAAM,UACN/pB,UAAU,SAEZ,sBAAKA,UAAU,oBAIrB,gBAAC,UAAD,CACEg8B,WAAS,EACTyhC,UAAQ,EACRz9D,UAAU,uBAHZ,UAKE,eAAC,IAAD,CAAqB4D,MAAO9T,KAAKwF,MAAM25C,cACvC,eAAC,WAAD,CACEprC,MAAI,EACJugH,QAAQ,EACRjrF,KACE,eAAC,KAAD,CAAM/rC,KAAMmqG,KAAS3zE,KAAK,OAAOmG,MAAM,YAEzC/pB,UAAU,6BANZ,SAQE,gBAAC,WAAS83E,KAAV,CAAe93E,UAAU,OAAzB,UACE,eAAC,WAASsyD,OAAV,CACEz1D,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,GAASw1G,iBAGb,eAAC,WAAShpC,KAAV,CAAevlB,WAAS,EAAxB,SACG,IACC,IACEziE,KAAK4Q,MAAM/E,MAAMmjB,MAChBnjB,GAAoB,mBAAVA,GAEZA,GACC,gBAAC,WAASy6C,KAAV,CAEEtoD,MAAO6N,EACP8zB,QAAS3/B,KAAK6xH,cACd3hH,UAAU,YAJZ,UAMGlQ,KAAK4Q,MAAM/E,MAAM+I,OAAO/I,GAAOy3B,SAC9B,eAAC,KAAD,CACEhmC,KAAMgqG,KACNxzE,KAAK,OACLmG,MAAM,UACN/pB,UACElQ,KAAK4Q,MAAM/E,MAAM+I,OAAO/I,GAAOguB,QAInC,eAAC,KAAD,CACEv8B,KAAMiqG,KACNr3F,UACElQ,KAAK4Q,MAAM/E,MAAM+I,OAAO/I,GAAOguB,MAEjC/F,KAAK,SAGT,kCACG,IACA9zB,KAAKwF,MAAM++B,KAAK5jB,cAAc,CAC7BnZ,GAAIxH,KAAK4Q,MAAM/E,MAAM+I,OAAO/I,GACzBguB,MACHkS,eAAgB/rC,KAAK4Q,MAAM/E,MAAM+I,OAC/B/I,GACAguB,aA9BDhuB,cAwCnB,sBAAKqE,UAAU,yBAAf,SACE,gBAAC,QAAD,CAAOsuF,YAAU,EAAChnB,SAAO,EAACggB,YAAU,EAAC7pB,UAAQ,EAA7C,UACE,eAAC,QAAMnL,OAAP,UACE,gBAAC,QAAMpI,IAAP,WACE,eAAC,QAAMuM,WAAP,UACE,eAAC,WAAD,CACE5yD,MAAI,EACJugH,QAAQ,EACRpkH,UAAU,YACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,GAASyT,MAEXoa,KACE,eAAC,KAAD,CACE/rC,KAAMi3H,KACNzgG,KAAK,OACLmG,MAAM,UACN/pB,UAAU,sBAZhB,SAgBE,gBAAC,WAAS83E,KAAV,WACE,eAAC,WAASxlB,OAAV,CACEz1D,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,GAASu1G,eAGZ,IACC,CACE,KACA,iBACA,gBACA,eACA,mBACA,eAEDllH,GACC,gBAAC,WAASy6C,KAAV,CAEEp2C,UAAY,QAAOrE,eAFrB,UAIE,eAAC,KAAD,CAAMvO,KAAMk3H,KAAY1gG,KAAK,SAC7B,eAAC,mBAAD,CACEtsB,GAAIurH,EAAQlnH,GAAOguB,QAErB,gBAAC,WAASmuD,KAAV,WACE,gBAAC,WAAS1hC,KAAV,CACE3mB,QAAS3/B,KAAKwyH,YACdx0H,MAAU+0H,EAAQlnH,GAAOm+B,QAAjB,aACR95B,UAAY,QAAO6iH,EAAQlnH,GAAOm+B,+BAHpC,UAKE,eAAC,KAAD,CACE1sC,KAAMm3H,KACN3gG,KAAK,SACJ,IACH,eAAC,mBAAD,CACEtsB,GAAG,YACHukC,eAAe,iBAGnB,gBAAC,WAASua,KAAV,CACE3mB,QAAS3/B,KAAKwyH,YACdx0H,MAAU+0H,EAAQlnH,GAAOm+B,QAAjB,cACR95B,UAAY,QAAO6iH,EAAQlnH,GAAOm+B,gCAHpC,UAKE,eAAC,KAAD,CACE1sC,KAAMo3H,KACN5gG,KAAK,SACJ,IACH,eAAC,mBAAD,CACEtsB,GAAG,aACHukC,eAAe,uBAjChBlgC,WA2CjB,eAAC,QAAM86D,WAAP,UACE,eAAC,WAAD,CACE2tD,QAAQ,EACRprF,QACE,eAAC,KAAD,CACE5rC,KACiC,IAA/B0C,KAAK4Q,MAAM0yB,SAASthC,OAChBulG,KACAvnG,KAAK4Q,MAAM0yB,SAASthC,SACpBhC,KAAK4Q,MAAMkD,MAAM9R,OACjBslG,KACAqtB,KAEN16F,MACEj6B,KAAK4Q,MAAM0yB,SAASthC,OAAS,EACzB,UACA,UAEN8xB,KAAK,SAGTuV,KAAM,KApBR,SAsBE,gBAAC,WAAS2+C,KAAV,WACE,eAAC,WAASxlB,OAAV,CACEz1D,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,GAAS0sB,UAGb,gBAAC,WAASoe,KAAV,CAAe3mB,QAAS3/B,KAAK4xH,YAA7B,UACE,eAAC,KAAD,CACEt0H,KAAMgqG,KACNrtE,MAAM,UACNnG,KAAK,SACJ,IACH,eAAC,mBAAD,CACEtsB,GAAG,MACHukC,eAAe,WAGnB,gBAAC,WAASua,KAAV,CAAe3mB,QAAS3/B,KAAK8xH,aAA7B,UACE,eAAC,KAAD,CACEx0H,KAAMiqG,KACNzzE,KAAK,SACJ,IACH,eAAC,mBAAD,CACEtsB,GAAG,OACHukC,eAAe,YAGnB,eAAC,WAASM,QAAV,IACA,eAAC,WAASm2B,OAAV,CACEz1D,QAAS/M,KAAKwF,MAAM++B,KAAK5jB,cACvBnF,GAAS8nB,SACT,CAAE43B,MAAOl7D,KAAK4Q,MAAM0yB,SAASthC,WAGjC,eAAC,QAAD,CACEqnC,KAAM,eAAC,KAAD,CAAM/rC,KAAMmqF,KAAS3zD,KAAK,SAChC8gG,aAAa,OACb1kH,UAAU,SACVyxB,YAAa3hC,KAAKwF,MAAM++B,KAAK5jB,cAC3BnF,GAASjW,QAEXsmC,SAAU7rC,KAAKyyH,iBACf9yF,QAAU3iC,IACRA,EAAE6oB,iBACF7oB,EAAE8oB,qBAGN,eAAC,WAASkiE,KAAV,CAAevlB,WAAS,EAAxB,SACG,IAAI+wD,EAAgBz/G,GACnB,gBAAC,WAASuyC,KAAV,CAEEtoD,MAAO+V,EACP4rB,QAAS3/B,KAAK0xH,WAHhB,UAKE,eAAC,KAAD,CACEp0H,KAAM2zD,IACNh3B,MAAM,UACNnG,KAAK,SACJ,IACF9zB,KAAK4zH,aAAa7/G,EAAM,WATpBA,aAgBjB,eAAC,QAAM4yD,WAAP,CACE9qC,MAAO6J,KAAKu7C,KACV,GAAKjhF,KAAK4Q,MAAM/E,MAAMmnH,eAF1B,SAKE,eAAC,mBAAD,CACExrH,GAAG,QACHukC,eAAe,YAGlB,IACC/rC,KAAK4Q,MAAM/E,MAAMmjB,MACjB,CAACnjB,EAAOmjB,IACNhvB,KAAK4Q,MAAM/E,MAAM+I,OAAO/I,GAAOy3B,UAC7B,eAAC,IAAD,CAEEzH,MAAO6J,KAAKu7C,KACV,GAAKjhF,KAAK4Q,MAAM/E,MAAMmnH,eAExBn5F,MACE75B,KAAK4Q,MAAM/E,MAAM+I,OAAO/I,GAAOguB,MAEjC7K,MAAOA,EACP03E,aAAc1mG,KAAK0mG,cARd76F,IAYb,eAAC,QAAM86D,WAAP,CAAkB7Z,UAAU,QAA5B,SACE,eAAC,mBAAD,CACEtlD,GAAG,UACHukC,eAAe,mBAKvB,eAAC,QAAM66B,KAAP,UACG5mE,KAAK4Q,MAAMkD,MAAMvQ,IAAI,CAACwQ,EAAMib,IAC3B,eAAC,IAAD,CAEEjb,KAAMA,EACNib,MAAOA,EACPsU,UAEG,IADD,IAAQtjC,KAAK4Q,MAAM0yB,SAAUvvB,EAAK,QAGpC4rB,QAAS3/B,KAAK2xH,SACdj0E,QAAS,IACP,IAAI19C,KAAK4Q,MAAM/E,MAAMmjB,MAAQnjB,IAAD,CAC1BrE,GAAIqE,EACJzL,KAAMJ,KAAK4Q,MAAM/E,MAAM+I,OAAO/I,GAAOzL,QAEtCyL,GACC7L,KAAK4Q,MAAM/E,MAAM+I,OAAO/I,EAAMrE,IAAI87B,UAEtC4jE,MAAOlnG,KAAKwtB,IACZ25E,OAAQnnG,KAAKstB,KACbokC,SAAU1xD,KAAK04C,OACfmvD,YAAa7nG,KAAK6nG,YAClBT,YAAapnG,KAAKonG,YAClBC,eAAgBrnG,KAAKqnG,gBArBhBtzF,EAAK,gBA4BpB,sBAAK7D,UAAU,sBAAf,SACE,eAAC,KAAD,CACExK,QAAS1F,KAAK4Q,MAAMuT,YACpBy5B,MAAOlY,KAAKu7C,KACVjhF,KAAKwF,MAAMo4C,MAAQ59C,KAAK4Q,MAAMg3E,UAEhCA,SAAU5nF,KAAK4Q,MAAMg3E,SACrBC,UAAW,CACT,GACA7nF,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASm6B,MAEzCmyC,aAAc9nF,KAAK8nF,aACnBC,iBAAkB/nF,KAAK+nF,+BAOlC/nF,KAAK4Q,MAAM4/B,UACV,eAAC,SAAD,CAAQyB,KAAMnoC,SAASooC,eAAe,WAAtC,SACE,eAAC,KAAD,CACE3+B,SAAUvT,KAAKwF,MAAM+N,SACrB4+B,MACE,eAAC,OAAD,CACEhB,GAAK,GAAElxC,EACPkS,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,GAASmB,MAHb,SAME,eAAC,KAAD,CACErf,KAAMsuC,IACN17B,UAAU,mBACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,GAASmB,mBAU9D,eAAC,KAAD,CAAcuoB,cAAellC,KAAKwF,MAAM0/B,kBAI5C,eAAC,KAAD,CAAcA,cAAellC,KAAKwF,MAAM0/B,iB,IA79CxC8O,G,eAyDkB,CACpBlgC,MAAO,GACP8yB,OAAQ,KACRzZ,OAAQ,KACRthB,MAAO,CACLmjB,MAAO,IAAK+jG,GACZn+G,OAAQ,IAAUm+G,EAAS,CAAC/0H,EAAOM,IAAR,SACtBN,GADsB,IAEzBslC,UAA4C,IAAlC,IAAQktF,EAAgBlyH,MAEpC00H,cAAexC,EAAexuH,OAAS,KA26CrBwqC,kBACtBC,aACAtU,YAAe,CAAC,WAAY,aAC5BuU,kBACE,CAACz7B,EAAOzL,KACC,CACLqN,MAAO5B,EAAM2B,YAAYC,MACzBiB,MAAO7C,EAAM+gB,OAAOle,MACpBmb,KAAMhe,EAAMlE,QAAQ0vC,OAAOxtB,KAC3BpjB,MAAOoF,EAAMlE,QAAQ+vC,cAAcpC,IACnCyE,YAAaluC,EAAMkuC,YAAYrrC,MAC/B8pC,MAAO3sC,EAAM+gB,OAAO4rB,MACpBw1E,cAAe,CACbr3E,QAAS9qC,EAAM+gB,OAAO+pB,QACtBzkB,OAAQrmB,EAAM+gB,OAAOsF,QAEvB/jB,SAAU/N,EAAM8N,SAASC,SACzBqzB,OAAQ31B,EAAMouC,UAAUzY,OACxBzZ,OAAQlc,EAAMouC,UAAUlyB,OACxB+lG,iBAAkBjiH,EAAMouC,UAAU9+C,QAClC0rF,cAAeh7E,EAAMlE,QAAQ2rC,OAC7B28C,cAAepkF,EAAMlE,QAAQ0vC,OAC7BghD,cAAexsF,EAAM8/B,QAAQA,QAAQtyC,OACrC40H,aAAcpiH,EAAMlE,QAAQiiB,QAGhC,CACE+a,mBACAvc,QACAF,SACAJ,gBACAmB,kBACAxB,gBACAQ,gBACAkB,kBACAO,iBACAe,4BApCkB2c,CAuCtBwH,IAEaxH,sBACbC,aACAC,kBACE,CAACz7B,EAAOzL,KACC,CACLqN,MAAO5B,EAAM2B,YAAYC,MACzBiB,MAAO7C,EAAM+gB,OAAOle,MACpBmb,KAAMhe,EAAMlE,QAAQ0vC,OAAOxtB,KAC3BpjB,MAAOoF,EAAMlE,QAAQ+vC,cAAcpC,IACnCyE,YAAaluC,EAAMkuC,YAAYrrC,MAC/B8pC,MAAO3sC,EAAM+gB,OAAO4rB,MACpBw1E,cAAe,CACbr3E,QAAS9qC,EAAM+gB,OAAO+pB,QACtBzkB,OAAQrmB,EAAM+gB,OAAOsF,QAEvB/jB,SAAU/N,EAAM8N,SAASC,SACzBqzB,OAAQ31B,EAAMouC,UAAUzY,OACxBzZ,OAAQlc,EAAMouC,UAAUlyB,OACxB+lG,iBAAkBjiH,EAAMouC,UAAU9+C,QAClC0rF,cAAeh7E,EAAMlE,QAAQ2rC,OAC7B28C,cAAepkF,EAAMlE,QAAQ0vC,OAC7BghD,cAAexsF,EAAM8/B,QAAQA,QAAQtyC,OACrC40H,aAAcpiH,EAAMlE,QAAQiiB,QAGhC,CACE+a,mBACAvc,QACAF,SACAJ,gBACAmB,kBACAxB,gBACAQ,gBACAkB,kBACAO,iBACAe,4BAGJqkC,YAAa,CACX,CACE51D,IAAK,UAGLkC,QAAS8+E,OAAShsE,WAAUrC,OAASkC,qBAC7BA,EAAS0Z,YAAYuQ,YAAW9pB,EAASC,eAGrD4kB,YAAe,CAAC,WAAY,WAAY,yBA/C3BqU,CArDYhnC,IACzB,MAAM,gBAAEguE,GAAoBhuE,EAAMomE,SAC5BipD,EAAervH,EAAMsvH,qBAAqBhwF,QAE1CiwF,EAAuBxoH,IAAMi0B,QACjC,IAAMgzC,EAAgBqhD,EAAhBrhD,CAA8Bx/B,IACpC,CAACw/B,EAAiBqhD,IAGpB,OAAO,eAACE,EAAD,MAA0BvvH,O,+FCxvDpB,GACbkwD,WAAY,aACZs/D,cAAe,gBACfC,UAAW,cACX3/D,aAAc,eACdJ,aAAc,eACdE,aAAc,eACd8/D,YAAa,gBACblgE,cAAe,iB,upBCIjB,MAAMp7B,EAASzB,YAAe,cAAfA,CAA+B3yB,IAC5C,MAAM,OAAEo0B,GAAWp0B,EAAM2zB,YAAY1M,WACrC,OACE,eAACmN,EAAD,OAAYp0B,GAAZ,cACE,8BAAMA,EAAMq0B,QACXr0B,EAAMs0B,YAAct0B,EAAMu0B,YACzB,cAAC,KAAD,CAAMz8B,KAAM08B,IAAUlG,KAAK,OAAOmG,MAAM,YAEzCz0B,EAAMu0B,YAAc,cAAC,KAAD,CAAMz8B,KAAM08B,IAAUlG,KAAK,OAAOmG,MAAM,kBAK7DC,EAAoB/B,YAAe,cAAfA,CAA+B3yB,IACvD,MAAM,kBAAE00B,GAAsB10B,EAAM2zB,YAAY1M,WAChD,OACE,cAACyN,EAAD,OAAuB10B,GAAvB,aACGA,EAAM20B,YAAYC,WACjB,cAAC,KAAD,CAAM98B,KAAM+8B,IAAOvG,KAAK,OAAOmG,MAAM,YAErC,cAAC,KAAD,CAAM38B,KAAMg9B,IAASxG,KAAK,OAAOmG,MAAM,iBAMzCQ,EAAeE,GAAD,OACfA,GADe,IAElBC,aAAc,EACdC,OAAQ,EAAF,KACDF,EAAME,QADL,IAEJC,UAAW,UACXC,QAAS,cAIPC,EAAqB,CACzBC,QAAS,CAACC,EAAQtqB,IAAT,OACJsqB,GADI,IAEPC,OAAQ,OACRC,aAAc,oBACdC,UAAW,OACXC,kBAAmB1qB,EAAMwpB,WAAa,SAAW,UAEnDoB,KAAM,CAACN,EAAQtqB,IAAT,OACDsqB,GADC,IAEJO,IAAK,KACLC,UAAW,EACXL,UAAW,OACXD,aAAc,sBAEhB+5F,SAAU,CAACj6F,EAAQtqB,IAAT,OACLsqB,GADK,IAERxC,UAAW,UAEbkD,mBAAqBV,GAAD,OACfA,GADe,IAElBW,MAAO,OAETC,eAAiBZ,GAAD,KACXA,GAGLiB,OAAQ,CAACjB,EAAQtqB,IAAT,OACHsqB,GADG,IAENkB,gBAAiB,KACjBvD,OAAQ,OACRwD,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,QAAS,YACTvC,MAAOrpB,EAAMmpB,WACT,UACAnpB,EAAMkpB,UACN,UACA,UACJ,UAAW,CACTsC,gBAAiB,SAUvB,MAAMg5F,UAAsBjnH,YAAU,+CA2B5B,CACN6/C,eAAgB,CACdhwD,MAAOgC,KAAKwF,MAAM6vH,OAClBx7F,MAAO0+D,EAAQv4F,KAAKwF,MAAM6vH,SAAWr1H,KAAKwF,MAAM6vH,UA9BhB,qBA2DvBrnE,IACXhuD,KAAKwF,MAAM8oB,cAActuB,KAAKwF,MAAM+N,SAAU,CAC5C8hH,OAAQrnE,EAAehwD,QAEzBgC,KAAKoqC,SAAS,CAAE4jB,qBA/DkB,uBAkErB7xB,GACb,cAAC,WAAD,UACE,sBAAMjsB,UAAU,qBAAhB,SAAsCisB,EAAOtC,WApEb,0BAwElBsC,GAChB,eAAC,WAAD,WACE,sBAAMruB,MAAO,CAAE2mF,YAAa,QAA5B,SAAuCt4D,EAAOtC,QAC9C,cAAC,KAAD,CAAMv8B,KAAM08B,IAAUlG,KAAK,aAzC/ByX,oBACEvrC,KAAKwF,MAAMksB,UAAU1xB,KAAKwF,MAAMpF,MASlC0wC,iCAAiCxiC,GAC3BA,EAAUiF,WAAavT,KAAKwF,MAAM+N,UACpCvT,KAAKwF,MAAMksB,UAAUpjB,EAAUlO,OAE5BJ,KAAKwF,MAAM8xB,QAAUhpB,EAAUgpB,QAClCt3B,KAAKwF,MAAM0pB,WAAW5gB,EAAUiF,UA8BpC7D,SACE,MAAM,eAAEs+C,GAAmBhuD,KAAK4Q,MAC1B+9C,EAAS3uD,KAAKwF,MAAM2zB,YAAY2L,QAEtC,OACE,qCACE,uBAAOw1B,QAAQ,iBAAf,SACE,cAAC,mBAAD,CAAkB9yD,GAAG,WAAWukC,eAAe,WAEjD,cAAC4iB,EAAD,CACErxD,KAAK,iBACL4S,UAAU,yBACVk/C,gBAAgB,eAChBrpC,QAAS/lB,KAAKwF,MAAM+yF,QACjBhzF,OACE8vH,GACC53H,OAAO+D,KAAKX,IAAOsrB,MAAMukB,mBAAmBtgC,SAASilH,IACrD53H,OAAO+D,KAAKX,IAAOsrB,MAAMwkB,aAAavgC,SAASilH,IAElD9xH,IAAKwQ,IAAD,CACH/V,MAAO+V,EACP8lB,MAAO0+D,EAAQxkF,IAASA,KAE5BmnB,OAAQF,EACRL,MAAOF,EACPhO,WAAY,CAAEyN,kBAAF,EAAqBN,OAAMA,GACvCiS,SAAU7rC,KAAKs1H,UACf36E,aAAcqT,EACdgnB,cAAc,Q,IA3GlBogD,E,eAsBkB,CACpB78B,QAAS,GACT88B,OAAQ,KA0FG7oF,sBACbrU,YAAe,eACfuU,kBACG97B,IAAD,CACE0mB,OAAQ1mB,EAAM7D,QAAQ0vC,OAAOnlB,OAC7BihE,QAAS3nF,EAAMwE,OAAOA,OAASxE,EAAMwE,OAAOA,OAAOmjF,QAAU,GAC7D88B,OAAQzkH,EAAM7D,QAAQ5M,KAClByQ,EAAM7D,QAAQ5M,KAAK0U,YAAmBjE,EAAM7D,QAAQ5M,OACpD,GACJo1H,iBAAkB3kH,EAAM7D,QAAQ5M,KAC5B0U,YAAmBjE,EAAM7D,QAAQ5M,MACjC,GACJC,KAAMwQ,EAAM7D,QAAQ5M,KAAOyQ,EAAM7D,QAAQ5M,KAAK,SAAW,KAE3D,CAAEuxB,cAAWpD,mBAAeY,iBAdjBsd,CAgBb4oF,I,oKCnOa,SAASI,EAAmB5zH,EAAK8D,GAC9C,MAAM+vH,EAAU,CACd7uB,UAAW,CAAE5oG,MAAO,SAAU67B,MAAO,SAAUI,MAAO,UAAWr4B,OACjE8zH,QAAS,CAAE13H,MAAO,SAAU67B,MAAO,SAAUI,MAAO,UAAWr4B,OAC/D+kG,QAAS,CAAE3oG,MAAO,UAAW67B,MAAO,UAAWI,MAAO,UAAWr4B,OACjE+zH,QAAS,CAAE33H,MAAO,UAAW67B,MAAO,UAAWI,MAAO,UAAWr4B,OACjEg0H,UAAW,CAAE53H,MAAO,UAAW67B,MAAO,UAAWI,MAAO,UAAWr4B,OACnEi0H,QAAS,CAAE73H,MAAO,UAAW67B,MAAO,UAAWI,MAAO,UAAWr4B,OACjEk0H,OAAQ,CAAE93H,MAAO,SAAU67B,MAAO,SAAUI,MAAO,UAAWr4B,QAGhE,GAAIA,EAAK,CACP,MAAMtD,EAAM,IAAK,IAAMsD,EAAK,MAC5B,OAAItD,KAAOm3H,EACFA,EAAQn3H,GAGV,CAAEN,MAAOM,EAAKu7B,MAAOv7B,EAAK27B,MAAO,OAAQr4B,OAGlD,OAAI8D,KAAW+vH,EACNA,EAAQ/vH,GAGV,CAAE1H,MAAO0H,EAASm0B,MAAOn0B,EAASu0B,MAAO,OAAQr4B,O,irBCH1D,MAAM4Z,EAAWC,yBAAe,CAC9Bs6G,eAAgB,CAAF,2DAIdC,kBAAmB,CAAF,iDAMbC,EAAc99F,YAAe,cAAfA,CAA8B,IAA4B,IAA3B,SAAE7oB,GAAyB,EAAZ9J,EAAY,SAC5E,MAAM0wH,EAAiB,CACrBvR,WAAY,OACZlwB,YAAa,OACbp4D,QAAS,eACTD,gBAAiB52B,EAAM20B,YAAYn8B,MAAMi8B,OAAS,KAClDltB,QAAS,IACT8rB,OAAQ,OACRgD,MAAO,OACPjB,aAAc,QAEV,YAAEq7F,GAAgBzwH,EAAM2zB,YAAY1M,WAC1C,OACE,eAACwpG,EAAD,OAAiBzwH,GAAjB,cACE,sBAAMsI,MAAOooH,IACZ5mH,QAKDsqB,EAASzB,YAAe,cAAfA,CAA+B3yB,IAC5C,MAAM0wH,EAAiB,CACrBvR,WAAY,OACZlwB,YAAa,OACbp4D,QAAS,eACTD,gBACE52B,EAAM20B,YAAYn8B,MAAMA,QAAUwH,EAAMrF,KAAKnC,MACzCwH,EAAM20B,YAAYn8B,MAAMi8B,MACxB,KACNltB,QAAS,IACT8rB,OAAQ,OACRgD,MAAO,OACPjB,aAAc,MACdO,OACE31B,EAAM20B,YAAYn8B,MAAMA,QAAUwH,EAAMrF,KAAKnC,MACxC,aAAYwH,EAAMrF,KAAK85B,MACxB,OAGF,OAAEL,GAAWp0B,EAAK,YAAgBinB,WACxC,OACE,eAACmN,EAAD,OAAYp0B,GAAZ,cACE,sBAAMsI,MAAOooH,IACb,qBAAKpoH,MAAO,CAAE2mF,YAAa,QAA3B,SAAsCjvF,EAAMq0B,QAC3Cr0B,EAAMs0B,YAAct0B,EAAMu0B,YACzB,cAAC,KAAD,CAAMz8B,KAAM08B,IAAUlG,KAAK,OAAOmG,MAAM,YAEzCz0B,EAAMu0B,YAAc,cAAC,KAAD,CAAMz8B,KAAM08B,IAAUlG,KAAK,OAAOmG,MAAM,kBAK7DC,EAAoB/B,YAAe,cAAfA,CAA+B3yB,IACvD,MAAM,kBAAE00B,GAAsB10B,EAAM2zB,YAAY1M,WAChD,OACE,cAACyN,EAAD,OAAuB10B,GAAvB,IAA8B6lG,cAAY,2BAA1C,SACG7lG,EAAM20B,YAAYC,WACjB,cAAC,KAAD,CAAM98B,KAAM+8B,IAAOvG,KAAK,OAAOmG,MAAM,YAErC,cAAC,KAAD,CAAM38B,KAAMg9B,IAASxG,KAAK,OAAOmG,MAAM,iBAMzCQ,EAAeE,GAAD,OACfA,GADe,IAElBC,aAAc,EACdC,OAAQ,EAAF,KACDF,EAAME,QADL,IAEJC,UAAW,UACXC,QAAS,cAIPC,EAAqB,CACzBC,QAAS,CAACC,EAAQtqB,IAAT,OACJsqB,GADI,IAEPC,OAAQ,OACRC,aAAc,oBACdC,UAAW,OACXC,kBAAmB1qB,EAAMwpB,WAAa,SAAW,UAEnDoB,KAAM,CAACN,EAAQtqB,IAAT,OACDsqB,GADC,IAEJO,IAAK,KACLC,UAAW,EACXL,UAAW,OACXD,aAAc,sBAEhBQ,mBAAqBV,GAAD,OACfA,GADe,IAElBW,MAAO,OAETC,eAAiBZ,GAAD,KACXA,GAELiB,OAAQ,CAACjB,EAAQtqB,IAAT,OACHsqB,GADG,IAENkB,gBAAiB,KACjBvD,OAAQ,OACRwD,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,QAAS,YACTvC,MAAOrpB,EAAMmpB,WACT,UACAnpB,EAAMkpB,UACN,UACA,UACJ,UAAW,CACTsC,gBAAiB,SAUvB,MAAM+5F,UAAiBhoH,YAAU,+CAmCvB,CACN6/C,eAAgBhuD,KAAKwF,MAAMuH,QAAQ+5D,aAC/B0uD,EAAmB,KAAMx1H,KAAKwF,MAAMuH,QAAQ+5D,cAC5C,KAtCyB,sBAmEjB9Y,IACZhuD,KAAKwF,MAAM6uB,mBAAmBE,YAAgBy5B,EAAepsD,MAC7D5B,KAAKoqC,SAAS,CAAE4jB,mBAChBgX,QAAMjnD,QACJ,cAAC,KAAD,CACEA,SAAO,EACP9U,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASu6G,qBAzErB,uBA8EhB55F,IACb,MAAM+5F,EAAiB,CACrBvR,WAAY,OACZlwB,YAAa,OACbp4D,QAAS,eACTD,gBAAiBD,EAAOlC,OAAS,KACjCltB,QAAS,IACT8rB,OAAQ,OACRgD,MAAO,OACPjB,aAAc,OAEhB,OACE,eAAC,WAAD,WACE,sBAAM9sB,MAAOooH,IACb,sBAAMhmH,UAAU,qBAAhB,SAAsCisB,EAAOtC,aA5FpB,0BAiGbsC,IAChB,MAAM+5F,EAAiB,CACrBvR,WAAY,OACZlwB,YAAa,OACbp4D,QAAS,eACTD,gBACEp8B,KAAK4Q,MAAMo9C,eAAehwD,QAAUm+B,EAAOn+B,MAAQm+B,EAAOlC,MAAQ,KACpEltB,QAAS,IACT8rB,OAAQ,OACRgD,MAAO,OACPjB,aAAc,MACdO,OACEn7B,KAAK4Q,MAAMo9C,eAAehwD,QAAUm+B,EAAOn+B,MACtC,aAAYm+B,EAAOlC,MACpB,MAGR,OACE,eAAC,WAAD,WACE,sBAAMnsB,MAAOooH,IACb,sBAAMpoH,MAAO,CAAE2mF,YAAa,QAA5B,SAAuCt4D,EAAOtC,QAC9C,cAAC,KAAD,CAAMv8B,KAAM08B,IAAUlG,KAAK,cA7EjCyX,oBACEvrC,KAAKwF,MAAM4uB,YAAYp0B,KAAKwF,MAAM+N,UASpCu9B,iCAAiCxiC,GAC3BA,EAAUiF,WAAavT,KAAKwF,MAAM+N,UACpCvT,KAAKwF,MAAM4uB,YAAY9lB,EAAUiF,WAE9BvT,KAAKwF,MAAM8xB,QAAUhpB,EAAUgpB,SAClCt3B,KAAKwF,MAAM4uB,YAAY9lB,EAAUiF,UACjCvT,KAAKwF,MAAM0pB,WAAW5gB,EAAUiF,WAkEpC7D,SACE,MAAM,eAAEs+C,GAAmBhuD,KAAK4Q,OAC1B,YAAEwlH,GAAgBp2H,KAAKwF,MAAM2zB,YAAY1M,WACzCkiC,EAAS3uD,KAAKwF,MAAM2zB,YAAY2L,QAEtC,OACE,eAAC,WAAD,WACE,uBAAOw1B,QAAQ,eAAf,SACE,cAAC,mBAAD,CAAkB9yD,GAAG,QAAQukC,eAAe,YAE9C,cAAC4iB,EAAD,CACErxD,KAAK,eACL4S,UAAU,yBACVk/C,gBAAgB,eAChB3yB,YACGz8B,KAAKwF,MAAMuH,QAAQ+5D,cACc,IAAlC9mE,KAAKwF,MAAM84C,YAAYt8C,OAEzB+jB,QAAS,IACP/lB,KAAKwF,MAAM84C,YAAY/6C,IAAK86C,GAC1Bm3E,EAAmBn3E,EAAW,SAEhC,SACAl4C,OAAO6nD,GACT9yB,OAAQF,EACRL,MAAOF,EACPhO,WAAY,CACVyN,kBADU,EAEVk8F,cACAx8F,OAHU,EAIVq8F,YAAWA,GAEbpqF,SAAU7rC,KAAKq+C,WACf1D,aACE36C,KAAKwF,MAAMuH,QAAQ+5D,aACf9Y,EACA,CACEn0B,MAAO75B,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAASw6G,mBAEXh4H,MAAO,cAGfg3E,cAAc,Q,IAtKlBmhD,E,eA8BkB,CACpBtkF,QAAS,GACTyM,YAAa,KA6IF9R,sBACbC,aACAtU,YAAe,CAAC,gBAChBuU,kBACG97B,IAAD,CACE0mB,OAAQ1mB,EAAMwvC,SAAS/B,WAAW/mB,OAClCvqB,QAAS6D,EAAM7D,QAAQ5M,KACvB0xC,QAASjhC,EAAMwvC,SAASvO,QACxByM,YAAa1tC,EAAMwvC,SAAS9B,cAE9B,CAAEpvB,eAAYkF,gBAAaC,0BAVhBmY,CAYb2pF,I,+QC9SaE,MArCU7wH,GAMrB,sBACE0K,UAAW24B,IAAMrjC,EAAM6pG,cAAR,kBAAwC,CACrD,oBAAqB7pG,EAAMwkE,aAE7Bl8D,MAAO,CACL6uB,KAAMn3B,EAAMyjE,WAAWvjE,QAClB,OAAMF,EAAMyjE,WAAWvjE,QAAQypD,wBAAwBtzB,UACxD,MAPR,UAUE,yBAAQ3rB,UAAU,gBAAlB,UACE,wBAAQyvB,QAhBd,WACEn6B,EAAMukE,mBAeF,SACE,cAAC,KAAD,CAAMzsE,KAAMsuC,IAAS9X,KAAK,WAE5B,qBAAK5jB,UAAU,qBACf,6BAAK1K,EAAM8wH,gBAAkB9wH,EAAM6pG,mBAEpC7pG,EAAM8J,Y,kJCab,MAAMkM,EAAWC,yBAAe,CAC9Bg9B,KAAM,CAAF,iCAIJg4E,SAAU,CAAF,yCAIRngH,IAAK,CAAF,+BAIHmyE,KAAM,CAAF,iCAIJ/a,cAAe,CAAF,qDAIb6uD,cAAe,CAAF,qDAIbpxD,oBAAqB,CAAF,iEAInBT,oBAAqB,CAAF,iEAInB8xD,WAAY,CAAF,6CAIVhmE,KAAM,CAAF,iCAIJ9iD,KAAM,CAAF,iCAIJ+oH,SAAU,CAAF,2CAIRrnG,KAAM,CAAF,iCAIJzS,KAAM,CAAF,iCAIJqgC,OAAQ,CAAF,uCAMF05E,EAAoB,CACxBhvD,cAAe,CAAEh7C,UAAWo9C,IAAe6sD,QAAS,MACpDl0C,KAAM,CAAE/1D,UAAWy7C,IAAMwuD,QAAS,MAClCz4E,MAAO,CAAExxB,UAAWkqG,IAAOD,QAAS,KAAME,gBAAgB,GAC1DjtD,QAAS,CACPl9C,UAAWo5C,IACX6wD,QAASN,EACTS,aAAct7G,EAAS2pD,oBACvB4xD,iBAAiB,GAEnBptD,YAAa,CACXj9C,UAAWm4C,IACX8xD,QAASN,EACTS,aAAct7G,EAASkpD,oBACvBqyD,iBAAiB,IASrB,MAAMC,UAAgB7oH,YAmDpBzO,YAAY8F,GACVmkC,MAAMnkC,GADW,yBAFH+G,IAAM++B,aAEH,wBAoDJ,KACb,MAAM,QAAE1rC,GAAYI,KAAKwF,MACzB5F,EAAQ2B,IAAI,oBAAqBvB,KAAK4Q,MAAM4tC,SAAU1rC,eACtD9S,KAAKoqC,SACFx5B,IAAD,CAAc4tC,UAAW5tC,EAAM4tC,WAC/B,IAAMx+C,KAAKwF,MAAMwnB,mBAAmBhtB,KAAK4Q,MAAM4tC,aAzDhC,qBA6DP,IACVx+C,KAAKoqC,SAAS,KAAM,CAAG6sF,UAAU,EAAOC,iBAAkB,OA9DzC,yBAgEF92H,IACf,MAAM,iBAAE82H,GAAqBl3H,KAAK4Q,MAC7B5Q,KAAK4Q,MAAMsmH,iBAAiB9mH,SAAShQ,IACxCJ,KAAKoqC,SAAS,CACZ8sF,iBAAkB,IAAIA,EAAkB92H,GACxC22H,gBAAiBL,EAAkBt2H,GAAM22H,kBAAmB,MArE/C,2BA0ED,KAChB/2H,KAAKoqC,SAAUx5B,IAAD,CACZsmH,iBAAkBtmH,EAAMsmH,iBAAiBhsH,MAAM,GAAI,GACnD6rH,gBACEL,EACE9lH,EAAMsmH,iBAAiBtmH,EAAMsmH,iBAAiBl1H,OAAS,IACvD+0H,kBAAmB,OAhFR,sBAoFN,CAAC/5H,EAAGsrE,KACXtoE,KAAK4Q,MAAMqmH,SACbj3H,KAAKilE,aAIU,kBAAbqD,EACFtoE,KAAKoqC,SAAUx5B,IAAD,CACZqmH,UAAWrmH,EAAMqmH,SACjBE,UAAW,CAAEjrB,OAAQ,MAGvBlsG,KAAKoqC,SAAUx5B,IAAD,CACZqmH,UAAWrmH,EAAMqmH,SACjBE,UAAW,CAAE17F,IAAK,MAGtBz7B,KAAKuoE,cAAcD,MArGF,8BAwGGtrE,IAChBgD,KAAKo3H,QAAUzzG,+BAAqB3jB,KAAKo3H,OAAQp6H,IACrDgD,KAAKilE,cA1GY,kBA6GTjoE,IACRgD,KAAKwF,MAAMwqB,cAAcoN,YAAWp9B,KAAKwF,MAAM+N,WAAW,KA5G1D,MAAQ3T,WAAY4F,EACpBxF,KAAK4Q,MAAQ,CACX4tC,SAA8C,UAApC5+C,EAAQhC,IAAI,oBACtBq5H,UAAU,EACVE,UAAW,GACXE,eAAgB,GAChBH,iBAAkB,GAClBH,iBAAiB,GASrBxrF,oBACEvrC,KAAKwF,MAAMqnB,YAAYuQ,YAAWp9B,KAAKwF,MAAM+N,WAC7CvT,KAAKwF,MAAMysB,SAASmL,YAAWp9B,KAAKwF,MAAM+N,WAC1CvT,KAAKwF,MAAMwnB,mBAAmBhtB,KAAK4Q,MAAM4tC,UACzC10C,SAAS+Z,iBAAiB,YAAa7jB,KAAKwoE,oBAAoB,GASlE13B,iCAAiCxiC,GAC3BA,EAAUiF,WAAavT,KAAKwF,MAAM+N,WACpCvT,KAAKwF,MAAMqnB,YAAYuQ,YAAW9uB,EAAUiF,WAC5CvT,KAAKwF,MAAMysB,SAASmL,YAAW9uB,EAAUiF,YAIvCvT,KAAKwF,MAAM8xH,cAAcv7E,SAAWztC,EAAUgpH,cAAchgG,QAC9Dt3B,KAAKwF,MAAMqnB,YAAYuQ,YAAW9uB,EAAUiF,WAShDkgD,uBACE3pD,SAASga,oBAAoB,YAAa9jB,KAAKwoE,oBAAoB,GAqErE94D,SAAS,UACP,MAAMzP,EAAOm9B,YAAWp9B,KAAKwF,MAAM+N,UAC7BwpC,EAAI,UAAG/8C,KAAKwF,MAAMuH,eAAd,aAAG,EAAoBgwC,KAC3Bw6E,GACJx6E,aAAA,EAAAA,EAAMyhC,UAAUzhC,aAAhB,EAAgBA,EAAM0hC,aAAa1hC,aAAA,EAAAA,EAAMusB,WAAYtpE,KAAKwF,MAAMugE,OAC5D8C,GACH0uD,GAAgB,IAAKv3H,KAAKwF,MAAMurC,QAAQtyC,OAAQ,CAAE+I,GAAI,SACnDqsH,EAAuB,IAAK7zH,KAAKwF,MAAMurC,QAAQtyC,OAAQ,CAC3D+I,GAAI,oBAEA,SAAEg3C,GAAax+C,KAAK4Q,MAE1B,OACE5Q,KAAKwF,MAAMqN,OACT,qCACE,cAAC,IAAD,CACE3C,UAAWsuC,EAAW,cAAgB,0BAExC,sBACE1wC,MAAO9N,KAAK4Q,MAAMumH,UAClBjnH,UACElQ,KAAK4Q,MAAMqmH,SAAW,uBAAyB,kBAEjD3zG,IAAKtjB,KAAKw3H,cALZ,UAOGx3H,KAAK4Q,MAAMqmH,UAEV,cAAC,IAAD,CAAW/mH,UAAU,0BAEvB,qBACEA,UAAU,gBACVoT,IAAM2uB,GAAUjyC,KAAKo3H,OAASnlF,EAC9BnkC,MAAO,CACL2pH,UAAWz3H,KAAKw3H,cAAc9xH,QACzB,gBACE1F,KAAK4Q,MAAMsmH,iBAAiBl1H,OAAS,GACtChC,KAAKw3H,cAAc9xH,QAAQypD,wBAAwBtzB,WAErD,MATR,SAYG77B,KAAK4Q,MAAMsmH,iBAAiB3zH,IAAI,CAACmpB,EAAW7gB,IAC3C,MACE,MAAM6rH,EACJhB,EAAkBhqG,GAAWA,UACzBirG,EAAmBjB,EAAkBhqG,GAAWiqG,QAChDiB,EACJlB,EAAkBhqG,GAAWqqG,gBACzB9tH,EACJytH,EAAkBhqG,GAAWoqG,cAC7B92H,KAAKwF,MAAM++B,KAAK5jB,cACd+1G,EAAkBhqG,GAAWoqG,cAEjC,OAAIa,EAEA,cAACA,EAAD,CACEtoB,cAAe3iF,EACf4pG,eAAgBrtH,EAChBsK,SAAUvT,KAAKwF,MAAM+N,SACrBg1D,cAAevoE,KAAKuoE,cACpBwB,gBAAiB/pE,KAAK+pE,gBACtB8tD,eAAgBhsH,EAChBo9D,WAAYjpE,KAAKw3H,cAEjBvyD,UAAWjlE,KAAKilE,UAChB+E,WAAY4tD,EAVd,SAYE,cAACF,EAAD,CACEnkH,SAAUvT,KAAKwF,MAAM+N,SACrBg1D,cAAevoE,KAAKuoE,cACpBwB,gBAAiB/pE,KAAK+pE,gBACtB8tD,eAAgBhsH,EAChBo9D,WAAYjpE,KAAKw3H,cACjBvyD,UAAWjlE,KAAKilE,UAChB6yD,mBAAiB,KAXb,0BAAyBjsH,GAiBjC,cAAC6rH,EAAD,CACEnkH,SAAUvT,KAAKwF,MAAM+N,SACrBg1D,cAAevoE,KAAKuoE,cACpBwB,gBAAiB/pE,KAAK+pE,gBACtB8tD,eAAgBhsH,EAChBo9D,WAAYjpE,KAAKw3H,cAEjBvyD,UAAWjlE,KAAKilE,UAChBl4D,QACE2pH,EAAkBhqG,GAAWmqG,eACzB72H,KAAKwF,MAAMuH,QACX,MALA,0BAAyBlB,IA5CvC,SA0DN,sBAAKqE,UAAWlQ,KAAK4Q,MAAM4tC,SAAW,mBAAqB,UAA3D,UACE,sBAAKtuC,UAAU,eAAf,UACE,sBAAKA,UAAU,kBAAf,UACGlQ,KAAKwF,MAAMqkF,wBAA0B7pF,KAAKwF,MAAM2sC,OAC/C,mCAAGnyC,KAAKwF,MAAM2sC,SAEdnyC,KAAKwF,MAAMqkF,wBACX,qCACG0tC,GACC,wBACEplH,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,EAASwhC,QAEX9sC,UAAU,SACVyvB,QAAU3iC,GAAMgD,KAAKg9C,OAAOhgD,GAC5Bq9C,SAAU,EANZ,SAQE,cAAC,KAAD,CACE/8C,KAAMy6H,IACNjkG,KAAK,OACL5jB,UAAU,SACVjH,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASwhC,YAKnD6rB,GACC,cAAC,OAAD,CACE12D,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,EAASi9B,MAEXvoC,UAAU,OACVihC,GAAOlxC,EAAF,QALP,SAOE,cAAC,KAAD,CACE3C,KAAM06H,IACNlkG,KAAK,OACL5jB,UAAU,UACVjH,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASi9B,UAInDz4C,KAAKwF,MAAMuH,SACV/M,KAAKwF,MAAMuH,QAAQ67B,cACnBirF,IACC7zH,KAAKwF,MAAM+N,SAAS0kH,SAAS,cAC5B,cAAC,OAAD,CACE9lH,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,EAASi1G,UAEXt/E,GAAOlxC,EAAF,YAJP,SAME,cAAC,KAAD,CACE3C,KAAMouC,IACN5X,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAASi1G,cAKlBzwH,KAAKwF,MAAMuH,SACV/M,KAAKwF,MAAMuH,QAAQ67B,cACnBirF,GACA7zH,KAAKwF,MAAM+N,SAAS0kH,SAAS,cAC3B,cAAC,OAAD,CACE9mF,GAAK,GAAElxC,EACPkS,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,EAASmB,MAHb,SAME,cAAC,KAAD,CACErf,KAAMk9B,IACNtqB,UAAU,mBACV4jB,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASmB,UAIrD3c,KAAKwF,MAAMuH,UACR/M,KAAKwF,MAAMuH,QAAQ67B,cACnB5oC,KAAKwF,MAAM04C,MAAMl8C,OAAS,GACzBnB,IAAOD,SAAS8uB,gBACf1vB,KAAKwF,MAAMuH,QAAQ,eAAes9D,eACpC,wBACEn6D,UAAU,MACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,EAASlL,KAEXqvB,QAAU3iC,GAAMgD,KAAKk4H,WAAWl7H,EAAG,SACnCq9C,SAAU,EACV7yC,GAAG,cAPL,SASE,cAAC,KAAD,CACElK,KAAMghE,IACNxqC,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASlL,SAItD,qBAAKJ,UAAU,0BACf,yBACEA,UAAU,OACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASinE,MACnD9iD,QAAU3iC,GAAMgD,KAAKk4H,WAAWl7H,EAAG,QACnCq9C,SAAU,EACV7yC,GAAG,eALL,UAOE,cAAC,KAAD,CACE0I,UAAU,gBACV5S,KAAMmqG,IACN3zE,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAASinE,QAE/CziF,KAAK4Q,MAAMqmH,SACV,cAAC,KAAD,CACE/mH,UAAU,cACV5S,KAAMk9B,IACN1G,KAAK,SAGP,cAAC,KAAD,CACE5jB,UAAU,cACV5S,KAAMmqG,IACN3zE,KAAK,kBAOjB,sBAAK5jB,UAAU,iBAAf,UACE,cAAC+vB,EAAA,EAAD,CAAW3iC,KAAK,yBACd0C,KAAKwF,MAAMqkF,wBACX,wBACE35E,UAAU,OACViC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,EAASksD,eAEX/nC,QAAU3iC,GAAMgD,KAAKk4H,WAAWl7H,EAAG,iBACnCq9C,SAAU,EACV7yC,GAAG,mBAPL,SASE,cAAC,KAAD,CACElK,KAAM4rE,IACNp1C,KAAK,OACL7qB,MAAOjJ,KAAKwF,MAAM++B,KAAK5jB,cACrBnF,EAASksD,yBAOrB,qBAAKx3D,UAAU,kBAAf,SACE,wBACEiC,aAAYnS,KAAKwF,MAAM++B,KAAK5jB,cAC1BnF,EAAS+6G,eAEXrmH,UAAW24B,IAAG,CACZ,WAAC7oC,KAAKwF,MAAMuH,eAAZ,aAAC,EAAoB+5D,cAArB,UAAoC9mE,KAAKwF,MAAMuH,eAA/C,aAAoC,EAChC+5D,eAENnnC,QAAS3/B,KAAKm4H,oBAIpB,qBAAKjoH,UAAU,e,IApbnB8mH,E,eAwCkB,CACpBjmF,QAAS,KACTl+B,MAAO,KACPkzD,OAAQ,KACRh5D,QAAS,KACT88E,wBAAwB,EACxB3rC,MAAO,KA6YI1R,sBACbC,aACAy4B,cACAx4B,kBACE,CAAC97B,EAAOpL,KAAR,CACEurC,QAASngC,EAAMmgC,QAAQA,QACvBl+B,MAAOjC,EAAMgC,YAAYC,MACzBkzD,OAAQn1D,EAAMgC,YAAYC,MACtBG,IAAUpC,EAAMgC,YAAYC,OAAOszD,IACnC,GACJp5D,QAAS6D,EAAM7D,QAAQ5M,KACvBoT,SAAU/N,EAAM+N,SAChB2qC,MAAO,IAAOttC,EAAMstC,MAAMA,MAAO,WACjCo5E,cAAe1mH,EAAM7D,QAAQiwC,SAE/B,CAAE/qB,aAAUpF,gBAAaG,wBAAoBgD,qBAflCwc,CAiBbwqF,I,ivBChkBF,MAAMx7G,EAAWC,yBAAe,CAC9Bi9B,OAAQ,CAAF,uCAuDOjM,2BAjDWjnC,IACxB,MAIM,KAAE++B,EAAF,WAAQkpC,EAAR,SAAoBqK,EAApB,SAA8BxoE,GAAa9J,GAC3C,MAAE0kC,EAAF,SAAS5G,EAAT,KAAmBljC,EAAnB,cAAyBg4H,EAAzB,KAAwCj4H,EAAxC,SAA8CkuE,GAAaZ,EAC3D4qD,EAAU/0F,IANKnjC,MACVA,EAAK0hC,SAAWM,YAAchiC,IAASqF,EAAMioE,WAAWY,UAKtCiqD,CAAYn4H,GAEnCwb,EAAWmoF,IAAU3jG,EAAKwb,UAC5Bxb,EAAKwb,SACLvL,IAASvP,IAAOqrB,OAAOy+F,eAAgBvqH,GAE3C,OACE,yBACEkjB,IAAKw0D,EAAS5D,UACV4D,EAAS3D,gBAFf,IAGEjkE,UAAY,gBAAe/P,EAAK,SAHlC,SAKE,sBAAK2N,MAAO,CAAE81C,SAAU,YAAxB,UACE,yBACE91C,MAAO,CACLiqE,WAAYsgD,EAAU,UAAY,SAClCh8F,QAAS,iBAEPy7C,EAAS1D,iBALf,IAMElkE,UAAU,sBANZ,SAQE,cAAC,KAAD,CAAM5S,KAAM06E,IAASlkD,KAAK,YAE5B,sBAAK5jB,UAAY,uBAAsB9P,EAAvC,UACGkP,EACAg0B,IAAa3nB,GAAY0yD,GACxB,cAAC,SAAD,CACEhlC,MAAI,EACJD,OAAK,EACLzJ,QAAS,IAAMy4F,EAAcluF,GAAO,GACpCh6B,UAAU,gBACViC,aAAYoyB,EAAK5jB,cAAcnF,EAASk9B,QAL1C,SAOE,cAAC,KAAD,CAAMp7C,KAAM+gE,IAAUvqC,KAAK,sB,6OC6J1BykG,IApMK/yH,IAClB,MAAM,SACJ+N,EADI,cAEJu5D,EAFI,WAGJz3D,EAHI,iBAIJwuF,EAJI,cAKJJ,EALI,cAMJ50B,EANI,cAOJF,EAPI,cAQJ+wB,EARI,eASJC,EATI,MAUJ12F,EAVI,YAWJ24B,EAXI,SAYJ0Z,EAZI,OAaJ6yB,EAbI,SAcJ7+D,EAdI,WAeJi1F,GAAa,EAfT,aAgBJjiE,EAAezhC,IAAOqrB,OAAOoW,aAhBzB,SAiBJ+rC,GAAW,GACT7oE,EAEEgzH,EAAYj2F,YAAUltB,GAEtBlC,EAAW6jB,wBAOX1T,EAAMN,aAAsB,CAChCC,YAN2B,KAC3B0rD,EAAc,MACdx7D,EAAS2hB,aAAc,KAKvBzR,YAAa,CAAC,UAEdH,cAAc,EACdC,aAAcohF,IAGV31B,EAAgB,CACpB5xE,EACA6O,EACAq+B,EACA+H,GAEEwmF,gBAAe,EACfC,kBAAiB,EACjBC,oBAAmB,GACjB,MAEJ,MAAMlqD,EAAsBzxE,EAAE0xE,SAChB,YAAV1xE,EAAEsB,KAAsBo6H,IAC1BE,EAAqB1uF,EAAO+H,EAAMw8B,GAClCzxE,EAAE6oB,kBAEU,cAAV7oB,EAAEsB,KAAwBq6H,IAC5BE,EAAiB3uF,EAAO+H,EAAMw8B,GAC9BzxE,EAAE6oB,kBAEU,UAAV7oB,EAAEsB,KAAoBm6H,IACxBrmB,EAAWvxG,IAAOD,SAASqiC,iBAAkBp3B,EAAQ,GACrD7O,EAAE6oB,mBAIA+yG,EAAuB,CAC3B/0F,EACAqqC,EACAO,KAEA,MAAM0S,EAAOn9C,aAAgB3uB,EAAYwuB,GAC5B,OAATs9C,IAEJjT,EAAU4qD,OAEVnqD,EAAcwS,EAAM1S,KAGhBoqD,EAAmB,CAACh1F,EAAcqqC,EAAWO,KACjD,MAAM74B,EAAOhS,YAAYvuB,EAAYwuB,GACxB,OAAT+R,IAEJs4B,EAAU4qD,OAEVnqD,EAAc/4B,EAAM64B,KAGhBgxB,EAAgB,CAACj4F,EAAIxJ,KACzB,MAAMglC,EAAcO,YAAYluB,EAAY7N,EAAIxJ,GAChD6lG,EAAiB7gE,IAGbw8D,EAAgB,CAACh4F,EAAIxJ,EAAO0H,KAChC,MAAOqzH,EAAO/1F,GAAeS,YAAYpuB,EAAY7N,EAAIxJ,EAAO0H,GAEhE,OADAm+F,EAAiB7gE,GACV+1F,GAGH3mB,EAAa,CAAChyG,EAAMyL,KACxB,GAAIwiE,EAAU,CACZ,MAAO7mE,EAAIw7B,GAAetnB,YAASrG,EAAYjV,EAAMyL,GAErD,OADAg4F,EAAiB7gE,GACVx7B,IAILmjC,EAAgB,CAACnjC,EAAIxJ,KACzB,MAAMglC,EAAcW,YAAYtuB,EAAY7N,EAAIxJ,GAChD6lG,EAAiB7gE,IAGbo1F,EAAgB,CAAC5wH,EAAIwxH,KACzB,MAAMC,EAAWj1F,aAAgB3uB,EAAY7N,GAEvCw7B,EAAcH,YAAYxtB,EAAY7N,GAC5Cq8F,EAAiB7gE,GAEjB2rC,EAAcqqD,EAAaC,EAAW,OAGlCC,EAAc,CAACC,EAAWC,KAC9B,MAAMp2F,EAAcN,YAAUrtB,EAAY8jH,EAAWC,GACrDv1B,EAAiB7gE,IASbq2F,EAAmB/pH,GANG,GAAGwoE,YAAYwhD,EAAW7rD,IACpD,cAAC,EAAD,CAAkBqK,SAAUA,EAAUrK,WAAYA,EAAlD,SACG6rD,KAML,OACE,qBAAKppH,UAAU,cAAcoT,IAAKA,EAAlC,SACE,0BAAUpT,UAAU,YAAY44B,UAAWulC,EAA3C,SACE,cAAC,IAAD,CACEsJ,UAAW6gD,EACX5gD,WAAa/jE,IACX,MAAM,OAAEsZ,EAAF,YAAUwV,GAAgB9uB,EAChC,IAAK8uB,EACH,OAEF,MAAMK,EAAcN,YAClBrtB,EACA8X,EAAOthB,MACP82B,EAAY92B,OAGd,OADAg4F,EAAiB7gE,IACV,GAbX,SAgBIu2F,IACA,MAAM,MAAE9qH,EAAF,QAASopE,EAAT,MAAkBhsE,GAAU0tH,EAC5B9rD,EAAa,CACjBiyB,gBACAC,iBACAz1D,MAAO2tC,EACP13E,KAAMsO,EACNmgE,gBACApnE,GAAIqwE,EACJ2hD,UAAWvwH,EACXwwH,gBAAiB73F,EACjB/1B,QACAsiE,SACAikC,aACA5S,gBACA70D,gBACAmiC,gBACA+2B,mBACAu0B,gBACAS,mBACAD,uBACAM,cACAz5B,gBACA9wB,gBACAp7D,WACA+nC,WACAjmC,aACAitB,eACAgB,SAAUmgE,IAAkB5rB,EAC5BhJ,cAAeA,aAAF,EAAEA,EAAez+D,SAASynE,GACvCz3E,KAAMqO,EAAM,SACZ4/D,YAEF,OAAOgrD,EACLE,EACA,cAACxlF,EAAA,E,iWAAD,IAA6B05B,GAAboK,GAChBpK,Y,iwBC3Md,MAAMjyD,EAAWC,yBAAe,CAC9Bs+D,MAAO,CAAF,iCAILD,OAAQ,CAAF,mCAIND,MAAO,CAAF,uCAgEQgL,MA1DS,EAAGl6C,gBAAexqC,OAAM+pC,QAAOpB,eAOrD,SAAS4wF,EAAY5lG,GACnB6W,EAAcT,EAAD,OACR/pC,GADQ,IAEX2zB,UAIJ,MAAMyQ,EAAOkE,oBAEb,OACE,sBAAKv4B,UAAU,mBAAf,UACE,cAAC,SAAOwqB,MAAR,UACE,cAAC,SAAD,CACE2O,MAAI,EACJD,OAAK,EACLj3B,aAAYoyB,EAAK5jB,cAAcnF,EAASu+D,OACxCp6C,QAAS,IAAM+5F,EAAY,KAC3BxrF,OAAsB,MAAd/tC,EAAK2zB,KACbgV,SAAUA,EANZ,SAQE,qBAAK54B,UAAU,mBAAf,mBAGJ,cAAC,SAAOwqB,MAAR,UACE,cAAC,SAAD,CACE2O,MAAI,EACJD,OAAK,EACLj3B,aAAYoyB,EAAK5jB,cAAcnF,EAASs+D,QACxCn6C,QAAS,IAAM+5F,EAAY,KAC3BxrF,OAAsB,MAAd/tC,EAAK2zB,KACbgV,SAAUA,EANZ,SAQE,qBAAK54B,UAAU,mBAAf,mBAGJ,cAAC,SAAOwqB,MAAR,UACE,cAAC,SAAD,CACE2O,MAAI,EACJD,OAAK,EACLj3B,aAAYoyB,EAAK5jB,cAAcnF,EAASq+D,OACxCl6C,QAAS,IAAM+5F,EAAY,KAC3BxrF,OAAsB,MAAd/tC,EAAK2zB,WAA8B3uB,IAAdhF,EAAK2zB,KAClCgV,SAAUA,EANZ,SAQE,qBAAK54B,UAAU,mBAAf,uB,ikBCjDV,MAAMsL,EAAWC,yBAAe,CAC9Bq6C,MAAO,CAAF,mCAIL43C,OAAQ,CAAF,qCAINC,QAAS,CAAF,yCAIPgsB,YAAa,CAAF,oFAIXC,oBAAqB,CAAF,kFAInBhsB,MAAO,CAAF,2CAILjrB,OAAQ,CAAF,uCAIN1e,iBAAkB,CAAF,2DAIhB4pC,gBAAiB,CAAF,2DAIfC,YAAa,CAAF,iDAIXh6E,KAAM,CAAF,mCAyOS2Y,yBAnOM,EACnBtsC,OACA+pC,QACAS,gBACAsC,oBACAtxB,YAAW,EACX++D,iBACAn2C,WAEA,MAAOgpE,EAAgBC,GAAqBnpF,mBAAS,GASrD,OACE,eAAC,UAAQqW,MAAT,CAAe+Q,QAAM,EAArB,UACE,wBAAQv7B,UAAU,gBAAlB,SACE,6BACE,cAAC,mBAAD,CAAkB1I,GAAG,QAAQukC,eAAe,eAI9C5rC,EAAKyB,KACL,mCACE,eAAC,UAAD,CAASsO,UAAU,6BAA6Bg8B,WAAS,EAAzD,UACE,cAAC,mBAAD,CACE1kC,GAAG,oBACHukC,eAAe,sBAEjB,cAAC,KAAD,CAAMzuC,KAAMywG,IAAUj6E,KAAK,QAAQmG,MAAM,iBAI9C95B,EAAKyB,KACJ,qCACE,eAAC,UAAD,CAASsO,UAAU,6BAA6Bg8B,WAAS,EAAzD,UACG/rC,EAAKyB,IAAIwI,MAAM,KAAKc,OAAO,GAAG,GAC9BozB,YAAcn+B,EAAKyB,MAClB,qBACEorD,IAAQz4B,YAAgBp0B,EAAKyB,KAAvB,uBACNkpC,IAAK3qC,EAAK2qC,OAGZxM,YAAcn+B,EAAKyB,MACnB,qBAAKorD,IAAK7sD,EAAKyB,IAAKkpC,IAAK3qC,EAAK2qC,IAAKh9B,MAAO,CAAE+tB,MAAO,YAGvD,eAAC,UAAD,CAAS3rB,UAAU,0BAAnB,UACGouB,YAAcn+B,EAAKyB,MAClB,cAAC,KAAD,CACE4F,GAAG,SACHyB,MAAOs7B,EAAK5jB,cAAcnF,EAASkyF,QACnC/xF,UAAU,EACV3d,MAAOmC,EAAKyB,IAAI6C,QAAQ,MAAO,IAAI2F,MAAM,KAAKc,OAAO,GAAG,GACxDm+B,KAAMlpC,EAAKyB,IAAM44B,IAAWwf,IAC5BC,WACE95C,EAAKyB,IACD,KACE84E,IACA/vC,EAAcT,EAAD,EAAC,KACT/pC,GADQ,IAEXyB,IAAK,OAGT,IAAMqrC,IAEZpB,SAAU,UAGZvN,YAAcn+B,EAAKyB,MACnB,cAAC,KAAD,CACE4F,GAAG,WACHyB,MAAOs7B,EAAK5jB,cAAcnF,EAASsyF,aACnCnyF,UAAU,EACV3d,MAAOmC,EAAKyB,IACZynC,KAAM7O,IACNyf,WAAY,KACVygC,IAEA/vC,EAAcT,EAAD,EAAC,KACT/pC,GADQ,IAEXyB,IAAK,OAGTiqC,SAAU,SAGd,cAAC,KAAD,CACErkC,GAAG,MACHyB,MAAOs7B,EAAK5jB,cAAcnF,EAASmyF,SACnC/rE,YACE,qCACE,mBACElwB,KAAK,yDACLzI,MAAOs7B,EAAK5jB,cAAcnF,EAASyoD,kBACnC72C,OAAO,SACP3b,IAAI,sBAJN,SAMG8yB,EAAK5jB,cAAcnF,EAASo+G,uBAC1B,IACJr1F,EAAK5jB,cAAcnF,EAASm+G,gBAGjCh+G,UAAU,EACV3d,MAAOmC,EAAK2qC,KAAO,GACnBzB,KAAMlpC,EAAK2qC,IAAMtQ,IAAW,KAC5Byf,WAAY,IACVtP,EAAcT,EAAD,EAAC,KACT/pC,GADQ,IAEX2qC,IAAK,MAGTe,SAAU,CAACguF,EAAO77H,KAChB2sC,EAAcT,EAAD,EAAC,KACT/pC,GADQ,IAEX2qC,IAAK9sC,QAIX,cAAC,OAAKk8D,MAAN,CAAYC,QAAM,EAACx+C,SAAUA,EAA7B,SACE,cAAC,OAAD,UACE,eAAC,OAAKy+C,IAAN,WACE,cAAC,OAAK3D,OAAN,CAAa56B,MAAM,IAAnB,SACE,qBAAK3rB,UAAU,UAAf,SACE,uBAAOoqD,QAAQ,cAAf,SACE,cAAC,mBAAD,CACE9yD,GAAG,YACHukC,eAAe,oBAKvB,cAAC,OAAK0qB,OAAN,CAAa56B,MAAM,IAAI3rB,UAAU,cAAjC,SACE,cAAC4pH,EAAA,EAAD,CACE9rF,MAAO7tC,EAAK6tC,MACZrD,cAAe,CAACT,EAAO/pC,KACrBwqC,EAAcT,EAAD,EAAC,KACT/pC,GADQ,IAEX2zB,KAAM3zB,EAAK2zB,SAGf3zB,KAAMA,EACN+pC,MAAOA,aAMjB,cAAC,KAAD,CACE1iC,GAAG,aACHyB,MAAOs7B,EAAK5jB,cAAcnF,EAASsY,MAFrC,SAIE,cAAC,EAAD,CACE6W,cAAeA,EACfxqC,KAAMA,EACN+pC,MAAOA,SAIb,eAAC,YAAD,CAAW2jC,OAAK,EAACC,QAAM,EAAC59D,UAAU,OAAlC,UACE,eAAC,YAAU69D,MAAX,CACE7/B,OAA2B,IAAnBq/D,EACR1hG,MAAO,EACP8zB,QA5JZ,SAAwB3iC,EAAGsjG,GACzB,MAAM,MAAEz0F,GAAUy0F,EAGlBkN,EAFiBD,IAAmB1hG,GAAS,EAAIA,IAuJzC,0BAMsB,IAAnB0hG,EACC,cAAC,KAAD,CAAMjwG,KAAM+8B,IAAOvG,KAAK,SAExB,cAAC,KAAD,CAAMx2B,KAAMg9B,IAASxG,KAAK,YAG9B,eAAC,YAAUsqC,QAAX,CAAmBlwB,OAA2B,IAAnBq/D,EAA3B,UACE,cAAC,KAAD,CACE/lG,GAAG,OACHyB,MAAOs7B,EAAK5jB,cAAcnF,EAASmnE,QACnChnE,UAAU,EACV3d,MAAOu2B,YAAgBp0B,EAAKuR,MAC5B23B,KAAMlpC,EAAKuR,KAAO8oB,IAAWwf,IAC7BC,WACE95C,EAAKuR,KACD,KACEi5B,EAAcT,EAAD,EAAC,KACT/pC,GADQ,IAEXuR,KAAM,OAGV,IAAMu7B,EAAkB,CAAE/uC,KAAM,SAEtC2tC,SAAU,CAACvuC,EAAMU,KACf2sC,EAAcT,EAAD,EAAC,KACT/pC,GADQ,IAEXuR,KAAM6iB,YAAgBv2B,SAI5B,cAAC,IAAD,CACEwJ,GAAG,mBACHyB,MAAOs7B,EAAK5jB,cAAcnF,EAASyoD,kBACnCjmE,QAAOmC,EAAK8jE,kBAAmB9jE,EAAK8jE,iBACpCp4B,SAAU,CAACvuC,EAAMU,KACf2sC,EAAcT,EAAD,EAAC,KACT/pC,GADQ,IAEX8jE,iBAAkBjmE,uB,8BCnRtC,8EASA+7H,YAAW54E,GAEI,SACb,MAAMjM,EAAS8kF,IAAKC,aAAaC,WAE3BlR,EAAOhqH,QAAQwR,IAAIy4G,MAAQ,IAC3BkR,EAAen7H,QAAQwR,IAAI4pH,qBAAuB,UAExD,IAAIC,EAAaH,UAuBjB,OArBAhlF,EACGoW,OAAO09D,EAAMmR,EAAc,KACtBD,UAAIh5H,UAAYg5H,UAAI/oH,WAAc+oH,UAAIh5H,QAGxCiH,QAAQmyH,IAAK,oCAAmCJ,UAAIh5H,SAFpDiH,QAAQmyH,IAAK,qCAQfnyH,QAAQmyH,IAAK,uBAAsBH,KAAgBnR,QAE9ChqH,QAAQwR,IAAI04G,mBACfr0E,IAAM,SAANA,CAAiB,uBAAsBqlF,UAAI/oH,aAE9C4d,GAAG,QAAU/xB,IAEZ,MADAmL,QAAQyL,MAAM5W,EAAEslB,SACVtlB,IAGH,KACLmL,QAAQmyH,IAAI,+BAEZ39H,EAAO49H,IAAIC,OAAO,WAAY,KAC5BryH,QAAQmyH,IAAI,mCACZplF,EAAOulF,eAAe,UAAWJ,GACjC,MAAMK,EAASv7H,EAAQ,IAAY2lC,QACnCoQ,EAAOnmB,GAAG,UAAW2rG,GACrBL,EAAaK,Q,oCChDnB/9H,EAAOD,QAAUyC,QAAQ,S,spBCkCVstC,yBAdMjnC,IACnB,MAAM,GAAEgC,EAAF,SAAMqkC,EAAN,MAAgB7tC,GAAUwH,EAChC,OACE,cAAC,KAAD,OAAsBA,GAAtB,IAA6B0K,UAAU,eAAvC,SACE,cAAC,IAAD,CACE89B,MAAOhwC,EACP2sC,cAAe,CAACT,GAAS8D,WAAYnC,EAASrkC,EAAIwmC,GAClD7tC,KAAM,CAAE6tC,MAAOhwC,GACfksC,MAAO1iC,U,gBC5Bf7K,EAAOD,QAAU,IAA0B,kC,cCA3CC,EAAOD,QAAUyC,QAAQ,uB,cCAzBxC,EAAOD,QAAUyC,QAAQ,kB,cCAzBxC,EAAOD,QAAUyC,QAAQ,oB,cCAzBxC,EAAOD,QAAUyC,QAAQ,S,cCAzBxC,EAAOD,QAAUyC,QAAQ,iB,cCAzBxC,EAAOD,QAAUyC,QAAQ,S,cCAzBxC,EAAOD,QAAUyC,QAAQ,kB,cCAzBxC,EAAOD,QAAUyC,QAAQ,qB,cCAzBxC,EAAOD,QAAUyC,QAAQ,U,gBCAzBxC,EAAOD,QAAU,IAA0B,2C,cCA3CC,EAAOD,QAAUyC,QAAQ,gB,6BCEzB,IAAIqtC,EAAU,EAAQ,IAASA,QAE/B9vC,EAAQyB,YAAa,EACrBzB,EAAQkmD,oBAIJ,WACE,GAAyB,IAArB9b,UAAU9kC,OACd,MAA4B,iBAAjB8kC,UAAU,GAAwB0F,EACtCA,EAAQmS,MAAM,KAAM7X,YAIjCpqC,EAAQi+H,iBAIJ,WAAa,OAAO,SAASC,GAAQ,OAAOA,K,cCpBhDj+H,EAAOD,QAAUyC,QAAQ,sB,cCAzBxC,EAAOD,QAAUyC,QAAQ,iB,cCAzBxC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,8Z,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,o/B,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,wgB,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,s5B,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,2U,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,oK,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,4vC,cCAjIC,EAAOD,QAAUyC,QAAQ,sB,cCAzBxC,EAAOD,QAAUyC,QAAQ,oB,cCAzBxC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,4D,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,qa,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,8uB,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,koB,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,ie,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,qX,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,wU,cCAjIC,EAAOD,QAAUyC,QAAQ,kB,cCAzBxC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,yQ,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,0a,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,mM,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,qM,cCAjIC,EAAOD,QAAUyC,QAAQ,a,cCAzBxC,EAAOD,QAAUyC,QAAQ,kB,cCAzBxC,EAAOD,QAAUyC,QAAQ,qB,cCAzBxC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,2L,cCAjIC,EAAOD,QAAUyC,QAAQ,oC,gBCAzBxC,EAAOD,QAAU,IAA0B,yC,gBCA3CC,EAAOD,QAAU,IAA0B,wC,cCA3CC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,yO,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,mS,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,oS,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,oN,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,+V,cCAjIC,EAAOD,QAAUyC,QAAQ,gB,61BC2BzB,MAAMqc,EAAWC,yBAAe,CAC9B4pE,SAAU,CAAF,yCAIRw1C,YAAa,CAAF,iDAIX3yF,OAAQ,CAAF,2DASD,MAAM4yF,UAAmC3sH,YA0C9CzO,YAAY8F,GACVmkC,MAAMnkC,GACNxF,KAAK4Q,MAAQ,CACXk/E,QAAQ,GAEV9vF,KAAKomF,cAAgBpmF,KAAKomF,cAAc7nF,KAAKyB,MAC7CA,KAAK+6H,UAAY/6H,KAAK+6H,UAAUx8H,KAAKyB,MAQvCurC,oBACMvrC,KAAKwF,MAAMglC,OACbxqC,KAAKiyC,KAAKzH,QAEZxqC,KAAKwF,MAAMgvB,iBAUbumG,UAAUvrB,EAAK3jG,EAAO8iD,GACpB,MAAMnpD,EAAQ,CACZqoE,OAAO,EACP7vE,MAAOwxG,EAAI56E,EACXiX,SAAW1rC,GAASH,KAAKomF,cAAcv6E,EAAO1L,EAAKitB,OAAOpvB,QAEtD4W,EAAS5U,KAAKwF,MAAMk4C,QAAQ8xD,EAAI5yG,GAAGgY,OAEzC,OAAQ5U,KAAKwF,MAAMk4C,QAAQ8xD,EAAI5yG,GAAGo+H,UAAUxrB,EAAIhyG,GAAGwjB,QACjD,KAAK,KACH,OAAO,yBACT,IAAK,aACH,OACE,cAAC,OAAKk5C,MAAN,CAAYpsD,MAAO,CAAE6uB,KAAM,YAA3B,SACE,cAAC,QAAD,KACEv8B,KAAK,QACDoF,GAFN,IAGExH,MAAO8nC,iBAAO3jB,gBAAMqtF,EAAI56E,GAAI,mBAIpC,IAAK,kBACH,OACE,eAAC,IAAM6L,SAAP,WACE,cAAC,OAAKy5B,MAAN,CAAYpsD,MAAO,CAAE6uB,KAAM,YAA3B,SACE,cAAC,QAAD,KACEv8B,KAAK,QACDoF,GAFN,IAGExH,MAAO8nC,iBAAO3jB,gBAAMqtF,EAAI56E,EAAE,IAAK,cAC/BiX,SAAW1rC,GACTH,KAAKomF,cAAcv6E,EAAO,CAAC1L,EAAKitB,OAAOpvB,MAAOwxG,EAAI56E,EAAE,UAI1D,cAAC,OAAKslC,MAAN,CAAYpsD,MAAO,CAAE6uB,KAAM,YAA3B,SACE,cAAC,QAAD,KACEv8B,KAAK,QACDoF,GAFN,IAGExH,MAAO8nC,iBAAO3jB,gBAAMqtF,EAAI56E,EAAE,IAAK,cAC/BiX,SAAW1rC,GACTH,KAAKomF,cAAcv6E,EAAO,CAAC2jG,EAAI56E,EAAE,GAAIz0B,EAAKitB,OAAOpvB,gBAM7D,IAAK,qBACH,OACE,cAAC,OAAKk8D,MAAN,CAAYpsD,MAAO,CAAE6uB,KAAM,YAA3B,SACE,cAAC,QAAD,GAAOs+F,KAAM,EAAG76H,KAAK,UAAaoF,MAGxC,IAAK,0BACH,OACE,cAAC,OAAK00D,MAAN,CAAYpsD,MAAO,CAAE6uB,KAAM,WAAYu+F,SAAU,OAAjD,SACE,cAACvsE,EAAD,OACMnpD,GADN,IAEE0K,UAAU,yBACVk/C,gBAAgB,eAChBrpC,QACEnR,EACI,IAAI,IAAQA,GAAU5W,IAAD,CACnB67B,MAAO77B,EAAM,GAAGiL,MAChBjL,MAAOA,EAAM,MAEf,GAENk9B,OAAQF,IACR2G,YAAa3hC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS0sB,QACpDvN,MAAOF,IACPhO,WAAY,CAAEyN,sBAAmBN,YACjCiS,SAAW1rC,IACTH,KAAKomF,cACHv6E,EACA,IAAI1L,EAAO4T,GAASA,EAAK/V,SAG7B0xD,SAAS,EACT1xD,MAAO,IAAIwxG,EAAI56E,EAAI52B,IAAD,YAAY,CAC5B67B,OAAOjlB,SAAA,UAAAA,EAAS5W,UAAT,eAAiBiL,QAASjL,EACjCA,gBAKV,IAAK,kBACL,QAIE,OACE,cAAC,OAAKk8D,MAAN,CAAYpsD,MAAO,CAAE6uB,KAAM,YAA3B,SACE,cAAC,QAAD,KAAWn3B,OAarB4gF,cAAcv6E,EAAO7N,GACnBgC,KAAKwF,MAAMqmC,SACT7rC,KAAKwF,MAAMgC,GACX,IAAIxH,KAAKwF,MAAMxH,MAAO,CAACwxG,EAAK5yG,IAC1BiP,IAAUjP,EAAV,OAES4yG,GAFT,IAGM56E,EAAG52B,IAELwxG,IAUV9/F,SACE,MAAM,GACJlI,EADI,SAEJmU,EAFI,YAGJimB,EAHI,MAIJhuB,EAJI,MAKJ5V,EALI,SAMJ6tC,EANI,OAOJ4lB,EAPI,QAQJ/T,EARI,SASJh7B,EATI,YAUJyW,EAVI,KAWJoL,GACEvkC,KAAKwF,MAEHmpD,EAASx1B,EAAY2L,QAE3B,OACE,cAAC,OAAKo1B,MAAN,CACEC,QAAM,EACNx+C,SAAUA,EACV/H,MAAOA,EAAM5R,OAAS,EACtBkO,UAAW24B,IAAG,eAAgBjH,EAAc,OAAS,IACrDp6B,GAAK,GAAEkb,GAAY,WAAWlb,IALhC,SAOE,eAAC,OAAD,WACE,cAAC,OAAK4yD,IAAN,CAAUC,WAAS,EAAnB,SACE,cAAC,OAAK5D,OAAN,CAAa56B,MAAM,KAAnB,SACE,qBAAK3rB,UAAU,oBAAf,SACGq0B,EAAK5jB,cAAcnF,EAAS6pE,gBAInC,cAAC,OAAKjrB,IAAN,CAAUC,WAAS,EAAnB,SACE,eAAC,OAAK5D,OAAN,CAAa56B,MAAM,KAAnB,UACG6hB,IACE,IAAQA,IACT,IAAI1/C,EAAO,CAACwxG,EAAK3jG,KAAN,iBACT,eAAC,OAAK6uB,MAAN,WACE,sBAAKxqB,UAAU,sBAAf,UACE,cAAC,OAAKgqD,MAAN,CACEpsD,MAAO,CAAE6uB,KAAM,WAAY83D,YAAa,QAD1C,SAGE,cAAC9lC,EAAD,CACEnnD,GAAK,SAAQA,EACblK,KAAMkK,EACNshC,SAAqB,OAAX2oB,EACVvhD,UAAU,yBACVk/C,gBAAgB,eAChBrpC,QAAS,IACP,IACE,IACE,IAAQ23B,GACP3pC,GAASA,EAAK,GAAGypC,QAGrBA,IAAD,CACE3jB,MAAO2jB,EAAM,GACbz3B,QAAS,IACP,IAAOy3B,EAAM,GAAKzpC,GAASA,EAAK,GAAGonH,SAClC7lH,IAAD,CACEukB,MAAOvkB,EAAM,GAAGrM,MAChBjL,MAAOsX,EAAM,GACbmnB,YAAaz+B,GAAS,IAAI2N,KACvBipB,GAAMA,EAAC,IAAUtf,EAAM,UAMlC4lB,OAAQF,IACRL,MAAOF,IACPkH,YAAa4C,EAAK5jB,cAAcnF,EAAS0sB,QACzCzb,WAAY,CAAEyN,sBAAmBN,YACjC57B,MAAO,CACLA,MAAOwxG,EAAI5yG,EACXi9B,MAAK,UAAE6jB,EAAQ8xD,EAAI5yG,UAAd,aAAE,EAAgBqM,OAEzB4iC,SAAW1rC,GACT0rC,EACErkC,EACA,IAAIxJ,EAAO,CAACo9H,EAAQC,IAClBA,IAAaxvH,EACT,CACEjP,EAAGuD,EAAKnC,MACRR,EAAGkgD,EAAQv9C,EAAKnC,OAAO05G,WAAW,GAClC9iF,EAAG,IAELwmG,QAMd,cAAC,OAAKlhE,MAAN,CAAYpsD,MAAO,CAAE6uB,KAAM,YAA3B,SACE,cAACgyB,EAAD,CACEnnD,GAAK,SAAQA,EACblK,KAAMkK,EACNshC,SAAqB,OAAX2oB,EACVvhD,UAAU,yBACVk/C,gBAAgB,eAChBrpC,QAAS,wBACP23B,EAAQ8xD,EAAI5yG,UADL,aACP,EAAgB86G,kBADT,QACuB,GAC7B4jB,IAAD,CACEt9H,MAAOs9H,EACPzhG,MAAO6jB,EAAQ8xD,EAAI5yG,GAAGo+H,UAAUM,GAAWryH,SAG/CiyB,OAAQF,IACRL,MAAOF,IACPkH,YAAa4C,EAAK5jB,cAAcnF,EAAS0sB,QACzCzb,WAAY,CAAEyN,sBAAmBN,YACjC57B,MAAO,CACLA,MAAOwxG,EAAIhyG,EACXq8B,MAAO6jB,EAAQ8xD,EAAI5yG,GAAGo+H,UAAUxrB,EAAIhyG,GAAGyL,OAEzC4iC,SAAW1rC,GACT0rC,EACErkC,EACA,IAAIxJ,EAAO,CAACo9H,EAAQC,IAClBA,IAAaxvH,EACT,CACEjP,EAAG4yG,EAAI5yG,EACPY,EAAG2C,EAAKnC,MACR42B,EAAG,IAELwmG,SAMZp7H,KAAKwF,MAAMk4C,QAAQ8xD,EAAI5yG,GAAGo+H,UAAUxrB,EAAIhyG,GAAGwjB,QAC3C,cAAC,SAAD,CACE2e,QAAUla,IACRomB,EACErkC,EACA,IAAOxJ,EAAO,CAAC42B,EAAGh4B,IAAMA,IAAMiP,IAEhC4Z,EAAMI,kBAER/X,MAAO,CACLijE,WAAY,OACZ90C,aAAc,EACdF,YAAa,EACb0rC,OAAQ,GAZZ,SAeE,cAAC,KAAD,CAAMnqE,KAAMk9B,IAAU1G,KAAK,OAAO5jB,UAAU,eAIjDlQ,KAAK+6H,UAAUvrB,EAAK3jG,EAAO8iD,GAC3B3uD,KAAKwF,MAAMk4C,QAAQ8xD,EAAI5yG,GAAGo+H,UAAUxrB,EAAIhyG,GAAGwjB,QAC1C,cAAC,SAAD,CACE2e,QAAUla,IACRomB,EACErkC,EACA,IAAOxJ,EAAO,CAAC42B,EAAGh4B,IAAMA,IAAMiP,IAEhC4Z,EAAMI,kBAER/X,MAAO,CACLijE,WAAY,OACZ90C,aAAc,EACdF,YAAa,EACb0rC,OAAQ,GAZZ,SAeE,cAAC,KAAD,CAAMnqE,KAAMk9B,IAAU1G,KAAK,OAAO5jB,UAAU,cAnIjCrE,KAwIrB,cAAC,OAAK6uB,MAAN,UACE,cAAC,OAAKw/B,MAAN,CAAYpsD,MAAO,CAAE6uB,KAAM,YAA3B,SACE,cAACgyB,EAAD,CACEnnD,GAAK,SAAQA,EACblK,KAAMkK,EACNshC,SAAqB,OAAX2oB,EACVvhD,UAAU,yBACVk/C,gBAAgB,eAChBztB,YAAa4C,EAAK5jB,cAAcnF,EAASq/G,aACzC90G,QAAS,IACP,IACE,IAAQ,IAAQ23B,GAAW3pC,GAASA,EAAK,GAAGypC,QAE7CA,IAAD,CACE3jB,MAAO2jB,EAAM,GACbz3B,QAAS,IACP,IAAOy3B,EAAM,GAAKzpC,GAASA,EAAK,GAAGonH,SAClC7lH,IAAD,CACEukB,MAAOvkB,EAAM,GAAGrM,MAChBjL,MAAOsX,EAAM,GACbmnB,YAAaz+B,GAAS,IAAI2N,KACvBipB,GAAMA,EAAC,IAAUtf,EAAM,UAMlC4lB,OAAQF,IACRL,MAAOF,IACPhO,WAAY,CAAEyN,sBAAmBN,YACjC57B,MAAO,KACP6tC,SAAW1rC,IACT0rC,EAASrkC,EAAI,IACPxJ,GAAS,GACb,CACEpB,EAAGuD,EAAKnC,MACRR,EAAGkgD,EAAQv9C,EAAKnC,OAAO05G,WAAW,GAClC9iF,EAAG,aAOd,IAAIhhB,EAAQ0O,GACX,cAAC,QAAD,CAAqB8mB,OAAK,EAACnP,MAAM,MAAMskC,UAAQ,EAA/C,SACGj8C,GADSA,SAMjBsf,GACC,cAAC,OAAKw4B,IAAN,CAAUC,WAAS,EAAnB,SACE,cAAC,OAAK5D,OAAN,CAAa4D,WAAS,EAACx+B,MAAM,KAA7B,SACE,mBAAG3rB,UAAU,OAAb,SAAqB0xB,c,IAtaxBk5F,E,eAyBW,CACpBl5F,YAAa,KACbjmB,UAAU,EACV/H,MAAO,GACP5V,MAAO,KACP6tC,SAAU,KACV4lB,OAAQ,KACRC,SAAU,KACVlnB,OAAO,IA+YIgC,sBACbC,aACAtU,YAAe,CAAC,gBAChBuU,kBACG97B,IAAD,CACE8sC,QAAS9sC,EAAM2nC,YAAYmF,UAE7B,CAAElpB,qBAPSgY,CASbsuF,I,ytBCxdF,MAAMt/G,EAAWC,yBAAe,CAC9B6pE,OAAQ,CAAF,uCAING,YAAa,CAAF,mDA+DEttD,gBAAe,CAAC,eAAhBA,EAzDf,SAAoC3yB,GAAO,MACzC,MAAM,GAAEgC,EAAF,MAAMxJ,EAAN,SAAa6tC,EAAb,YAAuB1S,EAAvB,WAAoCsD,GAAej3B,EACnDm4C,EAAmBzmB,sBACtBtmB,GAAUA,EAAM2nC,YAAYoF,kBAEzBpZ,EAAOkE,oBACPkmB,EAASx1B,EAAY2L,QAE3B,OACE,cAAC,KAAD,OACMt/B,GADN,IAEE0pE,WAAW,EACXh/D,UAAU,uBAHZ,SAKE,cAACy+C,EAAD,CACEnnD,GAAG,8BACHlK,KAAK,8BACL4S,UAAU,yBACVk/C,gBAAgB,eAEhB3yB,WAAYA,EACZ1W,QAAS,CACP,CACE8T,MAAO0K,EAAK5jB,cAAcnF,EAASiqE,aACnCznF,MAAO,OAEN,IACD,IACE,IAAQ,IAAQ2/C,GAAoB5pC,GAASA,EAAK,GAAGypC,QAEtDA,IAAD,CACE3jB,MAAO2jB,EAAM,GACbz3B,QAAS,IAAIy3B,EAAM,GAAKloC,IAAD,CACrBukB,MAAOvkB,EAAM,GAAGrM,MAChBjL,MAAOsX,EAAM,UAKrB4lB,OAAQF,IACRL,MAAOF,IACPhO,WAAY,CAAEyN,sBAAmBN,YACjC57B,MAAO,CACLA,MAAOA,GAAS,GAChB67B,MACE77B,GAAS2/C,EAAT,UACIA,EAAiB3/C,UADrB,aACI,EAAyBiL,MACzBjL,GAASumC,EAAK5jB,cAAcnF,EAASiqE,cAE7C55C,SAAWv2B,IACTu2B,EAASrkC,EAAI8N,EAAMtX,iB,opBCtD7B,MAAMmmF,EAAe3+E,IACnB,MAAM,GACJgC,EADI,MAEJxJ,EAFI,SAGJ6tC,EAHI,OAIJ2lB,EAJI,QAKJ7xB,EALI,UAMJ/jB,EANI,UAOJC,EAPI,YAQJ8lB,EARI,WASJlF,GACEj3B,EACEwgF,EAAW,SAAQx+E,EAEzB,OACE,cAAC,KAAD,OAAsBhC,GAAtB,IAA6B0K,UAAU,QAAvC,SACE,cAAC,QAAD,CACE1I,GAAIw+E,EACJ1oF,KAAMkK,EACNpH,KAAK,QACLpC,MAAOA,GAAS,GAChB8qC,SAAUrM,EACVkF,YAAaA,EACbkK,SAAU,EAAGze,YACXye,EAASrkC,EAAqB,KAAjB4lB,EAAOpvB,WAAemH,EAAYioB,EAAOpvB,OAExDwzD,OAAQ,EAAGpkC,YACTokC,EAAOhqD,EAAqB,KAAjB4lB,EAAOpvB,WAAemH,EAAYioB,EAAOpvB,OAEtD2hC,QAAS,IAAMA,IACf/jB,UAAWA,GAAa,KACxBC,UAAWA,GAAa,WA+BhCsoE,EAAYl0E,aAAe,CACzB2xB,YAAa,KACbjmB,UAAU,EACV/H,MAAO,GACP5V,MAAO,KACP6tC,SAAU,OACV2lB,OAAQ,OACR7xB,QAAS,OACT/jB,UAAW,KACXC,UAAW,MAGEsoE,O,6pBCzFf,MAAM3oE,EAAWC,yBAAe,CAC9Bs+D,MAAO,CAAF,mCAILD,OAAQ,CAAF,qCAIND,MAAO,CAAF,qCAMDgL,EAAmBr/E,IACvB,MAAM,SAAEqmC,EAAF,GAAYrkC,EAAZ,SAAgBshC,EAAhB,KAA0BvE,EAA1B,MAAgCvmC,GAAUwH,EAEhD,OACE,cAAC,KAAD,OAAsBA,GAAtB,aACE,cAAC,OAAD,UACE,cAAC,OAAK40D,IAAN,UACE,eAAC,OAAK3D,OAAN,CAAa56B,MAAM,IAAI3rB,UAAU,mBAAjC,UACE,cAAC,SAAOwqB,MAAR,UACE,cAAC,SAAD,CACE2O,MAAI,EACJD,OAAK,EACLj3B,aAAYoyB,EAAK5jB,cAAcnF,EAASu+D,OACxCp6C,QAAS,IAAMkM,EAASrkC,EAAI,KAC5B0mC,OAAkB,MAAVlwC,EACR8qC,SAAUA,EANZ,SAQE,qBAAK54B,UAAU,mBAAf,mBAGJ,cAAC,SAAOwqB,MAAR,UACE,cAAC,SAAD,CACE2O,MAAI,EACJD,OAAK,EACLj3B,aAAYoyB,EAAK5jB,cAAcnF,EAASs+D,QACxCn6C,QAAS,IAAMkM,EAASrkC,EAAI,KAC5B0mC,OAAkB,MAAVlwC,EACR8qC,SAAUA,EANZ,SAQE,qBAAK54B,UAAU,mBAAf,mBAGJ,cAAC,SAAOwqB,MAAR,UACE,cAAC,SAAD,CACE2O,MAAI,EACJD,OAAK,EACLj3B,aAAYoyB,EAAK5jB,cAAcnF,EAASq+D,OACxCl6C,QAAS,IAAMkM,EAASrkC,EAAI,KAC5B0mC,OAAkB,MAAVlwC,QAA2BmH,IAAVnH,EACzB8qC,SAAUA,EANZ,SAQE,qBAAK54B,UAAU,mBAAf,8BA0BhB20E,EAAgB50E,aAAe,CAC7B47B,SAAU,QAGGY,yBAAWo4C,I,4xBCY1B,MAAMrpE,EAAWC,yBAAe,CAC9BxS,MAAO,CAAF,yDAILsyH,UAAW,CAAF,uDAITC,QAAS,CAAF,oDAIPC,WAAY,CAAF,+CAIVC,eAAgB,CAAF,oDAIdC,eAAgB,CAAF,qDAwJVC,EAAe,EAAG9jD,YAAY+jD,EAAIC,IACtC,cAACC,EAAD,CAAcjkD,SAAUA,EAAUgkD,UAAWA,EAA7C,SACGD,IAICE,EAAgBv2H,IACpB,MAAM++B,EAAOkE,qBACP,UAAEqzF,EAAF,SAAahkD,EAAb,SAAuBxoE,GAAa9J,GACpC,GAAEgC,EAAF,gBAAMk9E,EAAN,MAAuBs3C,EAAvB,SAA8BnwF,GAAaiwF,EA6BjD,OACE,yBACEx4G,IAAKw0D,EAAS5D,UACV4D,EAAS3D,gBAFf,IAGEjkE,UAAU,iBAHZ,SAKE,sBAAKpC,MAAO,CAAEyuB,WAAY,SAAUF,QAAS,QAA7C,UACE,2BAASy7C,EAAS1D,iBAAlB,IAAmClkE,UAAU,oBAA7C,SACE,cAAC,KAAD,CAAM5S,KAAM06E,IAASlkD,KAAK,YAE5B,qBAAK5jB,UAAU,sBAAf,SAAsCZ,IACtC,gCACG0sH,EAAMnpH,QAAUipH,EAAUG,cACzB,uBACEz0H,GAAK,SAAQw0H,EAAMnpH,MACnB5J,MAAM,QACN04B,YAAY,QACZ6vB,OAhCZ,SAA8B/rC,GAC5B,IAAIznB,EAAQynB,EAAM2H,OAAOpvB,MAErBA,EAAMgE,OAAS,IAEb,IAAK85H,EAAUp3C,gBAAkBztE,GAAOA,EAAGpE,QAAU7U,KAjB5B,EAAC4sF,EAAMsxC,KACtC,IAAIC,EAAWL,EAAUp3C,gBACrB74E,EAAQ,IAAUswH,EAAU,CAAEtpH,MAAO+3E,EAAK/3E,QAC9CspH,EAASzxH,OAAOmB,EAAO,EAAG,CACxBgH,MAAOqpH,EACPE,OAAQD,EAAStwH,GAAOuwH,SAE1BvwF,EAASrkC,EAAI,CACXsM,MAAOqoH,KAaLE,CAAyBL,EAAOh+H,GAChC89H,EAAUQ,iBAAiB,SAwBrB,KACJ,cAAC,SAAD,CACEjzF,MAAI,EACJD,OAAK,EACLl5B,UAAU,gBACVjH,MAAOs7B,EAAK5jB,cAAcnF,EAASigH,YACnCtpH,aAAa,GAAEoyB,EAAK5jB,cAAcnF,EAASigH,gBACzCO,EAAMnpH,QAER8sB,QAAU3iC,IACRA,EAAE6oB,iBACF,IAAO6+D,EAAkBztE,GAAOA,EAAGpE,QAAUmpH,EAAMnpH,OACnDg5B,EAASrkC,EAAI,CAAEsM,MAAO4wE,KAX1B,SAcE,cAAC,KAAD,CAAMpnF,KAAM2zD,IAAWn9B,KAAK,OAAOmG,MAAM,wBAQtC0qD,IAlOgBn/E,IAAU,MACvC,MAAM,GAAEgC,EAAF,MAAMxJ,EAAQ,GAAd,SAAkB6tC,GAAarmC,EACrC,IAAI+2H,EAAcv+H,EAClB,MAAMmV,EAAW6jB,yBACVwlG,EAAWC,GAAgBlwH,IAAM8X,SAAS,KAC1C43G,EAAeK,GAAoB/vH,IAAM8X,SAAS,IACnDkgB,EAAOkE,oBAEbl8B,IAAMqX,UAAU,KACd,MAAMg4C,EAAU9xD,SAASooC,eAAesqF,GACxC5gE,GAAWA,EAAQpxB,QACnBiyF,EAAa,KACZ,CAACtpH,EAAUqpH,SAGYr3H,IAAtBo3H,EAAYzoH,QACdyoH,EAAc,CACZzoH,MAAOrW,OAAO+D,KAAK+6H,GAAah5H,IAAKjF,IAC5B,CACLuU,MAAOvU,EACP89H,OAAQ,CACNllH,GAAIqlH,EAAYj+H,SAO1B,IAAIomF,EAAkB63C,EAAYzoH,MAE9By+B,EAAqB90C,OAAO+D,MAC9BkjF,SAAA,UAAAA,EAAiBnhF,IAAK0T,GAAOA,EAAGmlH,eAAhC,eAAyC32F,QAAS,IAGpD,MAAMi3F,EAAa,CACjBzzH,MAAO,sBACPuZ,UAAW,CACT,CACEhb,GAAI,UACJyB,MAAO,QACP6X,OAAQyxB,IAGZl9B,WAAY5X,OAAOk/H,YACjBpqF,EAAmBhvC,IAAKq5H,IAAD,cAAwB,CAC7CA,EACA,CACE3zH,MAAK,oBAAE2M,IAAQgnH,UAAV,aAAE,EAA6B7mH,kBAA/B,QAA6C6mH,OAIxDjhH,SAAU,IAkCZ,IAAIkhH,EAA0Bn4C,EAAgBnhF,IAAK0T,GACjD,OAAYA,GAAZ,IAAgB,MAAOA,EAAGpE,SAG5B,OACE,eAAC,KAAD,OAAsBrN,GAAtB,IAA6B0K,UAAU,mCAAvC,UACE,qBAAKA,UAAU,0BAAf,SACE,eAAC,SAAD,CACEiC,aAAYoyB,EAAK5jB,cAAcnF,EAAS+/G,WACxC57F,QAAU3iC,KA5BlB,SAAwBA,GACtBA,EAAE6oB,iBACF,MAAMq2G,EAAWh5F,eACjB,IAAIi5F,EAAWI,EAAYzoH,MAC3BqoH,EAASt1H,KAAK,CACZgM,MAAOqpH,EACPE,OAAQ3+H,OAAOk/H,YAAYpqF,EAAmBhvC,IAAK0T,GAAO,CAACA,EAAI,QAEjE40B,EAASrkC,EAAI,CACXsM,MAAOqoH,IAETM,EAAc,SAAQlqF,EAAmB,QAAQ/qC,KAAM00H,KACvDI,EAAiBJ,GAiBTY,CAAe9/H,IAHnB,UAME,cAAC,KAAD,CAAMM,KAAMghE,IAAQxqC,KAAK,SACxByQ,EAAK5jB,cAAcnF,EAASggH,cAGjC,cAAC,IAAD,CACE7jD,UAAWklD,EAAwBt5H,IAAK/F,GAAM,CAACA,EAAE,OAAQA,IACzDo6E,WAAa/jE,IACX,MAAM,OAAEsZ,EAAF,YAAUwV,GAAgB9uB,EAChC,IAAK8uB,EACH,OAEF,IAAIw5F,EAAWI,EAAYzoH,MA5BnC,IAAcs0C,EAAK/zC,EAAM88B,EAiCjB,OAjCMiX,EA6BD+zE,EA7BM9nH,EA6BI8Y,EAAOthB,MA7BLslC,EA6BYxO,EAAY92B,MA5B/Cu8C,EAAI19C,OAAO2J,EAAM,EAAG+zC,EAAI19C,OAAOymC,EAAI,EAAGiX,EAAI/zC,IAAO,IA6B3Cw3B,EAASrkC,EAAI,CACXsM,MAAOqoH,KAEF,GAZX,SAeI5C,IACA,MAAM,MAAE9qH,EAAF,QAASopE,EAAT,MAAkBhsE,GAAU0tH,EAClC,IAAIuC,EAAY,CACdjwH,MAAOA,EACPrE,KACAk9E,kBACAs3C,MAAOvtH,EACPo9B,YAEF,OAAO+vF,EACLrC,EACA,cAAC,KAAD,CACE/xH,GAAK,GAAEA,KAAMiH,EAAMoE,QAEnBg5B,SAAU,CAACkxF,EAASjiF,MA7EhC,SAA8BjoC,EAAOkqH,EAASjiF,GAC5C,IAAIjvC,EAAQ,IAAU0wH,EAAYzoH,MAAO,CAAEjB,MAAOA,IAC9CspH,EAAWI,EAAYzoH,MAC3BqoH,EAASzxH,OAAOmB,EAAO,EAAG,CACxBgH,MAAOA,EACPupH,OAAQthF,IAEVjP,EAASrkC,EAAI,CACXsM,MAAOqoH,IAsEGa,CAAqBvuH,EAAMoE,MAAOkqH,EAASjiF,IAE7C98C,MAAOyQ,EAAM2tH,OACbhnH,OAAQsnH,EACRzzH,MAAM,uBAND4uE,GAJU,GAYfokD,gBAAeK,oBAAqBR,a,swBCxPlD,MAAM3pE,EAAYtzB,GAAMA,EAOxB,MAAMi2C,UAAqB3mE,YAAU,+CAoD3B,CACN6/C,eAAgBhuD,KAAKwF,MAAMxH,MACvB,CAAE67B,MAAO75B,KAAKwF,MAAMxH,MAAMiL,MAAOjL,MAAOgC,KAAKwF,MAAMxH,MAAMA,OACzD,KAvD6B,uBA6ErB,CAACg0B,EAAQirG,EAAiBt/D,KACtC,IAAIu/D,EAAUl9H,KAAKwF,MAAM26C,WAAa88E,EAAgBj7H,OACtD,GAAIk7H,EAAS,CACX,MAAMC,EAASn9H,KAAK4Q,MAAMohB,SAAWA,EAAS,EAAI2rC,EAAWw/D,OAQ7D,OAPAn9H,KAAKwF,MAAMmuB,cAAc,CACvBC,eAAgB5zB,KAAKwF,MAAM8oD,aAC3BjtD,MAAO2wB,EACP6B,MAAOspG,IAETn9H,KAAKoqC,SAAS,CAAEpY,WAET,CACLjM,QACE,IAAak3G,EAAiBj9H,KAAKwF,MAAM+9C,SAASvhD,SAClDhC,KAAKwF,MAAM+9C,QAAQvhD,OACf,GACAhC,KAAKwF,MAAM+9C,QACjB25E,QAASA,EACTv/D,WAAY,CACVw/D,OAAQA,IAAWx/D,EAAWw/D,OAASA,EAAS,GAAKA,IAI3D,OAAO,OApG0B,wBAwGnBnvE,IACdhuD,KAAKoqC,SAAS,CAAE4jB,mBAChBhuD,KAAKwF,MAAMqmC,SAAS7rC,KAAKwF,MAAMgC,GAAI,CACjCxJ,MAAOgwD,EAAehwD,MACtBiL,MAAO+kD,EAAen0B,UA7C1B0R,qBACOvrC,KAAKwF,MAAM+9C,SAAWvjD,KAAKwF,MAAM8oD,cACpCtuD,KAAKwF,MAAMmuB,cAAc,CAAEC,eAAgB5zB,KAAKwF,MAAM8oD,eAoD1D5+C,SACE,MAAM,GACJlI,EADI,MAGJxJ,EAHI,SAIJ6tC,EAJI,YAMJ0M,EANI,cAOJk/D,EAAgBtlD,GACdnyD,KAAKwF,OAEH,QAAEk4C,EAAU,IAAOnF,EAEnBoW,EAAS3uD,KAAKwF,MAAM2zB,YAAY2L,QAEtC,OACE,cAAC,KAAD,OAAsB9kC,KAAKwF,OAA3B,aACE,cAACmpD,EAAD,CACEnnD,GAAK,SAAQA,EACblK,KAAMkK,EACNi1B,YAVa,EAWbvsB,UAAU,yBACVk/C,gBAAgB,eAChBrpC,QAAS,IACP,IACE,IAAQ,IAAQ0xF,EAAc/5D,IAAY3pC,GAASA,EAAK,GAAGypC,QAE5DA,IAAD,CACE3jB,MAAO2jB,EAAM,GACbz3B,QAAS,IACP,IAAOy3B,EAAM,GAAKzpC,GAASA,EAAK,GAAGonH,SAClC7lH,IAAD,CACEukB,MAAOvkB,EAAM,GAAGrM,MAChBjL,MAAOsX,EAAM,SAKrB4lB,OAAQF,IACRL,MAAOF,IACPhO,WAAY,CAAEyN,sBAAmBN,YACjC57B,MAAOA,EACP6tC,SAAW1rC,IACT,IAAIi9H,EAAY,GAChB,GAAIr4H,MAAMC,QAAQ7E,GAAO,CACvB,IAAK,IAAIgE,KAAOhE,EACdi9H,EAAUv2H,KAAK1C,EAAInG,OAErB,OAAO6tC,EAASrkC,EAAI41H,GAEtB,OAAOvxF,EAASrkC,EAAIrH,U,IAvK1B20E,E,eAgCkB,CACpBlzC,YAAa,KACbjmB,UAAU,EACV7H,MAAO,CACLigB,WAAY,MAEd4Z,cAAe,CACb5Z,WAAY,MAEdngB,MAAO,GACP2vC,QAAS,GACTxH,SAAS,EACT/9C,MAAO,KACP6tC,SAAU,OACV2lB,OAAQ,OACR7xB,QAAS,OACT8xB,OAAQ,KACRC,SAAU,OA8HCllB,sBACbwpE,IACA79E,YAAe,CAAC,gBAFHqU,CAGbsoC,I,stBC3KF,MAAMt5D,EAAWC,yBAAe,CAC9BysB,OAAQ,CAAF,uCAINolB,WAAY,CAAF,6CAIV+vE,UAAW,CAAF,mDAWX,MAAMp4C,UAA2B92E,YAwD/BzO,YAAY8F,GACVmkC,MAAMnkC,GADW,sBAwDN+G,IAAM++B,aAxDA,0BA2DF,GA3DE,uBA6DJjqC,GAETA,EAAMW,OAAShC,KAAKs9H,gBAClBt9H,KAAK40G,WAAWlvG,SAAS+B,aAAazH,KAAK40G,WAAWlvG,SACnD,IAAIzI,QAASC,IAClB8C,KAAK40G,WAAWlvG,QAAU4B,WAAWg4E,UACnC,MAAM7/C,QAAYz/B,KAAKu9H,sBAAsBl8H,GAC7CnE,EAAQuiC,IACP,QAGExiC,QAAQC,QAAQ,KAxER,iCA4EKoiF,UACtB,MAAM/lC,QAAav5C,KAAKwF,MAAMmuB,cAAc,CAC1CC,eAAgB5zB,KAAKwF,MAAM8oD,aAC3BjtD,QACAyyB,MAAO,EACP1F,WAAYpuB,KAAKwF,MAAM8L,OAGzB,OAAO+xC,YAAiB9J,EAAKzlC,OAAS,GAAI9T,KAAKwF,MAAM++B,QAjFrDvkC,KAAKyS,aAAezS,KAAKyS,aAAalU,KAAKyB,MAE3CA,KAAK4Q,MAAQ,CACX4sH,aAAc,EACdC,gBAAiB,IAIrBlyF,oBACE,MAAM,GAAE/jC,EAAF,KAAM8J,EAAN,MAAYtT,EAAZ,QAAmBulD,GAAYvjD,KAAKwF,MAC1C,GAAIxH,IAASA,aAAA,EAAAA,EAAOgE,QAAS,EAAG,CAC9B,MAAM07H,EAAcx6E,YAClBI,YAAeC,EAASvlD,EAAOgC,KAAKwF,MAAM++B,OAG5CvkC,KAAKwF,MAAM0uB,wBAAX,GACEN,eAAgB5zB,KAAKwF,MAAM8oD,aAC3BlgC,WAAa,UAAS5mB,KAAM8J,KACzBosH,KAKTloH,mBAAmBC,EAAW+rB,GAC5B,MAAM,MAAExjC,EAAF,QAASulD,GAAYvjD,KAAKwF,MAEQ,IAAtCxF,KAAK4Q,MAAM6sH,gBAAgBz7H,SAC3BhE,aAAA,EAAAA,EAAOgE,QAAS,IAChBuhD,aAAA,EAAAA,EAASvhD,QAAS,GAElBhC,KAAKoqC,SAAUx5B,IAAD,CACZ6sH,gBAAiB,IAAI7sH,EAAM6sH,mBAAoBl6E,MAYrD9wC,aAAau7C,GACXhuD,KAAKwF,MAAMqmC,SACT7rC,KAAKwF,MAAMgC,GACXwmD,EAAiBA,EAAezqD,IAAKwQ,GAASA,EAAK/V,OAAS,MAE9DgC,KAAKoqC,SAAUx5B,IAAD,CACZ6sH,gBAAiB,IAAI7sH,EAAM6sH,mBAAoBzvE,MAwCnDt+C,SAAS,QACP,MAAMs+C,EAAiB1K,YACrBtjD,KAAK4Q,MAAM6sH,gBACXz9H,KAAKwF,MAAMxH,MACXgC,KAAKwF,MAAM++B,MAEPo5F,EAAc39H,KAAKwF,MAAMo4H,iBAAiB94F,QAEhD,OACE,cAAC,KAAD,OAAsB9kC,KAAKwF,OAA3B,aACE,cAACm4H,EAAD,CACEn2H,GAAK,SAAQxH,KAAKwF,MAAMgC,GAExBi1B,WAAYz8B,KAAKwF,MAAMsjC,UAAY9oC,KAAKwF,MAAMi3B,WAC9CvsB,UAAU,yBACVk/C,gBAAgB,eAChByuE,cAAY,EACZ/3C,eAAgB,GAChBg4C,YAAa99H,KAAK89H,YAClBC,cAAgB/rG,GACdhyB,KAAKoqC,SAAS,CAAEozF,aAAcxrG,EAAOhwB,SAEvC+jF,iBAAkB,IAChB/lF,KAAKwF,MAAM++B,KAAK5jB,cACd3gB,KAAK4Q,MAAM4sH,aAAex9H,KAAKs9H,eAC3B9hH,EAAS8xC,WACT9xC,EAAS6hH,WAGjBniG,OAAQF,IACRL,MAAOF,IACPhO,WAAU,QACJ,UAAAzsB,KAAKwF,MAAM+9C,eAAX,eAAoBvhD,QAAS,IAAM,CACrCs2B,eAFM,IAIRiC,mBACAL,sBACAN,aAEF57B,MAAOgwD,GAAkB,GACzBrsB,YAAW,UACT3hC,KAAKwF,MAAMm8B,mBADF,QAET3hC,KAAKwF,MAAM++B,KAAK5jB,cAAcnF,EAAS0sB,QAEzC2D,SAAU7rC,KAAKyS,aACfi9C,SAAO,GAjCF1vD,KAAKwF,MAAMgC,Q,IAhKpBy9E,E,eAoCkB,CACpBrjD,YAAa,KACbjmB,UAAU,EACV7H,MAAO,CACLigB,WAAY,MAEd4Z,cAAe,CACb5Z,WAAY,MAEdngB,MAAO,GACP2vC,QAAS,GACTvlD,MAAO,OAyJgCyuC,qBAAWw4C,GAEvCz4C,sBACbC,aACAtU,YAAe,CAAC,qBAChBuU,kBACE,CAAC97B,EAAOpL,KAAU,cAChB,MAAM8oD,EACJ5gB,YAAiBloC,IACjBooC,YAAkBpoC,IAClBqoC,YAAkBroC,GAEdy6C,EAAU,UACdrvC,EAAMovC,oBADQ,iBACd,EAAqBsO,UADP,iBACd,EAAoC3hB,mBADtB,iBACd,EACG,UAASnnC,EAAMgC,MAAMoJ,EAAM2zB,KAAK1O,iBAFrB,aACd,EAEG/hB,MAIL,OAAO,UAAAtO,EAAMsO,aAAN,SAAayvC,QAChB,CAAEA,QAAS/9C,EAAMsO,MAAMyvC,QAASjyC,KAAMV,EAAM2zB,KAAK1O,QACjDoqB,EACA,CACEsD,QAAStD,EACTqO,eACAh9C,KAAMV,EAAM2zB,KAAK1O,QAEnB,CAAEy4B,eAAch9C,KAAMV,EAAM2zB,KAAK1O,SAEvC,CAAElC,kBAAeO,8BA3BNsY,CA6Bby4C,I,mGC7QF,MAAMxvB,UAAiBtnD,YAyBrBo9B,oBACE,IAAKvrC,KAAKwF,MAAMqN,MAAO,CACrB,MAAM,UAAEw6C,GAAcrtD,KAAKwF,MAAMuH,QAC7BuxB,YAAc+uB,IAChBrtD,KAAKwF,MAAMqsC,QAAQptC,QAAQ8vB,YAAgB84B,KAYjD39C,SACE,MAAM,UAAE29C,GAAcrtD,KAAKwF,MAAMuH,QACjC,OACE,eAAC,YAAD,CAAWvF,GAAG,gBAAd,UACE,oBAAI0I,UAAU,uBAAd,SAAsClQ,KAAKwF,MAAMuH,QAAQ9D,QACxDjJ,KAAKwF,MAAMuH,QAAQ60B,aAClB,mBAAG1xB,UAAU,sBAAb,SACGlQ,KAAKwF,MAAMuH,QAAQ60B,cAGvByrB,GACC,8BACE,cAAC,mBAAD,CACE7lD,GAAG,uBACHukC,eAAe,yBACd,IACH,cAAC,KAAD,CAAer6B,KAAM27C,EAArB,SACG94B,YAAgB84B,Y,IA1DzBoI,E,eAoBkB,CACpB1oD,QAAS,KACT8F,MAAO,OA6CI4iD,O,6BCpFf,qCAyEea,IA/DW,IACxB,eAAC,YAAD,CACEpmD,UAAU,eACVpC,MAAO,CACL6+C,WAAY,wBACZC,SAAU,OACVvwB,QAAS,OACTwwB,cAAe,SACfvwB,eAAgB,SAChBC,WAAY,UARhB,UAWE,qBAAIzuB,MAAO,CAAEg/C,UAAW,SAAUkxE,WAAY,QAA9C,UACE,cAAC,mBAAD,CACEx2H,GAAG,qBACHukC,eAAe,wBAEhBkyF,MAOFA,EAgBC,qCACE,mBACE/tH,UAAU,cACVpC,MAAO,CACLg/C,UAAW,SACX2a,OAAQ,YACR5rC,MAAO,SALX,SAQE,cAAC,mBAAD,CACEr0B,GAAG,yIACHukC,eAAe,6IAInB,mBAAGj+B,MAAO,CAAEg/C,UAAW,UAAvB,SACE,cAAC,mBAAD,CAAkBtlD,GAAG,aAAaukC,eAAe,wB,6BClE3D,qCA4EewqB,IA7DG,IAChB,eAAC,YAAD,CACErmD,UAAU,eACVpC,MAAO,CACL6+C,WAAY,wBACZC,SAAU,OACVvwB,QAAS,OACTwwB,cAAe,SACfvwB,eAAgB,SAChBC,WAAY,UARhB,WAWG0hG,EA0BC,qCACE,mBACE/tH,UAAU,cACVpC,MAAO,CACLg/C,UAAW,SACX2a,OAAQ,YACR5rC,MAAO,SALX,SAQE,cAAC,mBAAD,CACEr0B,GAAG,yMACHukC,eAAe,6MAInB,mBAAGj+B,MAAO,CAAEg/C,UAAW,UAAvB,SACE,cAAC,mBAAD,CAAkBtlD,GAAG,aAAaukC,eAAe,wB,6BCrE3D,qCA2EeqqB,IA7DQ,IACrB,eAAC,YAAD,CACElmD,UAAU,eACVpC,MAAO,CACL6+C,WAAY,wBACZC,SAAU,OACVvwB,QAAS,OACTwwB,cAAe,SACfvwB,eAAgB,SAChBC,WAAY,UARhB,WAWG0hG,EA0BC,qCACE,mBACE/tH,UAAU,cACVpC,MAAO,CACLg/C,UAAW,SACX2a,OAAQ,YACR5rC,MAAO,SALX,SAQE,cAAC,mBAAD,CACEr0B,GAAG,6IACHukC,eAAe,iJAInB,mBAAGj+B,MAAO,CAAEg/C,UAAW,UAAvB,SACE,cAAC,mBAAD,CAAkBtlD,GAAG,aAAaukC,eAAe,wB,qtBCvD3D,MAAM0pC,EAASp2E,IAAS,CAAD,0IAAC,IAAM,6CAAP,qMAOvB,MAAM6+H,UAAsB/vH,YAkC1BzO,YAAY8F,GACVmkC,MAAMnkC,GAEN,MAAM,YAAEqwE,EAAF,eAAe6C,GAAmBlzE,EAAMswE,QACZtwE,EAAMuwE,2BAA2BjxC,QAiBnE9kC,KAAK6rC,SAAW7rC,KAAK6rC,SAASttC,KAAKyB,MAQrCurC,oBACE,GAAIvrC,KAAKiyC,KAAM,CACb,MAAMwoC,EAAUz6E,KAAKiyC,KAAKiqC,OAAO9D,SACjCp4E,KAAKiyC,KAAKiqC,OAAO9D,SAAY3yD,IAC3Bg1D,EAAQh1D,GACRzlB,KAAKwF,MAAMorG,aAAa5wG,KAAKwF,MAAMgqG,IAAKxvG,KAAKwF,MAAMkqG,QAWzD5+D,iCAAiCxiC,GAE7BA,EAAU6jG,uBAAyBnyG,KAAKwF,MAAM2sG,sBAC1B,IAApBnyG,KAAKwF,MAAMkqG,MACQ,IAAnB1vG,KAAKwF,MAAMgqG,KAEXxvG,KAAKiyC,KAAKzH,QAUdqB,SAASqqC,GACPl2E,KAAKoqC,SAAS,CAAE8rC,eAAe,KAC7Bl2E,KAAKwF,MAAMqmC,SAAS7rC,KAAKwF,MAAMgqG,IAAKxvG,KAAKwF,MAAMkqG,KAAMx5B,KASzDxmE,SAEI,OAAO,yB,IA5GPwuH,E,eAuBkB,CACpB1kD,UAAU,EACVnL,UAAU,IA6IP,MAAMxH,EAAO1uC,YAAe,CACjC,UACA,6BACA,gCACA,iCACA,iBACA,oBACA,6BACA,+BACA,gBATkBA,CAUjB+lG,GAEGrnD,EAAarxE,IACjB,MAAO8xB,EAAQw/C,GAAavqE,IAAM8X,UAAS,GAI3C,OAHA9X,IAAMqX,UAAU,KACd6xD,EAAO/9C,OAAOl1B,KAAK,IAAMs0E,GAAU,KAClC,IACIx/C,EAAS,cAACuvC,EAAD,KAAUrhE,IAAY,MAGzBqxE,O,cC9Mfl6E,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,KAAK,OAAS,KAAK,QAAU,YAAY,KAAO,OAAO,MAAQ,8BAA8B,QAAU,oP,cCA/IC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,KAAK,OAAS,KAAK,QAAU,YAAY,KAAO,OAAO,MAAQ,8BAA8B,QAAU,8O,cCA/IC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,KAAK,OAAS,KAAK,QAAU,YAAY,KAAO,OAAO,MAAQ,8BAA8B,QAAU,gQ,cCA/IC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,KAAK,OAAS,KAAK,QAAU,YAAY,KAAO,OAAO,MAAQ,8BAA8B,QAAU,kQ,cCA/IC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,KAAK,OAAS,KAAK,QAAU,YAAY,KAAO,OAAO,MAAQ,8BAA8B,QAAU,mR,cCA/IC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,KAAK,OAAS,KAAK,QAAU,YAAY,KAAO,OAAO,MAAQ,8BAA8B,QAAU,mR,cCA/IC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,qF,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,4R,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,+iB,6BCAjI,uOAgBA,MAAMyhI,EAAe9+H,IAAS,CAAD,sIAAC,IAAM,6CAAP,qMAEvB++H,EAAgB,CAACz+F,EAASmJ,IAE5B,cAAC,SAAD,CACE54B,UAAU,0DACV44B,SAAUA,EACVnJ,QAASA,EAHX,SAKE,cAAC,KAAD,CAAMriC,KAAM+gI,IAAgBvqG,KAAK,OAAOgM,KAAK,YAI7Cw+F,EAAiB,CAAC3+F,EAASmJ,IAE7B,cAAC,SAAD,CACE54B,UAAU,2DACV44B,SAAUA,EACVnJ,QAASA,EAHX,SAKE,cAAC,KAAD,CAAMriC,KAAMihI,IAAiBzqG,KAAK,WAKlC0qG,EAAwB,CAAC7+F,EAAS8+F,IACtC,cAAC,SAAD,CACEr+H,KAAK,SACL8P,UAAU,6DACVyvB,QAASA,EACTxtB,aAAW,0BAJb,SAMGssH,EACC,cAAC,KAAD,CAAMnhI,KAAMohI,IAAiB5qG,KAAK,SAElC,cAAC,KAAD,CAAMx2B,KAAMqhI,IAAgB7qG,KAAK,WAKjC8qG,EAAyB,CAACj/F,EAASk/F,IAErC,cAAC,SAAD,CACEz+H,KAAK,SACL8P,UAAU,mEACVyvB,QAASA,EACTxtB,aAAW,kBAJb,SAMG0sH,EACC,cAAC,KAAD,CAAMvhI,KAAMwhI,IAAoBhrG,KAAK,SAErC,cAAC,KAAD,CAAMx2B,KAAMyhI,IAAsBjrG,KAAK,WAMzCkrG,EAAuB,EAAGlrH,YAC9B,MAAM,SAAElT,GAAaC,IACf4pF,EAAc32E,EAAMvO,OACvBwH,GACCnM,EAASmoC,aAAa34B,SAASrD,EAAQ,WAAaA,EAAQ42D,aAE1Ds7D,EAAax0C,EAAYlnF,IAAKwQ,IAC3B,CACLmrH,SAAW,GAAE3qG,YAAgBxgB,EAAK,oBAChCA,EAAK4vD,oBAEPw7D,UAAY,GAAE5qG,YAAgBxgB,EAAK,oBACjCA,EAAK4vD,uBAKX,OACE8mB,EAAYzoF,OAAS,GACnB,cAACm8H,EAAD,CACErqH,MAAOmrH,EACPb,cAAeA,EACfE,eAAgBA,EAChBE,sBAAuBA,EACvBI,uBAAwBA,EACxBQ,UAAU,KAUHJ,O,cC5GfriI,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,oH,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,6J,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,kQ,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,wV,cCAjIC,EAAOD,QAAUyC,QAAQ,sB,6BCAzB,uDAEO,MAAMq3B,EAAY,CACvBqlD,mBAAoBx8E,IAASggI,IAAT,uIAAa,IAAM,6CAAnB,qMACpBrjD,mBAAoB38E,IAASggI,IAAT,wIAAa,IAAM,6CAAnB,qMACpBliD,UAAW99E,IAASggI,IAAT,iJAAa,IAAM,6CAAnB,qMACXlM,SAAU9zH,IAASggI,IAAT,kIAAa,IAAM,4CAAnB,oMACVlmG,YAAa95B,IAASggI,IAAT,gIAAa,IAAM,6CAAnB,oMAA2C,CAAEC,KAAK,IAC/D7mG,YAAap5B,IAASggI,IAAT,gIAAa,IAAM,6CAAnB,oMAA2C,CAAEC,KAAK,IAC/DjmG,iBAAkBh6B,IAASggI,IAAT,sIAAa,IAAM,6CAAnB,oMAAiD,CACjEC,KAAK,IAEPC,yBAA0BlgI,IAASggI,IAAT,+IACxB,IAAM,6CADkB,oMAExB,CAAEC,KAAK,IAET1B,iBAAkBv+H,IAASggI,IAAT,sIAAa,IAAM,6CAAnB,oMAAiD,CACjEC,KAAK,IAEP7wE,sBAAuBpvD,IAASggI,IAAT,0IAAa,IAAM,6CAAnB,oMAAqD,CAC1EC,KAAK,IAEPE,2BAA4BngI,IAASggI,IAAT,gJAC1B,IAAM,6CADoB,oMAE1B,CACEC,KAAK,IAGT10B,QAASvrG,IAASggI,IAAT,wHAAa,IAAM,6CAAnB,qMACTt5F,OAAQ1mC,IAASggI,IAAT,0HAAa,IAAM,6CAAnB,qMACRp6E,WAAY5lD,IAASggI,IAAT,+HAAa,IAAM,6CAAnB,qMACZzzD,SAAUvsE,IAASggI,IAAT,6HAAa,IAAM,6CAAnB,qMACVvK,qBAAsBz1H,IAASggI,IAAT,2IAAa,IAAM,6CAAnB,qMACtB/rD,kBAAmBj0E,IAASggI,IAAT,uIAAa,IAAM,6CAAnB,qMAGnBx/C,aAAcxgF,IAASggI,IAAT,6HAAa,IAAM,6CAAnB,qMACdvpD,QAASz2E,IAASggI,IAAT,4HAAa,IAAM,6CAAnB,qMACTI,6BAA8BpgI,IAASggI,IAAT,mJAAa,IACzC,6CAD4B,qMAG9BjmD,eAAgB/5E,IAASggI,IAAT,mIAAa,IAAM,6CAAnB,qMAChBtpD,2BAA4B12E,IAASggI,IAAT,kJAAa,IACvC,6CAD0B,qMAG5BzpD,kBAAmBv2E,IAASggI,IAAT,wIAAa,IAAM,6CAAnB,qMACnB7Y,2BAA4BnnH,IAASggI,IAAT,kJAAa,IACvC,6CAD0B,qMAG5B9X,+BAAgCloH,IAASggI,IAAT,sKAAa,IAC3C,6CAD8B,qMAGhC5X,8BAA+BpoH,IAASggI,IAAT,qKAAa,IAC1C,6CAD6B,qMAG/Bla,oBAAqB9lH,IAASggI,IAAT,0IAAa,IAAM,6CAAnB,uM,cCvDvB1iI,EAAOD,QAAUyC,QAAQ,yB,cCAzBxC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,oS,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,2Z,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,mjB,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,otB,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,uS,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,ivD,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,kyB,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,yR,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,knF,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,qsC,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,sa,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,wH,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,u3F,cCAjIC,EAAOD,QAAU,CAAC,WAAa,CAAC,MAAQ,6BAA6B,MAAQ,KAAK,OAAS,KAAK,QAAU,aAAa,QAAU,qU,cCAjIC,EAAOD,QAAUyC,QAAQ,gB,cCAzBxC,EAAOD,QAAUyC,QAAQ,mB,cCAzBxC,EAAOD,QAAUyC,QAAQ,6B,sRCCzB,MAAMugI,EAAwB,CAAC,OAAQ,UA4FxB3F,IA1FK54E,IAAW,MAC7B,MAAM,SAAEvgD,GAAaC,IACrB,IAAI8+H,OAAgBt+E,EAsDpB,GA3CMriD,QAAQwR,IAAI8wC,oBACTq+E,IACHA,EAAgB,IAElBA,EAAcC,WAAa5gI,QAAQwR,IAAI8wC,mBAErCq+E,IACE3gI,QAAQwR,IAAIqvH,+BACdF,EAAcG,cAAgB59G,KAAKC,MACjCnjB,QAAQwR,IAAIqvH,+BAGZ7gI,QAAQwR,IAAIuvH,wBACTJ,EAAcG,gBACjBH,EAAcG,cAAgB,IAEhCH,EAAcG,cAAcE,QAAUhhI,QAAQwR,IAAIuvH,wBA2BpDJ,GAAiB/+H,SAAJ,UAAIA,EAAU++G,qBAAd,OAAI,EAAyBsgB,IAAK,WACjD,IAAIC,E,iWAAiB,CAAH,GACbt/H,EAAS++G,eAKd,GAHA,UAAIggB,SAAJ,OAAI,EAAeC,aACjBM,EAAeD,IAAMN,EAAcC,iBAEAz6H,KAApB,QAAb,EAAAw6H,SAAA,eAAeG,eAA6B,CAC9BriI,OAAO+D,KAAKm+H,EAAcG,eAClChgI,QAASwV,IACVoqH,EAAsBtvH,SAASkF,KAClC4qH,EAAe5qH,GAASqqH,EAAcG,cAAcxqH,MAYV,YAAhD,GARA6rC,EAAOg/E,KAAKD,GACRA,WAAgBt1H,MAClBu2C,EAAOi/E,QAAQF,EAAet1H,MAE5Bs1H,WAAgBG,QAClBl/E,EAAOM,UAAUy+E,EAAeG,aAGGl7H,KAApB,QAAb,EAAAw6H,SAAA,eAAeG,oBAC0B36H,KAA1B,QAAb,EAAAw6H,SAAA,mBAAeG,qBAAf,eAA8Bl1H,OAChCu2C,EAAOi/E,QAAQT,EAAcG,cAAcl1H,WAEAzF,KAA5B,QAAb,EAAAw6H,SAAA,mBAAeG,qBAAf,eAA8BO,SAChCl/E,EAAOM,UAAUk+E,EAAcG,cAAcO,W,+DCvFrD,oBAOqBxsG,e,cCPrBl3B,EAAOD,QAAU,SAAS4jI,GACzB,IAAKA,EAAeC,gBAAiB,CACpC,IAAI5jI,EAASc,OAAOY,OAAOiiI,GAEtB3jI,EAAO2S,WAAU3S,EAAO2S,SAAW,IACxC7R,OAAOC,eAAef,EAAQ,SAAU,CACvCgB,YAAY,EACZC,IAAK,WACJ,OAAOjB,EAAOE,KAGhBY,OAAOC,eAAef,EAAQ,KAAM,CACnCgB,YAAY,EACZC,IAAK,WACJ,OAAOjB,EAAOC,KAGhBa,OAAOC,eAAef,EAAQ,UAAW,CACxCgB,YAAY,IAEbhB,EAAO4jI,gBAAkB,EAE1B,OAAO5jI,I,cCtBRA,EAAOD,QAAUyC,QAAQ,oB,cCCzBxC,EAAOD,QAAU,I,6BCDjB,sDAkBe,SAAS8jI,EAAY3/H,GAElC,OAAOA,I,cCnBTlE,EAAOD,QAAU,I,s2kVCDjBC,EAAOD,QAAUyC,QAAQ,oC,gECGzB,MAAMshI,EAAU,CAAC,eAAgB,sBAAuB,iBAExD,SAASC,EAAgB/gI,EAAK8/B,EAAKmW,GACjCvzC,YAAuB1C,GACpB6C,KAAMm+H,IAELF,EAAQ3gI,QAAS8tE,IACX+yD,EAAStgI,QAAQutE,IACnBnuC,EAAIl+B,IAAIqsE,EAAQ+yD,EAAStgI,QAAQutE,MAGrCnuC,EAAIh+B,KAAKk/H,EAASx+H,QAEnBM,MAAMmzC,GCbX,MAAM6qF,EAAU,CAAC,eAAgB,sBAAuB,iBAExD,SAASG,EAAejhI,EAAK8/B,EAAKmW,GAChCvzC,YAAuB1C,GACpB6C,KAAMm+H,IAELF,EAAQ3gI,QAAS8tE,IACX+yD,EAAStgI,QAAQutE,IACnBnuC,EAAIl+B,IAAIqsE,EAAQ+yD,EAAStgI,QAAQutE,MAGrCnuC,EAAIh+B,KAAKk/H,EAASx+H,QAEnBM,MAAMmzC,GCJX,MAAMirF,EAAc,SAAUlhI,EAAK8/B,EAAKmW,GACtCphC,YAAe7U,GAAK6C,KAAMs+H,IACxBrhG,EAAIl+B,IAAI,eAAgB,cACxBk+B,EAAIh+B,KAAKq/H,MAIPC,EAAY,SAAUphI,EAAK8/B,EAAKmW,GACpCnW,EAAIr/B,KAAK,cACTq/B,EAAIh+B,KAAKzC,QAAQwR,IAAIwwH,kBClBhB,MAAMC,EAAU,SAAUthI,EAAK8/B,EAAKmW,GACzCliC,YAAgB/T,GAAK6C,KAAMy+H,IAMlB,MALH7sH,OAAO8sH,SAASD,IAClBxhG,EAAIl+B,IAAI,eAAgB,sBACxBk+B,EAAIl+B,IAAI,mBAAoB,QAC5Bk+B,EAAIl+B,IAAI,sBAAuB,yCAC/Bk+B,EAAIh+B,KAAKw/H,KAGTxhG,EAAIv9B,OAAO,KAEXu9B,EAAIh+B,KAAM,8BAAD,UAA6Bw/H,EAAQh/H,YAArC,QAA6C,UAK7C,I,yRCRf,MAAMsD,EAAS,SAAUgO,EAAU5T,GAEjC,OAAOkB,IAAOD,SAASw3C,mBAAqB7kC,EAASvS,WAAW,aAGlE,IAAImgI,EAAO,KAIX,SAASC,IACP,GAAID,EACF,OAAOA,EAGT,MAAMhY,EAAa9xE,gBAASx2C,IAAOD,SAASM,SACtCmgI,EAAWhqF,gBAASx2C,IAAOD,SAASw3C,mBACpCkpF,EAAa,GAAED,EAASl7G,aAAak7G,EAAS/qF,OAC9CirF,EAAeF,EAAS9tH,SAQ9B,OANA4tH,EAAO,CACLhY,aACAmY,YACAC,gBAGKJ,EC9BT,MAAMvgI,EAAW,CACf80C,kBAAmB,CDgCN,WAAY,QACzB,MAAMD,EAAaN,IAAQqsF,SACrBC,EAAWC,gCAAsBn8H,E,iWAAD,EACpCo8H,oBAAoB,EACpBC,WAAYC,8BACVviD,MAAOwiD,EAAgBC,EAAUpiI,EAAK8/B,IAC7BqiG,GAGXE,WAAY,CAACC,EAAUtiI,EAAK8/B,KAE1B,IAAK9/B,EAAIwC,OAAS1E,OAAO+D,KAAK7B,EAAIwC,MAAMH,OACtC,OAGF,MAAMw2F,EAAcypC,EAASC,UAAU,gBACjCC,EAAaC,IACjBH,EAASI,UAAU,iBAAkBjuH,OAAOkuH,WAAWF,IACvDH,EAASM,MAAMH,IAGb5pC,EAAYpoF,SAAS,qBACvB+xH,EAAUjgH,KAAK2Q,UAAUlzB,EAAIwC,OAG3Bq2F,EAAYpoF,SAAS,sCACvB+xH,EAAU5pF,IAAY1lB,UAAUlzB,EAAIwC,QAIxCkR,OAAS1T,IACP,MAAM,UAAE2hI,GAAcF,IACtB,OAAOE,GAETkB,YAAa,CAACviI,EAAMN,KAClB,MAAM,WAAEwpH,EAAF,aAAcoY,GAAiBH,IAKrC,MAAQ,GAHNvgI,IAAOD,SAAS2oH,oBACf,yBAAwBJ,EAAWC,YAAYD,EAAWH,OAAOuY,8BAEjDthI,EAAKwE,QAAQ,WAAY,OAE9Cg+H,SAAUzjI,QAAQwR,IAAIkyH,UAAY,QAAU,WACxC,UAAA7hI,IAAOD,gBAAP,mBAAiB2oH,0BAAjB,eAAqCvoH,WAAW,WAAY,CAC9D2hI,cAAc,EACd38G,QAAQ,KAOZ,OAHAyvB,EAAWE,IAAI,IAAK8rF,GACpBhsF,EAAWjuC,GAAK,WAETiuC,ECnFLmtF,GJWW,WACb,MAAMntF,EAAaN,IAAQqsF,SAI3B,OAFA/rF,EAAWE,IAAI,CAAC,kBAAmB,uBAAwBirF,GAC3DnrF,EAAWjuC,GAAK,0BACTiuC,EIfLotF,GLUW,WACb,MAAMptF,EAAaN,IAAQqsF,SAI3B,OAFA/rF,EAAWE,IAAI,CAAC,iBAAkB+qF,GAClCjrF,EAAWjuC,GAAK,0BACTiuC,EKdLqtF,GHcW,WACb,MAAMrtF,EAAaN,IAAQqsF,SAO3B,OANIxiI,QAAQwR,IAAIwwH,gBACdvrF,EAAWE,IAAI,gBAAiBorF,GAEhCtrF,EAAWE,IAAI,gBAAiBkrF,GAElCprF,EAAWjuC,GAAK,aACTiuC,EGrBLstF,GFQW,WACb,MAAMttF,EAAaN,IAAQqsF,SAI3B,OAFA/rF,EAAWE,IAAI,oBAAqBsrF,GACpCxrF,EAAWjuC,GAAK,iBACTiuC,EEZLutF,IAEFlrF,gBAAiB,sBACjBJ,gBAAiB,KACjBrlC,eAAgB,CAAEwlC,YAAY,IAGjBj3C","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"0\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// The chunk loading function for additional chunks\n \t// Since all referenced chunks are already included\n \t// in this file, this function is empty here.\n \t__webpack_require__.e = function requireEnsure() {\n \t\treturn Promise.resolve();\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// uncaught error handler for webpack runtime\n \t__webpack_require__.oe = function(err) {\n \t\tprocess.nextTick(function() {\n \t\t\tthrow err; // catch this error by using import().catch()\n \t\t});\n \t};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 486);\n","module.exports = require(\"react/jsx-runtime\");","module.exports = require(\"semantic-ui-react\");","/**\n * Point of contact for component modules. This file is quite sensitive regarding the\n * order in which it's loaded. e.g. if the component depends on others to work, it\n * should ideally be loaded after them. If you start seeing imported components as\n * undefined, check the order of imports in this file.\n * @module components\n */\nimport loadable from '@loadable/component';\n\n//  Do not lazy load them, since it has not much sense (they will live in the main chunk)\n// The App and View component are deliberatelly left out of this index.js file!\n// They should be used by Volto and only by Volto internally\nexport AppExtras from '@plone/volto/components/theme/AppExtras/AppExtras';\nexport Header from '@plone/volto/components/theme/Header/Header';\nexport Logo from '@plone/volto/components/theme/Logo/Logo';\nexport Anontools from '@plone/volto/components/theme/Anontools/Anontools';\nexport Navigation from '@plone/volto/components/theme/Navigation/Navigation';\nexport Breadcrumbs from '@plone/volto/components/theme/Breadcrumbs/Breadcrumbs';\nexport SearchWidget from '@plone/volto/components/theme/SearchWidget/SearchWidget';\nexport Footer from '@plone/volto/components/theme/Footer/Footer';\nexport Title from '@plone/volto/components/theme/Title/Title';\nexport DefaultView from '@plone/volto/components/theme/View/DefaultView';\nexport Pagination from '@plone/volto/components/theme/Pagination/Pagination';\nexport Tags from '@plone/volto/components/theme/Tags/Tags';\nexport OutdatedBrowser from '@plone/volto/components/theme/OutdatedBrowser/OutdatedBrowser';\nexport LanguageSelector from '@plone/volto/components/theme/LanguageSelector/LanguageSelector';\nexport RenderBlocks from '@plone/volto/components/theme/View/RenderBlocks';\nexport SkipLinks from '@plone/volto/components/theme/SkipLinks/SkipLinks';\nexport EventDetails from '@plone/volto/components/theme/EventDetails/EventDetails';\nexport PreviewImage from '@plone/volto/components/theme/PreviewImage/PreviewImage';\n\nexport Error from '@plone/volto/components/theme/Error/Error';\nexport NotFound from '@plone/volto/components/theme/NotFound/NotFound';\nexport Forbidden from '@plone/volto/components/theme/Forbidden/Forbidden';\nexport Unauthorized from '@plone/volto/components/theme/Unauthorized/Unauthorized';\n\nexport Avatar from '@plone/volto/components/theme/Avatar/Avatar';\nexport Icon from '@plone/volto/components/theme/Icon/Icon';\nexport ConditionalLink from '@plone/volto/components/manage/ConditionalLink/ConditionalLink';\nexport UniversalLink from '@plone/volto/components/manage/UniversalLink/UniversalLink';\nexport LinkMore from '@plone/volto/components/manage/LinkMore/LinkMore';\n\n// Lazy load them, since we want them and its deps to be in its own chunk\nexport ContactForm from '@plone/volto/components/theme/ContactForm/ContactForm';\nexport Login from '@plone/volto/components/theme/Login/Login';\nexport Logout from '@plone/volto/components/theme/Logout/Logout';\nexport Sitemap from '@plone/volto/components/theme/Sitemap/Sitemap';\nexport Search from '@plone/volto/components/theme/Search/Search';\nexport Comments from '@plone/volto/components/theme/Comments/Comments';\nexport SocialSharing from '@plone/volto/components/theme/SocialSharing/SocialSharing';\nexport Register from '@plone/volto/components/theme/Register/Register';\nexport PasswordReset from '@plone/volto/components/theme/PasswordReset/PasswordReset';\nexport RequestPasswordReset from '@plone/volto/components/theme/PasswordReset/RequestPasswordReset';\nexport ChangePassword from '@plone/volto/components/manage/Preferences/ChangePassword';\nexport PersonalPreferences from '@plone/volto/components/manage/Preferences/PersonalPreferences';\nexport PersonalInformation from '@plone/volto/components/manage/Preferences/PersonalInformation';\nexport CreateTranslation from '@plone/volto/components/manage/Multilingual/CreateTranslation';\nexport TranslationObject from '@plone/volto/components/manage/Multilingual/TranslationObject';\nexport CompareLanguages from '@plone/volto/components/manage/Multilingual/CompareLanguages';\n\nexport FileView from '@plone/volto/components/theme/View/FileView';\nexport ImageView from '@plone/volto/components/theme/View/ImageView';\nexport NewsItemView from '@plone/volto/components/theme/View/NewsItemView';\n\nexport const EventView = loadable(() =>\n  import('@plone/volto/components/theme/View/EventView'),\n);\n\nexport ListingView from '@plone/volto/components/theme/View/ListingView';\nexport SummaryView from '@plone/volto/components/theme/View/SummaryView';\nexport TabularView from '@plone/volto/components/theme/View/TabularView';\nexport AlbumView from '@plone/volto/components/theme/View/AlbumView';\n\nexport Actions from '@plone/volto/components/manage/Actions/Actions';\nexport Add from '@plone/volto/components/manage/Add/Add';\nexport AddonsControlpanel from '@plone/volto/components/manage/Controlpanels/AddonsControlpanel';\nexport Contents from '@plone/volto/components/manage/Contents/Contents';\nexport Circle from '@plone/volto/components/manage/Contents/circle';\nexport DatabaseInformation from '@plone/volto/components/manage/Controlpanels/DatabaseInformation';\nexport Controlpanel from '@plone/volto/components/manage/Controlpanels/Controlpanel';\nexport Controlpanels from '@plone/volto/components/manage/Controlpanels/Controlpanels';\nexport ContentTypes from '@plone/volto/components/manage/Controlpanels/ContentTypes';\nexport ContentType from '@plone/volto/components/manage/Controlpanels/ContentType';\nexport ContentTypeLayout from '@plone/volto/components/manage/Controlpanels/ContentTypeLayout';\nexport ContentTypeSchema from '@plone/volto/components/manage/Controlpanels/ContentTypeSchema';\nexport ContentTypesActions from '@plone/volto/components/manage/Controlpanels/ContentTypesActions';\nexport UsersControlpanel from '@plone/volto/components/manage/Controlpanels/Users/UsersControlpanel';\nexport UserGroupMembershipControlPanel from '@plone/volto/components/manage/Controlpanels/Users/UserGroupMembershipControlPanel';\nexport GroupsControlpanel from '@plone/volto/components/manage/Controlpanels/Groups/GroupsControlpanel';\nexport ModerateComments from '@plone/volto/components/manage/Controlpanels/ModerateComments';\nexport VersionOverview from '@plone/volto/components/manage/Controlpanels/VersionOverview';\nexport Delete from '@plone/volto/components/manage/Delete/Delete';\nexport Diff from '@plone/volto/components/manage/Diff/Diff';\nexport Display from '@plone/volto/components/manage/Display/Display';\nexport Edit from '@plone/volto/components/manage/Edit/Edit';\nexport ModalForm from '@plone/volto/components/manage/Form/ModalForm';\nexport History from '@plone/volto/components/manage/History/History';\nexport Sharing from '@plone/volto/components/manage/Sharing/Sharing';\nexport Workflow from '@plone/volto/components/manage/Workflow/Workflow';\nexport Messages from '@plone/volto/components/manage/Messages/Messages';\nexport BlockChooser from '@plone/volto/components/manage/BlockChooser/BlockChooser';\nexport BlockChooserButton from '@plone/volto/components/manage/BlockChooser/BlockChooserButton';\nexport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nexport Sidebar from '@plone/volto/components/manage/Sidebar/Sidebar';\nexport SidebarPopup from '@plone/volto/components/manage/Sidebar/SidebarPopup';\nexport SidebarPortal from '@plone/volto/components/manage/Sidebar/SidebarPortal';\nexport PersonalTools from '@plone/volto/components/manage/Toolbar/PersonalTools';\nexport More from '@plone/volto/components/manage/Toolbar/More';\nexport Types from '@plone/volto/components/manage/Toolbar/Types';\nexport Toast from '@plone/volto/components/manage/Toast/Toast';\nexport ManageTranslations from '@plone/volto/components/manage/Multilingual/ManageTranslations';\n\n// Potentially could ve removed from index, since they are internal components and\n// we don't want them to end up in the main chunk\nexport Form from '@plone/volto/components/manage/Form/Form';\nexport BlocksToolbar from '@plone/volto/components/manage/Form/BlocksToolbar';\nexport UndoToolbar from '@plone/volto/components/manage/Form/UndoToolbar';\nexport Field from '@plone/volto/components/manage/Form/Field';\nexport SearchTags from '@plone/volto/components/theme/Search/SearchTags';\nexport CommentEditModal from '@plone/volto/components/theme/Comments/CommentEditModal';\nexport ContentsBreadcrumbs from '@plone/volto/components/manage/Contents/ContentsBreadcrumbs';\nexport ContentsIndexHeader from '@plone/volto/components/manage/Contents/ContentsIndexHeader';\nexport ContentsItem from '@plone/volto/components/manage/Contents/ContentsItem';\nexport ContentsUploadModal from '@plone/volto/components/manage/Contents/ContentsUploadModal';\nexport ContentsPropertiesModal from '@plone/volto/components/manage/Contents/ContentsPropertiesModal';\nexport ContentsRenameModal from '@plone/volto/components/manage/Contents/ContentsRenameModal';\nexport ContentsWorkflowModal from '@plone/volto/components/manage/Contents/ContentsWorkflowModal';\nexport ContentsTagsModal from '@plone/volto/components/manage/Contents/ContentsTagsModal';\nexport RenderUsers from '@plone/volto/components/manage/Controlpanels/Users/RenderUsers';\nexport RenderGroups from '@plone/volto/components/manage/Controlpanels/Groups/RenderGroups';\nexport DiffField from '@plone/volto/components/manage/Diff/DiffField';\nexport DragDropList from '@plone/volto/components/manage/DragDropList/DragDropList';\nexport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nexport BlocksForm from '@plone/volto/components/manage/Blocks/Block/BlocksForm';\nexport BlockDataForm from '@plone/volto/components/manage/Form/BlockDataForm';\n\nexport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\nexport ArrayWidget from '@plone/volto/components/manage/Widgets/ArrayWidget';\nexport CheckboxWidget from '@plone/volto/components/manage/Widgets/CheckboxWidget';\n\nexport const DatetimeWidget = loadable(() =>\n  import('@plone/volto/components/manage/Widgets/DatetimeWidget'),\n);\nexport const RecurrenceWidget = loadable(() =>\n  import(\n    '@plone/volto/components/manage/Widgets/RecurrenceWidget/RecurrenceWidget'\n  ),\n);\n\nexport FileWidget from '@plone/volto/components/manage/Widgets/FileWidget';\nexport IdWidget from '@plone/volto/components/manage/Widgets/IdWidget';\nexport PasswordWidget from '@plone/volto/components/manage/Widgets/PasswordWidget';\nexport ReferenceWidget from '@plone/volto/components/manage/Widgets/ReferenceWidget';\nexport SchemaWidget from '@plone/volto/components/manage/Widgets/SchemaWidget';\nexport SchemaWidgetFieldset from '@plone/volto/components/manage/Widgets/SchemaWidgetFieldset';\nexport SelectWidget from '@plone/volto/components/manage/Widgets/SelectWidget';\nexport TextareaWidget from '@plone/volto/components/manage/Widgets/TextareaWidget';\nexport TextWidget from '@plone/volto/components/manage/Widgets/TextWidget';\nexport WysiwygWidget from '@plone/volto/components/manage/Widgets/WysiwygWidget';\nexport ObjectBrowserWidget from '@plone/volto/components/manage/Widgets/ObjectBrowserWidget';\nexport ObjectBrowserWidgetMode from '@plone/volto/components/manage/Widgets/ObjectBrowserWidget';\nexport ObjectWidget from '@plone/volto/components/manage/Widgets/ObjectWidget';\nexport ObjectListWidget from '@plone/volto/components/manage/Widgets/ObjectListWidget';\n\nexport EditDescriptionBlock from '@plone/volto/components/manage/Blocks/Description/Edit';\nexport EditTitleBlock from '@plone/volto/components/manage/Blocks/Title/Edit';\nexport EditToCBlock from '@plone/volto/components/manage/Blocks/ToC/Edit';\nexport EditTextBlock from '@plone/volto/components/manage/Blocks/Text/Edit';\nexport EditImageBlock from '@plone/volto/components/manage/Blocks/Image/Edit';\nexport EditListingBlock from '@plone/volto/components/manage/Blocks/Listing/Edit';\nexport EditVideoBlock from '@plone/volto/components/manage/Blocks/Video/Edit';\nexport EditBlock from '@plone/volto/components/manage/Blocks/Block/Edit';\nexport EditHeroImageLeftBlock from '@plone/volto/components/manage/Blocks/HeroImageLeft/Edit';\nexport ViewHeroImageLeftBlock from '@plone/volto/components/manage/Blocks/HeroImageLeft/View';\nexport EditMapBlock from '@plone/volto/components/manage/Blocks/Maps/Edit';\nexport EditHTMLBlock from '@plone/volto/components/manage/Blocks/HTML/Edit';\n\nexport ViewDescriptionBlock from '@plone/volto/components/manage/Blocks/Description/View';\nexport ViewTitleBlock from '@plone/volto/components/manage/Blocks/Title/View';\nexport ViewToCBlock from '@plone/volto/components/manage/Blocks/ToC/View';\nexport ViewTextBlock from '@plone/volto/components/manage/Blocks/Text/View';\nexport ViewImageBlock from '@plone/volto/components/manage/Blocks/Image/View';\nexport ViewListingBlock from '@plone/volto/components/manage/Blocks/Listing/View';\nexport ViewVideoBlock from '@plone/volto/components/manage/Blocks/Video/View';\nexport ViewMapBlock from '@plone/volto/components/manage/Blocks/Maps/View';\nexport ViewHTMLBlock from '@plone/volto/components/manage/Blocks/HTML/View';\n\nexport ListingBlockBody from '@plone/volto/components/manage/Blocks/Listing/ListingBody';\nexport ListingBlockData from '@plone/volto/components/manage/Blocks/Listing/ListingData';\n\nexport ImageSidebar from '@plone/volto/components/manage/Blocks/Image/ImageSidebar';\nexport MapsSidebar from '@plone/volto/components/manage/Blocks/Maps/MapsSidebar';\nexport VideoSidebar from '@plone/volto/components/manage/Blocks/Video/VideoSidebar';\nexport LeadImageSidebar from '@plone/volto/components/manage/Blocks/LeadImage/LeadImageSidebar';\n\nexport Style from '@plone/volto/components/manage/Blocks/Block/Style';\nexport BlockSettingsSidebar from '@plone/volto/components/manage/Blocks/Block/Settings';\nexport BlockSettingsSchema from '@plone/volto/components/manage/Blocks/Block/Schema';\nexport TextSettingsSchema from '@plone/volto/components/manage/Blocks/Text/Schema';\nexport ImageSettingsSchema from '@plone/volto/components/manage/Blocks/Image/Schema';\nexport ToCSettingsSchema from '@plone/volto/components/manage/Blocks/ToC/Schema';\n\nexport MaybeWrap from '@plone/volto/components/manage/MaybeWrap/MaybeWrap';\nexport ContentMetadataTags from '@plone/volto/components/theme/ContentMetadataTags/ContentMetadataTags';\nexport FormattedDate from '@plone/volto/components/theme/FormattedDate/FormattedDate';\nexport FormattedRelativeDate from '@plone/volto/components/theme/FormattedDate/FormattedRelativeDate';\nexport Component from '@plone/volto/components/theme/Component/Component';\n\nexport App from '@plone/volto/components/theme/App/App';\n","module.exports = require(\"react-intl\");","/**\n * Api helper.\n * @module helpers/Api\n */\n\nimport superagent from 'superagent';\nimport Cookies from 'universal-cookie';\nimport config from '@plone/volto/registry';\nimport { stripQuerystring } from '@plone/volto/helpers';\n\nconst methods = ['get', 'post', 'put', 'patch', 'del'];\n\n/**\n * Format the url.\n * @function formatUrl\n * @param {string} path Path (or URL) to be formatted.\n * @returns {string} Formatted path.\n */\nfunction formatUrl(path) {\n  const { settings } = config;\n  const APISUFIX = settings.legacyTraverse ? '' : '/++api++';\n\n  if (path.startsWith('http://') || path.startsWith('https://')) return path;\n\n  const adjustedPath = path[0] !== '/' ? `/${path}` : path;\n  let apiPath = '';\n  if (settings.internalApiPath && __SERVER__) {\n    apiPath = settings.internalApiPath;\n  } else if (settings.apiPath) {\n    apiPath = settings.apiPath;\n  }\n\n  return `${apiPath}${APISUFIX}${adjustedPath}`;\n}\n\n/**\n * Api class.\n * @class Api\n */\nclass Api {\n  /**\n   * Constructor\n   * @method constructor\n   * @constructs Api\n   */\n  constructor(req) {\n    const cookies = new Cookies();\n\n    methods.forEach((method) => {\n      this[method] = (\n        path,\n        { params, data, type, headers = {}, checkUrl = false } = {},\n      ) => {\n        let request;\n        let promise = new Promise((resolve, reject) => {\n          request = superagent[method](formatUrl(path));\n\n          if (params) {\n            request.query(params);\n          }\n\n          let authToken;\n          if (req) {\n            // We are in SSR\n            authToken = req.universalCookies.get('auth_token');\n          } else {\n            authToken = cookies.get('auth_token');\n          }\n          if (authToken) {\n            request.set('Authorization', `Bearer ${authToken}`);\n          }\n\n          request.set('Accept', 'application/json');\n\n          if (type) {\n            request.type(type);\n          }\n\n          Object.keys(headers).forEach((key) => request.set(key, headers[key]));\n\n          if (data) {\n            request.send(data);\n          }\n\n          request.end((err, response) => {\n            if (\n              checkUrl &&\n              request.url &&\n              request.xhr &&\n              stripQuerystring(request.url) !==\n                stripQuerystring(request.xhr.responseURL)\n            ) {\n              if (request.xhr.responseURL?.length === 0) {\n                return reject({\n                  code: 408,\n                  status: 408,\n                  url: request.xhr.responseURL,\n                });\n              }\n              return reject({\n                code: 301,\n                url: request.xhr.responseURL,\n              });\n            }\n            return err ? reject(err) : resolve(response.body || response.text);\n          });\n        });\n        promise.request = request;\n        return promise;\n      };\n    });\n  }\n}\n\nexport default Api;\n","/**\n * Sitemap helper.\n * @module helpers/Sitemap\n */\n\nimport superagent from 'superagent';\nimport config from '@plone/volto/registry';\n\n/**\n * Get a resource image/file with authenticated (if token exist) API headers\n * @function getAPIResourceWithAuth\n * @param {Object} req Request object\n * @return {string} The response with the image\n */\nexport const getAPIResourceWithAuth = (req) =>\n  new Promise((resolve, reject) => {\n    const { settings } = config;\n    const APISUFIX = settings.legacyTraverse ? '' : '/++api++';\n\n    let apiPath = '';\n    if (settings.internalApiPath && __SERVER__) {\n      apiPath = settings.internalApiPath;\n    } else if (__DEVELOPMENT__ && settings.devProxyToApiPath) {\n      apiPath = settings.devProxyToApiPath;\n    } else {\n      apiPath = settings.apiPath;\n    }\n    const request = superagent\n      .get(`${apiPath}${APISUFIX}${req.path}`)\n      .maxResponseSize(settings.maxResponseSize)\n      .responseType('blob');\n    const authToken = req.universalCookies.get('auth_token');\n    if (authToken) {\n      request.set('Authorization', `Bearer ${authToken}`);\n    }\n    request.then(resolve).catch(reject);\n  });\n","export const ATTRIBUTE_NAMES = {\n  BODY: 'bodyAttributes',\n  HTML: 'htmlAttributes',\n  TITLE: 'titleAttributes',\n};\n\nexport const TAG_NAMES = {\n  BASE: 'base',\n  BODY: 'body',\n  HEAD: 'head',\n  HTML: 'html',\n  LINK: 'link',\n  META: 'meta',\n  NOSCRIPT: 'noscript',\n  SCRIPT: 'script',\n  STYLE: 'style',\n  TITLE: 'title',\n};\n\nexport const VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(\n  (name) => TAG_NAMES[name],\n);\n\nexport const TAG_PROPERTIES = {\n  CHARSET: 'charset',\n  CSS_TEXT: 'cssText',\n  HREF: 'href',\n  HTTPEQUIV: 'http-equiv',\n  INNER_HTML: 'innerHTML',\n  ITEM_PROP: 'itemprop',\n  NAME: 'name',\n  PROPERTY: 'property',\n  REL: 'rel',\n  SRC: 'src',\n  TARGET: 'target',\n};\n\nexport const REACT_TAG_MAP = {\n  accesskey: 'accessKey',\n  charset: 'charSet',\n  class: 'className',\n  contenteditable: 'contentEditable',\n  contextmenu: 'contextMenu',\n  'http-equiv': 'httpEquiv',\n  itemprop: 'itemProp',\n  tabindex: 'tabIndex',\n};\n\nexport const HELMET_PROPS = {\n  DEFAULT_TITLE: 'defaultTitle',\n  DEFER: 'defer',\n  ENCODE_SPECIAL_CHARACTERS: 'encodeSpecialCharacters',\n  ON_CHANGE_CLIENT_STATE: 'onChangeClientState',\n  TITLE_TEMPLATE: 'titleTemplate',\n};\n\nexport const HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce((obj, key) => {\n  obj[REACT_TAG_MAP[key]] = key;\n  return obj;\n}, {});\n\nexport const SELF_CLOSING_TAGS = [\n  TAG_NAMES.NOSCRIPT,\n  TAG_NAMES.SCRIPT,\n  TAG_NAMES.STYLE,\n];\n\nexport const HELMET_ATTRIBUTE = 'data-react-helmet';\n","/* eslint no-console: 0 */\nimport React from 'react';\nimport objectAssign from 'object-assign';\nimport {\n  ATTRIBUTE_NAMES,\n  HELMET_ATTRIBUTE,\n  HELMET_PROPS,\n  HTML_TAG_MAP,\n  REACT_TAG_MAP,\n  SELF_CLOSING_TAGS,\n  TAG_NAMES,\n  TAG_PROPERTIES,\n} from './HelmetConstants.js';\n\nconst encodeSpecialCharacters = (str, encode = true) => {\n  if (encode === false) {\n    return String(str);\n  }\n\n  return String(str)\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n};\n\nconst getTitleFromPropsList = (propsList) => {\n  const innermostTitle = getInnermostProperty(propsList, TAG_NAMES.TITLE);\n  const innermostTemplate = getInnermostProperty(\n    propsList,\n    HELMET_PROPS.TITLE_TEMPLATE,\n  );\n\n  if (innermostTemplate && innermostTitle) {\n    // use function arg to avoid need to escape $ characters\n    return innermostTemplate.replace(/%s/g, () =>\n      Array.isArray(innermostTitle) ? innermostTitle.join('') : innermostTitle,\n    );\n  }\n\n  const innermostDefaultTitle = getInnermostProperty(\n    propsList,\n    HELMET_PROPS.DEFAULT_TITLE,\n  );\n\n  return innermostTitle || innermostDefaultTitle || undefined;\n};\n\nconst getOnChangeClientState = (propsList) => {\n  return (\n    getInnermostProperty(propsList, HELMET_PROPS.ON_CHANGE_CLIENT_STATE) ||\n    (() => {})\n  );\n};\n\nconst getAttributesFromPropsList = (tagType, propsList) => {\n  return propsList\n    .filter((props) => typeof props[tagType] !== 'undefined')\n    .map((props) => props[tagType])\n    .reduce((tagAttrs, current) => {\n      return { ...tagAttrs, ...current };\n    }, {});\n};\n\nconst getBaseTagFromPropsList = (primaryAttributes, propsList) => {\n  return propsList\n    .filter((props) => typeof props[TAG_NAMES.BASE] !== 'undefined')\n    .map((props) => props[TAG_NAMES.BASE])\n    .reverse()\n    .reduce((innermostBaseTag, tag) => {\n      if (!innermostBaseTag.length) {\n        const keys = Object.keys(tag);\n\n        for (let i = 0; i < keys.length; i++) {\n          const attributeKey = keys[i];\n          const lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n          if (\n            primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 &&\n            tag[lowerCaseAttributeKey]\n          ) {\n            return innermostBaseTag.concat(tag);\n          }\n        }\n      }\n\n      return innermostBaseTag;\n    }, []);\n};\n\nconst getTagsFromPropsList = (tagName, primaryAttributes, propsList) => {\n  // Calculate list of tags, giving priority innermost component (end of the propslist)\n  const approvedSeenTags = {};\n\n  return propsList\n    .filter((props) => {\n      if (Array.isArray(props[tagName])) {\n        return true;\n      }\n      if (typeof props[tagName] !== 'undefined') {\n        warn(\n          `Helmet: ${tagName} should be of type \"Array\". Instead found type \"${typeof props[\n            tagName\n          ]}\"`,\n        );\n      }\n      return false;\n    })\n    .map((props) => props[tagName])\n    .reverse()\n    .reduce((approvedTags, instanceTags) => {\n      const instanceSeenTags = {};\n\n      instanceTags\n        .filter((tag) => {\n          let primaryAttributeKey;\n          const keys = Object.keys(tag);\n          for (let i = 0; i < keys.length; i++) {\n            const attributeKey = keys[i];\n            const lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n            // Special rule with link tags, since rel and href are both primary tags, rel takes priority\n            if (\n              primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 &&\n              !(\n                primaryAttributeKey === TAG_PROPERTIES.REL &&\n                tag[primaryAttributeKey].toLowerCase() === 'canonical'\n              ) &&\n              !(\n                lowerCaseAttributeKey === TAG_PROPERTIES.REL &&\n                tag[lowerCaseAttributeKey].toLowerCase() === 'stylesheet'\n              )\n            ) {\n              primaryAttributeKey = lowerCaseAttributeKey;\n            }\n            // Special case for innerHTML which doesn't work lowercased\n            if (\n              primaryAttributes.indexOf(attributeKey) !== -1 &&\n              (attributeKey === TAG_PROPERTIES.INNER_HTML ||\n                attributeKey === TAG_PROPERTIES.CSS_TEXT ||\n                attributeKey === TAG_PROPERTIES.ITEM_PROP)\n            ) {\n              primaryAttributeKey = attributeKey;\n            }\n          }\n\n          if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n            return false;\n          }\n\n          const value = tag[primaryAttributeKey].toLowerCase();\n\n          if (!approvedSeenTags[primaryAttributeKey]) {\n            approvedSeenTags[primaryAttributeKey] = {};\n          }\n\n          if (!instanceSeenTags[primaryAttributeKey]) {\n            instanceSeenTags[primaryAttributeKey] = {};\n          }\n\n          if (!approvedSeenTags[primaryAttributeKey][value]) {\n            instanceSeenTags[primaryAttributeKey][value] = true;\n            return true;\n          }\n\n          return false;\n        })\n        .reverse()\n        .forEach((tag) => approvedTags.push(tag));\n\n      // Update seen tags with tags from this instance\n      const keys = Object.keys(instanceSeenTags);\n      for (let i = 0; i < keys.length; i++) {\n        const attributeKey = keys[i];\n        const tagUnion = objectAssign(\n          {},\n          approvedSeenTags[attributeKey],\n          instanceSeenTags[attributeKey],\n        );\n\n        approvedSeenTags[attributeKey] = tagUnion;\n      }\n\n      return approvedTags;\n    }, [])\n    .reverse();\n};\n\nconst getInnermostProperty = (propsList, property) => {\n  for (let i = propsList.length - 1; i >= 0; i--) {\n    const props = propsList[i];\n\n    if (props.hasOwnProperty(property)) {\n      return props[property];\n    }\n  }\n\n  return null;\n};\n\nconst reducePropsToState = (propsList) => ({\n  baseTag: getBaseTagFromPropsList(\n    [TAG_PROPERTIES.HREF, TAG_PROPERTIES.TARGET],\n    propsList,\n  ),\n  bodyAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.BODY, propsList),\n  defer: getInnermostProperty(propsList, HELMET_PROPS.DEFER),\n  encode: getInnermostProperty(\n    propsList,\n    HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS,\n  ),\n  htmlAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.HTML, propsList),\n  linkTags: getTagsFromPropsList(\n    TAG_NAMES.LINK,\n    [TAG_PROPERTIES.REL, TAG_PROPERTIES.HREF],\n    propsList,\n  ),\n  metaTags: getTagsFromPropsList(\n    TAG_NAMES.META,\n    [\n      TAG_PROPERTIES.NAME,\n      TAG_PROPERTIES.CHARSET,\n      TAG_PROPERTIES.HTTPEQUIV,\n      TAG_PROPERTIES.PROPERTY,\n      TAG_PROPERTIES.ITEM_PROP,\n    ],\n    propsList,\n  ),\n  noscriptTags: getTagsFromPropsList(\n    TAG_NAMES.NOSCRIPT,\n    [TAG_PROPERTIES.INNER_HTML],\n    propsList,\n  ),\n  onChangeClientState: getOnChangeClientState(propsList),\n  scriptTags: getTagsFromPropsList(\n    TAG_NAMES.SCRIPT,\n    [TAG_PROPERTIES.SRC, TAG_PROPERTIES.INNER_HTML],\n    propsList,\n  ),\n  styleTags: getTagsFromPropsList(\n    TAG_NAMES.STYLE,\n    [TAG_PROPERTIES.CSS_TEXT],\n    propsList,\n  ),\n  title: getTitleFromPropsList(propsList),\n  titleAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.TITLE, propsList),\n});\n\nconst rafPolyfill = (() => {\n  let clock = Date.now();\n\n  return (callback) => {\n    const currentTime = Date.now();\n\n    if (currentTime - clock > 16) {\n      clock = currentTime;\n      callback(currentTime);\n    } else {\n      setTimeout(() => {\n        rafPolyfill(callback);\n      }, 0);\n    }\n  };\n})();\n\nconst cafPolyfill = (id) => clearTimeout(id);\n\nconst requestAnimationFrame =\n  typeof window !== 'undefined'\n    ? (window.requestAnimationFrame &&\n        window.requestAnimationFrame.bind(window)) ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      rafPolyfill\n    : global.requestAnimationFrame || rafPolyfill;\n\nconst cancelAnimationFrame =\n  typeof window !== 'undefined'\n    ? window.cancelAnimationFrame ||\n      window.webkitCancelAnimationFrame ||\n      window.mozCancelAnimationFrame ||\n      cafPolyfill\n    : global.cancelAnimationFrame || cafPolyfill;\n\nconst warn = (msg) => {\n  return console && typeof console.warn === 'function' && console.warn(msg);\n};\n\nlet _helmetCallback = null;\n\nconst handleClientStateChange = (newState) => {\n  if (_helmetCallback) {\n    cancelAnimationFrame(_helmetCallback);\n  }\n\n  if (newState.defer) {\n    _helmetCallback = requestAnimationFrame(() => {\n      commitTagChanges(newState, () => {\n        _helmetCallback = null;\n      });\n    });\n  } else {\n    commitTagChanges(newState);\n    _helmetCallback = null;\n  }\n};\n\nconst commitTagChanges = (newState, cb) => {\n  const {\n    baseTag,\n    bodyAttributes,\n    htmlAttributes,\n    linkTags,\n    metaTags,\n    noscriptTags,\n    onChangeClientState,\n    scriptTags,\n    styleTags,\n    title,\n    titleAttributes,\n  } = newState;\n  updateAttributes(TAG_NAMES.BODY, bodyAttributes);\n  updateAttributes(TAG_NAMES.HTML, htmlAttributes);\n\n  updateTitle(title, titleAttributes);\n\n  const tagUpdates = {\n    baseTag: updateTags(TAG_NAMES.BASE, baseTag),\n    linkTags: updateTags(TAG_NAMES.LINK, linkTags),\n    metaTags: updateTags(TAG_NAMES.META, metaTags),\n    noscriptTags: updateTags(TAG_NAMES.NOSCRIPT, noscriptTags),\n    scriptTags: updateTags(TAG_NAMES.SCRIPT, scriptTags),\n    styleTags: updateTags(TAG_NAMES.STYLE, styleTags),\n  };\n\n  const addedTags = {};\n  const removedTags = {};\n\n  Object.keys(tagUpdates).forEach((tagType) => {\n    const { newTags, oldTags } = tagUpdates[tagType];\n\n    if (newTags.length) {\n      addedTags[tagType] = newTags;\n    }\n    if (oldTags.length) {\n      removedTags[tagType] = tagUpdates[tagType].oldTags;\n    }\n  });\n\n  cb && cb();\n\n  onChangeClientState(newState, addedTags, removedTags);\n};\n\nconst flattenArray = (possibleArray) => {\n  return Array.isArray(possibleArray) ? possibleArray.join('') : possibleArray;\n};\n\nconst updateTitle = (title, attributes) => {\n  if (typeof title !== 'undefined' && document.title !== title) {\n    document.title = flattenArray(title);\n  }\n\n  updateAttributes(TAG_NAMES.TITLE, attributes);\n};\n\nconst updateAttributes = (tagName, attributes) => {\n  const elementTag = document.getElementsByTagName(tagName)[0];\n\n  if (!elementTag) {\n    return;\n  }\n\n  const helmetAttributeString = elementTag.getAttribute(HELMET_ATTRIBUTE);\n  const helmetAttributes = helmetAttributeString\n    ? helmetAttributeString.split(',')\n    : [];\n  const attributesToRemove = [].concat(helmetAttributes);\n  const attributeKeys = Object.keys(attributes);\n\n  for (let i = 0; i < attributeKeys.length; i++) {\n    const attribute = attributeKeys[i];\n    const value = attributes[attribute] || '';\n\n    if (elementTag.getAttribute(attribute) !== value) {\n      elementTag.setAttribute(attribute, value);\n    }\n\n    if (helmetAttributes.indexOf(attribute) === -1) {\n      helmetAttributes.push(attribute);\n    }\n\n    const indexToSave = attributesToRemove.indexOf(attribute);\n    if (indexToSave !== -1) {\n      attributesToRemove.splice(indexToSave, 1);\n    }\n  }\n\n  for (let i = attributesToRemove.length - 1; i >= 0; i--) {\n    elementTag.removeAttribute(attributesToRemove[i]);\n  }\n\n  if (helmetAttributes.length === attributesToRemove.length) {\n    elementTag.removeAttribute(HELMET_ATTRIBUTE);\n  } else if (\n    elementTag.getAttribute(HELMET_ATTRIBUTE) !== attributeKeys.join(',')\n  ) {\n    elementTag.setAttribute(HELMET_ATTRIBUTE, attributeKeys.join(','));\n  }\n};\n\nconst updateTags = (type, tags) => {\n  const headElement = document.head || document.querySelector(TAG_NAMES.HEAD);\n  const tagNodes = headElement.querySelectorAll(`${type}[${HELMET_ATTRIBUTE}]`);\n  const oldTags = Array.prototype.slice.call(tagNodes);\n  const newTags = [];\n  let indexToDelete;\n\n  if (tags && tags.length) {\n    tags.forEach((tag) => {\n      const newElement = document.createElement(type);\n\n      for (const attribute in tag) {\n        if (tag.hasOwnProperty(attribute)) {\n          if (attribute === TAG_PROPERTIES.INNER_HTML) {\n            newElement.innerHTML = tag.innerHTML;\n          } else if (attribute === TAG_PROPERTIES.CSS_TEXT) {\n            if (newElement.styleSheet) {\n              newElement.styleSheet.cssText = tag.cssText;\n            } else {\n              newElement.appendChild(document.createTextNode(tag.cssText));\n            }\n          } else {\n            const value =\n              typeof tag[attribute] === 'undefined' ? '' : tag[attribute];\n            newElement.setAttribute(attribute, value);\n          }\n        }\n      }\n\n      newElement.setAttribute(HELMET_ATTRIBUTE, 'true');\n\n      // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.\n      if (\n        oldTags.some((existingTag, index) => {\n          indexToDelete = index;\n          return newElement.isEqualNode(existingTag);\n        })\n      ) {\n        oldTags.splice(indexToDelete, 1);\n      } else {\n        newTags.push(newElement);\n      }\n    });\n  }\n\n  oldTags.forEach((tag) => tag.parentNode.removeChild(tag));\n  newTags.forEach((tag) => headElement.appendChild(tag));\n\n  return {\n    oldTags,\n    newTags,\n  };\n};\n\nconst generateElementAttributesAsString = (attributes) =>\n  Object.keys(attributes).reduce((str, key) => {\n    const attr =\n      typeof attributes[key] !== 'undefined'\n        ? `${key}=\"${attributes[key]}\"`\n        : `${key}`;\n    return str ? `${str} ${attr}` : attr;\n  }, '');\n\nconst generateTitleAsString = (type, title, attributes, encode) => {\n  const attributeString = generateElementAttributesAsString(attributes);\n  const flattenedTitle = flattenArray(title);\n  return attributeString\n    ? `<${type} ${HELMET_ATTRIBUTE}=\"true\" ${attributeString}>${encodeSpecialCharacters(\n        flattenedTitle,\n        encode,\n      )}</${type}>`\n    : `<${type} ${HELMET_ATTRIBUTE}=\"true\">${encodeSpecialCharacters(\n        flattenedTitle,\n        encode,\n      )}</${type}>`;\n};\n\nconst generateTagsAsString = (type, tags, encode) =>\n  tags.reduce((str, tag) => {\n    const attributeHtml = Object.keys(tag)\n      .filter(\n        (attribute) =>\n          !(\n            attribute === TAG_PROPERTIES.INNER_HTML ||\n            attribute === TAG_PROPERTIES.CSS_TEXT\n          ),\n      )\n      .reduce((string, attribute) => {\n        const attr =\n          typeof tag[attribute] === 'undefined'\n            ? attribute\n            : `${attribute}=\"${encodeSpecialCharacters(\n                tag[attribute],\n                encode,\n              )}\"`;\n        return string ? `${string} ${attr}` : attr;\n      }, '');\n\n    const tagContent = tag.innerHTML || tag.cssText || '';\n\n    const isSelfClosing = SELF_CLOSING_TAGS.indexOf(type) === -1;\n\n    return `${str}<${type} ${HELMET_ATTRIBUTE}=\"true\" ${attributeHtml}${\n      isSelfClosing ? `/>` : `>${tagContent}</${type}>`\n    }`;\n  }, '');\n\nconst convertElementAttributestoReactProps = (attributes, initProps = {}) => {\n  return Object.keys(attributes).reduce((obj, key) => {\n    obj[REACT_TAG_MAP[key] || key] = attributes[key];\n    return obj;\n  }, initProps);\n};\n\nconst convertReactPropstoHtmlAttributes = (props, initAttributes = {}) => {\n  return Object.keys(props).reduce((obj, key) => {\n    obj[HTML_TAG_MAP[key] || key] = props[key];\n    return obj;\n  }, initAttributes);\n};\n\nconst generateTitleAsReactComponent = (type, title, attributes) => {\n  // assigning into an array to define toString function on it\n  const initProps = {\n    key: title,\n    [HELMET_ATTRIBUTE]: true,\n  };\n  const props = convertElementAttributestoReactProps(attributes, initProps);\n\n  return [React.createElement(TAG_NAMES.TITLE, props, title)];\n};\n\nconst generateTagsAsReactComponent = (type, tags) =>\n  tags.map((tag, i) => {\n    const mappedTag = {\n      key: i,\n      [HELMET_ATTRIBUTE]: true,\n    };\n\n    Object.keys(tag).forEach((attribute) => {\n      const mappedAttribute = REACT_TAG_MAP[attribute] || attribute;\n\n      if (\n        mappedAttribute === TAG_PROPERTIES.INNER_HTML ||\n        mappedAttribute === TAG_PROPERTIES.CSS_TEXT\n      ) {\n        const content = tag.innerHTML || tag.cssText;\n        mappedTag.dangerouslySetInnerHTML = { __html: content };\n      } else {\n        mappedTag[mappedAttribute] = tag[attribute];\n      }\n    });\n\n    return React.createElement(type, mappedTag);\n  });\n\nconst getMethodsForTag = (type, tags, encode) => {\n  switch (type) {\n    case TAG_NAMES.TITLE:\n      return {\n        toComponent: () =>\n          generateTitleAsReactComponent(\n            type,\n            tags.title,\n            tags.titleAttributes,\n            encode,\n          ),\n        toString: () =>\n          generateTitleAsString(type, tags.title, tags.titleAttributes, encode),\n      };\n    case ATTRIBUTE_NAMES.BODY:\n    case ATTRIBUTE_NAMES.HTML:\n      return {\n        toComponent: () => convertElementAttributestoReactProps(tags),\n        toString: () => generateElementAttributesAsString(tags),\n      };\n    default:\n      return {\n        toComponent: () => generateTagsAsReactComponent(type, tags),\n        toString: () => generateTagsAsString(type, tags, encode),\n      };\n  }\n};\n\nconst mapStateOnServer = ({\n  baseTag,\n  bodyAttributes,\n  encode,\n  htmlAttributes,\n  linkTags,\n  metaTags,\n  noscriptTags,\n  scriptTags,\n  styleTags,\n  title = '',\n  titleAttributes,\n}) => ({\n  base: getMethodsForTag(TAG_NAMES.BASE, baseTag, encode),\n  bodyAttributes: getMethodsForTag(\n    ATTRIBUTE_NAMES.BODY,\n    bodyAttributes,\n    encode,\n  ),\n  htmlAttributes: getMethodsForTag(\n    ATTRIBUTE_NAMES.HTML,\n    htmlAttributes,\n    encode,\n  ),\n  link: getMethodsForTag(TAG_NAMES.LINK, linkTags, encode),\n  meta: getMethodsForTag(TAG_NAMES.META, metaTags, encode),\n  noscript: getMethodsForTag(TAG_NAMES.NOSCRIPT, noscriptTags, encode),\n  script: getMethodsForTag(TAG_NAMES.SCRIPT, scriptTags, encode),\n  style: getMethodsForTag(TAG_NAMES.STYLE, styleTags, encode),\n  title: getMethodsForTag(TAG_NAMES.TITLE, { title, titleAttributes }, encode),\n});\n\nexport { convertReactPropstoHtmlAttributes };\nexport { handleClientStateChange };\nexport { mapStateOnServer };\nexport { reducePropsToState };\nexport { requestAnimationFrame };\nexport { warn };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withSideEffect from 'react-side-effect';\nimport isEqual from 'react-fast-compare';\nimport {\n  convertReactPropstoHtmlAttributes,\n  handleClientStateChange,\n  mapStateOnServer,\n  reducePropsToState,\n  warn,\n} from './HelmetUtils.js';\nimport { TAG_NAMES, VALID_TAG_NAMES } from './HelmetConstants.js';\n\nconst Helmet = (Component) =>\n  class HelmetWrapper extends React.Component {\n    /**\n     * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n     * @param {Object} bodyAttributes: {\"className\": \"root\"}\n     * @param {String} defaultTitle: \"Default Title\"\n     * @param {Boolean} defer: true\n     * @param {Boolean} encodeSpecialCharacters: true\n     * @param {Object} htmlAttributes: {\"lang\": \"en\", \"amp\": undefined}\n     * @param {Array} link: [{\"rel\": \"canonical\", \"href\": \"http://mysite.com/example\"}]\n     * @param {Array} meta: [{\"name\": \"description\", \"content\": \"Test description\"}]\n     * @param {Array} noscript: [{\"innerHTML\": \"<img src='http://mysite.com/js/test.js'\"}]\n     * @param {Function} onChangeClientState: \"(newState) => console.log(newState)\"\n     * @param {Array} script: [{\"type\": \"text/javascript\", \"src\": \"http://mysite.com/js/test.js\"}]\n     * @param {Array} style: [{\"type\": \"text/css\", \"cssText\": \"div { display: block; color: blue; }\"}]\n     * @param {String} title: \"Title\"\n     * @param {Object} titleAttributes: {\"itemprop\": \"name\"}\n     * @param {String} titleTemplate: \"MySite.com - %s\"\n     */\n    static propTypes = {\n      base: PropTypes.object,\n      bodyAttributes: PropTypes.object,\n      children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n      ]),\n      defaultTitle: PropTypes.string,\n      defer: PropTypes.bool,\n      encodeSpecialCharacters: PropTypes.bool,\n      htmlAttributes: PropTypes.object,\n      link: PropTypes.arrayOf(PropTypes.object),\n      meta: PropTypes.arrayOf(PropTypes.object),\n      noscript: PropTypes.arrayOf(PropTypes.object),\n      onChangeClientState: PropTypes.func,\n      script: PropTypes.arrayOf(PropTypes.object),\n      style: PropTypes.arrayOf(PropTypes.object),\n      title: PropTypes.string,\n      titleAttributes: PropTypes.object,\n      titleTemplate: PropTypes.string,\n    };\n\n    static defaultProps = {\n      defer: true,\n      encodeSpecialCharacters: true,\n    };\n\n    // Component.peek comes from react-side-effect:\n    // For testing, you may use a static peek() method available on the returned component.\n    // It lets you get the current state without resetting the mounted instance stack.\n    // Don’t use it for anything other than testing.\n    static peek = Component.peek;\n\n    static rewind = () => {\n      let mappedState = Component.rewind();\n      if (!mappedState) {\n        // provide fallback if mappedState is undefined\n        mappedState = mapStateOnServer({\n          baseTag: [],\n          bodyAttributes: {},\n          encodeSpecialCharacters: true,\n          htmlAttributes: {},\n          linkTags: [],\n          metaTags: [],\n          noscriptTags: [],\n          scriptTags: [],\n          styleTags: [],\n          title: '',\n          titleAttributes: {},\n        });\n      }\n\n      return mappedState;\n    };\n\n    static set canUseDOM(canUseDOM) {\n      Component.canUseDOM = canUseDOM;\n    }\n\n    shouldComponentUpdate(nextProps) {\n      return !isEqual(this.props, nextProps);\n    }\n\n    mapNestedChildrenToProps(child, nestedChildren) {\n      if (!nestedChildren) {\n        return null;\n      }\n\n      // eslint-disable-next-line default-case\n      switch (child.type) {\n        case TAG_NAMES.SCRIPT:\n        case TAG_NAMES.NOSCRIPT:\n          return {\n            innerHTML: nestedChildren,\n          };\n\n        case TAG_NAMES.STYLE:\n          return {\n            cssText: nestedChildren,\n          };\n      }\n\n      throw new Error(\n        `<${child.type} /> elements are self-closing and can not contain children. Refer to our API for more information.`,\n      );\n    }\n\n    flattenArrayTypeChildren({\n      child,\n      arrayTypeChildren,\n      newChildProps,\n      nestedChildren,\n    }) {\n      return {\n        ...arrayTypeChildren,\n        [child.type]: [\n          ...(arrayTypeChildren[child.type] || []),\n          {\n            ...newChildProps,\n            ...this.mapNestedChildrenToProps(child, nestedChildren),\n          },\n        ],\n      };\n    }\n\n    mapObjectTypeChildren({ child, newProps, newChildProps, nestedChildren }) {\n      // eslint-disable-next-line default-case\n      switch (child.type) {\n        case TAG_NAMES.TITLE:\n          return {\n            ...newProps,\n            [child.type]: nestedChildren,\n            titleAttributes: { ...newChildProps },\n          };\n\n        case TAG_NAMES.BODY:\n          return {\n            ...newProps,\n            bodyAttributes: { ...newChildProps },\n          };\n\n        case TAG_NAMES.HTML:\n          return {\n            ...newProps,\n            htmlAttributes: { ...newChildProps },\n          };\n      }\n\n      return {\n        ...newProps,\n        [child.type]: { ...newChildProps },\n      };\n    }\n\n    mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n      let newFlattenedProps = { ...newProps };\n\n      Object.keys(arrayTypeChildren).forEach((arrayChildName) => {\n        newFlattenedProps = {\n          ...newFlattenedProps,\n          [arrayChildName]: arrayTypeChildren[arrayChildName],\n        };\n      });\n\n      return newFlattenedProps;\n    }\n\n    warnOnInvalidChildren(child, nestedChildren) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!VALID_TAG_NAMES.some((name) => child.type === name)) {\n          if (typeof child.type === 'function') {\n            return warn(\n              `You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.`,\n            );\n          }\n\n          return warn(\n            `Only elements types ${VALID_TAG_NAMES.join(\n              ', ',\n            )} are allowed. Helmet does not support rendering <${\n              child.type\n            }> elements. Refer to our API for more information.`,\n          );\n        }\n\n        if (\n          nestedChildren &&\n          typeof nestedChildren !== 'string' &&\n          (!Array.isArray(nestedChildren) ||\n            nestedChildren.some(\n              (nestedChild) => typeof nestedChild !== 'string',\n            ))\n        ) {\n          throw new Error(\n            `Helmet expects a string as a child of <${child.type}>. Did you forget to wrap your children in braces? ( <${child.type}>{\\`\\`}</${child.type}> ) Refer to our API for more information.`,\n          );\n        }\n      }\n\n      return true;\n    }\n\n    mapChildrenToProps(children, newProps) {\n      let arrayTypeChildren = {};\n\n      React.Children.forEach(children, (child) => {\n        if (!child || !child.props) {\n          return;\n        }\n\n        const { children: nestedChildren, ...childProps } = child.props;\n        const newChildProps = convertReactPropstoHtmlAttributes(childProps);\n\n        this.warnOnInvalidChildren(child, nestedChildren);\n\n        switch (child.type) {\n          case TAG_NAMES.LINK:\n          case TAG_NAMES.META:\n          case TAG_NAMES.NOSCRIPT:\n          case TAG_NAMES.SCRIPT:\n          case TAG_NAMES.STYLE:\n            arrayTypeChildren = this.flattenArrayTypeChildren({\n              child,\n              arrayTypeChildren,\n              newChildProps,\n              nestedChildren,\n            });\n            break;\n\n          default:\n            newProps = this.mapObjectTypeChildren({\n              child,\n              newProps,\n              newChildProps,\n              nestedChildren,\n            });\n            break;\n        }\n      });\n\n      newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n      return newProps;\n    }\n\n    render() {\n      const { children, ...props } = this.props;\n      let newProps = { ...props };\n\n      if (children) {\n        newProps = this.mapChildrenToProps(children, newProps);\n      }\n\n      return <Component {...newProps} />;\n    }\n  };\n\nconst NullComponent = () => null;\n\nconst HelmetSideEffects = withSideEffect(\n  reducePropsToState,\n  handleClientStateChange,\n  mapStateOnServer,\n)(NullComponent);\n\nconst HelmetExport = Helmet(HelmetSideEffects);\nHelmetExport.renderStatic = HelmetExport.rewind;\n\nexport { HelmetExport as Helmet };\n\nexport default HelmetExport;\n","import { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport withSideEffect from 'react-side-effect';\n\n/**\n * @export\n * @class BodyClass\n * @extends {Component}\n */\nclass BodyClass extends Component {\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.props.children) {\n      return Children.only(this.props.children);\n    }\n    return null;\n  }\n}\n\nBodyClass.propTypes = {\n  children: PropTypes.element,\n  className: PropTypes.string,\n};\n\nBodyClass.defaultProps = {\n  children: null,\n  className: null,\n};\n\n/**\n * reducePropsToState\n * @function reducePropsToState\n * @param {*} propsList propsList\n * @returns {List} classList\n */\nfunction reducePropsToState(propsList) {\n  let classList = [];\n  propsList.forEach((props) => {\n    if (props.className) {\n      classList = classList.concat(props.className);\n    }\n  });\n  return classList;\n}\n\n/**\n * handleStateChangeOnClient\n * @function handleStateChangeOnClient\n * @param {*} classList classList\n * @returns {null} null\n */\nfunction handleStateChangeOnClient(classList) {\n  document.body.className = '';\n  classList.forEach((className) => {\n    // This allows the component to accept more than one class at the same time\n    if (className.includes(' ')) {\n      className.split(' ').forEach((className) => {\n        if (!document.body.classList.contains(className)) {\n          document.body.classList.add(className);\n        }\n      });\n    } else {\n      if (!document.body.classList.contains(className)) {\n        document.body.classList.add(className);\n      }\n    }\n  });\n}\n\nexport default withSideEffect(\n  reducePropsToState,\n  handleStateChangeOnClient,\n)(BodyClass);\n","let env_obj = {};\nif (typeof window === 'undefined') {\n  if (process.env) {\n    const envs = Object.keys(process.env);\n    const filtered = envs.filter((env) => env.startsWith('RAZZLE_'));\n    env_obj = filtered.reduce(\n      (o, key) => Object.assign(o, { [key]: process.env[key] }),\n      {},\n    );\n  }\n} else {\n  if (window.env) {\n    const envs = Object.keys(window.env);\n    env_obj = envs.reduce(\n      (o, key) => Object.assign(o, { [key]: window.env[key] }),\n      {},\n    );\n  }\n}\nexport const runtimeConfig = env_obj;\n","/**\n * Html helper.\n * @module helpers/Html\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport serialize from 'serialize-javascript';\nimport { join } from 'lodash';\nimport BodyClass from '@plone/volto/helpers/BodyClass/BodyClass';\nimport { runtimeConfig } from '@plone/volto/runtime_config';\nimport config from '@plone/volto/registry';\n\nconst CRITICAL_CSS_TEMPLATE = `function alter() {\n  document.querySelectorAll(\"head link[rel='prefetch']\").forEach(function(el) { el.rel = 'stylesheet'});\n}\nif (window.addEventListener) {\n  window.addEventListener('DOMContentLoaded', alter, false)\n} else {\n  window.onload=alter\n}`;\n\nexport const loadReducers = (state = {}) => {\n  const { settings } = config;\n  return Object.assign(\n    {},\n    ...Object.keys(state).map((name) =>\n      settings.initialReducersBlacklist.includes(name)\n        ? {}\n        : { [name]: state[name] },\n    ),\n  );\n};\n\n/**\n * Html class.\n * Wrapper component containing HTML metadata and boilerplate tags.\n * Used in server-side code only to wrap the string output of the\n * rendered route component.\n *\n * The only thing this component doesn't (and can't) include is the\n * HTML doctype declaration, which is added to the rendered output\n * by the server.js file.\n *\n * Critical.css behaviour: when a file `public/critical.css` is present, the\n * loading of stylesheets is changed. The styles in critical.css are inlined in\n * the generated HTML, and the whole story needs to change completely: instead\n * of treating stylesheets as priority for rendering, we want to defer their\n * loading as much as possible. So we change the stylesheets to be prefetched\n * and we switch their rel back to stylesheets at document ready event.\n *\n * @function Html\n * @param {Object} props Component properties.\n * @param {Object} props.assets Assets to be rendered.\n * @param {Object} props.component Content to be rendered as child node.\n * @param {Object} props.store Store object.\n * @returns {string} Markup of the not found page.\n */\n\n/**\n * Html class.\n * @class Html\n * @extends Component\n */\nclass Html extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    extractor: PropTypes.shape({\n      getLinkElements: PropTypes.func.isRequired,\n      getScriptElements: PropTypes.func.isRequired,\n      getStyleElements: PropTypes.func.isRequired,\n    }).isRequired,\n    markup: PropTypes.string.isRequired,\n    store: PropTypes.shape({\n      getState: PropTypes.func,\n    }).isRequired,\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      extractor,\n      markup,\n      store,\n      criticalCss,\n      apiPath,\n      publicURL,\n    } = this.props;\n    const head = Helmet.rewind();\n    const bodyClass = join(BodyClass.rewind(), ' ');\n    return (\n      <html lang=\"en\">\n        <head>\n          <meta charSet=\"utf-8\" />\n          {head.base.toComponent()}\n          {head.title.toComponent()}\n          {head.meta.toComponent()}\n          {head.link.toComponent()}\n          {head.script.toComponent()}\n\n          <script\n            dangerouslySetInnerHTML={{\n              __html: `window.env = ${serialize({\n                ...runtimeConfig,\n                // Seamless mode requirement, the client need to know where the API is located\n                // if not set in the API_PATH\n                ...(apiPath && {\n                  apiPath,\n                }),\n                ...(publicURL && {\n                  publicURL,\n                }),\n              })};`,\n            }}\n          />\n\n          <link rel=\"icon\" href=\"/favicon.ico\" sizes=\"any\" />\n          <link rel=\"icon\" href=\"/icon.svg\" type=\"image/svg+xml\" />\n          <link\n            rel=\"apple-touch-icon\"\n            sizes=\"180x180\"\n            href=\"/apple-touch-icon.png\"\n          />\n          <link rel=\"manifest\" href=\"/site.webmanifest\" />\n          <meta name=\"generator\" content=\"Plone 6 - https://plone.org\" />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n          <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n          {process.env.NODE_ENV === 'production' && criticalCss && (\n            <style\n              dangerouslySetInnerHTML={{ __html: this.props.criticalCss }}\n            />\n          )}\n          {/* Add the crossorigin while in development */}\n          {extractor.getLinkElements().map((elem) =>\n            React.cloneElement(elem, {\n              crossOrigin:\n                process.env.NODE_ENV === 'production' ? undefined : 'true',\n              rel: !criticalCss\n                ? elem.props.rel\n                : elem.props.as === 'style'\n                ? 'prefetch'\n                : elem.props.rel,\n            }),\n          )}\n          {/* Styles in development are loaded with Webpack's style-loader, in production,\n              they need to be static*/}\n          {process.env.NODE_ENV === 'production' ? (\n            criticalCss ? (\n              <>\n                <script\n                  dangerouslySetInnerHTML={{\n                    __html: CRITICAL_CSS_TEMPLATE,\n                  }}\n                ></script>\n                {extractor.getStyleElements().map((elem) => (\n                  <noscript>\n                    {React.cloneElement(elem, {\n                      rel: 'stylesheet',\n                      crossOrigin:\n                        process.env.NODE_ENV === 'production'\n                          ? undefined\n                          : 'true',\n                    })}\n                  </noscript>\n                ))}\n              </>\n            ) : (\n              extractor.getStyleElements()\n            )\n          ) : undefined}\n        </head>\n        <body className={bodyClass}>\n          <div role=\"navigation\" aria-label=\"Toolbar\" id=\"toolbar\" />\n          <div id=\"main\" dangerouslySetInnerHTML={{ __html: markup }} />\n          <div id=\"sidebar\" />\n          <script\n            dangerouslySetInnerHTML={{\n              __html: `window.__data=${serialize(\n                loadReducers(store.getState()),\n              )};`,\n            }}\n            charSet=\"UTF-8\"\n          />\n          {/* Add the crossorigin while in development */}\n          {this.props.extractScripts !== false\n            ? extractor.getScriptElements().map((elem) =>\n                React.cloneElement(elem, {\n                  crossOrigin:\n                    process.env.NODE_ENV === 'production' ? undefined : 'true',\n                }),\n              )\n            : ''}\n        </body>\n      </html>\n    );\n  }\n}\n\nexport default Html;\n","/**\n * AuthToken helper.\n * @module helpers/AuthToken\n */\n\nimport Cookies from 'universal-cookie';\nimport jwtDecode from 'jwt-decode';\n\nimport { loginRenew } from '@plone/volto/actions';\nimport { getCookieOptions } from '@plone/volto/helpers';\nimport { push } from 'connected-react-router';\n\n/**\n * Get auth token method (does not work in SSR)\n * @method getAuthToken\n * @returns {undefined}\n */\nexport function getAuthToken() {\n  const cookies = new Cookies();\n  return cookies.get('auth_token');\n}\n\n/**\n * Persist auth token method.\n * @method persistAuthToken\n * @param {object} store Redux store.\n * @returns {undefined}\n */\nexport function persistAuthToken(store, req) {\n  const cookies = new Cookies();\n  let currentValue;\n  if (req) {\n    // We are in SSR\n    currentValue = req.universalCookies.get('auth_token');\n  } else {\n    currentValue = cookies.get('auth_token');\n  }\n\n  /**\n   * handleChange method.\n   * @method handleChange\n   * @param {bool} initial Initial call.\n   * @returns {undefined}\n   */\n  function handleChange(initial) {\n    const previousValue = currentValue;\n    const state = store.getState();\n    currentValue = state.userSession.token;\n\n    if (\n      module.hot &&\n      module.hot.data &&\n      module.hot.data.reloaded &&\n      previousValue\n    ) {\n      currentValue = previousValue;\n    }\n\n    if (previousValue !== currentValue || initial) {\n      if (!currentValue) {\n        if (previousValue) {\n          cookies.remove('auth_token', { path: '/' });\n        }\n      } else {\n        if (previousValue !== currentValue) {\n          cookies.set(\n            'auth_token',\n            currentValue,\n            getCookieOptions({\n              expires: new Date(jwtDecode(currentValue).exp * 1000),\n            }),\n          );\n        }\n        const exp =\n          (jwtDecode(store.getState().userSession.token).exp * 1000 -\n            new Date().getTime()) *\n            0.9 || 3600000;\n        setTimeout(() => {\n          if (store.getState().userSession.token) {\n            if (\n              jwtDecode(store.getState().userSession.token).exp * 1000 >\n              new Date().getTime()\n            ) {\n              store.dispatch(loginRenew());\n            } else {\n              // Logout\n              store.dispatch(\n                push(\n                  `/logout?return_url=${\n                    store.getState().router.location.pathname\n                  }`,\n                ),\n              );\n            }\n          }\n        }, exp);\n      }\n    }\n  }\n\n  store.subscribe(handleChange);\n  handleChange(true);\n}\n\nif (module.hot) {\n  module.hot.dispose((data) => {\n    data.reloaded = true;\n  });\n}\n","/**\n * Sitemap helper.\n * @module helpers/Sitemap\n */\n\nimport superagent from 'superagent';\nimport { map } from 'lodash';\nimport zlib from 'zlib';\nimport { toPublicURL } from '@plone/volto/helpers';\n\nimport config from '@plone/volto/registry';\n\n/**\n * Generate sitemap\n * @function generateSitemap\n * @param {Object} _req Request object\n * @return {string} Generated sitemap\n */\nexport const generateSitemap = (_req) =>\n  new Promise((resolve) => {\n    const { settings } = config;\n    const apiPath = settings.internalApiPath ?? settings.apiPath;\n    const request = superagent.get(\n      `${apiPath}/@search?metadata_fields=modified&b_size=100000000&use_site_search_settings=1`,\n    );\n    request.set('Accept', 'application/json');\n    const authToken = _req.universalCookies.get('auth_token');\n    if (authToken) {\n      request.set('Authorization', `Bearer ${authToken}`);\n    }\n    request.end((error, { body } = {}) => {\n      if (error) {\n        resolve(body || error);\n      } else {\n        const items = map(\n          body.items,\n          (item) =>\n            `  <url>\\n    <loc>${toPublicURL(item['@id'])}</loc>\\n\n            <lastmod>${item.modified}</lastmod>\\n  </url>`,\n        );\n        const result = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\">\\n${items.join(\n          '\\n',\n        )}\\n</urlset>`;\n        zlib.gzip(Buffer.from(result, 'utf8'), (_err, buffer) => {\n          resolve(buffer);\n        });\n      }\n    });\n  });\n","/**\n * Sitemap helper.\n * @module helpers/Sitemap\n */\n\nimport superagent from 'superagent';\nimport config from '@plone/volto/registry';\n\n/**\n * Generate robots. Get robots from plone\n * @function generateRobots\n * @param {Object} req Request object\n * @return {string} Generated robots\n */\nexport const generateRobots = (req) =>\n  new Promise((resolve) => {\n    //const url = `${req.protocol}://${req.get('Host')}`;\n    const request = superagent.get(\n      `${\n        config.settings.internalApiPath ?? config.settings.apiPath\n      }/robots.txt`,\n    );\n    request.set('Accept', 'text/plain');\n\n    const authToken = req.universalCookies.get('auth_token');\n    if (authToken) {\n      request.set('Authorization', `Bearer ${authToken}`);\n    }\n\n    request.end((error, { text }) => {\n      if (error) {\n        resolve(text || error);\n      } else {\n        resolve(text);\n      }\n    });\n  });\n","/**\n * Content helper.\n * @module helpers/Content\n */\n\nimport { omitBy, mapKeys, pickBy, map, keys, endsWith, find } from 'lodash';\nimport config from '@plone/volto/registry';\n\n/**\n * Nest content.\n * @function nestContent\n * @param {Object} props Properties.\n * @return {string} Field name of the block\n */\nexport function nestContent(props) {\n  if (!props['@static_behaviors']) {\n    return props;\n  }\n\n  let nestedProps = props;\n\n  map(props['@static_behaviors'], (behavior) => {\n    const values = mapKeys(\n      pickBy(nestedProps, (value, key) => key.indexOf(behavior) !== -1),\n      (value, key) => key.replace(`${behavior}.`, ''),\n    );\n    nestedProps = omitBy(\n      nestedProps,\n      (value, key) => key.indexOf(behavior) !== -1,\n    );\n    nestedProps = {\n      ...nestedProps,\n      [behavior]: values,\n    };\n  });\n  return nestedProps;\n}\n\n/**\n * Get layout field.\n * @function getLayoutFieldname\n * @param {Object} props Properties.\n * @return {string} Field name of the layout\n */\nexport function getLayoutFieldname(props) {\n  return (\n    find(keys(props), (key) => endsWith(key, 'content_layout')) || 'layout'\n  );\n}\n\n/**\n * Get content icon.\n * @description Configurable in config\n * @function getContentIcon\n * @param {string} type Content type\n * @param {boolean} isFolderish\n * @returns {Object} Icon component\n */\nexport function getContentIcon(type, isFolderish) {\n  const { settings } = config;\n  const { contentIcons } = settings;\n\n  if (type in contentIcons) return contentIcons[type];\n  return isFolderish ? contentIcons.Folder : contentIcons.File;\n}\n\n/**\n * Get the language independent fields presents in a schema.\n * @description Configurable in config\n * @function getLanguageIndependentFields\n * @param {string} schema content type JSON Schema serialization\n * @returns {array} List of language independent fields\n */\nexport function getLanguageIndependentFields(schema) {\n  const { properties } = schema;\n  return Object.keys(properties).filter(\n    (field) =>\n      Object.keys(properties[field]).includes('multilingual_options') &&\n      properties[field]['multilingual_options']?.['language_independent'],\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\n/**\n *\n *\n * @class ScrollToTop\n * @extends {Component}\n */\nclass ScrollToTop extends React.Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }).isRequired,\n    children: PropTypes.node.isRequired,\n  };\n\n  /**\n   * @param {*} prevProps Previous Props\n   * @returns {null} Null\n   * @memberof ScrollToTop\n   */\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  /**\n   * @returns {node} Children\n   * @memberof ScrollToTop\n   */\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","const langmap = new Proxy(\n  {\n    ach: {\n      nativeName: 'Lwo',\n      englishName: 'Acholi',\n    },\n    ady: {\n      nativeName: 'Адыгэбзэ',\n      englishName: 'Adyghe',\n    },\n    af: {\n      nativeName: 'Afrikaans',\n      englishName: 'Afrikaans',\n    },\n    'af-NA': {\n      nativeName: 'Afrikaans (Namibia)',\n      englishName: 'Afrikaans (Namibia)',\n    },\n    'af-ZA': {\n      nativeName: 'Afrikaans (South Africa)',\n      englishName: 'Afrikaans (South Africa)',\n    },\n    ak: {\n      nativeName: 'Tɕɥi',\n      englishName: 'Akan',\n    },\n    ar: {\n      nativeName: 'العربية',\n      englishName: 'Arabic',\n    },\n    'ar-AR': {\n      nativeName: 'العربية',\n      englishName: 'Arabic',\n    },\n    'ar-MA': {\n      nativeName: 'العربية',\n      englishName: 'Arabic (Morocco)',\n    },\n    'ar-SA': {\n      nativeName: 'العربية (السعودية)',\n      englishName: 'Arabic (Saudi Arabia)',\n    },\n    'ay-BO': {\n      nativeName: 'Aymar aru',\n      englishName: 'Aymara',\n    },\n    az: {\n      nativeName: 'Azərbaycan dili',\n      englishName: 'Azerbaijani',\n    },\n    'az-AZ': {\n      nativeName: 'Azərbaycan dili',\n      englishName: 'Azerbaijani',\n    },\n    'be-BY': {\n      nativeName: 'Беларуская',\n      englishName: 'Belarusian',\n    },\n    bg: {\n      nativeName: 'Български',\n      englishName: 'Bulgarian',\n    },\n    'bg-BG': {\n      nativeName: 'Български',\n      englishName: 'Bulgarian',\n    },\n    bn: {\n      nativeName: 'বাংলা',\n      englishName: 'Bengali',\n    },\n    'bn-IN': {\n      nativeName: 'বাংলা (ভারত)',\n      englishName: 'Bengali (India)',\n    },\n    'bn-BD': {\n      nativeName: 'বাংলা(বাংলাদেশ)',\n      englishName: 'Bengali (Bangladesh)',\n    },\n    br: {\n      nativeName: 'Brezhoneg',\n      englishName: 'Breton',\n    },\n    bs: {\n      nativeName: 'Bosanski',\n      englishName: 'Bosnian',\n    },\n    'bs-BA': {\n      nativeName: 'Bosanski',\n      englishName: 'Bosnian',\n    },\n    ca: {\n      nativeName: 'Català',\n      englishName: 'Catalan',\n    },\n    'ca-ES': {\n      nativeName: 'Català',\n      englishName: 'Catalan',\n    },\n    cak: {\n      nativeName: 'Maya Kaqchikel',\n      englishName: 'Kaqchikel',\n    },\n    'ck-US': {\n      nativeName: 'ᏣᎳᎩ (tsalagi)',\n      englishName: 'Cherokee',\n    },\n    cs: {\n      nativeName: 'Čeština',\n      englishName: 'Czech',\n    },\n    'cs-CZ': {\n      nativeName: 'Čeština',\n      englishName: 'Czech',\n    },\n    cy: {\n      nativeName: 'Cymraeg',\n      englishName: 'Welsh',\n    },\n    'cy-GB': {\n      nativeName: 'Cymraeg',\n      englishName: 'Welsh',\n    },\n    da: {\n      nativeName: 'Dansk',\n      englishName: 'Danish',\n    },\n    'da-DK': {\n      nativeName: 'Dansk',\n      englishName: 'Danish',\n    },\n    de: {\n      nativeName: 'Deutsch',\n      englishName: 'German',\n    },\n    'de-AT': {\n      nativeName: 'Deutsch (Österreich)',\n      englishName: 'German (Austria)',\n    },\n    'de-DE': {\n      nativeName: 'Deutsch (Deutschland)',\n      englishName: 'German (Germany)',\n    },\n    'de-CH': {\n      nativeName: 'Deutsch (Schweiz)',\n      englishName: 'German (Switzerland)',\n    },\n    dsb: {\n      nativeName: 'Dolnoserbšćina',\n      englishName: 'Lower Sorbian',\n    },\n    el: {\n      nativeName: 'Ελληνικά',\n      englishName: 'Greek',\n    },\n    'el-GR': {\n      nativeName: 'Ελληνικά',\n      englishName: 'Greek (Greece)',\n    },\n    en: {\n      nativeName: 'English',\n      englishName: 'English',\n    },\n    'en-GB': {\n      nativeName: 'English (UK)',\n      englishName: 'English (UK)',\n    },\n    'en-AU': {\n      nativeName: 'English (Australia)',\n      englishName: 'English (Australia)',\n    },\n    'en-CA': {\n      nativeName: 'English (Canada)',\n      englishName: 'English (Canada)',\n    },\n    'en-IE': {\n      nativeName: 'English (Ireland)',\n      englishName: 'English (Ireland)',\n    },\n    'en-IN': {\n      nativeName: 'English (India)',\n      englishName: 'English (India)',\n    },\n    'en-PI': {\n      nativeName: 'English (Pirate)',\n      englishName: 'English (Pirate)',\n    },\n    'en-UD': {\n      nativeName: 'English (Upside Down)',\n      englishName: 'English (Upside Down)',\n    },\n    'en-US': {\n      nativeName: 'English (US)',\n      englishName: 'English (US)',\n    },\n    'en-ZA': {\n      nativeName: 'English (South Africa)',\n      englishName: 'English (South Africa)',\n    },\n    'en@pirate': {\n      nativeName: 'English (Pirate)',\n      englishName: 'English (Pirate)',\n    },\n    eo: {\n      nativeName: 'Esperanto',\n      englishName: 'Esperanto',\n    },\n    'eo-EO': {\n      nativeName: 'Esperanto',\n      englishName: 'Esperanto',\n    },\n    es: {\n      nativeName: 'Español',\n      englishName: 'Spanish',\n    },\n    'es-AR': {\n      nativeName: 'Español (Argentine)',\n      englishName: 'Spanish (Argentina)',\n    },\n    'es-419': {\n      nativeName: 'Español (Latinoamérica)',\n      englishName: 'Spanish (Latin America)',\n    },\n    'es-CL': {\n      nativeName: 'Español (Chile)',\n      englishName: 'Spanish (Chile)',\n    },\n    'es-CO': {\n      nativeName: 'Español (Colombia)',\n      englishName: 'Spanish (Colombia)',\n    },\n    'es-EC': {\n      nativeName: 'Español (Ecuador)',\n      englishName: 'Spanish (Ecuador)',\n    },\n    'es-ES': {\n      nativeName: 'Español (España)',\n      englishName: 'Spanish (Spain)',\n    },\n    'es-LA': {\n      nativeName: 'Español (Latinoamérica)',\n      englishName: 'Spanish (Latin America)',\n    },\n    'es-NI': {\n      nativeName: 'Español (Nicaragua)',\n      englishName: 'Spanish (Nicaragua)',\n    },\n    'es-MX': {\n      nativeName: 'Español (México)',\n      englishName: 'Spanish (Mexico)',\n    },\n    'es-US': {\n      nativeName: 'Español (Estados Unidos)',\n      englishName: 'Spanish (United States)',\n    },\n    'es-VE': {\n      nativeName: 'Español (Venezuela)',\n      englishName: 'Spanish (Venezuela)',\n    },\n    et: {\n      nativeName: 'eesti keel',\n      englishName: 'Estonian',\n    },\n    'et-EE': {\n      nativeName: 'Eesti (Estonia)',\n      englishName: 'Estonian (Estonia)',\n    },\n    eu: {\n      nativeName: 'Euskara',\n      englishName: 'Basque',\n    },\n    'eu-ES': {\n      nativeName: 'Euskara',\n      englishName: 'Basque',\n    },\n    fa: {\n      nativeName: 'فارسی',\n      englishName: 'Persian',\n    },\n    'fa-IR': {\n      nativeName: 'فارسی',\n      englishName: 'Persian',\n    },\n    'fb-LT': {\n      nativeName: 'Leet Speak',\n      englishName: 'Leet',\n    },\n    ff: {\n      nativeName: 'Fulah',\n      englishName: 'Fulah',\n    },\n    fi: {\n      nativeName: 'Suomi',\n      englishName: 'Finnish',\n    },\n    'fi-FI': {\n      nativeName: 'Suomi',\n      englishName: 'Finnish',\n    },\n    'fo-FO': {\n      nativeName: 'Føroyskt',\n      englishName: 'Faroese',\n    },\n    fr: {\n      nativeName: 'Français',\n      englishName: 'French',\n    },\n    'fr-CA': {\n      nativeName: 'Français (Canada)',\n      englishName: 'French (Canada)',\n    },\n    'fr-FR': {\n      nativeName: 'Français (France)',\n      englishName: 'French (France)',\n    },\n    'fr-BE': {\n      nativeName: 'Français (Belgique)',\n      englishName: 'French (Belgium)',\n    },\n    'fr-CH': {\n      nativeName: 'Français (Suisse)',\n      englishName: 'French (Switzerland)',\n    },\n    'fy-NL': {\n      nativeName: 'Frysk',\n      englishName: 'Frisian (West)',\n    },\n    ga: {\n      nativeName: 'Gaeilge',\n      englishName: 'Irish',\n    },\n    'ga-IE': {\n      nativeName: 'Gaeilge',\n      englishName: 'Irish',\n    },\n    gd: {\n      nativeName: 'Gàidhlig',\n      englishName: 'Gaelic',\n    },\n    gl: {\n      nativeName: 'Galego',\n      englishName: 'Galician',\n    },\n    'gl-ES': {\n      nativeName: 'Galego',\n      englishName: 'Galician',\n    },\n    'gn-PY': {\n      nativeName: \"Avañe'ẽ\",\n      englishName: 'Guarani',\n    },\n    'gu-IN': {\n      nativeName: 'ગુજરાતી',\n      englishName: 'Gujarati',\n    },\n    gv: {\n      nativeName: 'Gaelg',\n      englishName: 'Manx',\n    },\n    'gx-GR': {\n      nativeName: 'Ἑλληνική ἀρχαία',\n      englishName: 'Classical Greek',\n    },\n    he: {\n      nativeName: 'עברית‏',\n      englishName: 'Hebrew',\n    },\n    'he-IL': {\n      nativeName: 'עברית‏',\n      englishName: 'Hebrew',\n    },\n    hi: {\n      nativeName: 'हिन्दी',\n      englishName: 'Hindi',\n    },\n    'hi-IN': {\n      nativeName: 'हिन्दी',\n      englishName: 'Hindi',\n    },\n    hr: {\n      nativeName: 'Hrvatski',\n      englishName: 'Croatian',\n    },\n    'hr-HR': {\n      nativeName: 'Hrvatski',\n      englishName: 'Croatian',\n    },\n    hsb: {\n      nativeName: 'Hornjoserbšćina',\n      englishName: 'Upper Sorbian',\n    },\n    ht: {\n      nativeName: 'Kreyòl',\n      englishName: 'Haitian Creole',\n    },\n    hu: {\n      nativeName: 'Magyar',\n      englishName: 'Hungarian',\n    },\n    'hu-HU': {\n      nativeName: 'Magyar',\n      englishName: 'Hungarian',\n    },\n    'hy-AM': {\n      nativeName: 'Հայերեն',\n      englishName: 'Armenian',\n    },\n    id: {\n      nativeName: 'Bahasa Indonesia',\n      englishName: 'Indonesian',\n    },\n    'id-ID': {\n      nativeName: 'Bahasa Indonesia',\n      englishName: 'Indonesian',\n    },\n    is: {\n      nativeName: 'Íslenska',\n      englishName: 'Icelandic',\n    },\n    'is-IS': {\n      nativeName: 'Íslenska (Iceland)',\n      englishName: 'Icelandic (Iceland)',\n    },\n    it: {\n      nativeName: 'Italiano',\n      englishName: 'Italian',\n    },\n    'it-IT': {\n      nativeName: 'Italiano',\n      englishName: 'Italian',\n    },\n    ja: {\n      nativeName: '日本語',\n      englishName: 'Japanese',\n    },\n    'ja-JP': {\n      nativeName: '日本語 (日本)',\n      englishName: 'Japanese (Japan)',\n    },\n    'jv-ID': {\n      nativeName: 'Basa Jawa',\n      englishName: 'Javanese',\n    },\n    'ka-GE': {\n      nativeName: 'ქართული',\n      englishName: 'Georgian',\n    },\n    'kk-KZ': {\n      nativeName: 'Қазақша',\n      englishName: 'Kazakh',\n    },\n    km: {\n      nativeName: 'ភាសាខ្មែរ',\n      englishName: 'Khmer',\n    },\n    'km-KH': {\n      nativeName: 'ភាសាខ្មែរ',\n      englishName: 'Khmer',\n    },\n    kab: {\n      nativeName: 'Taqbaylit',\n      englishName: 'Kabyle',\n    },\n    kn: {\n      nativeName: 'ಕನ್ನಡ',\n      englishName: 'Kannada',\n    },\n    'kn-IN': {\n      nativeName: 'ಕನ್ನಡ (India)',\n      englishName: 'Kannada (India)',\n    },\n    ko: {\n      nativeName: '한국어',\n      englishName: 'Korean',\n    },\n    'ko-KR': {\n      nativeName: '한국어 (한국)',\n      englishName: 'Korean (Korea)',\n    },\n    'ku-TR': {\n      nativeName: 'Kurdî',\n      englishName: 'Kurdish',\n    },\n    kw: {\n      nativeName: 'Kernewek',\n      englishName: 'Cornish',\n    },\n    la: {\n      nativeName: 'Latin',\n      englishName: 'Latin',\n    },\n    'la-VA': {\n      nativeName: 'Latin',\n      englishName: 'Latin',\n    },\n    lb: {\n      nativeName: 'Lëtzebuergesch',\n      englishName: 'Luxembourgish',\n    },\n    'li-NL': {\n      nativeName: 'Lèmbörgs',\n      englishName: 'Limburgish',\n    },\n    lt: {\n      nativeName: 'Lietuvių',\n      englishName: 'Lithuanian',\n    },\n    'lt-LT': {\n      nativeName: 'Lietuvių',\n      englishName: 'Lithuanian',\n    },\n    lv: {\n      nativeName: 'Latviešu',\n      englishName: 'Latvian',\n    },\n    'lv-LV': {\n      nativeName: 'Latviešu',\n      englishName: 'Latvian',\n    },\n    mai: {\n      nativeName: 'मैथिली, মৈথিলী',\n      englishName: 'Maithili',\n    },\n    'mg-MG': {\n      nativeName: 'Malagasy',\n      englishName: 'Malagasy',\n    },\n    mk: {\n      nativeName: 'Македонски',\n      englishName: 'Macedonian',\n    },\n    'mk-MK': {\n      nativeName: 'Македонски (Македонски)',\n      englishName: 'Macedonian (Macedonian)',\n    },\n    ml: {\n      nativeName: 'മലയാളം',\n      englishName: 'Malayalam',\n    },\n    'ml-IN': {\n      nativeName: 'മലയാളം',\n      englishName: 'Malayalam',\n    },\n    'mn-MN': {\n      nativeName: 'Монгол',\n      englishName: 'Mongolian',\n    },\n    mr: {\n      nativeName: 'मराठी',\n      englishName: 'Marathi',\n    },\n    'mr-IN': {\n      nativeName: 'मराठी',\n      englishName: 'Marathi',\n    },\n    ms: {\n      nativeName: 'Bahasa Melayu',\n      englishName: 'Malay',\n    },\n    'ms-MY': {\n      nativeName: 'Bahasa Melayu',\n      englishName: 'Malay',\n    },\n    mt: {\n      nativeName: 'Malti',\n      englishName: 'Maltese',\n    },\n    'mt-MT': {\n      nativeName: 'Malti',\n      englishName: 'Maltese',\n    },\n    my: {\n      nativeName: 'ဗမာစကာ',\n      englishName: 'Burmese',\n    },\n    no: {\n      nativeName: 'Norsk',\n      englishName: 'Norwegian',\n    },\n    nb: {\n      nativeName: 'Norsk (bokmål)',\n      englishName: 'Norwegian (bokmal)',\n    },\n    'nb-NO': {\n      nativeName: 'Norsk (bokmål)',\n      englishName: 'Norwegian (bokmal)',\n    },\n    ne: {\n      nativeName: 'नेपाली',\n      englishName: 'Nepali',\n    },\n    'ne-NP': {\n      nativeName: 'नेपाली',\n      englishName: 'Nepali',\n    },\n    nl: {\n      nativeName: 'Nederlands',\n      englishName: 'Dutch',\n    },\n    'nl-BE': {\n      nativeName: 'Nederlands (België)',\n      englishName: 'Dutch (Belgium)',\n    },\n    'nl-NL': {\n      nativeName: 'Nederlands (Nederland)',\n      englishName: 'Dutch (Netherlands)',\n    },\n    'nn-NO': {\n      nativeName: 'Norsk (nynorsk)',\n      englishName: 'Norwegian (nynorsk)',\n    },\n    oc: {\n      nativeName: 'Occitan',\n      englishName: 'Occitan',\n    },\n    'or-IN': {\n      nativeName: 'ଓଡ଼ିଆ',\n      englishName: 'Oriya',\n    },\n    pa: {\n      nativeName: 'ਪੰਜਾਬੀ',\n      englishName: 'Punjabi',\n    },\n    'pa-IN': {\n      nativeName: 'ਪੰਜਾਬੀ (ਭਾਰਤ ਨੂੰ)',\n      englishName: 'Punjabi (India)',\n    },\n    pl: {\n      nativeName: 'Polski',\n      englishName: 'Polish',\n    },\n    'pl-PL': {\n      nativeName: 'Polski',\n      englishName: 'Polish',\n    },\n    'ps-AF': {\n      nativeName: 'پښتو',\n      englishName: 'Pashto',\n    },\n    pt: {\n      nativeName: 'Português',\n      englishName: 'Portuguese',\n    },\n    'pt-BR': {\n      nativeName: 'Português (Brasil)',\n      englishName: 'Portuguese (Brazil)',\n    },\n    'pt-PT': {\n      nativeName: 'Português (Portugal)',\n      englishName: 'Portuguese (Portugal)',\n    },\n    'qu-PE': {\n      nativeName: 'Qhichwa',\n      englishName: 'Quechua',\n    },\n    'rm-CH': {\n      nativeName: 'Rumantsch',\n      englishName: 'Romansh',\n    },\n    ro: {\n      nativeName: 'Română',\n      englishName: 'Romanian',\n    },\n    'ro-RO': {\n      nativeName: 'Română',\n      englishName: 'Romanian',\n    },\n    ru: {\n      nativeName: 'Русский',\n      englishName: 'Russian',\n    },\n    'ru-RU': {\n      nativeName: 'Русский',\n      englishName: 'Russian',\n    },\n    'sa-IN': {\n      nativeName: 'संस्कृतम्',\n      englishName: 'Sanskrit',\n    },\n    'se-NO': {\n      nativeName: 'Davvisámegiella',\n      englishName: 'Northern Sámi',\n    },\n    sh: {\n      nativeName: 'српскохрватски',\n      englishName: 'Serbo-Croatian',\n    },\n    'si-LK': {\n      nativeName: 'පළාත',\n      englishName: 'Sinhala (Sri Lanka)',\n    },\n    sk: {\n      nativeName: 'Slovenčina',\n      englishName: 'Slovak',\n    },\n    'sk-SK': {\n      nativeName: 'Slovenčina (Slovakia)',\n      englishName: 'Slovak (Slovakia)',\n    },\n    sl: {\n      nativeName: 'Slovenščina',\n      englishName: 'Slovenian',\n    },\n    'sl-SI': {\n      nativeName: 'Slovenščina',\n      englishName: 'Slovenian',\n    },\n    'so-SO': {\n      nativeName: 'Soomaaliga',\n      englishName: 'Somali',\n    },\n    sq: {\n      nativeName: 'Shqip',\n      englishName: 'Albanian',\n    },\n    'sq-AL': {\n      nativeName: 'Shqip',\n      englishName: 'Albanian',\n    },\n    sr: {\n      nativeName: 'Српски',\n      englishName: 'Serbian',\n    },\n    'sr-RS': {\n      nativeName: 'Српски (Serbia)',\n      englishName: 'Serbian (Serbia)',\n    },\n    su: {\n      nativeName: 'Basa Sunda',\n      englishName: 'Sundanese',\n    },\n    sv: {\n      nativeName: 'Svenska',\n      englishName: 'Swedish',\n    },\n    'sv-SE': {\n      nativeName: 'Svenska',\n      englishName: 'Swedish',\n    },\n    sw: {\n      nativeName: 'Kiswahili',\n      englishName: 'Swahili',\n    },\n    'sw-KE': {\n      nativeName: 'Kiswahili',\n      englishName: 'Swahili (Kenya)',\n    },\n    ta: {\n      nativeName: 'தமிழ்',\n      englishName: 'Tamil',\n    },\n    'ta-IN': {\n      nativeName: 'தமிழ்',\n      englishName: 'Tamil',\n    },\n    te: {\n      nativeName: 'తెలుగు',\n      englishName: 'Telugu',\n    },\n    'te-IN': {\n      nativeName: 'తెలుగు',\n      englishName: 'Telugu',\n    },\n    tg: {\n      nativeName: 'забо́ни тоҷикӣ́',\n      englishName: 'Tajik',\n    },\n    'tg-TJ': {\n      nativeName: 'тоҷикӣ',\n      englishName: 'Tajik',\n    },\n    th: {\n      nativeName: 'ภาษาไทย',\n      englishName: 'Thai',\n    },\n    'th-TH': {\n      nativeName: 'ภาษาไทย (ประเทศไทย)',\n      englishName: 'Thai (Thailand)',\n    },\n    tl: {\n      nativeName: 'Filipino',\n      englishName: 'Filipino',\n    },\n    'tl-PH': {\n      nativeName: 'Filipino',\n      englishName: 'Filipino',\n    },\n    tlh: {\n      nativeName: 'tlhIngan-Hol',\n      englishName: 'Klingon',\n    },\n    tr: {\n      nativeName: 'Türkçe',\n      englishName: 'Turkish',\n    },\n    'tr-TR': {\n      nativeName: 'Türkçe',\n      englishName: 'Turkish',\n    },\n    'tt-RU': {\n      nativeName: 'татарча',\n      englishName: 'Tatar',\n    },\n    uk: {\n      nativeName: 'Українська',\n      englishName: 'Ukrainian',\n    },\n    'uk-UA': {\n      nativeName: 'Українська',\n      englishName: 'Ukrainian',\n    },\n    ur: {\n      nativeName: 'اردو',\n      englishName: 'Urdu',\n    },\n    'ur-PK': {\n      nativeName: 'اردو',\n      englishName: 'Urdu',\n    },\n    uz: {\n      nativeName: \"O'zbek\",\n      englishName: 'Uzbek',\n    },\n    'uz-UZ': {\n      nativeName: \"O'zbek\",\n      englishName: 'Uzbek',\n    },\n    vi: {\n      nativeName: 'Tiếng Việt',\n      englishName: 'Vietnamese',\n    },\n    'vi-VN': {\n      nativeName: 'Tiếng Việt',\n      englishName: 'Vietnamese',\n    },\n    'xh-ZA': {\n      nativeName: 'isiXhosa',\n      englishName: 'Xhosa',\n    },\n    yi: {\n      nativeName: 'ייִדיש',\n      englishName: 'Yiddish',\n    },\n    'yi-DE': {\n      nativeName: 'ייִדיש (German)',\n      englishName: 'Yiddish (German)',\n    },\n    zh: {\n      nativeName: '中文',\n      englishName: 'Chinese',\n    },\n    'zh-Hans': {\n      nativeName: '中文简体',\n      englishName: 'Chinese Simplified',\n    },\n    'zh-Hant': {\n      nativeName: '中文繁體',\n      englishName: 'Chinese Traditional',\n    },\n    'zh-CN': {\n      nativeName: '中文（中国）',\n      englishName: 'Chinese Simplified (China)',\n    },\n    'zh-HK': {\n      nativeName: '中文（香港）',\n      englishName: 'Chinese Traditional (Hong Kong)',\n    },\n    'zh-SG': {\n      nativeName: '中文（新加坡）',\n      englishName: 'Chinese Simplified (Singapore)',\n    },\n    'zh-TW': {\n      nativeName: '中文（台灣）',\n      englishName: 'Chinese Traditional (Taiwan)',\n    },\n    'zu-ZA': {\n      nativeName: 'isiZulu',\n      englishName: 'Zulu',\n    },\n  },\n  {\n    get: function (obj, lang) {\n      if (lang.includes('-')) {\n        lang = lang.split('-');\n        lang = `${lang[0]}-${lang[1].toUpperCase()}`;\n      } else if (lang.includes('_')) {\n        lang = lang.split('_');\n        lang = `${lang[0]}-${lang[1].toUpperCase()}`;\n      }\n      return obj[lang];\n    },\n  },\n);\n\nexport default langmap;\n","import { defineMessages } from 'react-intl';\n\nexport const messages = defineMessages({\n  addBlock: {\n    id: 'Add block…',\n    defaultMessage: 'Add block…',\n  },\n  required: {\n    id: 'Required input is missing.',\n    defaultMessage: 'Required input is missing.',\n  },\n  minLength: {\n    id: 'Minimum length is {len}.',\n    defaultMessage: 'Minimum length is {len}.',\n  },\n  maxLength: {\n    id: 'Maximum length is {len}.',\n    defaultMessage: 'Maximum length is {len}.',\n  },\n  minimum: {\n    id: 'Minimum value is {len}.',\n    defaultMessage: 'Minimum value is {len}.',\n  },\n  maximum: {\n    id: 'Maximum value is {len}.',\n    defaultMessage: 'Maximum value is {len}.',\n  },\n  uniqueItems: {\n    id: 'Items must be unique.',\n    defaultMessage: 'Items must be unique.',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  isNumber: {\n    id: 'number',\n    defaultMessage: 'Input must be number',\n  },\n  isInteger: {\n    id: 'integer',\n    defaultMessage: 'Input must be integer',\n  },\n  isValidEmail: {\n    id: 'email',\n    defaultMessage: 'Input must be valid email (something@domain.com)',\n  },\n  isValidURL: {\n    id: 'url',\n    defaultMessage:\n      'Input must be valid url (www.something.com or http(s)://www.something.com)',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  thereWereSomeErrors: {\n    id: 'There were some errors.',\n    defaultMessage: 'There were some errors.',\n  },\n  searchUsers: {\n    id: 'Search users…',\n    defaultMessage: 'Search users…',\n  },\n  searchGroups: {\n    id: 'Search group…',\n    defaultMessage: 'Search group…',\n  },\n  filterByGroups: {\n    id: 'Filter users by groups',\n    defaultMessage: 'Filter users by groups',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  deleteUserConfirmTitle: {\n    id: 'Delete User',\n    defaultMessage: 'Delete User',\n  },\n  deleteGroupConfirmTitle: {\n    id: 'Delete Group',\n    defaultMessage: 'Delete Group',\n  },\n  add: {\n    id: 'Add',\n    defaultMessage: 'Add',\n  },\n  addUserButtonTitle: {\n    id: 'Add new user',\n    defaultMessage: 'Add new user',\n  },\n  addGroupsButtonTitle: {\n    id: 'Add new group',\n    defaultMessage: 'Add new group',\n  },\n  addUserFormTitle: {\n    id: 'Add User',\n    defaultMessage: 'Add User',\n  },\n  addGroupsFormTitle: {\n    id: 'Add group',\n    defaultMessage: 'Add group',\n  },\n  addUserFormUsernameTitle: {\n    id: 'Username',\n    defaultMessage: 'Username',\n  },\n  addGroupsFormTitleTitle: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  addUserFormFullnameTitle: {\n    id: 'Fullname',\n    defaultMessage: 'Fullname',\n  },\n  addUserGroupNameTitle: {\n    id: 'Add to Groups',\n    defaultMessage: 'Add to Groups',\n  },\n  addGroupsFormGroupNameTitle: {\n    id: 'Groupname',\n    defaultMessage: 'Groupname',\n  },\n  addGroupsFormDescriptionTitle: {\n    id: 'Description',\n    defaultMessage: 'Description',\n  },\n  addUserFormEmailTitle: {\n    id: 'Email',\n    defaultMessage: 'Email',\n  },\n  addGroupsFormEmailTitle: {\n    id: 'Email',\n    defaultMessage: 'Email',\n  },\n  addUserFormPasswordTitle: {\n    id: 'Password',\n    defaultMessage: 'Password',\n  },\n  addUserFormRolesTitle: {\n    id: 'Roles',\n    defaultMessage: 'Roles',\n  },\n  updateRoles: {\n    id: 'User roles updated',\n    defaultMessage: 'User roles updated',\n  },\n  updateGroups: {\n    id: 'Group roles updated',\n    defaultMessage: 'Group roles updated',\n  },\n  addGroupsFormRolesTitle: {\n    id: 'Roles',\n    defaultMessage: 'Roles',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  userCreated: {\n    id: 'User created',\n    defaultMessage: 'User created',\n  },\n  groupCreated: {\n    id: 'Group created',\n    defaultMessage: 'Group created',\n  },\n  users: {\n    id: 'Users',\n    defaultMessage: 'Users',\n  },\n  usergroup: {\n    id: 'User Group Settings',\n    defaultMessage: 'User Group Settings',\n  },\n  usergroupmemberbership: {\n    id: 'User Group Membership',\n    defaultMessage: 'User Group Membership',\n  },\n  noUserFound: {\n    id: 'No user found',\n    defaultMessage: 'No user found',\n  },\n  pleaseSearchOrFilterUsers: {\n    id: 'Please search for users or use the filters on the side.',\n    defaultMessage: 'Please search for users or use the filters on the side.',\n  },\n  addUsersToGroup: {\n    id: 'Add users to group',\n    defaultMessage: 'Add users to group',\n  },\n  removeUsersFromGroup: {\n    id: 'Remove users from group',\n    defaultMessage: 'Remove users from group',\n  },\n  groups: {\n    id: 'Groups',\n    defaultMessage: 'Groups',\n  },\n  copyBlocks: {\n    id: 'Copy blocks',\n    defaultMesages: 'Copy blocks',\n  },\n  cutBlocks: {\n    id: 'Cut blocks',\n    defaultMesages: 'Cut blocks',\n  },\n  pasteBlocks: {\n    id: 'Paste blocks',\n    defaultMesages: 'Paste blocks',\n  },\n  deleteBlocks: {\n    id: 'Delete blocks',\n    defaultMesages: 'Delete blocks',\n  },\n  showAllUserButton: {\n    id: 'Show All',\n    defaultMessage: 'Show All',\n  },\n  showAllUserText: {\n    id: \"Enter a username above to search or click 'Show All'\",\n    defaultMessage: \"Enter a username above to search or click 'Show All'\",\n  },\n  addJoinedGroups: {\n    id: 'Show groups of users below',\n    defaultMessage: 'Show groups of users below',\n  },\n});\n","import { map, uniq, keys, intersection, isEmpty } from 'lodash';\nimport { messages } from '../MessageLabels/MessageLabels';\n\n/**\n * Will return the intl message if invalid\n * @param {boolean} isValid\n * @param {string} maxCriterion\n * @param {string | number} valueToCompare can compare '47' < 50\n * @param {Function} intlFunc\n */\nconst validationMessage = (isValid, maxCriterion, valueToCompare, intlFunc) =>\n  !isValid\n    ? intlFunc(messages[maxCriterion], {\n        len: valueToCompare,\n      })\n    : null;\n/**\n * Returns if based on the criterion the value is lower or equal\n * @param {string | number} value can compare '47' < 50\n * @param {string | number} valueToCompare can compare '47' < 50\n * @param {string} minCriterion\n * @param {Function} intlFunc\n */\nconst isMaxPropertyValid = (value, valueToCompare, minCriterion, intlFunc) => {\n  const isValid = valueToCompare !== undefined ? value <= valueToCompare : true;\n  return validationMessage(isValid, minCriterion, valueToCompare, intlFunc);\n};\n/**\n * Returns if based on the criterion the value is higher or equal\n * @param {string | number} value can compare '47' < 50\n * @param {string | number} valueToCompare can compare '47' < 50\n * @param {string} minCriterion\n * @param {Function} intlFunc\n */\nconst isMinPropertyValid = (value, valueToCompare, maxCriterion, intlFunc) => {\n  const isValid = valueToCompare !== undefined ? value >= valueToCompare : true;\n  return validationMessage(isValid, maxCriterion, valueToCompare, intlFunc);\n};\n\nconst widgetValidation = {\n  email: {\n    isValidEmail: (emailValue, emailObj, intlFunc) => {\n      const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n      const isValid = emailRegex.test(emailValue);\n      return !isValid ? intlFunc(messages.isValidEmail) : null;\n    },\n    minLength: (emailValue, emailObj, intlFunc) =>\n      isMinPropertyValid(\n        emailValue.length,\n        emailObj.minLength,\n        'minLength',\n        intlFunc,\n      ),\n    maxLength: (emailValue, emailObj, intlFunc) =>\n      isMaxPropertyValid(\n        emailValue.length,\n        emailObj.maxLength,\n        'maxLength',\n        intlFunc,\n      ),\n  },\n  url: {\n    isValidURL: (urlValue, urlObj, intlFunc) => {\n      const urlRegex = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([-.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?|^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([_.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?|^((http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/gm;\n      const isValid = urlRegex.test(urlValue);\n      return !isValid ? intlFunc(messages.isValidURL) : null;\n    },\n    minLength: (urlValue, urlObj, intlFunc) =>\n      isMinPropertyValid(\n        urlValue.length,\n        urlObj.minLength,\n        'minLength',\n        intlFunc,\n      ),\n    maxLength: (urlValue, urlObj, intlFunc) =>\n      isMaxPropertyValid(\n        urlValue.length,\n        urlObj.maxLength,\n        'maxLength',\n        intlFunc,\n      ),\n  },\n  password: {\n    minLength: (passwordValue, passwordObj, intlFunc) =>\n      isMinPropertyValid(\n        passwordValue.length,\n        passwordObj.minLength,\n        'minLength',\n        intlFunc,\n      ),\n    maxLength: (passwordValue, passwordObj, intlFunc) =>\n      isMaxPropertyValid(\n        passwordValue.length,\n        passwordObj.maxLength,\n        'maxLength',\n        intlFunc,\n      ),\n  },\n  string: {\n    minLength: (value, itemObj, intlFunc) =>\n      isMinPropertyValid(\n        value.length,\n        itemObj.minLength,\n        'minLength',\n        intlFunc,\n      ),\n    maxLength: (value, itemObj, intlFunc) =>\n      isMaxPropertyValid(\n        value.length,\n        itemObj.maxLengthj,\n        'maxLength',\n        intlFunc,\n      ),\n  },\n  number: {\n    isNumber: (value, itemObj, intlFunc) => {\n      const floatRegex = /^[+-]?\\d+(\\.\\d+)?$/;\n      const isValid = !isNaN(value) && floatRegex.test(value);\n      return !isValid ? intlFunc(messages.isNumber) : null;\n    },\n    minimum: (value, itemObj, intlFunc) =>\n      isMinPropertyValid(value, itemObj.minimum, 'minimum', intlFunc),\n    maximum: (value, itemObj, intlFunc) =>\n      isMaxPropertyValid(value, itemObj.maximum, 'maximum', intlFunc),\n  },\n  integer: {\n    isInteger: (value, itemObj, intlFunc) => {\n      const intRegex = /^-?[0-9]+$/;\n      const isValid = !isNaN(value) && intRegex.test(value);\n      return !isValid ? intlFunc(messages.isInteger) : null;\n    },\n    minimum: (value, itemObj, intlFunc) =>\n      isMinPropertyValid(value, itemObj.minimum, 'minimum', intlFunc),\n    maximum: (value, itemObj, intlFunc) =>\n      isMaxPropertyValid(value, itemObj.maximum, 'maximum', intlFunc),\n  },\n};\n\n/**\n * The string that comes my not be a valid JSON\n * @param {string} requestItem\n */\nconst tryParseJSON = (requestItem) => {\n  let resultObj = null;\n  try {\n    resultObj = JSON.parse(requestItem);\n  } catch (e) {\n    try {\n      resultObj = JSON.parse(requestItem.replace(/'/g, '\"'));\n    } catch (e) {\n      resultObj = null;\n    }\n  }\n  return resultObj;\n};\n\n/**\n * Returns errors if obj has unique Items\n * @param {Object} field\n * @param {*} fieldData\n * @returns {Object[string]} - list of errors\n */\nconst hasUniqueItems = (field, fieldData, formatMessage) => {\n  const errors = [];\n  if (\n    field.uniqueItems &&\n    fieldData &&\n    uniq(fieldData).length !== fieldData.length\n  ) {\n    errors.push(formatMessage(messages.uniqueItems));\n  }\n  return errors;\n};\n\n/**\n * If required fields are undefined, return list of errors\n * @returns {Object[string]} - list of errors\n */\nconst validateRequiredFields = (\n  schema,\n  formData,\n  formatMessage,\n  touchedField,\n) => {\n  const errors = {};\n  const fields = isEmpty(touchedField)\n    ? schema.required\n    : intersection(schema.required, keys(touchedField));\n  map(fields, (requiredField) => {\n    const type = schema.properties[requiredField]?.type;\n    const widget = schema.properties[requiredField]?.widget;\n\n    let isEmpty = !formData[requiredField];\n    if (!isEmpty) {\n      if (type === 'array') {\n        isEmpty = formData[requiredField]\n          ? formData[requiredField].length === 0\n          : true;\n      } else if (type === 'string' && widget === 'richtext') {\n        isEmpty = !(\n          formData[requiredField]?.data?.replace(/(<([^>]+)>)/g, '').length > 0\n        );\n      }\n    }\n    if (\n      schema.properties[requiredField] &&\n      schema.properties[requiredField].type !== 'boolean' &&\n      !schema.properties[requiredField].readonly &&\n      isEmpty\n    ) {\n      const requiredFieldName =\n        schema.properties[requiredField].title || requiredField;\n      errors[requiredFieldName] = [];\n      errors[requiredFieldName].push(formatMessage(messages.required));\n    }\n  });\n\n  return errors;\n};\n/**\n * Return list of errors if field constraints are not respected\n * (ex min, max, maxLength, email format, url format etc)\n * each potential criterion has a validation process in widgetValidation\n * !!ONLY fields with data will be tested (those undefined are ignored here)\n * @returns {Object[string]} - list of errors\n */\nconst validateFieldsPerFieldset = (\n  schema,\n  formData,\n  formatMessage,\n  touchedField,\n) => {\n  const errors = validateRequiredFields(\n    schema,\n    formData,\n    formatMessage,\n    touchedField,\n  );\n\n  map(schema.properties, (field, fieldId) => {\n    const fieldWidgetType = field.widget || field.type;\n    const widgetValidationCriteria = widgetValidation[fieldWidgetType]\n      ? Object.keys(widgetValidation[fieldWidgetType])\n      : [];\n    let fieldData = formData[fieldId];\n    // test each criterion ex maximum, isEmail, isUrl, maxLength etc\n    const fieldErrors = widgetValidationCriteria\n      .map((widgetCriterion) => {\n        const errorMessage =\n          fieldData === undefined || fieldData === null\n            ? null\n            : widgetValidation[fieldWidgetType][widgetCriterion](\n                fieldData,\n                field,\n                formatMessage,\n              );\n        return errorMessage;\n      })\n      .filter((item) => !!item);\n\n    const uniqueErrors = hasUniqueItems(field, fieldData, formatMessage);\n    const mergedErrors = [...fieldErrors, ...uniqueErrors];\n\n    if (mergedErrors.length > 0) {\n      errors[fieldId] = [\n        ...(errors[fieldId] || []),\n        ...fieldErrors,\n        ...uniqueErrors,\n      ];\n    }\n  });\n\n  return errors;\n};\n\n/**\n * Create the errors object from backend the same way it is done on Frontend validation\n * @param {string} requestError form the server\n * @returns {Object}\n */\nconst giveServerErrorsToCorrespondingFields = (requestError) => {\n  let errorsList = tryParseJSON(requestError);\n  const errors = {};\n\n  if (Array.isArray(errorsList) && errorsList.length > 0) {\n    errorsList.forEach((errorItem) => {\n      errors[errorItem.field] = errors[errorItem.field]\n        ? errors[errorItem.field].push(errorItem.message)\n        : [errorItem.message];\n    });\n  }\n  return errors;\n};\n\n/**\n * The first Fieldset (Tab) that has any errors\n * will be selected\n * @param {Object[]} errors\n * @param {string} errors[].field\n * @param {Object} schema\n * @returns {number} activeIndex\n */\nconst getIndexOfFirstTabWithErrors = (errors, schema) => {\n  let activeIndex = 0;\n\n  schema.fieldsets.some((fieldSet, index) => {\n    let foundfield = fieldSet.fields.some((fieldId) => errors[fieldId]);\n\n    activeIndex = foundfield ? index : activeIndex;\n    return foundfield;\n  });\n\n  return activeIndex;\n};\n\nclass FormValidation {\n  /**\n   * The first Fieldset (Tab) that has any errors\n   * will be selected\n   * @param {Object} errors\n   * @param {Object} schema\n   * @returns {number} activeIndex\n   */\n  static showFirstTabWithErrors({\n    errors = {},\n    schema = { properties: {}, fieldsets: [], required: [] },\n  } = {}) {\n    return getIndexOfFirstTabWithErrors(errors, schema);\n  }\n  /**\n   * Create the errors object from backend the same way it is done on Frontend validation\n   * @param {string} requestError form the server\n   * @returns {Object}\n   */\n  static giveServerErrorsToCorrespondingFields(requestError = '') {\n    return giveServerErrorsToCorrespondingFields(requestError);\n  }\n  /**\n   * Return validation result\n   * @param {Object} schema\n   * @param {Object} formData\n   * @param {function} formatMessage\n   * @returns {Object} errors\n   */\n  static validateFieldsPerFieldset({\n    schema = { properties: {}, fieldsets: [], required: [] },\n    formData = {},\n    formatMessage = () => {},\n    touchedField = {},\n  } = {}) {\n    return validateFieldsPerFieldset(\n      schema,\n      formData,\n      formatMessage,\n      touchedField,\n    );\n  }\n}\n\nexport default FormValidation;\n","/**\n * User helper.\n * @module helpers/AuthToken\n */\nimport { intersection } from 'lodash';\n\n/**\n * Checks if the user has one or more given roles.\n * @method userHasRoles\n * @returns {boolean}\n */\nexport function userHasRoles(user, roles = []) {\n  return intersection(user?.roles ?? [], roles).length > 0;\n}\n","import { useCallback, useEffect, useRef } from 'react';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\n\n/**\n * Hook used to detect clicks outside a component (or an escape key press).\n * onTriggered function is triggered on `click` or escape `keyup` event.\n */\nexport function useDetectClickOutside({\n  onTriggered,\n  disableClick,\n  disableKeys,\n  allowAnyKey,\n  triggerKeys,\n}) {\n  const ref = useRef(null);\n\n  const keyListener = useCallback((e) => {\n    if (allowAnyKey) {\n      onTriggered(e);\n    } else if (triggerKeys) {\n      if (triggerKeys.includes(e.key)) {\n        onTriggered(e);\n      }\n    } else {\n      if (e.key === 'Escape') {\n        onTriggered(e);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const clickListener = useCallback(\n    (e) => {\n      if (ref && ref.current) {\n        if (!doesNodeContainClick(ref.current, e)) {\n          onTriggered(e);\n        }\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [ref.current],\n  );\n\n  useEffect(() => {\n    // We attach the events to `window`, since the React synthetic event system is\n    // attached in there, so if we stopPropagation on `onClick` then it does not stop\n    // if the event is attached in `document`\n    // https://stackoverflow.com/questions/24415631/reactjs-syntheticevent-stoppropagation-only-works-with-react-events/52879137#52879137\n    // https://gist.github.com/ggregoire/ce7bc946212920c0a6bad8125567d001\n    // https://levelup.gitconnected.com/how-exactly-does-react-handles-events-71e8b5e359f2\n    !disableClick && window.addEventListener('click', clickListener);\n    !disableKeys && window.addEventListener('keyup', keyListener);\n    return () => {\n      !disableClick && window.removeEventListener('click', clickListener);\n      !disableKeys && window.removeEventListener('keyup', keyListener);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return ref;\n}\n","import React from 'react';\nimport { isEqual } from 'lodash';\nimport { usePrevious } from './usePrevious';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\n/**\n * A pagination helper that tracks the query and resets pagination in case the\n * query changes.\n */\nexport const usePagination = (query, defaultPage = 1) => {\n  const previousQuery = usePrevious(query);\n  const [currentPage, setCurrentPage] = React.useState(defaultPage);\n\n  useDeepCompareEffect(() => {\n    setCurrentPage(defaultPage);\n  }, [query, previousQuery, defaultPage]);\n\n  return {\n    currentPage:\n      previousQuery && !isEqual(previousQuery, query)\n        ? defaultPage\n        : currentPage,\n    setCurrentPage,\n  };\n};\n","import React from 'react';\n\n/**\n * Hook used to \"cache\" the \"previous\" value of a prop or a computed variable.\n */\nexport function usePrevious(value) {\n  const ref = React.useRef();\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","import React from 'react';\nimport Undoo from 'undoo';\n\n// Code based on Apache-2.0 License\n// https://github.com/reaviz/reaflow/blob/78d60aa04f514947a17097c906efdbbd6bae5080/src/helpers/useUndo.ts\n\nconst useUndoManager = (\n  state,\n  onUndoRedo,\n  { maxUndoLevels, enableHotKeys = true },\n) => {\n  const [canUndo, setCanUndo] = React.useState(false);\n  const [canRedo, setCanRedo] = React.useState(false);\n  const manager = React.useRef(new Undoo({ maxLength: maxUndoLevels }));\n  // Reference:\n  // https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback\n  const callbackRef = React.useRef(onUndoRedo);\n  React.useEffect(() => {\n    callbackRef.current = onUndoRedo;\n  }, [onUndoRedo]);\n\n  const doUndo = React.useCallback(() => {\n    manager.current.undo(({ state }) => {\n      const nextUndo = manager.current.canUndo();\n      const nextRedo = manager.current.canRedo();\n      setCanUndo(nextUndo);\n      setCanRedo(nextRedo);\n\n      callbackRef.current({\n        state,\n        type: 'undo',\n        canUndo: nextUndo,\n        canRedo: nextRedo,\n      });\n    });\n  }, []);\n\n  React.useEffect(() => {\n    manager.current.save({\n      state,\n    });\n\n    setCanUndo(manager.current.canUndo());\n    setCanRedo(manager.current.canRedo());\n  }, [state]);\n\n  const doRedo = React.useCallback(() => {\n    manager.current.redo(({ state }) => {\n      const nextUndo = manager.current.canUndo();\n      const nextRedo = manager.current.canRedo();\n      setCanUndo(nextUndo);\n      setCanRedo(nextRedo);\n\n      callbackRef.current({\n        state,\n        type: 'redo',\n        canUndo: nextUndo,\n        canRedo: nextRedo,\n      });\n    });\n  }, []);\n\n  const handleKeys = React.useCallback(\n    (event) => {\n      const keyName = event.key;\n\n      if (keyName === 'Control' || keyName === 'Meta') {\n        // do not alert when only Control key is pressed.\n        return;\n      }\n      if (event.ctrlKey || event.metaKey) {\n        if (keyName === 'z') {\n          event.preventDefault();\n          event.stopPropagation();\n          doUndo();\n        } else if (keyName === 'y') {\n          event.preventDefault();\n          event.stopPropagation();\n          doRedo();\n        }\n      } else {\n        return;\n      }\n    },\n    [doUndo, doRedo],\n  );\n\n  React.useEffect(() => {\n    if (!enableHotKeys) return;\n    document.addEventListener('keydown', handleKeys);\n    return () => document.removeEventListener('keydown', handleKeys);\n  }, [enableHotKeys, handleKeys]);\n\n  return {\n    doUndo,\n    doRedo,\n    canUndo,\n    canRedo,\n  };\n};\n\nexport default useUndoManager;\n","import config from '@plone/volto/registry';\n\nexport const getCookieOptions = (options = {}) => {\n  const { path = '/', secure, ...otherOptions } = options;\n  let secureOption = secure;\n\n  try {\n    if (secureOption === undefined || secureOption === null) {\n      const protocol = window?.location?.protocol ?? 'http';\n      secureOption = protocol.startsWith('https') ? true : false;\n    }\n  } catch (e) {\n    //window is not defined. It's ssr and we use 'secure' option passed from param\n    secureOption = false;\n  }\n\n  return {\n    path: path,\n    expires: new Date(\n      new Date().getTime() + config.settings.cookieExpires * 1000,\n    ),\n    secure: secureOption,\n    ...otherOptions,\n  };\n};\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"react\");","/**\n * Action types.\n * @module constants/ActionTypes\n */\n\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nexport const SET_APIERROR = 'SET_APIERROR';\nexport const RESET_APIERROR = 'RESET_APIERROR';\nexport const COPY = 'COPY';\nexport const COPY_CONTENT = 'COPY_CONTENT';\nexport const CREATE_CONTENT = 'CREATE_CONTENT';\nexport const CREATE_GROUP = 'CREATE_GROUP';\nexport const CREATE_USER = 'CREATE_USER';\nexport const CUT = 'CUT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\nexport const DELETE_CONTENT = 'DELETE_CONTENT';\nexport const DELETE_GROUP = 'DELETE_GROUP';\nexport const DELETE_USER = 'DELETE_USER';\nexport const EMAIL_NOTIFICATION = 'EMAIL_NOTIFICATION';\nexport const EMAIL_SEND = 'EMAIL_SEND';\nexport const EXPAND_TOOLBAR = 'EXPAND_TOOLBAR';\nexport const INITIAL_PASSWORD = 'INITIAL_PASSWORD';\nexport const GET_BREADCRUMBS = 'GET_BREADCRUMBS';\nexport const GET_CONTENT = 'GET_CONTENT';\nexport const POST_CONTROLPANEL = 'POST_CONTROLPANEL';\nexport const GET_CONTROLPANEL = 'GET_CONTROLPANEL';\nexport const DELETE_CONTROLPANEL = 'DELETE_CONTROLPANEL';\nexport const UPDATE_CONTROLPANEL = 'UPDATE_CONTROLPANEL';\nexport const GET_DIFF = 'GET_DIFF';\nexport const GET_GROUP = 'GET_GROUP';\nexport const GET_HISTORY = 'GET_HISTORY';\nexport const GET_NAVIGATION = 'GET_NAVIGATION';\nexport const GET_PRINCIPALS = 'GET_PRINCIPALS';\nexport const GET_QUERYSTRING = 'GET_QUERYSTRING';\nexport const GET_QUERYSTRING_RESULTS = 'GET_QUERYSTRING_RESULTS';\nexport const GET_SCHEMA = 'GET_SCHEMA';\nexport const POST_SCHEMA = 'POST_SCHEMA';\nexport const PUT_SCHEMA = 'PUT_SCHEMA';\nexport const UPDATE_SCHEMA = 'UPDATE_SCHEMA';\nexport const DELETE_SCHEMA = 'DELETE_SCHEMA';\nexport const GET_SHARING = 'GET_SHARING';\nexport const GET_TRANSLATION_LOCATOR = 'GET_TRANSLATION_LOCATOR';\nexport const LINK_TRANSLATION = 'LINK_TRANSLATION';\nexport const DELETE_TRANSLATION = 'DELETE_TRANSLATION';\nexport const GET_TYPES = 'GET_TYPES';\nexport const GET_USER = 'GET_USER';\nexport const GET_VOCABULARY = 'GET_VOCABULARY';\nexport const GET_VOCABULARY_TOKEN_TITLE = 'GET_VOCABULARY_TOKEN_TITLE';\nexport const GET_WORKFLOW = 'GET_WORKFLOW';\nexport const GET_WORKFLOW_MULTIPLE = 'GET_WORKFLOW_MULTIPLE';\nexport const UPDATECOLUMNS_CONTENT = 'UPDATECOLUMNS_CONTENT';\nexport const INSTALL_ADDON = 'INSTALL_ADDON';\nexport const LIST_ACTIONS = 'LIST_ACTIONS';\nexport const LIST_ADDONS = 'LIST_ADDONS';\nexport const LIST_COMMENTS = 'LIST_COMMENTS';\nexport const LIST_MORE_COMMENTS = 'LIST_MORE_COMMENTS';\nexport const LIST_CONTROLPANELS = 'LIST_CONTROLPANELS';\nexport const LIST_GROUPS = 'LIST_GROUPS';\nexport const LIST_FILTER_GROUPS = 'LIST_FILTER_GROUPS';\nexport const LIST_ROLES = 'LIST_ROLES';\nexport const AUTH_ROLE = 'AUTH_ROLE';\nexport const LIST_USERS = 'LIST_USERS';\nexport const LOGIN = 'LOGIN';\nexport const LOGIN_RENEW = 'LOGIN_RENEW';\nexport const LOGOUT = 'LOGOUT';\nexport const ORDER_CONTENT = 'ORDER_CONTENT';\nexport const MOVE_CONTENT = 'MOVE_CONTENT';\nexport const REMOVE_MESSAGE = 'REMOVE_MESSAGE';\nexport const PURGE_MESSAGES = 'PURGE_MESSAGES';\nexport const RESET_SEARCH_CONTENT = 'RESET_SEARCH_CONTENT';\nexport const RESET_CONTENT = 'RESET_CONTENT';\nexport const RESET_PASSWORD = 'RESET_PASSWORD';\nexport const REVERT_HISTORY = 'REVERT_HISTORY';\nexport const SEARCH_CONTENT = 'SEARCH_CONTENT';\nexport const SET_SIDEBAR_TAB = 'SET_SIDEBAR_TAB';\nexport const TRANSITION_WORKFLOW = 'TRANSITION_WORKFLOW';\nexport const UNINSTALL_ADDON = 'UNINSTALL_ADDON';\nexport const UPDATE_CONTENT = 'UPDATE_CONTENT';\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';\nexport const UPDATE_GROUP = 'UPDATE_GROUP';\nexport const UPDATE_PASSWORD = 'UPDATE_PASSWORD';\nexport const UPDATE_SHARING = 'UPDATE_SHARING';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const UPGRADE_ADDON = 'UPGRADE_ADDON';\nexport const SYSTEM_INFORMATION = 'SYSTEM_INFORMATION';\nexport const DATABASE_INFORMATION = 'DATABASE_INFORMATION';\nexport const SET_BLOCKS_CLIPBOARD = 'SET_BLOCKS_CLIPBOARD';\nexport const RESET_BLOCKS_CLIPBOARD = 'RESET_BLOCKS_CLIPBOARD';\nexport const LOAD_LAZY_LIBRARY = 'LOAD_LAZY_LIBRARY';\nexport const GET_CONTEXT_NAVIGATION = 'GET_CONTEXT_NAVIGATION';\nexport const CREATE_WORKING_COPY = 'CREATE_WORKING_COPY';\nexport const APPLY_WORKING_COPY = 'APPLY_WORKING_COPY';\nexport const REMOVE_WORKING_COPY = 'REMOVE_WORKING_COPY';\nexport const LOCK_CONTENT = 'LOCK_CONTENT';\nexport const UNLOCK_CONTENT = 'UNLOCK_CONTENT';\n","class Config {\n  constructor() {\n    if (!Config.instance) {\n      this._data = {};\n      Config.instance = this;\n    }\n\n    return Config.instance;\n  }\n\n  set(registry, item) {\n    this._data[registry] = item;\n  }\n\n  get(registry) {\n    return this._data[registry];\n  }\n\n  get settings() {\n    return this._data.settings;\n  }\n\n  set settings(settings) {\n    this._data.settings = settings;\n  }\n\n  get blocks() {\n    return this._data.blocks;\n  }\n\n  set blocks(blocks) {\n    this._data.blocks = blocks;\n  }\n\n  get views() {\n    return this._data.views;\n  }\n\n  set views(views) {\n    this._data.views = views;\n  }\n\n  get widgets() {\n    return this._data.widgets;\n  }\n\n  set widgets(widgets) {\n    this._data.widgets = widgets;\n  }\n\n  get addonReducers() {\n    return this._data.addonReducers;\n  }\n\n  set addonReducers(addonReducers) {\n    this._data.addonReducers = addonReducers;\n  }\n\n  get addonRoutes() {\n    return this._data.addonRoutes;\n  }\n\n  set addonRoutes(addonRoutes) {\n    this._data.addonRoutes = addonRoutes;\n  }\n\n  get appExtras() {\n    return this._data.appExtras;\n  }\n\n  set appExtras(appExtras) {\n    this._data.appExtras = appExtras;\n  }\n\n  get slots() {\n    return this._data.slots;\n  }\n\n  set slots(slots) {\n    this._data.slots = slots;\n  }\n\n  get components() {\n    return this._data.components;\n  }\n\n  set components(components) {\n    this._data.components = components;\n  }\n\n  resolve(component) {\n    return this._data.components[component] || {};\n  }\n\n  register(name, component) {\n    this._data.components[name] = component;\n  }\n}\n\nconst instance = new Config();\nObject.freeze(instance);\n\nexport default instance;\n","/**\n * Actions actions.\n * @module actions/actions/actions\n */\n\nimport { LIST_ACTIONS } from '@plone/volto/constants/ActionTypes';\n\n/**\n * List actions.\n * @function listActions\n * @param {string} url Content url.\n * @returns {Object} List actions action.\n */\nexport function listActions(url) {\n  return {\n    type: LIST_ACTIONS,\n    request: {\n      op: 'get',\n      path: `${url}/@actions`,\n    },\n  };\n}\n","/**\n * Breadcrumbs actions.\n * @module actions/breadcrumbs/breadcrumbs\n */\n\nimport { GET_BREADCRUMBS } from '@plone/volto/constants/ActionTypes';\n\n/**\n * Get breadcrumbs.\n * @function getBreadcrumbs\n * @param {string} url Content url.\n * @returns {Object} Get breadcrumbs action.\n */\nexport function getBreadcrumbs(url) {\n  return {\n    type: GET_BREADCRUMBS,\n    request: {\n      op: 'get',\n      path: `${url}/@breadcrumbs`,\n    },\n  };\n}\n","import { EXPAND_TOOLBAR } from '@plone/volto/constants/ActionTypes';\n\n/**\n * Set sidebar tab function.\n * @function setExpandedToolbar\n * @param {Number} index New tab index.\n * @returns {Object} Set sidebar action.\n */\nexport function setExpandedToolbar(isExpanded) {\n  return {\n    type: EXPAND_TOOLBAR,\n    isExpanded,\n  };\n}\n","/**\n * Clipboard actions.\n * @module actions/clipboard/clipboard\n */\n\nimport {\n  COPY_CONTENT,\n  MOVE_CONTENT,\n  COPY,\n  CUT,\n} from '@plone/volto/constants/ActionTypes';\n\n/**\n * Copy content function.\n * @function copyContent\n * @param {array} source Source urls.\n * @param {string} target Target url.\n * @returns {Object} Copy content action.\n */\nexport function copyContent(source, target) {\n  return {\n    type: COPY_CONTENT,\n    request: {\n      op: 'post',\n      path: `${target}/@copy`,\n      data: { source },\n    },\n  };\n}\n\n/**\n * Move content function.\n * @function moveContent\n * @param {array} source Source urls.\n * @param {string} target Target url.\n * @returns {Object} Move content action.\n */\nexport function moveContent(source, target) {\n  return {\n    type: MOVE_CONTENT,\n    request: {\n      op: 'post',\n      path: `${target}/@move`,\n      data: { source },\n    },\n  };\n}\n\n/**\n * Copy function.\n * @function copy\n * @param {array} urls Source urls.\n * @returns {Object} Copy action.\n */\nexport function copy(urls) {\n  return {\n    type: COPY,\n    source: urls,\n  };\n}\n\n/**\n * Cut function.\n * @function cut\n * @param {array} urls Source urls.\n * @returns {Object} Cut action.\n */\nexport function cut(urls) {\n  return {\n    type: CUT,\n    source: urls,\n  };\n}\n","/**\n * Add-ons actions.\n * @module actions/addons/addons\n */\n\nimport {\n  INSTALL_ADDON,\n  LIST_ADDONS,\n  UNINSTALL_ADDON,\n  UPGRADE_ADDON,\n} from '../../constants/ActionTypes';\n\n/**\n * List addons function\n * @function listAddons\n * @returns {Object} List addons action\n */\nexport function listAddons() {\n  return {\n    type: LIST_ADDONS,\n    request: {\n      op: 'get',\n      path: `/@addons`,\n    },\n  };\n}\n\n/**\n * Install addon function.\n * @function installAddon\n * @param {string} id Addon id\n * @returns {Object} install addon action.\n */\nexport function installAddon(id) {\n  return {\n    type: INSTALL_ADDON,\n    request: {\n      op: 'post',\n      path: `/@addons/${id}/install`,\n    },\n  };\n}\n\n/**\n * Uninstall addon function.\n * @function uninstallAddon\n * @param {string} id Addon id\n * @returns {Object} uninstall addon action.\n */\nexport function uninstallAddon(id) {\n  return {\n    type: UNINSTALL_ADDON,\n    request: {\n      op: 'post',\n      path: `/@addons/${id}/uninstall`,\n    },\n  };\n}\n\n/**\n * Uninstall addon function.\n * @function upgradeAddon\n * @param {string} id Addon id\n * @returns {Object} id of addon to upgrade.\n */\nexport function upgradeAddon(id) {\n  return {\n    type: UPGRADE_ADDON,\n    request: {\n      op: 'post',\n      path: `/@addons/${id}/upgrade`,\n    },\n  };\n}\n","/**\n * Comments actions.\n * @module actions/comments/comments\n */\n\nimport {\n  ADD_COMMENT,\n  DELETE_COMMENT,\n  LIST_COMMENTS,\n  LIST_MORE_COMMENTS,\n  UPDATE_COMMENT,\n} from '@plone/volto/constants/ActionTypes';\n\n/**\n * Add comment function.\n * @function addComment\n * @param {string} url Content url.\n * @param {string} text Body of the comment.\n * @returns {Object} Add comment action.\n */\nexport function addComment(url, text, commentId) {\n  const path = commentId ? `${url}/@comments/${commentId}` : `${url}/@comments`;\n\n  return {\n    type: ADD_COMMENT,\n    request: {\n      op: 'post',\n      path,\n      data: { text },\n    },\n  };\n}\n\n/**\n * List comments function\n * @function listComments\n * @param {string} url Content url\n * @returns {Object} List comment action\n */\nexport function listComments(url) {\n  return {\n    type: LIST_COMMENTS,\n    request: {\n      op: 'get',\n      path: `${url}/@comments`,\n    },\n  };\n}\n\nexport function listMoreComments(url) {\n  return {\n    type: LIST_MORE_COMMENTS,\n    request: {\n      op: 'get',\n      path: `${url}`,\n    },\n  };\n}\n\n/**\n * Delete comment function.\n * @function deleteComment\n * @param {string} url Content url.\n * @returns {Object} Delete comment action.\n */\nexport function deleteComment(url) {\n  return {\n    type: DELETE_COMMENT,\n    request: {\n      op: 'del',\n      path: url,\n    },\n  };\n}\n\n/**\n * Update comment function.\n * @function updateComment\n * @param {string} url Content url(s).\n * @param {string} text Body of the comment.\n * @returns {Object} Update content action.\n */\nexport function updateComment(url, text) {\n  return {\n    type: UPDATE_COMMENT,\n    request: {\n      op: 'patch',\n      path: url,\n      data: { text },\n    },\n  };\n}\n","/**\n * Content actions.\n * @module actions/content/content\n */\n\nimport {\n  CREATE_CONTENT,\n  DELETE_CONTENT,\n  UPDATE_CONTENT,\n  GET_CONTENT,\n  ORDER_CONTENT,\n  RESET_CONTENT,\n  UPDATECOLUMNS_CONTENT,\n  LOCK_CONTENT,\n  UNLOCK_CONTENT,\n} from '@plone/volto/constants/ActionTypes';\nimport { nestContent } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\n/**\n * Create content function.\n * @function createContent\n * @param {string} url Parent URL.\n * @param {Object|Array} content Content data.\n * @param {string} subrequest Optional. Key of the subrequest.\n * @returns {Object} Create content action.\n */\nexport function createContent(url, content, subrequest) {\n  return {\n    type: CREATE_CONTENT,\n    subrequest,\n    mode: 'serial',\n    request: Array.isArray(content)\n      ? content.map((item) => ({ op: 'post', path: url, data: item }))\n      : { op: 'post', path: url, data: nestContent(content) },\n  };\n}\n\n/**\n * Delete content function.\n * @function deleteContent\n * @param {string|Array} urls Content url(s).\n * @returns {Object} Delete content action.\n */\nexport function deleteContent(urls) {\n  return {\n    type: DELETE_CONTENT,\n    mode: 'serial',\n    request:\n      typeof urls === 'string'\n        ? { op: 'del', path: urls }\n        : urls.map((url) => ({ op: 'del', path: url })),\n  };\n}\n\n/**\n * Update content function.\n * @function updateContent\n * @param {string|Array} urls Content url(s).\n * @param {Object|Array} content Content data.\n * @param {Object|Array} headers Custom headers.\n * @returns {Object} Update content action.\n */\nexport function updateContent(urls, content, headers = {}) {\n  return {\n    type: UPDATE_CONTENT,\n    request:\n      typeof urls === 'string'\n        ? {\n            op: 'patch',\n            path: urls,\n            data: nestContent(content),\n            headers: headers,\n          }\n        : urls.map((url, index) => ({\n            op: 'patch',\n            path: url,\n            data: nestContent(content[index]),\n            headers: headers,\n          })),\n  };\n}\n\n/**\n * Order content function\n * @function orderContent\n * @param {string} parent Parent url\n * @param {string} url Content url\n * @param {string|number} delta Order delta\n * @param {Array} subset Subset ids\n * @returns {Object} Order content action\n */\nexport function orderContent(parent, url, delta, subset) {\n  return {\n    type: ORDER_CONTENT,\n    request: {\n      op: 'patch',\n      path: parent,\n      data: { ordering: { obj_id: url, delta, subset_ids: subset } },\n    },\n  };\n}\n\n/**\n * Sort content function\n * @function sortContent\n * @param {string} url Content url\n * @param {string} on Sort on index\n * @param {string} order Sort order\n * @returns {Object} Sort content action\n */\nexport function sortContent(url, on, order) {\n  return {\n    type: UPDATE_CONTENT,\n    sort: { on, order },\n    request: {\n      op: 'patch',\n      path: url,\n      data: { sort: { on, order } },\n    },\n  };\n}\n\n/**\n * Get content function\n * @function getContent\n * @param {string} url Content url\n * @param {string} version Version id\n * @param {string} subrequest Key of the subrequest.\n * @param {boolean} fullobjects If full object information should be retrieved\n * @returns {Object} Get content action\n */\nexport function getContent(\n  url,\n  version = null,\n  subrequest = null,\n  page = null,\n  fullobjects = false,\n) {\n  const { settings } = config;\n  const query = Object.assign(\n    {},\n    fullobjects || settings.bbb_getContentFetchesFullobjects\n      ? { fullobjects: true }\n      : {},\n    page\n      ? {\n          b_start: settings.defaultPageSize * (page - 1),\n          b_size: settings.defaultPageSize,\n        }\n      : {},\n    settings.isMultilingual ? { expand: 'translations' } : {},\n  );\n\n  let qs = Object.keys(query)\n    .map(function (key) {\n      return key + '=' + query[key];\n    })\n    .join('&');\n\n  return {\n    type: GET_CONTENT,\n    subrequest,\n    request: {\n      op: 'get',\n      path: `${url}${version ? `/@history/${version}` : ''}${\n        qs ? `?${qs}` : ''\n      }`,\n    },\n  };\n}\n\n/**\n * Reset content function\n * @function resetContent\n * @param {string} subrequest Key of the subrequest.\n * @returns {Object} Get content action\n */\nexport function resetContent(subrequest = null) {\n  return {\n    type: RESET_CONTENT,\n    subrequest,\n  };\n}\n\n/**\n * Add, remove or order indexes\n * @param {string} url Content url\n * @param {string} index indexes with order\n * @returns {Object} Index content action\n */\nexport function updateColumnsContent(url, index) {\n  return {\n    type: UPDATECOLUMNS_CONTENT,\n    indexcolumns: index,\n  };\n}\n\n/**\n * Lock content function.\n * @function lockContent\n * @param {string} urls Content url(s)\n * @returns {Object} Lock content action.\n */\nexport function lockContent(urls) {\n  return {\n    type: LOCK_CONTENT,\n    mode: 'serial',\n    request:\n      typeof urls === 'string'\n        ? { op: 'post', path: `${urls}/@lock` }\n        : urls.map((url) => ({ op: 'post', path: `${url}/@lock` })),\n  };\n}\n\n/**\n * Unlock content function.\n * @function unlockContent\n * @param {string|Array} urls Content url(s).\n * @returns {Object} Unlock content action.\n */\nexport function unlockContent(urls, force = false) {\n  return {\n    type: UNLOCK_CONTENT,\n    mode: 'serial',\n    request:\n      typeof urls === 'string'\n        ? {\n            op: 'del',\n            path: `${urls}/@lock`,\n            data: force ? { force: true } : {},\n          }\n        : urls.map((url) => ({\n            op: 'del',\n            path: `${url}/@lock`,\n            data: force ? { force: true } : {},\n          })),\n  };\n}\n","/**\n * Controlpanels actions.\n * @module actions/controlpanels/controlpanels\n */\n\nimport {\n  GET_CONTROLPANEL,\n  POST_CONTROLPANEL,\n  DELETE_CONTROLPANEL,\n  LIST_CONTROLPANELS,\n  UPDATE_CONTROLPANEL,\n  SYSTEM_INFORMATION,\n  DATABASE_INFORMATION,\n} from '@plone/volto/constants/ActionTypes';\n/**\n * Get controlpanel function.\n * @function getControlpanel\n * @param {id} id Controlpanel id.\n * @returns {Object} Get controlpanel action.\n */\nexport function getControlpanel(id) {\n  return {\n    type: GET_CONTROLPANEL,\n    request: {\n      op: 'get',\n      path: `/@controlpanels/${id}`,\n    },\n  };\n}\n\n/**\n * Post controlpanel function.\n * @function postControlpanel\n * @param {id} id Controlpanel id.\n * @param {Object} data Controlpanel data.\n * @returns {Object} Post controlpanel action.\n */\nexport function postControlpanel(id, data) {\n  return {\n    type: POST_CONTROLPANEL,\n    request: {\n      op: 'post',\n      path: `/@controlpanels/${id}`,\n      data,\n    },\n  };\n}\n\n/**\n * Delete controlpanel function.\n * @function deleteControlpanel\n * @param {id} id Controlpanel id.\n * @param {string} item Controlpanel item to be deleted.\n * @returns {Object} Delete controlpanel action.\n */\nexport function deleteControlpanel(id, item) {\n  return {\n    type: DELETE_CONTROLPANEL,\n    request: {\n      op: 'del',\n      path: `/@controlpanels/${id}/${item}`,\n    },\n  };\n}\n\n/**\n * List controlpanels function.\n * @function listControlpanels\n * @returns {Object} List controlpanels action.\n */\nexport function listControlpanels() {\n  return {\n    type: LIST_CONTROLPANELS,\n    request: {\n      op: 'get',\n      path: '/@controlpanels',\n    },\n  };\n}\n\n/**\n * Update controlpanel function.\n * @function updateControlpanel\n * @param {string} url Controlpanel url.\n * @param {Object} data Controlpanel data.\n * @returns {Object} Update controlpanel action.\n */\nexport function updateControlpanel(url, data) {\n  return {\n    type: UPDATE_CONTROLPANEL,\n    request: {\n      op: 'patch',\n      path: url,\n      data,\n    },\n  };\n}\n\nexport function getSystemInformation() {\n  return {\n    type: SYSTEM_INFORMATION,\n    request: {\n      op: 'get',\n      path: '/@system',\n    },\n  };\n}\n\nexport function getDatabaseInformation() {\n  return {\n    type: DATABASE_INFORMATION,\n    request: {\n      op: 'get',\n      path: '/@database',\n    },\n  };\n}\n","/**\n * Diff actions.\n * @module actions/diff/diff\n */\n\nimport { GET_DIFF } from '@plone/volto/constants/ActionTypes';\n\n/**\n * Get diff.\n * @function getDiff\n * @param {string} url Content url.\n * @param {string} one First version id\n * @param {string} two Second version id\n * @returns {Object} Get diff action.\n */\nexport function getDiff(url, one, two) {\n  return {\n    type: GET_DIFF,\n    request: [\n      {\n        op: 'get',\n        path: `${url}/@history/${one}`,\n      },\n      {\n        op: 'get',\n        path: `${url}/@history/${two}`,\n      },\n    ],\n  };\n}\n","/**\n * emailNotification actions.\n * @module actions/emailNotification/emailNotification\n */\n\nimport { EMAIL_NOTIFICATION } from '@plone/volto/constants/ActionTypes';\n\n/**\n * Email notification function\n * @function emailNotification\n * @param {string} from User id\n * @param {string} message Old password.\n * @param {string} name New password.\n * @param {string} subject New password.\n * @returns {Object} Edit password action.\n */\nexport function emailNotification(from, message, name, subject) {\n  return {\n    type: EMAIL_NOTIFICATION,\n    request: {\n      op: 'post',\n      path: '/@email-notification',\n      data: {\n        from,\n        message,\n        name,\n        subject,\n      },\n    },\n  };\n}\n","/**\n * Groups actions.\n * @module actions/groups/groups\n */\n\nimport {\n  CREATE_GROUP,\n  DELETE_GROUP,\n  GET_GROUP,\n  LIST_GROUPS,\n  LIST_FILTER_GROUPS,\n  UPDATE_GROUP,\n} from '@plone/volto/constants/ActionTypes';\n\n/**\n * Create group function.\n * @function createGroup\n * @param {Object} data Group data.\n * @returns {Object} Create group action.\n */\nexport function createGroup(data) {\n  return {\n    type: CREATE_GROUP,\n    request: {\n      op: 'post',\n      path: '/@groups',\n      data,\n    },\n  };\n}\n\n/**\n * Delete group function.\n * @function deleteGroup\n * @param {string} id Group id\n * @returns {Object} Delete group action.\n */\nexport function deleteGroup(id) {\n  return {\n    type: DELETE_GROUP,\n    request: {\n      op: 'del',\n      path: `/@groups/${id}`,\n    },\n  };\n}\n\n/**\n * Get group function\n * @function getGroup\n * @param {string} id Group id\n * @returns {Object} Get group action\n */\nexport function getGroup(id) {\n  return {\n    type: GET_GROUP,\n    request: {\n      op: 'get',\n      path: `/@groups/${id}`,\n    },\n  };\n}\n\n/**\n * List groups function\n * Two group lists needed by user group membership control panel: one for joining, one for filtering users.\n * @function listGroups\n * @returns {Object} List groups action\n */\nexport function listGroups(query, query_group_filter) {\n  return query_group_filter !== undefined\n    ? {\n        type: LIST_FILTER_GROUPS,\n        request: query_group_filter\n          ? {\n              op: 'get',\n              path: `/@groups?query=${query_group_filter}`,\n            }\n          : {\n              op: 'get',\n              path: `/@groups`,\n            },\n      }\n    : {\n        type: LIST_GROUPS,\n        request: query\n          ? {\n              op: 'get',\n              path: `/@groups?query=${query}`,\n            }\n          : {\n              op: 'get',\n              path: '/@groups',\n            },\n      };\n}\n\n/**\n * Update group function.\n * @function updateGroup\n * @param {string} id Group id\n * @param {Object} data Group data.\n * @returns {Object} Update group action.\n */\nexport function updateGroup(id, data) {\n  return {\n    type: UPDATE_GROUP,\n    request: {\n      op: 'patch',\n      path: `/@groups/${id}`,\n      data,\n    },\n  };\n}\n","/**\n * History actions.\n * @module actions/history/history\n */\n\nimport {\n  GET_HISTORY,\n  REVERT_HISTORY,\n} from '@plone/volto/constants/ActionTypes';\n\n/**\n * Get history function.\n * @function getHistory\n * @param {string} url Content url.\n * @returns {Object} Get history action.\n */\nexport function getHistory(url) {\n  return {\n    type: GET_HISTORY,\n    request: {\n      op: 'get',\n      path: `${url}/@history`,\n    },\n  };\n}\n\n/**\n * Revert history function.\n * @function revertHistory\n * @param {string} url Content url.\n * @param {number} version Revert version.\n * @returns {Object} Revet history action.\n */\nexport function revertHistory(url, version) {\n  return {\n    type: REVERT_HISTORY,\n    request: {\n      op: 'patch',\n      path: `${url}/@history`,\n      data: { version },\n    },\n  };\n}\n","/**\n * Message actions.\n * @module actions/message/message\n */\nimport { v4 as uuid } from 'uuid';\n\nimport {\n  ADD_MESSAGE,\n  REMOVE_MESSAGE,\n  PURGE_MESSAGES,\n} from '@plone/volto/constants/ActionTypes';\n\n/**\n * Add message function\n * @function addMessage\n * @param {string} title Message header\n * @param {string} body Message body.\n * @param {string} level Message level.\n * @returns {Object} Add message action.\n */\nexport function addMessage(title, body, level) {\n  return {\n    type: ADD_MESSAGE,\n    id: uuid(),\n    title,\n    body,\n    level,\n    show: true,\n  };\n}\n\n/**\n * Remove message function\n * @function removeMessage\n * @param {number} index Message index\n * @returns {Object} Add message action.\n */\nexport function removeMessage(index) {\n  return {\n    type: REMOVE_MESSAGE,\n    index,\n  };\n}\n\n/**\n * Purge all messages function\n * @function purgeMessages\n * @returns {Object} Add message action.\n */\nexport function purgeMessages() {\n  return {\n    type: PURGE_MESSAGES,\n  };\n}\n","/**\n * Navigation actions.\n * @module actions/navigation/navigation\n */\n\nimport { GET_NAVIGATION } from '@plone/volto/constants/ActionTypes';\n\n/**\n * Get navigation.\n * @function getNavigation\n * @param {string} url Content url.\n * @param {number} depth Depth of the navigation tree.\n * @returns {Object} Get navigation action.\n */\nexport function getNavigation(url, depth) {\n  // Note: Depth can't be 0 in plone.restapi\n  return {\n    type: GET_NAVIGATION,\n    request: {\n      op: 'get',\n      path: `${url}/@navigation${\n        depth ? `?expand.navigation.depth=${depth}` : ''\n      }`,\n    },\n  };\n}\n","/**\n * Roles actions.\n * @module actions/roles/roles\n */\n\nimport { LIST_ROLES } from '@plone/volto/constants/ActionTypes';\n\n/**\n * List roles.\n * @function listRoles\n * @returns {Object} List roles action.\n */\nexport function listRoles() {\n  return {\n    type: LIST_ROLES,\n    request: {\n      op: 'get',\n      path: '/@roles',\n    },\n  };\n}\n","/**\n * Schema actions.\n * @module actions/schema/schema\n */\n\nimport {\n  GET_SCHEMA,\n  POST_SCHEMA,\n  PUT_SCHEMA,\n  UPDATE_SCHEMA,\n} from '@plone/volto/constants/ActionTypes';\n\n/**\n * Get schema function.\n * @function getSchema\n * @param {string} type Content type.\n * @param {string} url Content url.\n * @returns {Object} Get schema action.\n */\nexport function getSchema(type, url) {\n  url = typeof url !== 'undefined' ? url : '';\n  return {\n    type: GET_SCHEMA,\n    request: {\n      op: 'get',\n      path: `${url}/@types/${type}`,\n    },\n  };\n}\n\n/**\n * Post schema function.\n * @function postSchema\n * @param {string} type Content type.\n * @param {Object} data Schema data.\n * @returns {Object} Post schema action.\n */\nexport function postSchema(type, data) {\n  return {\n    type: POST_SCHEMA,\n    request: {\n      op: 'post',\n      path: `/@types/${type}`,\n      data,\n    },\n  };\n}\n\n/**\n * Put schema function.\n * @function putSchema\n * @param {string} type Content type.\n * @param {Object} data Schema data.\n * @returns {Object} Put schema action.\n */\nexport function putSchema(type, data) {\n  return {\n    type: PUT_SCHEMA,\n    request: {\n      op: 'put',\n      path: `/@types/${type}`,\n      data,\n    },\n  };\n}\n\n/**\n * Update schema function.\n * @function updateSchema\n * @param {string} type Content type.\n * @param {Object} data Schema data.\n * @returns {Object} Update schema action.\n */\nexport function updateSchema(type, data) {\n  return {\n    type: UPDATE_SCHEMA,\n    request: {\n      op: 'patch',\n      path: `/@types/${type}`,\n      data,\n    },\n  };\n}\n","/**\n * Sharing actions.\n * @module actions/sharing/sharing\n */\n\nimport {\n  UPDATE_SHARING,\n  GET_SHARING,\n} from '@plone/volto/constants/ActionTypes';\n\n/**\n * Update sharing function.\n * @function updateSharing\n * @param {string} url Content url.\n * @param {Object} sharing Sharing data.\n * @returns {Object} Update sharing action.\n */\nexport function updateSharing(url, sharing) {\n  return {\n    type: UPDATE_SHARING,\n    request: {\n      op: 'post',\n      path: `${url}/@sharing`,\n      data: sharing,\n    },\n  };\n}\n\n/**\n * Get sharing function.\n * @function getSharing\n * @param {string} url Content url.\n * @param {string} search Search value.\n * @returns {Object} Get sharing action.\n */\nexport function getSharing(url, search = '') {\n  return {\n    type: GET_SHARING,\n    request: {\n      op: 'get',\n      path: `${url}/@sharing${search !== '' ? `?search=${search}` : ''}`,\n    },\n  };\n}\n","/**\n * Types actions.\n * @module actions/types/types\n */\n\nimport { GET_TYPES } from '@plone/volto/constants/ActionTypes';\n\n/**\n * Get types function.\n * @function getTypes\n * @param {string} url Content url.\n * @returns {Object} Get types action.\n */\nexport function getTypes(url) {\n  return (dispatch, getState) => {\n    if (getState().userSession.token) {\n      dispatch({\n        type: GET_TYPES,\n        request: {\n          op: 'get',\n          path: `${url}/@types`,\n        },\n      });\n    }\n  };\n}\n","/**\n * Users actions.\n * @module actions/users/users\n */\n\nimport { stringify } from 'query-string';\n\nimport {\n  CREATE_USER,\n  DELETE_USER,\n  GET_USER,\n  LIST_USERS,\n  UPDATE_USER,\n  UPDATE_PASSWORD,\n  INITIAL_PASSWORD,\n  RESET_PASSWORD,\n} from '@plone/volto/constants/ActionTypes';\n\n/**\n * Create user function.\n * @function createUser\n * @param {Object|Array} content User data.\n * @returns {Object} Create user action.\n */\nexport function createUser(content) {\n  return {\n    type: CREATE_USER,\n    request: {\n      op: 'post',\n      path: '/@users',\n      data: content,\n    },\n  };\n}\n\n/**\n * Delete user function.\n * @function deleteUser\n * @param {string} id User id\n * @returns {Object} Delete user action.\n */\nexport function deleteUser(id) {\n  return {\n    type: DELETE_USER,\n    request: {\n      op: 'del',\n      path: `/@users/${id}`,\n    },\n  };\n}\n\n/**\n * Get user function\n * @function getUser\n * @param {string} id User id\n * @returns {Object} Get user action\n */\nexport function getUser(id) {\n  return {\n    type: GET_USER,\n    request: {\n      op: 'get',\n      path: `/@users/${id}`,\n    },\n  };\n}\n\n/**\n * List users function\n * 'query' and 'search' are mutually exclusive parameters. 'search' wins.\n * Query either for username or search for username, fullname, email.\n * @function listUsers\n * @param {string} query for username\n * @param {string} search for  username, fullname, email.\n * @param {list} groups_filter restrict to group membership\n * @param {int} limit\n * @returns {Object} List users action\n */\nexport function listUsers(options) {\n  if (typeof options === 'object') {\n    const {\n      query = '',\n      search = '',\n      groups_filter = [],\n      limit = null,\n    } = options;\n    let path = '/@users';\n\n    var searchParams = new URLSearchParams();\n    if (query) {\n      searchParams.append('query', query);\n    }\n    if (search) {\n      searchParams.append('search', search);\n    }\n    limit && searchParams.append('limit', limit);\n    const searchParamsToString = searchParams.toString();\n\n    let filterarg =\n      groups_filter.length > 0\n        ? stringify(\n            { 'groups-filter': groups_filter },\n            { arrayFormat: 'colon-list-separator' },\n          )\n        : '';\n\n    if (searchParamsToString) {\n      path += `?${searchParamsToString}`;\n    }\n    if (filterarg) {\n      path += searchParamsToString ? '&' : '?';\n      path += filterarg;\n    }\n    return {\n      type: LIST_USERS,\n      request: {\n        op: 'get',\n        path: path,\n      },\n    };\n  }\n  return {\n    type: LIST_USERS,\n    request: options\n      ? { op: 'get', path: `/@users?query=${options}` }\n      : { op: 'get', path: '/@users' },\n  };\n}\n\n/**\n * Update user function\n * @function updateUser\n * @param {string} id User id\n * @param {Object} user User data.\n * @returns {Object} Update user action.\n */\nexport function updateUser(id, user) {\n  return {\n    type: UPDATE_USER,\n    request: { op: 'patch', path: `/@users/${id}`, data: user },\n  };\n}\n\n/**\n * Update password function\n * @function updatePassword\n * @param {string} id User id\n * @param {string} oldPassword Old password.\n * @param {string} newPassword New password.\n * @returns {Object} Update password action.\n */\nexport function updatePassword(id, oldPassword, newPassword) {\n  return {\n    type: UPDATE_PASSWORD,\n    request: {\n      op: 'post',\n      path: `/@users/${id}/reset-password`,\n      data: {\n        old_password: oldPassword,\n        new_password: newPassword,\n      },\n    },\n  };\n}\n\n/**\n * Set initial password function\n * @function setInitialPassword\n * @param {string} id User id\n * @param {string} token One time user token.\n * @param {string} newPassword New password.\n * @returns {Object} Set initial password action.\n */\nexport function setInitialPassword(id, token, newPassword) {\n  return {\n    type: INITIAL_PASSWORD,\n    request: {\n      op: 'post',\n      path: `/@users/${id}/reset-password`,\n      data: {\n        reset_token: token,\n        new_password: newPassword,\n      },\n    },\n  };\n}\n\n/**\n * Reset password function\n * @function resetPassword\n * @param {string} id User id\n * @returns {Object} Reset password action.\n */\nexport function resetPassword(id) {\n  return {\n    type: RESET_PASSWORD,\n    request: {\n      op: 'post',\n      path: `/@users/${id}/reset-password`,\n    },\n  };\n}\n","/**\n * Search actions.\n * @module actions/search/search\n */\n\nimport { LOGIN, LOGIN_RENEW, LOGOUT } from '@plone/volto/constants/ActionTypes';\n\n/**\n * Login function.\n * @function login\n * @param {string} username Username.\n * @param {string} password Password.\n * @returns {Object} Login action.\n */\nexport function login(username, password) {\n  return {\n    type: LOGIN,\n    request: {\n      op: 'post',\n      path: '@login',\n      data: { login: username, password },\n    },\n  };\n}\n\n/**\n * Login renew function.\n * @function loginRenew\n * @returns {Object} Login renew action.\n */\nexport function loginRenew() {\n  return {\n    type: LOGIN_RENEW,\n    request: {\n      op: 'post',\n      path: '@login-renew',\n    },\n  };\n}\n\n/**\n * Logout function.\n * @function logout\n * @returns {Object} Logout action.\n */\nexport function logout() {\n  return {\n    type: LOGOUT,\n    request: {\n      op: 'post',\n      path: '@logout',\n    },\n  };\n}\n","/**\n * Vocabularies actions.\n * @module actions/vocabularies/vocabularies\n */\n\nimport {\n  GET_VOCABULARY,\n  GET_VOCABULARY_TOKEN_TITLE,\n} from '@plone/volto/constants/ActionTypes';\nimport { getVocabName } from '@plone/volto/helpers/Vocabularies/Vocabularies';\nimport qs from 'query-string';\n\n/**\n * Get vocabulary given a URL (coming from a Schema) or from a vocabulary name.\n * @function getVocabulary\n * @param {string} vocabNameOrURL Full API URL of vocabulary or vocabulary name\n * @param {string} query Only include results containing this string.\n * @param {number} start Start of result batch.\n * @param {number} b_size The size of the batch.\n * @param {string} subrequest Name of the subrequest.\n * @returns {Object} Get vocabulary action.\n */\nexport function getVocabulary({\n  vocabNameOrURL,\n  query = null,\n  start = 0,\n  size,\n  subrequest,\n}) {\n  const vocabulary = getVocabName(vocabNameOrURL);\n\n  let queryString = `b_start=${start}${size ? '&b_size=' + size : ''}`;\n\n  if (query) {\n    queryString = `${queryString}&title=${query}`;\n  }\n  return {\n    type: GET_VOCABULARY,\n    vocabulary: vocabNameOrURL,\n    start,\n    request: {\n      op: 'get',\n      path: `/@vocabularies/${vocabulary}?${queryString}`,\n    },\n    subrequest,\n  };\n}\n\n/**\n * Get the title value given a token from vocabulary given a vocabulary URL\n * (coming from a Schema) or from a vocabulary name.\n * @function getVocabularyTokenTitle\n * @param {string} vocabNameOrURL Full API URL of vocabulary or vocabulary name\n * @param {string} token Only include results containing this string.\n * @returns {Object} Get vocabulary action.\n */\nexport function getVocabularyTokenTitle({\n  vocabNameOrURL,\n  token = null,\n  tokens = null,\n  subrequest,\n}) {\n  // In case we have a URL, we have to get the vocabulary name\n  const vocabulary = getVocabName(vocabNameOrURL);\n  const queryString = {\n    ...(token && { token }),\n    ...(tokens && { tokens }),\n  };\n\n  return {\n    type: GET_VOCABULARY_TOKEN_TITLE,\n    vocabulary: vocabNameOrURL,\n    token,\n    tokens,\n    subrequest,\n    request: {\n      op: 'get',\n      path: `/@vocabularies/${vocabulary}?b_size=-1&${qs.stringify(\n        queryString,\n        {\n          encode: false,\n        },\n      )}`,\n    },\n  };\n}\n","/**\n * Workflow actions.\n * @module actions/workflow/workflow\n */\n\nimport {\n  GET_WORKFLOW,\n  GET_WORKFLOW_MULTIPLE,\n  TRANSITION_WORKFLOW,\n} from '@plone/volto/constants/ActionTypes';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\n/**\n * Get workflow function.\n * @function getWorkflow\n * @param {string|Array} urls Workflow url(s).\n * @returns {Object} Get workflow action.\n */\nexport function getWorkflow(urls) {\n  return {\n    type: typeof urls === 'string' ? GET_WORKFLOW : GET_WORKFLOW_MULTIPLE,\n    request:\n      typeof urls === 'string'\n        ? { op: 'get', path: `${urls}/@workflow` }\n        : urls.map((url) => ({ op: 'get', path: `${url}/@workflow` })),\n  };\n}\n\n/**\n * Transition workflow.\n * @function transitionWorkflow\n * @param {string} urls Content url(s).\n * @param {bool} include_children Include children.\n * @returns {Object} Transition workflow action.\n */\nexport function transitionWorkflow(urls, include_children = false) {\n  return {\n    type: TRANSITION_WORKFLOW,\n    request:\n      typeof urls === 'string'\n        ? {\n            op: 'post',\n            path: flattenToAppURL(urls),\n            data: { include_children },\n          }\n        : urls.map((url) => ({\n            op: 'post',\n            path: flattenToAppURL(url),\n            data: { include_children },\n          })),\n  };\n}\n","/**\n * Querystring actions.\n * @module actions/querystring/querystring\n */\n\nimport { GET_QUERYSTRING } from '@plone/volto/constants/ActionTypes';\n\n/**\n * Get querystring.\n * @function getQuerystring\n * @returns {Object} Get querystring action.\n */\nexport function getQuerystring() {\n  return {\n    type: GET_QUERYSTRING,\n    request: {\n      op: 'get',\n      path: '/@querystring',\n    },\n  };\n}\n","import { GET_QUERYSTRING_RESULTS } from '@plone/volto/constants/ActionTypes';\nimport config from '@plone/volto/registry';\n\n/**\n * Get querystring results.\n * @function getQueryStringResults\n * @param {Object} data Data.\n * @returns {Object} Get querystringsearch results action.\n */\nexport function getQueryStringResults(path, data, subrequest, page) {\n  const { settings } = config;\n\n  // fixes https://github.com/plone/volto/issues/1059\n  let requestData = JSON.parse(JSON.stringify(data));\n\n  if (data?.depth != null) {\n    delete requestData.depth;\n    requestData.query.forEach((q) => {\n      if (q.i === 'path') {\n        q.v += '::' + data.depth;\n      }\n    });\n  }\n\n  // fixes https://github.com/plone/volto/issues/2397\n  if (requestData?.sort_order !== null) {\n    if (typeof requestData.sort_order === 'boolean') {\n      requestData.sort_order = requestData.sort_order\n        ? 'descending'\n        : 'ascending';\n    }\n  }\n\n  return {\n    type: GET_QUERYSTRING_RESULTS,\n    subrequest,\n    request: {\n      op: 'post',\n      path: `${path}/@querystring-search`,\n      data: {\n        ...requestData,\n        ...(!requestData.b_size && {\n          b_size: settings.defaultPageSize,\n        }),\n        ...(page && {\n          b_start: requestData.b_size\n            ? data.b_size * (page - 1)\n            : settings.defaultPageSize * (page - 1),\n        }),\n        query: requestData?.query,\n      },\n    },\n  };\n}\n","/**\n * Sidebar actions.\n * @module actions/sidebar/sidebar\n */\n\nimport { SET_SIDEBAR_TAB } from '@plone/volto/constants/ActionTypes';\n\n/**\n * Set sidebar tab function.\n * @function setSidebarTab\n * @param {Number} index New tab index.\n * @returns {Object} Set sidebar action.\n */\nexport function setSidebarTab(index) {\n  return {\n    type: SET_SIDEBAR_TAB,\n    index,\n  };\n}\n","/**\n * translations actions.\n * @module actions/translations/translations\n */\n\nimport {\n  DELETE_TRANSLATION,\n  GET_TRANSLATION_LOCATOR,\n  LINK_TRANSLATION,\n} from '@plone/volto/constants/ActionTypes';\n\n/**\n * Get translations function.\n * @function getTranslationLocator\n * @param {string} url URL type.\n * @returns {Object} Get translations action.\n */\nexport function getTranslationLocator(url, lang) {\n  return {\n    type: GET_TRANSLATION_LOCATOR,\n    request: {\n      op: 'get',\n      path: `${url}/@translation-locator?target_language=${lang}`,\n    },\n  };\n}\n\n/**\n * Link translations function.\n * @function linkTranslation\n * @param {string} url URL type origin object to be linked to.\n * @param {string} target URL type (absolute, relative or UUID).\n * @returns {Object} Get translations action.\n */\nexport function linkTranslation(url, target) {\n  return {\n    type: LINK_TRANSLATION,\n    request: {\n      op: 'post',\n      path: `${url}/@translations`,\n      data: {\n        id: target,\n      },\n    },\n  };\n}\n\n/**\n * Delete link translations function.\n * @function linkTranslation\n * @param {string} url URL type origin object to be linked to.\n * @param {string} lang short language code of the translation to be deleted.\n * @returns {Object} Get translations action.\n */\nexport function deleteLinkTranslation(url, lang) {\n  return {\n    type: DELETE_TRANSLATION,\n    request: {\n      op: 'del',\n      path: `${url}/@translations`,\n      data: {\n        language: lang,\n      },\n    },\n  };\n}\n","import {\n  SET_BLOCKS_CLIPBOARD,\n  RESET_BLOCKS_CLIPBOARD,\n} from '@plone/volto/constants/ActionTypes';\n\n/**\n * Copy blocks to clipboard function.\n * @function copyBlocks\n * @param {array} blocksData Block data\n * @returns {Object} Copy action.\n */\nexport function setBlocksClipboard(payload) {\n  return {\n    type: SET_BLOCKS_CLIPBOARD,\n    ...Object.assign(\n      {},\n      payload.cut ? { cut: payload.cut.filter((b) => !!b) } : {},\n      payload.copy ? { copy: payload.copy.filter((b) => !!b) } : {},\n    ),\n  };\n}\n\n/**\n * Reset blocks clipboard function.\n * @function resetBlocksClipboard\n * @returns {Object} Reset blocks clipboard\n */\nexport function resetBlocksClipboard() {\n  return {\n    type: RESET_BLOCKS_CLIPBOARD,\n  };\n}\n","import { LOAD_LAZY_LIBRARY } from '@plone/volto/constants/ActionTypes';\n\nexport function loadLazyLibrary(libName, libModule) {\n  return (dispatch, getState) => {\n    if (!getState().lazyLibraries?.[libName]) {\n      dispatch({\n        type: LOAD_LAZY_LIBRARY,\n        libName,\n        libModule,\n      });\n    }\n  };\n}\n","/**\n * AuthRole actions.\n * @module actions/authRole/authRole\n */\n\nimport { AUTH_ROLE } from '@plone/volto/constants/ActionTypes';\n\nexport function authenticatedRole(role) {\n  return {\n    type: AUTH_ROLE,\n    result: role,\n  };\n}\n","import { updateIntl } from 'react-intl-redux';\nimport { normalizeLanguageName, getCookieOptions } from '@plone/volto/helpers';\nimport Cookies from 'universal-cookie';\n\nexport function changeLanguageCookies(language, req) {\n  const cookies = new Cookies();\n\n  const cookieOptions = getCookieOptions({\n    secure: req?.protocol?.startsWith('https') ? true : false,\n  });\n\n  if (!req) {\n    cookies.set(\n      'I18N_LANGUAGE',\n      normalizeLanguageName(language) || '',\n      cookieOptions,\n    );\n  } else {\n    req.universalCookies.set(\n      'I18N_LANGUAGE',\n      normalizeLanguageName(language) || '',\n      cookieOptions,\n    );\n  }\n}\n\n/**\n * Changes current language using react-intl-redux action and setting the cookie\n * @function changeLanguage\n * @param {string} language target language.\n * @param {number} locale set of locales corresponding the target language.\n * @returns {Object} Change the target language action.\n */\nexport function changeLanguage(language, locale, req) {\n  changeLanguageCookies(language, req);\n\n  return updateIntl({\n    locale: language,\n    messages: locale,\n  });\n}\n","/**\n * Working copy actions.\n * @module actions/workingcopy/workingcopy\n */\n\nimport {\n  APPLY_WORKING_COPY,\n  CREATE_WORKING_COPY,\n  REMOVE_WORKING_COPY,\n} from '@plone/volto/constants/ActionTypes';\n\n/**\n * Create Working Copy function.\n * @function createWorkingCopy\n * @param {string} path The content path.\n * @returns {Object} Get workingcopy action.\n */\nexport function createWorkingCopy(path) {\n  return {\n    type: CREATE_WORKING_COPY,\n    request: {\n      op: 'post',\n      path: `${path}/@workingcopy`,\n    },\n  };\n}\n\n/**\n * Apply Working Copy function.\n * @function applyWorkingCopy\n * @param {string} path The content path.\n * @returns {Object} Get workingcopy action.\n */\nexport function applyWorkingCopy(path) {\n  return {\n    type: APPLY_WORKING_COPY,\n    request: {\n      op: 'patch',\n      path: `${path}/@workingcopy`,\n    },\n  };\n}\n\n/**\n * Remove Working Copy function.\n * @function removeWorkingCopy\n * @param {string} path The content path.\n * @returns {Object} Get workingcopy action.\n */\nexport function removeWorkingCopy(path) {\n  return {\n    type: REMOVE_WORKING_COPY,\n    request: {\n      op: 'del',\n      path: `${path}/@workingcopy`,\n    },\n  };\n}\n","module.exports = require(\"react-redux\");","module.exports = require(\"prop-types\");","module.exports = require(\"lodash/map\");","module.exports = require(\"redux\");","module.exports = require(\"react-router-dom\");","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { omit } from 'lodash';\n\nimport { loadLazyLibrary } from '@plone/volto/actions';\nimport config from '@plone/volto/registry';\n\nconst validateLibs = (maybeLibs) => {\n  if (Array.isArray(maybeLibs)) {\n    return maybeLibs.map(validateLibs).filter((x) => !!x).length > 0;\n  }\n\n  const { loadables, lazyBundles } = config.settings;\n\n  return (\n    Object.keys(lazyBundles).includes(maybeLibs) ||\n    Object.keys(loadables).includes(maybeLibs)\n  );\n};\n\n/**\n * @param name {string|string[]} Name or names of a register bundle or lazy lib\n * @returns {string[]} an array of registered lib names.\n */\nconst flattenLazyBundle = (maybeNames) => {\n  const { lazyBundles } = config.settings;\n\n  if (!validateLibs(maybeNames)) {\n    throw new Error(`Invalid lib or bundle name ${maybeNames}`);\n  }\n\n  if (\n    typeof maybeNames === 'string' &&\n    typeof lazyBundles === 'object' &&\n    Object.keys(lazyBundles).includes(maybeNames)\n  ) {\n    const val = lazyBundles[maybeNames];\n\n    return Array.isArray(val) ? val : [val];\n  }\n\n  return Array.isArray(maybeNames) ? maybeNames : [maybeNames];\n};\n\n// TODO: make an unit test that checks if it is possible to have multiple\n// useLoadables hooks inside a single component?\nexport function useLazyLibs(maybeNames, options = {}) {\n  const libraries = flattenLazyBundle(maybeNames);\n  const { shouldRerender = true } = options;\n  const { loadables } = config.settings;\n  const dispatch = useDispatch();\n\n  const globalLoadedLibraries = useSelector(\n    (state) => state.lazyLibraries || {},\n    (left, right) => (shouldRerender ? shallowEqual(left, right) : true),\n  );\n\n  const loaded = getLoadables(libraries, globalLoadedLibraries);\n\n  libraries.forEach((name) => {\n    const LoadableLibrary = loadables[name];\n    if (!globalLoadedLibraries[name]) {\n      LoadableLibrary.load().then((val) => {\n        if (!globalLoadedLibraries[name] && val) {\n          dispatch(loadLazyLibrary(name, val));\n        }\n      });\n    }\n    return;\n  });\n\n  return loaded;\n}\n\nexport function preloadLazyLibs(maybeNames, forwardRef = true) {\n  const decorator = (WrappedComponent) => {\n    function PreloadLoadables(props) {\n      useLazyLibs(maybeNames, { shouldRerender: false });\n      const key = Array.isArray(maybeNames) ? maybeNames.join(',') : maybeNames;\n\n      PreloadLoadables.displayName = `PreloadLoadables(${key})(${getDisplayName(\n        WrappedComponent,\n      )})`;\n\n      return (\n        <WrappedComponent\n          key={key}\n          {...omit(props, 'forwardedRef')}\n          ref={forwardRef ? props.forwardedRef : null}\n        />\n      );\n    }\n\n    if (forwardRef) {\n      return hoistNonReactStatics(\n        React.forwardRef((props, ref) => {\n          return <PreloadLoadables {...props} forwardedRef={ref} />;\n        }),\n        WrappedComponent,\n      );\n    }\n\n    return hoistNonReactStatics(PreloadLoadables, WrappedComponent);\n  };\n\n  return decorator;\n}\n\nexport function injectLazyLibs(maybeNames, forwardRef = false) {\n  const decorator = (WrappedComponent) => {\n    let libraries;\n\n    function WithLoadables(props) {\n      libraries = libraries || flattenLazyBundle(maybeNames);\n\n      const loaded = useLazyLibs(libraries, { shouldRerender: true });\n      const isLoaded = Object.keys(loaded).length === libraries.length;\n\n      WithLoadables.displayName = `WithLoadables(${libraries.join(\n        ',',\n      )})(${getDisplayName(WrappedComponent)})`;\n\n      // The component is rendered when all libraries are loaded!\n      return isLoaded ? (\n        <WrappedComponent\n          key={Object.keys(loaded).join('|')}\n          {...omit(props, 'forwardedRef')}\n          {...loaded}\n          ref={forwardRef ? props.forwardedRef : null}\n        />\n      ) : null;\n    }\n\n    if (forwardRef) {\n      return hoistNonReactStatics(\n        React.forwardRef((props, ref) => {\n          return <WithLoadables {...props} forwardedRef={ref} />;\n        }),\n        WrappedComponent,\n      );\n    }\n\n    return hoistNonReactStatics(WithLoadables, WrappedComponent);\n  };\n\n  return decorator;\n}\n\nfunction getLoadables(names, loadedLibraries) {\n  return Object.assign(\n    {},\n    ...names.map((libName) =>\n      loadedLibraries[libName] ? { [libName]: loadedLibraries[libName] } : {},\n    ),\n  );\n}\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n","module.exports = require(\"classnames\");","module.exports = require(\"react-toastify\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M27.899 9.515L26.485 8.101 18 16.586 9.514 8.101 8.1 9.515 16.586 18 8.1 26.486 9.514 27.9 18 19.414 26.485 27.9 27.899 26.486 19.414 18z\\\"/>\"}","import React from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { Icon } from '@plone/volto/components';\n\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst height = 50; // The height of each option\n\nexport const MenuList = injectLazyLibs('reactWindow')((props) => {\n  const { FixedSizeList: List } = props.reactWindow;\n  const { options, children, maxHeight, getValue } = props;\n  const [value] = getValue();\n  const initialOffset = options.indexOf(value) * height;\n\n  return (\n    <List\n      height={maxHeight}\n      itemCount={children.length}\n      itemSize={height}\n      initialScrollOffset={initialOffset}\n    >\n      {({ index, style }) => <div style={style}>{children[index]}</div>}\n    </List>\n  );\n});\n\nexport const SortableMultiValue = injectLazyLibs([\n  'reactSelect',\n  'reactSortableHOC',\n])((props) => {\n  const { MultiValue } = props.reactSelect.components;\n  const { SortableElement } = props.reactSortableHOC;\n  // this prevents the menu from being opened/closed when the user clicks\n  // on a value to begin dragging it. ideally, detecting a click (instead of\n  // a drag) would still focus the control and toggle the menu, but that\n  // requires some magic with refs that are out of scope for this example\n  const onMouseDown = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  const innerProps = { ...props.innerProps, onMouseDown };\n  const SortableComponent = SortableElement(MultiValue);\n  return <SortableComponent {...props} innerProps={innerProps} />;\n});\n\nexport const SortableMultiValueLabel = injectLazyLibs([\n  'reactSelect',\n  'reactSortableHOC',\n])((props) => {\n  const { MultiValueLabel } = props.reactSelect.components;\n  const { SortableHandle } = props.reactSortableHOC;\n  const SortableComponent = SortableHandle(MultiValueLabel);\n  return <SortableComponent {...props} />;\n});\n\nexport const Option = injectLazyLibs('reactSelect')((props) => {\n  const { Option } = props.reactSelect.components;\n  return (\n    <Option {...props}>\n      <div>{props.label}</div>\n      {props.isFocused && !props.isSelected && (\n        <Icon name={checkSVG} size=\"24px\" color=\"#b8c6c8\" />\n      )}\n      {props.isSelected && <Icon name={checkSVG} size=\"24px\" color=\"#007bc1\" />}\n    </Option>\n  );\n});\n\nexport const DropdownIndicator = injectLazyLibs('reactSelect')((props) => {\n  const { DropdownIndicator } = props.reactSelect.components;\n  return (\n    <DropdownIndicator {...props}>\n      {props.selectProps.menuIsOpen ? (\n        <Icon name={upSVG} size=\"24px\" color=\"#007bc1\" />\n      ) : (\n        <Icon name={downSVG} size=\"24px\" color=\"#007bc1\" />\n      )}\n    </DropdownIndicator>\n  );\n});\n\nexport const ClearIndicator = injectLazyLibs('reactSelect')((props) => {\n  const { ClearIndicator } = props.reactSelect.components;\n  return (\n    <ClearIndicator {...props}>\n      <Icon name={clearSVG} size=\"18px\" color=\"#e40166\" />\n    </ClearIndicator>\n  );\n});\n\nexport const Group = injectLazyLibs('reactSelect')((props) => {\n  const { Group } = props.reactSelect.components;\n  return <Group {...props}></Group>;\n});\n\nexport const selectTheme = (theme) => ({\n  ...theme,\n  borderRadius: 0,\n  colors: {\n    ...theme.colors,\n    primary25: 'hotpink',\n    primary: '#b8c6c8',\n  },\n});\n\nexport const customSelectStyles = {\n  control: (styles, state) => ({\n    ...styles,\n    border: 'none',\n    borderBottom: '1px solid #c7d5d8',\n    boxShadow: 'none',\n    borderBottomStyle: state.menuIsOpen ? 'dotted' : 'solid',\n    minHeight: '60px',\n  }),\n  menu: (styles, state) => ({\n    ...styles,\n    top: null,\n    marginTop: 0,\n    boxShadow: 'none',\n    borderBottom: '1px solid #c7d5d8',\n    zIndex: 2,\n  }),\n  indicatorSeparator: (styles) => ({\n    ...styles,\n    width: null,\n  }),\n  valueContainer: (styles) => ({\n    ...styles,\n    paddingLeft: 0,\n  }),\n  dropdownIndicator: (styles) => ({\n    paddingRight: 0,\n  }),\n  clearIndicator: (styles) => ({\n    color: '#e40166',\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: null,\n    minHeight: '50px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '12px 12px',\n    color: state.isSelected\n      ? '#007bc1'\n      : state.isDisabled\n      ? '#b5b5b5'\n      : state.isFocused\n      ? '#4a4a4a'\n      : 'inherit',\n    ':active': {\n      backgroundColor: null,\n    },\n    svg: {\n      flex: '0 0 auto',\n    },\n  }),\n};\n","module.exports = require(\"react-portal\");","module.exports = require(\"@loadable/component\");","/* eslint-disable  arrow-body-style */\n/* eslint-disable  no-confusing-arrow */\nimport tlds from 'tlds';\n\nexport const mailRegex = () =>\n  /^((mailto:[^<>()/[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n\nexport const telRegex = () =>\n  /^[tel:]*[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s./0-9]*$/g;\n\nconst v4 =\n  '(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(?:\\\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){3}';\nconst v6seg = '[0-9a-fA-F]{1,4}';\nconst v6 = `\n(\n(?:${v6seg}:){7}(?:${v6seg}|:)|                                // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                         // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6seg}:){5}(?::${v4}|(:${v6seg}){1,2}|:)|                 // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6seg}:){4}(?:(:${v6seg}){0,1}:${v4}|(:${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6seg}:){3}(?:(:${v6seg}){0,2}:${v4}|(:${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6seg}:){2}(?:(:${v6seg}){0,3}:${v4}|(:${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6seg}:){1}(?:(:${v6seg}){0,4}:${v4}|(:${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::((?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))           // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(%[0-9a-zA-Z]{1,})?                                           // %eth0            %1\n`\n  .replace(/\\s*\\/\\/.*$/gm, '')\n  .replace(/\\n/g, '')\n  .trim();\n\nconst ipRegex = (opts) =>\n  opts && opts.exact\n    ? new RegExp(`(?:^${v4}$)|(?:^${v6}$)`)\n    : new RegExp(`(?:${v4})|(?:${v6})`, 'g');\n\nipRegex.v4 = (opts) =>\n  opts && opts.exact ? new RegExp(`^${v4}$`) : new RegExp(v4, 'g');\nipRegex.v6 = (opts) =>\n  opts && opts.exact ? new RegExp(`^${v6}$`) : new RegExp(v6, 'g');\n\nexport const urlRegex = (_opts) => {\n  const opts = Object.assign({ strict: true }, _opts);\n  const protocol = `(?:(?:[a-z]+:)?//)${opts.strict ? '' : '?'}`;\n  const auth = '(?:\\\\S+(?::\\\\S*)?@)?';\n  const ip = ipRegex.v4().source;\n  const host = '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)';\n  const domain =\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*';\n  const tld = `(?:\\\\.${\n    opts.strict\n      ? '(?:[a-z\\\\u00a1-\\\\uffff]{2,})'\n      : `(?:${tlds.sort((a, b) => b.length - a.length).join('|')})`\n  })\\\\.?`;\n  const port = '(?::\\\\d{2,5})?';\n  const path = '(?:[/?#][^\\\\s\"]*)?';\n  const regex = `(?:${protocol}|www\\\\.)${auth}(?:localhost|${ip}|${host}${domain}${tld})${port}${path}`;\n\n  return opts.exact\n    ? new RegExp(`(?:^${regex}$)`, 'i')\n    : new RegExp(regex, 'ig');\n};\n","/**\n * Url helper.\n * @module helpers/Url\n */\n\nimport { last, memoize } from 'lodash';\nimport { urlRegex, telRegex, mailRegex } from './urlRegex';\nimport prependHttp from 'prepend-http';\nimport config from '@plone/volto/registry';\n\n/**\n * Get base url.\n * @function getBaseUrl\n * @param {string} url Url to be parsed.\n * @return {string} Base url of content object.\n */\nexport const getBaseUrl = memoize((url) => {\n  const { settings } = config;\n  if (url === undefined) return;\n\n  // We allow settings.nonContentRoutes to have strings (that are supposed to match\n  // ending strings of pathnames, so we are converting them to RegEx to match also\n  const normalized_nonContentRoutes = settings.nonContentRoutes.map((item) => {\n    if (item.test) {\n      return item;\n    } else {\n      return new RegExp(item + '$');\n    }\n  });\n\n  let adjustedUrl = normalized_nonContentRoutes.reduce(\n    (acc, item) => acc.replace(item, ''),\n    url,\n  );\n\n  adjustedUrl = adjustedUrl || '/';\n  return adjustedUrl === '/' ? '' : adjustedUrl;\n});\n\n/**\n * Get parent url.\n * @function getParentUrl\n * @param {string} url Url to be parsed.\n * @return {string} Parent url of content object.\n */\nexport const getParentUrl = memoize((url) => {\n  return url.substring(0, url.lastIndexOf('/'));\n});\n\n/**\n * Get id from url.\n * @function getId\n * @param {string} url Url to be parsed.\n * @return {string} Id of content object.\n */\nexport function getId(url) {\n  return last(url.replace(/\\?.*$/, '').split('/'));\n}\n\n/**\n * Get view of an url.\n * @function getView\n * @param {string} url Url to be parsed.\n * @return {string} View of content object.\n */\nexport function getView(url) {\n  const view = last(url.replace(/\\?.*$/, '').split('/'));\n  if (\n    [\n      'add',\n      'layout',\n      'contents',\n      'edit',\n      'delete',\n      'diff',\n      'history',\n      'sharing',\n      'controlpanel',\n    ].indexOf(view) === -1\n  ) {\n    return 'view';\n  }\n  return view === 'layout' ? 'edit' : view;\n}\n\n/**\n * Flatten to app server URL - Given a URL if it starts with the API server URL\n * this method flattens it (removes) the server part\n * TODO: Update it when implementing non-root based app location (on a\n * directory other than /, eg. /myapp)\n * @method flattenToAppURL\n * @param {string} url URL of the object\n * @returns {string} Flattened URL to the app server\n */\nexport function flattenToAppURL(url) {\n  const { settings } = config;\n  return (\n    url &&\n    url\n      .replace(settings.internalApiPath, '')\n      .replace(settings.apiPath, '')\n      .replace(settings.publicURL, '')\n  );\n}\n/**\n * Given a URL it remove the querystring from the URL.\n * @method stripQuerystring\n * @param {string} url URL of the object\n * @returns {string} URL without querystring\n */\nexport function stripQuerystring(url) {\n  return url.replace(/\\?.*$/, '');\n}\n\n/**\n * Given a URL if it starts with the API server URL\n * this method removes the /api or the /Plone part.\n * @method toPublicURL\n * @param {string} url URL of the object\n * @returns {string} public URL\n */\nexport function toPublicURL(url) {\n  const { settings } = config;\n  return settings.publicURL.concat(flattenToAppURL(url));\n}\n\n/**\n * Returns true if the current view is a cms ui view\n * @method isCmsUi\n * @param {string} currentPathname pathname of the current view\n * @returns {boolean} true if the current view is a cms ui view\n */\nexport const isCmsUi = memoize((currentPathname) => {\n  const { settings } = config;\n  const fullPath = currentPathname.replace(/\\?.*$/, '');\n  // WARNING:\n  // not working properly for paths like /editors or similar\n  // because the regexp test does not take that into account\n  // https://github.com/plone/volto/issues/870\n  return settings.nonContentRoutes.reduce(\n    (acc, route) => acc || new RegExp(route).test(`/${fullPath}`),\n    false,\n  );\n});\n\n/**\n * Flatten to app server HTML - Given a text if it contains some urls that starts\n * with the API server URL this method flattens it (removes) the server part.\n * TODO: Update it when implementing non-root based app location (on a\n * directory other than /, eg. /myapp)\n * @method flattenHTMLToAppURL\n * @param {string} html Some html snippet\n * @returns {string} Same HTML with Flattened URLs to the app server\n */\nexport function flattenHTMLToAppURL(html) {\n  const { settings } = config;\n  return settings.internalApiPath\n    ? html\n        .replace(new RegExp(settings.internalApiPath, 'g'), '')\n        .replace(new RegExp(settings.apiPath, 'g'), '')\n    : html.replace(new RegExp(settings.apiPath, 'g'), '');\n}\n\n/**\n * Add the app url\n * @method addAppURL\n * @param {string} url URL of the object\n * @returns {string} New URL with app\n */\nexport function addAppURL(url) {\n  const { settings } = config;\n  return url.indexOf(settings.apiPath) === 0\n    ? url\n    : `${settings.apiPath}${url}`;\n}\n\n/**\n * Given a URL expands it to the backend URL\n * Useful when you have to actually call the backend from the\n * frontend code (eg. ICS calendar download)\n * It is seamless mode aware\n * @method expandToBackendURL\n * @param {string} url URL or path of the object\n * @returns {string} New URL with the backend URL\n */\nexport function expandToBackendURL(path) {\n  const { settings } = config;\n  const APISUFIX = settings.legacyTraverse ? '' : '/++api++';\n  let adjustedPath;\n  if (path.startsWith('http://') || path.startsWith('https://')) {\n    // flattenToAppURL first if we get a full URL\n    adjustedPath = flattenToAppURL(path);\n  } else {\n    // Next adds a / in front if not a full URL to make sure it's a valid relative path\n    adjustedPath = path[0] !== '/' ? `/${path}` : path;\n  }\n\n  let apiPath = '';\n  if (settings.internalApiPath && __SERVER__) {\n    apiPath = settings.internalApiPath;\n  } else if (settings.apiPath) {\n    apiPath = settings.apiPath;\n  }\n\n  return `${apiPath}${APISUFIX}${adjustedPath}`;\n}\n\n/**\n * Check if internal url\n * @method isInternalURL\n * @param {string} url URL of the object\n * @returns {boolean} True if internal url\n */\nexport function isInternalURL(url) {\n  const { settings } = config;\n  return (\n    url &&\n    (url.indexOf(settings.publicURL) !== -1 ||\n      (settings.internalApiPath &&\n        url.indexOf(settings.internalApiPath) !== -1) ||\n      url.indexOf(settings.apiPath) !== -1 ||\n      url.charAt(0) === '/' ||\n      url.charAt(0) === '.' ||\n      url.startsWith('#'))\n  );\n}\n\n/**\n * Check if it's a valid url\n * @method isUrl\n * @param {string} url URL of the object\n * @returns {boolean} True if is a valid url\n */\nexport function isUrl(url) {\n  return urlRegex().test(url);\n}\n\n/**\n * Normalize URL, adds protocol (if required eg. user has not entered the protocol)\n * @method normalizeUrl\n * @param {string} url URL of the object\n * @returns {boolean} URL with the protocol\n */\nexport function normalizeUrl(url) {\n  return prependHttp(url);\n}\n\n/**\n * Removes protocol from URL (for display)\n * @method removeProtocol\n * @param {string} url URL of the object\n * @returns {string} URL without the protocol part\n */\nexport function removeProtocol(url) {\n  return url.replace('https://', '').replace('http://', '');\n}\n\nexport function isMail(text) {\n  return mailRegex().test(text);\n}\n\nexport function isTelephone(text) {\n  return telRegex().test(text);\n}\n\nexport function normaliseMail(email) {\n  if (email.toLowerCase().startsWith('mailto:')) {\n    return email;\n  }\n  return `mailto:${email}`;\n}\n\nexport function normalizeTelephone(tel) {\n  if (tel.toLowerCase().startsWith('tel:')) {\n    return tel;\n  }\n  return `tel:${tel}`;\n}\n\nexport function checkAndNormalizeUrl(url) {\n  let res = {\n    isMail: false,\n    isTelephone: false,\n    url: url,\n    isValid: true,\n  };\n  if (URLUtils.isMail(URLUtils.normaliseMail(url))) {\n    //Mail\n    res.isMail = true;\n    res.url = URLUtils.normaliseMail(url);\n  } else if (URLUtils.isTelephone(url)) {\n    //Phone\n    res.isTelephone = true;\n    res.url = URLUtils.normalizeTelephone(url);\n  } else {\n    //url\n    if (!res.url.startsWith('/') && !res.url.startsWith('#')) {\n      res.url = URLUtils.normalizeUrl(url);\n      if (!URLUtils.isUrl(res.url)) {\n        res.isValid = false;\n      }\n    }\n  }\n  return res;\n}\n\nexport const URLUtils = {\n  normalizeTelephone,\n  normaliseMail,\n  normalizeUrl,\n  isTelephone,\n  isMail,\n  isUrl,\n  checkAndNormalizeUrl,\n};\n","module.exports = require(\"lodash/isEqual\");","module.exports = require(\"lodash/find\");","module.exports = require(\"query-string\");","/**\n * Icon component.\n * @module components/theme/Icon/Icon\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst defaultSize = '36px';\n\n/**\n * Component to display an SVG as Icon.\n * @function Field\n * @param {Object} props Component properties.\n * @param {string} props.name Name source object.\n * @param {string} props.size Size of the Icon (in px).\n * @param {string} props.color Color of the Icon.\n * @param {string} props.className className to add to the component.\n * @param {string} props.title Title (a11y).\n * @returns {string} Markup of the component.\n *\n * Use:\n * drop icon to the icons folder (\"src/icons\")\n * import svg into the file\n * import this Icon component\n * add icon component with name = your imported svg\n *\n * Reasoning:\n * add a11y title to SVGs\n * load svg via webpack for optimization\n * Zero conf Inlined SVGs, as it is the best option when working with SVG\n * see razzle.config.js\n *\n * for further reference see {@link https://kitconcept.com/blog/pastanaga-icon-system/ | here}\n */\nconst Icon = ({ name, size, color, className, title, onClick }) => (\n  <svg\n    xmlns={name.attributes && name.attributes.xmlns}\n    viewBox={name.attributes && name.attributes.viewBox}\n    style={{ height: size, width: 'auto', fill: color || 'currentColor' }}\n    className={className ? `icon ${className}` : 'icon'}\n    onClick={onClick}\n    dangerouslySetInnerHTML={{\n      __html: title ? `<title>${title}</title>${name.content}` : name.content,\n    }}\n  />\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nIcon.propTypes = {\n  name: PropTypes.shape({\n    xmlns: PropTypes.string,\n    viewBox: PropTypes.string,\n    content: PropTypes.string,\n  }).isRequired,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  title: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nIcon.defaultProps = {\n  size: defaultSize,\n  color: null,\n  className: null,\n  title: null,\n  onClick: null,\n};\n\nexport default Icon;\n","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M31 17L8.414 17 18.707 6.707 17.293 5.293 4.586 18 17.293 30.707 18.707 29.293 8.414 19 31 19z\\\"/>\"}","module.exports = require(\"@babel/runtime/helpers/objectWithoutProperties\");","module.exports = require(\"lodash/keys\");","module.exports = require(\"lodash/filter\");","module.exports = require(\"lodash/isEmpty\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M14.707 26.707L13.293 25.293 20.586 18 13.293 10.707 14.707 9.293 23.414 18z\\\"/>\"}","module.exports = require(\"lodash/concat\");","module.exports = require(\"react-router\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M27,30 C27,30.552 26.551,31 26,31 L12,31 C11.449,31 11,30.552 11,30 L11,9 L27,9 L27,30 Z M19,5 C20.103,5 21,5.897 21,7 L17,7 C17,5.897 17.897,5 19,5 L19,5 Z M31,7 L23,7 C23,4.794 21.206,3 19,3 C16.794,3 15,4.794 15,7 L7,7 L7,9 L9,9 L9,30 C9,31.654 10.346,33 12,33 L26,33 C27.654,33 29,31.654 29,30 L29,9 L31,9 L31,7 Z\\\"/><path d=\\\"M15 28L17 28 17 12 15 12zM21 28L23 28 23 12 21 12z\\\"/></g>\"}","// ported to JS from MIT licensed https://github.com/robik/react-view-slot\n// We've renamed Slot => Pluggable, not to clash with Volto slots\n\nimport React from 'react';\nimport { sortBy } from 'lodash';\n\nexport const context = React.createContext();\n\nexport function usePluggable(name) {\n  const ctx = React.useContext(context);\n\n  if (!ctx) {\n    throw new Error(\n      'Using <Pluggable> component or usePluggable hook outside of <PluggablesProvider>',\n    );\n  }\n\n  return ctx.pluggables[name] || [];\n}\n\n/**\n\n**/\nexport function Pluggable(props) {\n  const { name, maxCount, reversed, children, params } = props; // , ...rest\n  let pluggables = usePluggable(name);\n\n  if (maxCount !== undefined) {\n    pluggables = pluggables.slice(0, maxCount);\n  }\n  if (reversed !== undefined) {\n    pluggables = [...pluggables].reverse();\n  }\n\n  if (params && children) {\n    throw Error(\n      'Cannot specify render function and params props at the same time',\n    );\n  }\n\n  return React.useMemo(() => {\n    if (children) {\n      return children(pluggables);\n    }\n\n    return React.createElement(\n      React.Fragment,\n      {},\n      pluggables.map((R, i) =>\n        React.createElement(R, { key: i.toString(), ...params }),\n      ),\n    );\n  }, [params, pluggables, children]);\n}\n\nexport function usePlug({ pluggable, id, renderer, dependencies, options }) {\n  const pluggableContext = React.useContext(context);\n  if (!pluggableContext) {\n    throw new Error(\n      'Using <Plug> component or usePlug hook outside of <PluggablesProvider>',\n    );\n  }\n  const { setPlug, removePlug } = pluggableContext;\n  const { name, order, extra } = options;\n\n  // Could be that a Plug is empty (or it evaluates and have no children)\n  if (renderer) {\n    Object.assign(renderer, { pluggableName: name, extra, order });\n  }\n\n  React.useEffect(\n    () => {\n      if (renderer) {\n        setPlug(pluggable, id, renderer);\n        return () => removePlug(pluggable, id);\n      }\n    },\n    dependencies, // eslint-disable-line react-hooks/exhaustive-deps\n  );\n}\n\nexport const Plug = ({\n  pluggable,\n  id,\n  dependencies = [],\n  children,\n  ...options\n}) => {\n  const renderer =\n    children && (typeof children === 'function' ? children : () => children);\n  usePlug({ pluggable, id, renderer, dependencies, options });\n  return null;\n};\n\nexport function createPluggable(name) {\n  const pluggable = (props) =>\n    React.createElement(Pluggable, { name, ...props });\n  pluggable.pluggableName = name;\n  pluggable.Plug = createPlugComponent(name);\n  return pluggable;\n}\n\nfunction createPlugComponent(pluggableName) {\n  const plugComponent = (props) =>\n    React.createElement(Plug, { pluggable: pluggableName, ...props });\n  plugComponent.displayName = `Pluggables(${pluggableName})`;\n  return plugComponent;\n}\n\n/**\n * Creates a Pluggable + Plug pair\n */\nexport function createPluggableAndPlug(name) {\n  const boundPluggable = createPluggable(name);\n  return [boundPluggable, boundPluggable.Plug];\n}\n\nexport const PluggablesProvider = ({ children }) => {\n  const setPlug = (pluggable, id, renderer) => {\n    Object.assign(renderer, { id });\n\n    setPluggables((prevState) => ({\n      ...prevState,\n      pluggables: {\n        ...prevState.pluggables,\n        [pluggable]: sortBy(\n          [\n            ...(prevState.pluggables[pluggable] || []).filter(\n              (e) => e.id !== id,\n            ),\n            renderer,\n          ],\n          (e) => e.order || 0,\n        ),\n      },\n    }));\n  };\n\n  const removePlug = (pluggable, name) => {\n    setPluggables((prevState) => ({\n      ...prevState,\n      pluggables: {\n        ...prevState.pluggables,\n        [pluggable]: sortBy(\n          (prevState.pluggables[pluggable] || []).filter((e) => e.id !== name),\n          (e) => e.order || 0,\n        ),\n      },\n    }));\n  };\n\n  const initialPluggables = {\n    pluggables: {},\n    setPlug,\n    removePlug,\n  };\n\n  const [pluggables, setPluggables] = React.useState(initialPluggables);\n  return React.createElement(context.Provider, { value: pluggables }, children);\n};\n\nexport default Pluggable;\n","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M9.293 14.707L10.707 13.293 18 20.586 25.293 13.293 26.707 14.707 18 23.414z\\\"/>\"}","module.exports = require(\"uuid\");","const Schema = {\n  title: 'Block settings',\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: [\n        'placeholder',\n        'required',\n        'fixed',\n        'disableNewBlocks',\n        'readOnly',\n      ],\n    },\n  ],\n  properties: {\n    placeholder: {\n      title: 'Helper text',\n      description:\n        'A short hint that describes the expected value within this block',\n      type: 'string',\n    },\n    required: {\n      title: 'Required',\n      description: \"Don't allow deletion of this block\",\n      type: 'boolean',\n    },\n    fixed: {\n      title: 'Fixed position',\n      description: 'Disable drag & drop on this block',\n      type: 'boolean',\n    },\n    disableNewBlocks: {\n      title: 'Disable new blocks',\n      description: 'Disable creation of new blocks after this block',\n      type: 'boolean',\n    },\n    readOnly: {\n      title: 'Read-only',\n      description: 'Disable editing on this block',\n      type: 'boolean',\n    },\n  },\n  required: [],\n};\n\nexport default Schema;\n","module.exports = require(\"rrule\");","module.exports = require(\"lodash/join\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M18.707 5.293L17.293 6.707 27.586 17 5 17 5 19 27.586 19 17.293 29.293 18.707 30.707 31.414 18z\\\"/>\"}","module.exports = require(\"lodash/omit\");","/**\n * Blocks helper.\n * @module helpers/Blocks\n */\n\nimport { omit, without, endsWith, find, keys } from 'lodash';\nimport move from 'lodash-move';\nimport { v4 as uuid } from 'uuid';\nimport config from '@plone/volto/registry';\nimport { applySchemaEnhancer } from '@plone/volto/helpers';\n\n/**\n * Get blocks field.\n * @function getBlocksFieldname\n * @param {Object} props Properties.\n * @return {string} Field name of the blocks\n */\nexport function getBlocksFieldname(props) {\n  return (\n    find(\n      keys(props),\n      (key) => key !== 'volto.blocks' && endsWith(key, 'blocks'),\n    ) || null\n  );\n}\n\n/**\n * Get blocks layout field.\n * @function getBlocksLayoutFieldname\n * @param {Object} props Properties.\n * @return {string} Field name of the blocks layout\n */\nexport function getBlocksLayoutFieldname(props) {\n  return (\n    find(\n      keys(props),\n      (key) => key !== 'volto.blocks' && endsWith(key, 'blocks_layout'),\n    ) || null\n  );\n}\n\n/**\n * Has blocks data.\n * @function hasBlocksData\n * @param {Object} props Properties.\n * @return {boolean} True if it has blocks data.\n */\nexport function hasBlocksData(props) {\n  return (\n    find(\n      keys(props),\n      (key) => key !== 'volto.blocks' && endsWith(key, 'blocks'),\n    ) !== undefined\n  );\n}\n\n/**\n * Pluggable method to test if a block has a set value (any non-empty value)\n * @function blockHasValue\n * @param {Object} data Block data\n * @return {boolean} True if block has a non-empty value\n */\nexport function blockHasValue(data) {\n  const { blocks } = config;\n  const blockType = data['@type'];\n  const check = blocks.blocksConfig[blockType]?.blockHasValue;\n  if (!check) {\n    return true;\n  }\n  return check(data);\n}\n\n/**\n * Get block pairs of [id, block] from content properties\n * @function getBlocks\n * @param {Object} properties\n * @return {Array} a list of block [id, value] pairs, in order from layout\n */\nexport const getBlocks = (properties) => {\n  const blocksFieldName = getBlocksFieldname(properties);\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(properties);\n  return (\n    properties[blocksLayoutFieldname]?.items?.map((n) => [\n      n,\n      properties[blocksFieldName][n],\n    ]) || []\n  );\n};\n\n/**\n * Move block to different location index within blocks_layout\n * @function moveBlock\n * @param {Object} formData Form data\n * @param {number} source index within form blocks_layout items\n * @param {number} destination index within form blocks_layout items\n * @return {Object} New form data\n */\nexport function moveBlock(formData, source, destination) {\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(formData);\n  return {\n    ...formData,\n    [blocksLayoutFieldname]: {\n      items: move(formData[blocksLayoutFieldname].items, source, destination),\n    },\n  };\n}\n\n/**\n * Delete block by id\n * @function deleteBlock\n * @param {Object} formData Form data\n * @param {string} blockId Block uid\n * @return {Object} New form data\n */\nexport function deleteBlock(formData, blockId) {\n  const blocksFieldname = getBlocksFieldname(formData);\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(formData);\n\n  let newFormData = {\n    ...formData,\n    [blocksLayoutFieldname]: {\n      items: without(formData[blocksLayoutFieldname].items, blockId),\n    },\n    [blocksFieldname]: omit(formData[blocksFieldname], [blockId]),\n  };\n\n  if (newFormData[blocksLayoutFieldname].items.length === 0) {\n    newFormData = addBlock(newFormData, config.settings.defaultBlockType, 0);\n  }\n\n  return newFormData;\n}\n\n/**\n * Add block\n * @function addBlock\n * @param {Object} formData Form data\n * @param {string} type Block type\n * @param {number} index Destination index\n * @return {Array} New block id, New form data\n */\nexport function addBlock(formData, type, index) {\n  const { settings } = config;\n  const id = uuid();\n  const idTrailingBlock = uuid();\n  const blocksFieldname = getBlocksFieldname(formData);\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(formData);\n  const totalItems = formData[blocksLayoutFieldname].items.length;\n  const insert = index === -1 ? totalItems : index;\n\n  return [\n    id,\n    {\n      ...formData,\n      [blocksLayoutFieldname]: {\n        items: [\n          ...formData[blocksLayoutFieldname].items.slice(0, insert),\n          id,\n          ...(type !== settings.defaultBlockType ? [idTrailingBlock] : []),\n          ...formData[blocksLayoutFieldname].items.slice(insert),\n        ],\n      },\n      [blocksFieldname]: {\n        ...formData[blocksFieldname],\n        [id]: {\n          '@type': type,\n        },\n        ...(type !== settings.defaultBlockType && {\n          [idTrailingBlock]: {\n            '@type': settings.defaultBlockType,\n          },\n        }),\n      },\n      selected: id,\n    },\n  ];\n}\n\n/**\n * Mutate block\n * @function mutateBlock\n * @param {Object} formData Form data\n * @param {string} id Block uid to mutate\n * @param {number} value Block's new value\n * @return {Object} New form data\n */\nexport function mutateBlock(formData, id, value) {\n  const { settings } = config;\n  const blocksFieldname = getBlocksFieldname(formData);\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(formData);\n  const index = formData[blocksLayoutFieldname].items.indexOf(id) + 1;\n\n  // Test if block at index is already a placeholder (trailing) block\n  const trailId = formData[blocksLayoutFieldname].items[index];\n  if (trailId) {\n    const block = formData[blocksFieldname][trailId];\n    if (!blockHasValue(block)) {\n      return {\n        ...formData,\n        [blocksFieldname]: {\n          ...formData[blocksFieldname],\n          [id]: value || null,\n        },\n      };\n    }\n  }\n\n  const idTrailingBlock = uuid();\n  return {\n    ...formData,\n    [blocksFieldname]: {\n      ...formData[blocksFieldname],\n      [id]: value || null,\n      [idTrailingBlock]: {\n        '@type': settings.defaultBlockType,\n      },\n    },\n    [blocksLayoutFieldname]: {\n      items: [\n        ...formData[blocksLayoutFieldname].items.slice(0, index),\n        idTrailingBlock,\n        ...formData[blocksLayoutFieldname].items.slice(index),\n      ],\n    },\n  };\n}\n\n/**\n * Insert new block before another block\n * @function insertBlock\n * @param {Object} formData Form data\n * @param {string} id Insert new block before the block with this id\n * @param {number} value New block's value\n * @return {Array} New block id, New form data\n */\nexport function insertBlock(formData, id, value, current = {}) {\n  const blocksFieldname = getBlocksFieldname(formData);\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(formData);\n  const index = formData[blocksLayoutFieldname].items.indexOf(id);\n\n  const newBlockId = uuid();\n  return [\n    newBlockId,\n    {\n      ...formData,\n      [blocksFieldname]: {\n        ...formData[blocksFieldname],\n        [newBlockId]: value || null,\n        [id]: {\n          ...formData[blocksFieldname][id],\n          ...current,\n        },\n      },\n      [blocksLayoutFieldname]: {\n        items: [\n          ...formData[blocksLayoutFieldname].items.slice(0, index),\n          newBlockId,\n          ...formData[blocksLayoutFieldname].items.slice(index),\n        ],\n      },\n    },\n  ];\n}\n\n/**\n * Change block\n * @function changeBlock\n * @param {Object} formData Form data\n * @param {string} id Block uid to change\n * @param {number} value Block's new value\n * @return {Object} New form data\n */\nexport function changeBlock(formData, id, value) {\n  const blocksFieldname = getBlocksFieldname(formData);\n  return {\n    ...formData,\n    [blocksFieldname]: {\n      ...formData[blocksFieldname],\n      [id]: value || null,\n    },\n  };\n}\n\n/**\n * Get the next block UID within form\n * @function nextBlockId\n * @param {Object} formData Form data\n * @param {string} currentBlock Block uid\n * @return {string} Next block uid\n */\nexport function nextBlockId(formData, currentBlock) {\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(formData);\n  const currentIndex = formData[blocksLayoutFieldname].items.indexOf(\n    currentBlock,\n  );\n\n  if (currentIndex === formData[blocksLayoutFieldname].items.length - 1) {\n    // We are already at the bottom block don't do anything\n    return null;\n  }\n\n  const newIndex = currentIndex + 1;\n  return formData[blocksLayoutFieldname].items[newIndex];\n}\n\n/**\n * Get the previous block UID within form\n * @function previousBlockId\n * @param {Object} formData Form data\n * @param {string} currentBlock Block uid\n * @return {string} Previous block uid\n */\nexport function previousBlockId(formData, currentBlock) {\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(formData);\n  const currentIndex = formData[blocksLayoutFieldname].items.indexOf(\n    currentBlock,\n  );\n\n  if (currentIndex === 0) {\n    // We are already at the top block don't do anything\n    return null;\n  }\n  const newindex = currentIndex - 1;\n  return formData[blocksLayoutFieldname].items[newindex];\n}\n\n/**\n * Generate empty block form\n * @function emptyBlocksForm\n * @param {Object} formData Form data\n * @return {Object} Empty blocks form with one defaultBlockType block\n */\nexport function emptyBlocksForm() {\n  const { settings } = config;\n  const id = uuid();\n  return {\n    blocks: {\n      [id]: {\n        '@type': settings.defaultBlockType,\n      },\n    },\n    blocks_layout: { items: [id] },\n  };\n}\n\n/**\n * Recursively discover blocks in data and call the provided callback\n * @function visitBlocks\n * @param {Object} content A content data structure (an object with blocks and blocks_layout)\n * @param {Function} callback A function to call on each discovered block\n */\nexport function visitBlocks(content, callback) {\n  const queue = getBlocks(content);\n  while (queue.length > 0) {\n    const [id, blockdata] = queue.shift();\n    callback([id, blockdata]);\n\n    // assumes that a block value is like: {blocks, blocks_layout} or\n    // { data: {blocks, blocks_layout}}\n    if (Object.keys(blockdata || {}).indexOf('blocks') > -1) {\n      queue.push(...getBlocks(blockdata));\n    }\n    if (Object.keys(blockdata?.data || {}).indexOf('blocks') > -1) {\n      queue.push(...getBlocks(blockdata.data));\n    }\n  }\n}\n\n/**\n * Initializes data with the default values coming from schema\n */\nexport function applySchemaDefaults({ data = {}, schema }) {\n  const derivedData = {\n    ...Object.keys(schema.properties).reduce((accumulator, currentField) => {\n      return schema.properties[currentField].default\n        ? {\n            ...accumulator,\n            [currentField]: schema.properties[currentField].default,\n          }\n        : accumulator;\n    }, {}),\n    ...data,\n  };\n  return derivedData;\n}\n\n/**\n * Apply the block's default (as defined in schema) to the block data.\n *\n * @function applyBlockDefaults\n * @param {Object} params An object with data, intl and anything else\n * @return {Object} Derived data, with the defaults extracted from the schema\n */\nexport function applyBlockDefaults({ data, intl, ...rest }, blocksConfig) {\n  const block_type = data['@type'];\n  const { blockSchema } =\n    (blocksConfig || config.blocks.blocksConfig)[block_type] || {};\n  if (!blockSchema) return data;\n\n  let schema =\n    typeof blockSchema === 'function'\n      ? blockSchema({ data, intl, ...rest })\n      : blockSchema;\n  schema = applySchemaEnhancer({ schema, formData: data, intl });\n\n  return applySchemaDefaults({ data, schema });\n}\n","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M29,28 C29,28.552 28.552,29 28,29 L27,29 L27,19 L9,19 L9,29 L8,29 C7.448,29 7,28.552 7,28 L7,8 C7,7.448 7.448,7 8,7 L11,7 L11,15 L25,15 L25,7.414 L29,11.414 L29,28 Z M11,29 L25,29 L25,21 L11,21 L11,29 Z M17,7 L17,12 L21,12 L21,7 L23,7 L23,13 L13,13 L13,7 L17,7 Z M25.414,5 L25,5 L21,5 L17,5 L11,5 L8,5 C6.346,5 5,6.346 5,8 L5,28 C5,29.654 6.346,31 8,31 L9,31 L27,31 L28,31 C29.654,31 31,29.654 31,28 L31,10.586 L25.414,5 Z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M26.707 21.293L25.293 22.707 18 15.414 10.707 22.707 9.293 21.293 18 12.586z\\\"/>\"}","module.exports = require(\"jwt-decode\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M27,26 C28.103,26 29,26.897 29,28 C29,29.103 28.103,30 27,30 C25.897,30 25,29.103 25,28 C25,26.897 25.897,26 27,26 M27,6 C28.103,6 29,6.897 29,8 C29,9.103 28.103,10 27,10 C25.897,10 25,9.103 25,8 C25,6.897 25.897,6 27,6 M27,16 C28.103,16 29,16.897 29,18 C29,19.103 28.103,20 27,20 C25.897,20 25,19.103 25,18 C25,16.897 25.897,16 27,16 M8,19 L23.142,19 C23.589,20.721 25.142,22 27,22 C29.206,22 31,20.206 31,18 C31,15.794 29.206,14 27,14 C25.142,14 23.589,15.279 23.142,17 L8,17 C7.449,17 7,16.552 7,16 L7,11 L7,8.816 C7.314,8.928 7.648,9 8,9 L23.142,9 C23.589,10.721 25.142,12 27,12 C29.206,12 31,10.206 31,8 C31,5.794 29.206,4 27,4 C25.142,4 23.589,5.279 23.142,7 L8,7 C7.449,7 7,6.552 7,6 L7,5 L5,5 L5,6 L5,11 L5,16 L5,26 C5,27.654 6.346,29 8,29 L23.142,29 C23.589,30.721 25.142,32 27,32 C29.206,32 31,30.206 31,28 C31,25.794 29.206,24 27,24 C25.142,24 23.589,25.279 23.142,27 L8,27 C7.449,27 7,26.552 7,26 L7,18.816 C7.314,18.928 7.648,19 8,19\\\"/>\"}","import { flatten, isEqual, isObject, transform } from 'lodash';\nimport React from 'react';\nimport { matchPath } from 'react-router';\nimport config from '@plone/volto/registry';\n\n/**\n * Deep diff between two object, using lodash\n * @param  {Object} object Object compared\n * @param  {Object} base   Object to compare with\n * @return {Object}        Return a new object who represent the diff\n */\nexport function difference(object, base) {\n  return transform(object, (result, value, key) => {\n    if (!isEqual(value, base[key])) {\n      result[key] =\n        isObject(value) && isObject(base[key])\n          ? difference(value, base[key])\n          : value;\n    }\n  });\n}\n\n/**\n * Throw an error if the wrapped function returns undefined\n *\n * @param {Function} func\n */\nexport const safeWrapper = (func) => (config) => {\n  const res = func(config);\n  if (typeof res === 'undefined') {\n    throw new Error(`Configuration function doesn't return config, ${func}`);\n  }\n  return res;\n};\n\n/**\n * A helper to pipe a configuration object through configuration loaders\n *\n * @param {Array} configMethods A list of configuration methods\n * @param {Object} config The Volto singleton config object\n */\nexport function applyConfig(configMethods, config) {\n  return configMethods.reduce((acc, apply) => safeWrapper(apply)(acc), config);\n}\n\n/**\n * A HOC factory that propagates the status of asyncConnected requests back to\n * the main server process, to allow properly expressing an error status as\n * HTTP status code\n *\n * @param {} code HTTP return code\n */\nexport function withServerErrorCode(code) {\n  return (WrappedComponent) => (props) => {\n    if (props.staticContext && Object.keys(props.staticContext).length === 0) {\n      const { staticContext } = props;\n      staticContext.error_code = code;\n      staticContext.error = props.error;\n    }\n    return <WrappedComponent {...props} />;\n  };\n}\n\n// See https://en.wikipedia.org/wiki/Web_colors#Extended_colors\nconst safeColors = [\n  'Black',\n  'Blue',\n  'BlueViolet',\n  'Brown',\n  'Crimson',\n  'DarkBlue',\n  'DarkCyan',\n  'DarkGreen',\n  'DarkMagenta',\n  'DarkOliveGreen',\n  'DarkOrchid',\n  'DarkRed',\n  'DarkSlateBlue',\n  'DarkSlateGray',\n  'DarkViolet',\n  'DeepPink',\n  'DimGray',\n  'DodgerBlue',\n  'Firebrick',\n  'ForestGreen',\n  'Fuchsia',\n  'Green',\n  'IndianRed',\n  'Indigo',\n  'Magenta',\n  'Maroon',\n  'MediumBlue',\n  'MediumSlateBlue',\n  'MediumVioletRed',\n  'MidnightBlue',\n  'Navy',\n  'Olive',\n  'OliveDrab',\n  'OrangeRed',\n  'Purple',\n  'Red',\n  'RoyalBlue',\n  'SaddleBrown',\n  'SeaGreen',\n  'Sienna',\n  'SlateBlue',\n  'SlateGray',\n  'SteelBlue',\n  'Teal',\n];\nconst namedColors = {};\n\n/**\n * Will generate initials from string\n * @param {string} name\n * @param {integer} count\n * @returns {string} only one letter if received only one name\n */\nexport const getInitials = (title, limit) => {\n  const text = title\n    .split(' ')\n    .map((n) => (n[0] ? n[0].toUpperCase() : ''))\n    .join('');\n  if (limit) {\n    return text.substring(0, limit);\n  }\n  return text;\n};\n\n/**\n * Will generate a random color hex\n * Will also remmember the color for each userId\n * @param {string} userId\n */\nexport const getColor = (name) => {\n  const namedColor = namedColors[name]\n    ? namedColors[name]\n    : safeColors.length > 0\n    ? safeColors.pop()\n    : `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n  if (!namedColors[name]) {\n    namedColors[name] = namedColor;\n  }\n  return namedColor;\n};\n\n/**\n * Fixes TimeZones issues on moment date objects\n * Parses a DateTime and sets correct moment locale\n * @param {string} locale Current locale\n * @param {string} value DateTime string\n * @param {string} format Date format of choice\n * @returns {Object|string} Moment object or string if format is set\n */\nexport const parseDateTime = (locale, value, format, moment) => {\n  //  Used to set a server timezone or UTC as default\n  moment.defineLocale(locale, moment.localeData(locale)._config); // copy locale to moment-timezone\n  let datetime = null;\n\n  if (value) {\n    // check if datetime has timezone, otherwise assumes it's UTC\n    datetime =\n      !value.match(/T/) || value.match(/T(.)*(-|\\+|Z)/g)\n        ? // Since we assume UTC everywhere, then transform to local (momentjs default)\n          moment(value)\n        : // This might happen in old Plone versions dates\n          moment(`${value}Z`);\n  }\n\n  if (format && datetime) {\n    return datetime.format(format);\n  }\n  return datetime;\n};\n\n/**\n * Normalizes a language to match the i18n format from the Plone lang names\n * @param {string} language Language to be normalized\n * @returns {string} Language normalized\n */\nexport const normalizeLanguageName = (language) => {\n  if (language.includes('-')) {\n    let normalizedLang = language.split('-');\n    normalizedLang = `${normalizedLang[0]}_${normalizedLang[1].toUpperCase()}`;\n    return normalizedLang;\n  }\n\n  return language;\n};\n\n/**\n * Lookup if a given expander is set in apiExpanders\n * @param {string} language Language to be normalized\n * @returns {string} Language normalized\n */\nexport const hasApiExpander = (expander, path = '', type = 'GET_CONTENT') => {\n  return flatten(\n    config.settings.apiExpanders\n      .filter((expand) => matchPath(path, expand.match) && expand[type])\n      .map((expand) => expand[type]),\n  ).includes(expander);\n};\n\n/**\n * Insert element into array at a give index\n * @param {Array} array Array with data\n * @param {*} element Element to be inserted\n * @param {number} index Index of item to be inserted at\n * @returns {Array} Array with inserted element\n */\nexport const insertInArray = (array, element, index) => [\n  ...array.slice(0, index),\n  element,\n  ...array.slice(index),\n];\n\n/**\n * Replace element in array at a give index\n * @param {Array} array Array with data\n * @param {*} element Element to be replaced\n * @param {number} index Index of item to be replaced at\n * @returns {Array} Array with replaced element\n */\nexport const replaceItemOfArray = (array, index, value) =>\n  Object.assign([...array], { [index]: value });\n\n/**\n * Remove item from array at given index\n * @param {Array} array Array with data\n * @param {number} index Index of item to be removed\n * @returns {Array} Array without deleted element\n */\nexport const removeFromArray = (array, index) => {\n  let newArray = array.slice();\n  newArray.splice(index, 1);\n  return newArray;\n};\n\n/**\n * Reorder array\n * @param {Array} array Array with data\n * @param {number} origin Index of item to be reordered\n * @param {number} target Index of item to be reordered to\n * @returns {Array} Array with reordered elements\n */\nexport const reorderArray = (array, origin, target) => {\n  const result = Array.from(array);\n  const [removed] = result.splice(origin, 1);\n  result.splice(target, 0, removed);\n\n  return result;\n};\n","module.exports = require(\"lodash/slice\");","/**\n * This action type will be dispatched when your history\n * receives a location change.\n */\nexport var LOCATION_CHANGE = '@@router/LOCATION_CHANGE';\nexport var onLocationChanged = function onLocationChanged(location, action) {\n  var isFirstRendering = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    type: LOCATION_CHANGE,\n    payload: {\n      location: location,\n      action: action,\n      isFirstRendering: isFirstRendering\n    }\n  };\n};\n/**\n * This action type will be dispatched by the history actions below.\n * If you're writing a middleware to watch for navigation events, be sure to\n * look for actions of this type.\n */\n\nexport var CALL_HISTORY_METHOD = '@@router/CALL_HISTORY_METHOD';\n\nvar updateLocation = function updateLocation(method) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return {\n      type: CALL_HISTORY_METHOD,\n      payload: {\n        method: method,\n        args: args\n      }\n    };\n  };\n};\n/**\n * These actions correspond to the history API.\n * The associated routerMiddleware will capture these events before they get to\n * your reducer and reissue them as the matching function on your history.\n */\n\n\nexport var push = updateLocation('push');\nexport var replace = updateLocation('replace');\nexport var go = updateLocation('go');\nexport var goBack = updateLocation('goBack');\nexport var goForward = updateLocation('goForward');\nexport var routerActions = {\n  push: push,\n  replace: replace,\n  go: go,\n  goBack: goBack,\n  goForward: goForward\n};","module.exports = require(\"lodash/cloneDeep\");","module.exports = require(\"date-fns\");","module.exports = require(\"react-dom\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M21.293 9.293L22.707 10.707 15.414 18 22.707 25.293 21.293 26.707 12.586 18z\\\"/>\"}","module.exports = require(\"lodash/last\");","module.exports = require(\"lodash/toPairs\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M7,16 C7,11.038 11.037,7 16,7 C20.963,7 25,11.038 25,16 C25,20.962 20.963,25 16,25 C11.037,25 7,20.962 7,16 L7,16 Z M32.707,31.293 L24.448,23.034 C26.039,21.125 27,18.673 27,16 C27,9.935 22.065,5 16,5 C9.935,5 5,9.935 5,16 C5,22.065 9.935,27 16,27 C18.673,27 21.125,26.039 23.034,24.448 L31.293,32.707 L32.707,31.293 Z\\\"/>\"}","module.exports = require(\"express\");","module.exports = require(\"react-intl-redux\");","module.exports = require(\"lodash/remove\");","module.exports = require(\"lodash/pickBy\");","/**\n * A HOC to inject a block extension by resolving the configured extension\n */\n\nimport React from 'react';\nimport config from '@plone/volto/registry';\n\n/**\n * Retrieves the extension (variation) settings from the provided\n * configuration, based on incoming data.\n */\nexport function resolveExtension(name, extensions, data) {\n  const selectedExtension = data[name];\n\n  let index = extensions.findIndex((conf) => conf.id === selectedExtension);\n\n  if (index === -1) {\n    index = extensions.findIndex((conf) => conf.isDefault);\n  }\n\n  return index !== -1 ? extensions[index] : undefined;\n}\n\n/**\n * A block can declare extensions and variations like:\n *\n * {\n *  variations: [\n *    {\n *      id: \"summary\",\n *      isDefault: true,\n *      template: Something\n *    }\n *  ],\n *  extensions: {\n *    'extensionA': {\n *      items: [\n *        // something similar to variations\n *      ]\n *    }\n *  }\n * }\n *\n * Exactly what an extension and what a variation represent is only up to the\n * block. A block should incorporate these extension mechanisms and it should\n * define what information is needed from them.\n *\n * resolveBlockExtensions will return an object with\n * `{ extensions, resolvedExtensions}`, where:\n *\n * - extensions is the blocksConfig extensions object for that block\n * - resolvedExtensions is an object with\n *   `{ variation, <someExtensionA>, <someExtensionB> }` and each of these\n *   fields hold the coresponding definition object from the block's\n *   configuration.\n */\nexport function resolveBlockExtensions(data) {\n  const block_type = data['@type'];\n  const { extensions = {}, variations = [] } = config.blocks.blocksConfig[\n    block_type\n  ];\n\n  const resolvedExtensions = Object.assign(\n    {},\n    ...Object.keys(extensions).map((extensionName) => ({\n      [extensionName]: resolveExtension(\n        extensionName,\n        extensions[extensionName].items || [],\n        data,\n        block_type,\n      ),\n    })),\n  );\n\n  if (variations.length) {\n    const variation = data.variation\n      ? variations.find(({ id }) => id === data.variation)\n      : variations.find(({ isDefault }) => isDefault);\n    resolvedExtensions.variation = variation;\n  }\n\n  return { extensions, resolvedExtensions };\n}\n\nconst withBlockExtensions = (WrappedComponent) => (props) => {\n  const { data } = props;\n  const { extensions, resolvedExtensions } = resolveBlockExtensions(data);\n  return (\n    <WrappedComponent\n      {...resolvedExtensions}\n      {...props}\n      extensions={extensions}\n    />\n  );\n};\n\nexport default withBlockExtensions;\n","import React from 'react';\nimport { Button, Segment, Popup } from 'semantic-ui-react';\nimport { useIntl, defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { flattenToAppURL, getContentIcon } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nimport rightArrowSVG from '@plone/volto/icons/right-key.svg';\nimport homeSVG from '@plone/volto/icons/home.svg';\n\nconst messages = defineMessages({\n  browse: {\n    id: 'Browse',\n    defaultMessage: 'Browse',\n  },\n  select: {\n    id: 'Select',\n    defaultMessage: 'Select',\n  },\n});\n\nconst ObjectBrowserNav = ({\n  currentSearchResults,\n  selected,\n  handleClickOnItem,\n  handleDoubleClickOnItem,\n  mode,\n  navigateTo,\n  isSelectable,\n}) => {\n  const intl = useIntl();\n  const isSelected = (item) => {\n    let ret = false;\n    if (selected) {\n      selected\n        .filter((item) => item != null)\n        .forEach((_item) => {\n          if (flattenToAppURL(_item['@id']) === flattenToAppURL(item['@id'])) {\n            ret = true;\n          }\n        });\n    }\n    return ret;\n  };\n\n  return (\n    <Segment as=\"ul\" className=\"object-listing\">\n      {currentSearchResults &&\n        currentSearchResults.items.map((item) => (\n          <li\n            role=\"presentation\"\n            aria-label={\n              item.is_folderish && mode === 'image'\n                ? `${intl.formatMessage(messages.browse)} ${item.title}`\n                : `${intl.formatMessage(messages.select)} ${item.title}`\n            }\n            key={item['@id']}\n            className={cx('', {\n              'selected-item': isSelected(item),\n\n              disabled:\n                mode === 'image'\n                  ? !config.settings.imageObjects.includes(item['@type']) &&\n                    !item.is_folderish\n                  : !isSelectable(item),\n            })}\n            onClick={() => handleClickOnItem(item)}\n            onDoubleClick={() => handleDoubleClickOnItem(item)}\n          >\n            <span title={`${item['@id']} (${item['@type']})`}>\n              <Popup\n                key={item['@id']}\n                content={\n                  <>\n                    <Icon name={homeSVG} size=\"18px\" />{' '}\n                    {flattenToAppURL(item['@id'])} ( {item['@type']})\n                  </>\n                }\n                trigger={\n                  <span>\n                    <Icon\n                      name={getContentIcon(item['@type'], item.is_folderish)}\n                      size=\"24px\"\n                    />\n                  </span>\n                }\n              />\n\n              {item.title}\n            </span>\n            {item.is_folderish && mode === 'image' && (\n              <Icon\n                className=\"right-arrow-icon\"\n                name={rightArrowSVG}\n                size=\"24px\"\n              />\n            )}\n            {item.is_folderish && (mode === 'link' || mode === 'multiple') && (\n              <div\n                role=\"presentation\"\n                className=\"right-arrow-link-mode\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  navigateTo(item['@id']);\n                }}\n              >\n                <Button.Group>\n                  <Button\n                    basic\n                    icon\n                    aria-label={`${intl.formatMessage(messages.browse)} ${\n                      item.title\n                    }`}\n                  >\n                    <Icon\n                      className=\"right-arrow-icon\"\n                      name={rightArrowSVG}\n                      size=\"24px\"\n                    />\n                  </Button>\n                </Button.Group>\n              </div>\n            )}\n          </li>\n        ))}\n    </Segment>\n  );\n};\n\nexport default ObjectBrowserNav;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { Input, Segment, Breadcrumb } from 'semantic-ui-react';\n\nimport { join } from 'lodash';\n\n// These absolute imports (without using the corresponding centralized index.js) are required\n// to cut circular import problems, this file should never use them. This is because of\n// the very nature of the functionality of the component and its relationship with others\nimport { searchContent } from '@plone/volto/actions/search/search';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers/Url/Url';\nimport config from '@plone/volto/registry';\n\nimport backSVG from '@plone/volto/icons/back.svg';\nimport folderSVG from '@plone/volto/icons/folder.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport searchSVG from '@plone/volto/icons/zoom.svg';\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport homeSVG from '@plone/volto/icons/home.svg';\n\nimport ObjectBrowserNav from '@plone/volto/components/manage/Sidebar/ObjectBrowserNav';\n\nconst messages = defineMessages({\n  SearchInputPlaceholder: {\n    id: 'Search content',\n    defaultMessage: 'Search content',\n  },\n  SelectedItems: {\n    id: 'Selected items',\n    defaultMessage: 'Selected items',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  search: {\n    id: 'Search SVG',\n    defaultMessage: 'Search SVG',\n  },\n  of: { id: 'Selected items - x of y', defaultMessage: 'of' },\n});\n\nfunction getParentURL(url) {\n  return flattenToAppURL(`${join(url.split('/').slice(0, -1), '/')}`) || '/';\n}\n\n/**\n * ObjectBrowserBody container class.\n * @class ObjectBrowserBody\n * @extends Component\n */\nclass ObjectBrowserBody extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    block: PropTypes.string.isRequired,\n    mode: PropTypes.string.isRequired,\n    data: PropTypes.any.isRequired,\n    searchSubrequests: PropTypes.objectOf(PropTypes.any).isRequired,\n    searchContent: PropTypes.func.isRequired,\n    closeObjectBrowser: PropTypes.func.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onSelectItem: PropTypes.func,\n    dataName: PropTypes.string,\n    maximumSelectionSize: PropTypes.number,\n    contextURL: PropTypes.string,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    image: '',\n    href: '',\n    onSelectItem: null,\n    dataName: null,\n    selectableTypes: [],\n    maximumSelectionSize: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentFolder:\n        this.props.mode === 'multiple' ? '/' : this.props.contextURL || '/',\n      currentImageFolder:\n        this.props.mode === 'multiple'\n          ? '/'\n          : this.props.mode === 'image' && this.props.data?.url\n          ? getParentURL(this.props.data.url)\n          : '/',\n      currentLinkFolder:\n        this.props.mode === 'multiple'\n          ? '/'\n          : this.props.mode === 'link' && this.props.data?.href\n          ? getParentURL(this.props.data.href)\n          : '/',\n      parentFolder: '',\n      selectedImage:\n        this.props.mode === 'multiple'\n          ? ''\n          : this.props.mode === 'image' && this.props.data?.url\n          ? flattenToAppURL(this.props.data.url)\n          : '',\n      selectedHref:\n        this.props.mode === 'multiple'\n          ? ''\n          : this.props.mode === 'link' && this.props.data?.href\n          ? flattenToAppURL(this.props.data.href)\n          : '',\n      showSearchInput: false,\n    };\n    this.searchInputRef = React.createRef();\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.initialSearch(this.props.mode);\n  }\n\n  initialSearch = (mode) => {\n    const currentSelected =\n      mode === 'multiple'\n        ? ''\n        : mode === 'image'\n        ? this.state.selectedImage\n        : this.state.selectedHref;\n    if (currentSelected && isInternalURL(currentSelected)) {\n      this.props.searchContent(\n        getParentURL(currentSelected),\n        {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          b_size: 1000,\n        },\n        `${this.props.block}-${mode}`,\n      );\n    } else {\n      this.props.searchContent(\n        this.state.currentFolder,\n        {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          b_size: 1000,\n        },\n        `${this.props.block}-${mode}`,\n      );\n    }\n  };\n\n  navigateTo = (id) => {\n    this.props.searchContent(\n      id,\n      {\n        'path.depth': 1,\n        sort_on: 'getObjPositionInParent',\n        metadata_fields: '_all',\n        b_size: 1000,\n      },\n      `${this.props.block}-${this.props.mode}`,\n    );\n    const parent = `${join(id.split('/').slice(0, -1), '/')}` || '/';\n    this.setState(() => ({\n      parentFolder: parent,\n      currentFolder: id || '/',\n    }));\n  };\n\n  toggleSearchInput = () =>\n    this.setState(\n      (prevState) => ({\n        showSearchInput: !prevState.showSearchInput,\n      }),\n      () => {\n        if (this.searchInputRef?.current) this.searchInputRef.current.focus();\n      },\n    );\n\n  onSearch = (e) => {\n    const text = flattenToAppURL(e.target.value);\n    if (text.startsWith('/')) {\n      this.setState({ currentFolder: text });\n      this.props.searchContent(\n        text,\n        {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n        },\n        `${this.props.block}-${this.props.mode}`,\n      );\n    } else {\n      text.length > 2\n        ? this.props.searchContent(\n            '/',\n            {\n              SearchableText: `${text}*`,\n              metadata_fields: '_all',\n            },\n            `${this.props.block}-${this.props.mode}`,\n          )\n        : this.props.searchContent(\n            '/',\n            {\n              'path.depth': 1,\n              sort_on: 'getObjPositionInParent',\n              metadata_fields: '_all',\n            },\n            `${this.props.block}-${this.props.mode}`,\n          );\n    }\n  };\n\n  onSelectItem = (item) => {\n    const url = item['@id'];\n    const { block, data, mode, dataName, onChangeBlock } = this.props;\n\n    const updateState = (mode) => {\n      switch (mode) {\n        case 'image':\n          this.setState({\n            selectedImage: url,\n            currentImageFolder: getParentURL(url),\n          });\n          break;\n        case 'link':\n          this.setState({\n            selectedHref: url,\n            currentLinkFolder: getParentURL(url),\n          });\n          break;\n        default:\n          break;\n      }\n    };\n\n    if (dataName) {\n      onChangeBlock(block, {\n        ...data,\n        [dataName]: url,\n      });\n    } else if (this.props.onSelectItem) {\n      this.props.onSelectItem(url, item);\n    } else if (mode === 'image') {\n      onChangeBlock(block, {\n        ...data,\n        url: flattenToAppURL(item.getURL),\n        alt: '',\n      });\n    } else if (mode === 'link') {\n      onChangeBlock(block, {\n        ...data,\n        href: flattenToAppURL(url),\n      });\n    }\n    updateState(mode);\n  };\n\n  onChangeBlockData = (key, value) => {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      [key]: value,\n    });\n  };\n\n  isSelectable = (item) => {\n    return this.props.selectableTypes.length > 0\n      ? this.props.selectableTypes.indexOf(item['@type']) >= 0\n      : true;\n  };\n\n  handleClickOnItem = (item) => {\n    if (this.props.mode === 'image') {\n      if (item.is_folderish) {\n        this.navigateTo(item['@id']);\n      }\n      if (config.settings.imageObjects.includes(item['@type'])) {\n        this.onSelectItem(item);\n      }\n    } else {\n      if (this.isSelectable(item)) {\n        if (\n          !this.props.maximumSelectionSize ||\n          this.props.mode === 'multiple' ||\n          !this.props.data ||\n          this.props.data.length < this.props.maximumSelectionSize\n        ) {\n          this.onSelectItem(item);\n          let length = this.props.data ? this.props.data.length : 0;\n\n          let stopSelecting =\n            this.props.mode !== 'multiple' ||\n            (this.props.maximumSelectionSize > 0 &&\n              length + 1 >= this.props.maximumSelectionSize);\n\n          if (stopSelecting) {\n            this.props.closeObjectBrowser();\n          }\n        } else {\n          this.props.closeObjectBrowser();\n        }\n      } else {\n        this.navigateTo(item['@id']);\n      }\n    }\n  };\n\n  handleDoubleClickOnItem = (item) => {\n    if (this.props.mode === 'image') {\n      if (item.is_folderish) {\n        this.navigateTo(item['@id']);\n      }\n      if (config.settings.imageObjects.includes(item['@type'])) {\n        this.onSelectItem(item);\n        this.props.closeObjectBrowser();\n      }\n    } else {\n      if (this.isSelectable(item)) {\n        if (this.props.data.length < this.props.maximumSelectionSize) {\n          this.onSelectItem(item);\n        }\n        this.props.closeObjectBrowser();\n      } else {\n        this.navigateTo(item['@id']);\n      }\n    }\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Segment.Group raised>\n        <header className=\"header pulled\">\n          <div className=\"vertical divider\" />\n          {this.state.currentFolder === '/' ? (\n            <>\n              {this.props.mode === 'image' ? (\n                <Icon name={folderSVG} size=\"24px\" />\n              ) : (\n                <Icon name={linkSVG} size=\"24px\" />\n              )}\n            </>\n          ) : (\n            <button\n              aria-label={this.props.intl.formatMessage(messages.back)}\n              onClick={() => this.navigateTo(this.state.parentFolder)}\n            >\n              <Icon name={backSVG} size=\"24px\" />\n            </button>\n          )}\n          {this.state.showSearchInput ? (\n            <Input\n              className=\"search\"\n              ref={this.searchInputRef}\n              onChange={this.onSearch}\n              placeholder={this.props.intl.formatMessage(\n                messages.SearchInputPlaceholder,\n              )}\n            />\n          ) : this.props.mode === 'image' ? (\n            <h2>\n              <FormattedMessage\n                id=\"Choose Image\"\n                defaultMessage=\"Choose Image\"\n              />\n            </h2>\n          ) : (\n            <h2>\n              <FormattedMessage\n                id=\"Choose Target\"\n                defaultMessage=\"Choose Target\"\n              />\n            </h2>\n          )}\n\n          <button\n            aria-label={this.props.intl.formatMessage(messages.search)}\n            onClick={this.toggleSearchInput}\n          >\n            <Icon name={searchSVG} size=\"24px\" />\n          </button>\n          <button className=\"clearSVG\" onClick={this.props.closeObjectBrowser}>\n            <Icon name={clearSVG} size=\"24px\" />\n          </button>\n        </header>\n        <Segment secondary className=\"breadcrumbs\" vertical>\n          <Breadcrumb>\n            {this.state.currentFolder !== '/' ? (\n              this.state.currentFolder.split('/').map((item, index, items) => {\n                return (\n                  <React.Fragment key={`divider-${item}-${index}`}>\n                    {index === 0 ? (\n                      <Breadcrumb.Section onClick={() => this.navigateTo('/')}>\n                        <Icon\n                          className=\"home-icon\"\n                          name={homeSVG}\n                          size=\"18px\"\n                        />\n                      </Breadcrumb.Section>\n                    ) : (\n                      <>\n                        <Breadcrumb.Divider key={`divider-${item.url}`} />\n                        <Breadcrumb.Section\n                          onClick={() =>\n                            this.navigateTo(items.slice(0, index + 1).join('/'))\n                          }\n                        >\n                          {item}\n                        </Breadcrumb.Section>\n                      </>\n                    )}\n                  </React.Fragment>\n                );\n              })\n            ) : (\n              <Breadcrumb.Section onClick={() => this.navigateTo('/')}>\n                <Icon className=\"home-icon\" name={homeSVG} size=\"18px\" />\n              </Breadcrumb.Section>\n            )}\n          </Breadcrumb>\n        </Segment>\n        {this.props.mode === 'multiple' && (\n          <Segment className=\"infos\">\n            {this.props.intl.formatMessage(messages.SelectedItems)}:{' '}\n            {this.props.data?.length}\n            {this.props.maximumSelectionSize > 0 && (\n              <>\n                {' '}\n                {this.props.intl.formatMessage(messages.of)}{' '}\n                {this.props.maximumSelectionSize}\n              </>\n            )}\n          </Segment>\n        )}\n        <ObjectBrowserNav\n          currentSearchResults={\n            this.props.searchSubrequests[\n              `${this.props.block}-${this.props.mode}`\n            ]\n          }\n          selected={\n            this.props.mode === 'multiple'\n              ? this.props.data\n              : [\n                  {\n                    '@id':\n                      this.props.mode === 'image'\n                        ? this.state.selectedImage\n                        : this.state.selectedHref,\n                  },\n                ]\n          }\n          handleClickOnItem={this.handleClickOnItem}\n          handleDoubleClickOnItem={this.handleDoubleClickOnItem}\n          mode={this.props.mode}\n          navigateTo={this.navigateTo}\n          isSelectable={this.isSelectable}\n        />\n      </Segment.Group>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      searchSubrequests: state.search.subrequests,\n    }),\n    { searchContent },\n  ),\n)(ObjectBrowserBody);\n","import React from 'react';\nimport ObjectBrowserBody from '@plone/volto/components/manage/Sidebar/ObjectBrowserBody';\nimport SidebarPopup from '@plone/volto/components/manage/Sidebar/SidebarPopup';\nimport { getBaseUrl } from '@plone/volto/helpers';\n\nconst withObjectBrowser = (WrappedComponent) =>\n  class extends React.Component {\n    /**\n     * Default properties\n     * @property {Object} defaultProps Default properties.\n     * @static\n     */\n    static defaultProps = {\n      onChangeBlock: () => {},\n      data: {},\n      block: new Date().getTime() + '',\n    };\n\n    constructor() {\n      super();\n      this.state = { isObjectBrowserOpen: false };\n    }\n\n    /**\n     * openObjectBrowser\n     * @function openObjectBrowser\n     * @param {Object} object ObjectBrowser configuration.\n     * @param {string} object.mode Quick mode, defaults to `image`. Values: link, image, multiple\n     * @param {string} object.dataName Name of the block data property to write the selected item.\n     * @param {string} object.onSelectItem Function that will be called on item selection.\n     * @param {string} object.overlay Boolean to show overlay background on content when opening objectBrowser.\n     *\n     * Usage:\n     *\n     * this.props.openObjectBrowser();\n     *\n     * this.props.openObjectBrowser({mode: 'link'});\n     *\n     * this.props.openObjectBrowser({\n     *   dataName: 'myfancydatafield'\n     *   });\n     *\n     * this.props.openObjectBrowser({\n     *   onSelectItem: url =>\n     *     this.props.onChangeBlock(this.props.block, {\n     *       ...this.props.data,\n     *       myfancydatafield: url,\n     *     }),\n     *   });\n     */\n    openObjectBrowser = ({\n      mode = 'image',\n      onSelectItem = null,\n      dataName = null,\n      overlay = null,\n      propDataName = null,\n      selectableTypes,\n      maximumSelectionSize,\n      currentPath,\n    } = {}) =>\n      this.setState(() => ({\n        isObjectBrowserOpen: true,\n        mode,\n        onSelectItem,\n        dataName,\n        overlay,\n        propDataName,\n        selectableTypes,\n        maximumSelectionSize,\n        currentPath,\n      }));\n\n    closeObjectBrowser = () => this.setState({ isObjectBrowserOpen: false });\n\n    render() {\n      let contextURL =\n        this.props.pathname ||\n        this.props.location?.pathname ||\n        this.state?.currentPath;\n\n      return (\n        <>\n          <WrappedComponent\n            {...this.props}\n            isObjectBrowserOpen={this.state.isObjectBrowserOpen}\n            openObjectBrowser={this.openObjectBrowser}\n            closeObjectBrowser={this.closeObjectBrowser}\n          />\n\n          <>\n            <SidebarPopup\n              open={this.state.isObjectBrowserOpen}\n              onClose={this.closeObjectBrowser}\n              overlay={this.state.overlay}\n            >\n              <ObjectBrowserBody\n                {...this.props}\n                data={\n                  this.state.propDataName\n                    ? this.props[this.state.propDataName]\n                    : this.props.data\n                }\n                contextURL={getBaseUrl(contextURL)}\n                closeObjectBrowser={this.closeObjectBrowser}\n                mode={this.state.mode}\n                onSelectItem={this.state.onSelectItem}\n                dataName={this.state.dataName}\n                selectableTypes={this.state.selectableTypes}\n                maximumSelectionSize={this.state.maximumSelectionSize}\n              />\n            </SidebarPopup>\n          </>\n        </>\n      );\n    }\n  };\n\nexport default withObjectBrowser;\n","export function clearKey(key) {\n  return {\n    type: '@redux-conn/CLEAR',\n    key,\n  };\n}\n\nexport function beginGlobalLoad() {\n  return {\n    type: '@redux-conn/BEGIN_GLOBAL_LOAD',\n  };\n}\n\nexport function endGlobalLoad() {\n  return {\n    type: '@redux-conn/END_GLOBAL_LOAD',\n  };\n}\n\nexport function load(key) {\n  return {\n    type: '@redux-conn/LOAD',\n    key,\n  };\n}\n\nexport function loadSuccess(key, data) {\n  return {\n    type: '@redux-conn/LOAD_SUCCESS',\n    key,\n    data,\n  };\n}\n\nexport function loadFail(key, error) {\n  return {\n    type: '@redux-conn/LOAD_FAIL',\n    key,\n    error,\n  };\n}\n","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M29 8L13.561 23.439 7.121 17 5 19.12 13.561 27.681 31.12 10.12z\\\"/><path d=\\\"M29 8L13.561 23.439 7.121 17 5 19.12 13.561 27.681 31.12 10.12z\\\"/></g>\"}","module.exports = require(\"react-dom/server\");","/**\n * Get string as Boolean.\n * @function getBoolean\n * @param {Object} value The value.\n * @return {string} Field name of the layout\n */\nexport function getBoolean(value) {\n  switch (value) {\n    case true:\n    case 'true':\n    case 'True':\n    case 1:\n    case '1':\n    case 'on':\n    case 'yes':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Get vocabulary from hint.\n * @function getVocabFromHint\n * @param {Object} props The props.\n * @return {string} Field name of the layout\n */\nexport function getVocabFromHint(props) {\n  return props.widgetOptions && props.widgetOptions.vocabulary\n    ? props.widgetOptions.vocabulary['@id']\n    : false;\n}\n\n/**\n * Get vocabulary from field.\n * @function getVocabFromField\n * @param {Object} props The props.\n * @return {string} Field name of the layout\n */\nexport function getVocabFromField(props) {\n  return props.vocabulary ? props.vocabulary['@id'] : false;\n}\n\n/**\n * Get vocabulary from items.\n * @function getVocabFromItems\n * @param {Object} props The props.\n * @return {string} Field name of the layout\n */\nexport function getVocabFromItems(props) {\n  return props.items && props.items.vocabulary\n    ? props.items.vocabulary['@id']\n    : false;\n}\n\n/**\n * Get vocabulary given a URL (coming from a Schema) or from a vocabulary name.\n * @function getVocabName\n * @param {string} vocabNameOrURL\n * @returns {string} Vocabulary name\n */\nexport function getVocabName(vocabNameOrURL) {\n  if (vocabNameOrURL) {\n    return vocabNameOrURL.indexOf('@vocabularies') > -1\n      ? vocabNameOrURL.split('@vocabularies/')[1]\n      : vocabNameOrURL;\n  }\n  return vocabNameOrURL;\n}\n\n/**\n * Get Fields vocabulary\n * @function getFieldsVocabulary\n * @returns {Object} Fields vocabulary\n */\nexport function getFieldsVocabulary() {\n  return {\n    items: [\n      {\n        title: 'Choice',\n        token: 'label_choice_field',\n      },\n      {\n        title: 'Date',\n        token: 'label_date_field',\n      },\n      {\n        title: 'Date/Time',\n        token: 'label_datetime_field',\n      },\n      {\n        title: 'Email',\n        token: 'Email',\n      },\n      {\n        title: 'File Upload',\n        token: 'File Upload',\n      },\n      {\n        title: 'Floating-point number',\n        token: 'label_float_field',\n      },\n      {\n        title: 'Image',\n        token: 'Image',\n      },\n      {\n        title: 'Integer',\n        token: 'label_integer_field',\n      },\n      {\n        title: 'JSONField',\n        token: 'JSONField',\n      },\n      {\n        title: 'Multiple Choice',\n        token: 'label_multi_choice_field',\n      },\n      {\n        title: 'Password',\n        token: 'label_password_field',\n      },\n      // {\n      //   title: 'Relation Choice',\n      //   token: 'Relation Choice',\n      // },\n      {\n        title: 'Relation List',\n        token: 'Relation List',\n      },\n      {\n        title: 'Rich Text',\n        token: 'Rich Text',\n      },\n      {\n        title: 'Text',\n        token: 'label_text_field',\n      },\n      {\n        title: 'Text line (String)',\n        token: 'label_textline_field',\n      },\n      {\n        title: 'URL',\n        token: 'URL',\n      },\n      {\n        title: 'Yes/No',\n        token: 'label_boolean_field',\n      },\n    ],\n  };\n}\n","module.exports = require(\"lodash/compact\");","module.exports = require(\"semantic-ui-react/dist/commonjs/lib\");","module.exports = require(\"use-deep-compare-effect\");","module.exports = require(\"react-cookie\");","module.exports = require(\"lodash/uniqBy\");","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport imageLeftSVG from '@plone/volto/icons/image-left.svg';\nimport imageRightSVG from '@plone/volto/icons/image-right.svg';\nimport imageFitSVG from '@plone/volto/icons/image-fit.svg';\nimport imageFullSVG from '@plone/volto/icons/image-full.svg';\n\nconst messages = defineMessages({\n  left: {\n    id: 'Left',\n    defaultMessage: 'Left',\n  },\n  right: {\n    id: 'Right',\n    defaultMessage: 'Right',\n  },\n  center: {\n    id: 'Center',\n    defaultMessage: 'Center',\n  },\n  full: {\n    id: 'Full',\n    defaultMessage: 'Full',\n  },\n});\n\nconst AlignBlock = ({ align, onChangeBlock, data, intl, block }) => {\n  /**\n   * Align block handler\n   * @method onAlignBlock\n   * @param {string} align Alignment option\n   * @returns {undefined}\n   */\n  function onAlignBlock(align) {\n    onChangeBlock(block, {\n      ...data,\n      align,\n    });\n  }\n\n  return (\n    <div>\n      <Button.Group>\n        <Button\n          icon\n          basic\n          aria-label={intl.formatMessage(messages.left)}\n          onClick={() => onAlignBlock('left')}\n          active={data.align === 'left'}\n        >\n          <Icon name={imageLeftSVG} size=\"24px\" />\n        </Button>\n      </Button.Group>\n      <Button.Group>\n        <Button\n          icon\n          basic\n          aria-label={intl.formatMessage(messages.right)}\n          onClick={() => onAlignBlock('right')}\n          active={data.align === 'right'}\n        >\n          <Icon name={imageRightSVG} size=\"24px\" />\n        </Button>\n      </Button.Group>\n      <Button.Group>\n        <Button\n          icon\n          basic\n          aria-label={intl.formatMessage(messages.center)}\n          onClick={() => onAlignBlock('center')}\n          active={data.align === 'center' || !data.align}\n        >\n          <Icon name={imageFitSVG} size=\"24px\" />\n        </Button>\n      </Button.Group>\n      <Button.Group>\n        <Button\n          icon\n          basic\n          aria-label={intl.formatMessage(messages.full)}\n          onClick={() => onAlignBlock('full')}\n          active={data.align === 'full'}\n        >\n          <Icon name={imageFullSVG} size=\"24px\" />\n        </Button>\n      </Button.Group>\n    </div>\n  );\n};\n\nexport default injectIntl(AlignBlock);\n","module.exports = require(\"lodash/without\");","module.exports = require(\"promise-file-reader\");","module.exports = require(\"universal-cookie\");","module.exports = require(\"lodash/groupBy\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M27.1318,7.333 C24.4028,4.604 19.9618,4.604 17.2328,7.333 L12.9898,11.576 C11.8428,12.723 11.1288,14.248 10.9778,15.871 C10.8228,17.541 11.2708,19.211 12.2378,20.576 C12.4818,20.919 12.7278,21.213 12.9888,21.475 C13.7848,22.271 14.7778,22.868 15.8608,23.202 C16.5498,23.415 17.2548,23.519 17.9518,23.518 C19.7808,23.518 21.5598,22.804 22.8888,21.475 L23.9498,20.414 L22.5358,19 L21.4748,20.061 C20.1648,21.371 18.2388,21.842 16.4498,21.291 C15.6668,21.049 14.9778,20.635 14.4038,20.061 C14.2218,19.879 14.0478,19.668 13.8698,19.418 C13.1778,18.443 12.8588,17.249 12.9688,16.056 C13.0768,14.896 13.5868,13.808 14.4038,12.99 L18.6468,8.747 C20.5958,6.798 23.7688,6.798 25.7178,8.747 C26.6568,9.687 27.1748,10.942 27.1748,12.283 C27.1748,13.623 26.6568,14.878 25.7178,15.818 L27.1318,17.232 C28.4488,15.915 29.1748,14.157 29.1748,12.283 C29.1748,10.408 28.4488,8.65 27.1318,7.333\\\"/><path d=\\\"M25.0107,16.5254 C24.2147,15.7294 23.2217,15.1324 22.1387,14.7984 C19.6417,14.0284 16.9477,14.6894 15.1107,16.5254 L14.0507,17.5864 L15.4647,19.0004 L16.5247,17.9394 C17.8357,16.6294 19.7587,16.1554 21.5497,16.7094 C22.3337,16.9514 23.0217,17.3644 23.5957,17.9394 C23.7777,18.1214 23.9527,18.3314 24.1307,18.5824 C24.8217,19.5564 25.1417,20.7514 25.0317,21.9444 C24.9237,23.1034 24.4137,24.1924 23.5957,25.0104 L19.3537,29.2534 C17.4047,31.2024 14.2317,31.2024 12.2817,29.2534 C11.3427,28.3134 10.8247,27.0574 10.8247,25.7174 C10.8247,24.3774 11.3427,23.1214 12.2817,22.1824 L10.8677,20.7684 C9.5507,22.0854 8.8247,23.8424 8.8247,25.7174 C8.8247,27.5924 9.5507,29.3504 10.8677,30.6674 C12.2327,32.0314 14.0257,32.7134 15.8177,32.7134 C17.6107,32.7134 19.4027,32.0314 20.7677,30.6674 L25.0107,26.4244 C26.1567,25.2774 26.8717,23.7524 27.0227,22.1294 C27.1777,20.4594 26.7297,18.7894 25.7617,17.4244 C25.5177,17.0814 25.2717,16.7874 25.0107,16.5254\\\"/></g>\"}","module.exports = require(\"lodash/isObject\");","const SECOND = 1000;\nconst MINUTE = SECOND * 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365; // ? is this safe or should it be more accurate\n\nexport const short_date_format = {\n  // 12/9/2021\n  year: 'numeric',\n  month: 'numeric',\n  day: 'numeric',\n};\n\nexport const short_date_and_time_format = {\n  // 12/9/21, 10:39 AM\n  dateStyle: 'short',\n  timeStyle: 'short',\n};\n\nexport const long_date_format = {\n  // Thursday, December 9, 2021 at 10:39 AM\n  dateStyle: 'full',\n  timeStyle: 'short',\n};\n\nexport const toDate = (d) =>\n  ['string', 'number'].includes(typeof d) ? new Date(d) : d;\n\n/**\n * Friendly formatting for dates\n */\nexport function formatDate({\n  date, // Date() or  '2022-01-03T19:26:08.999Z'\n  format, // format object, see https://tc39.es/ecma402/#datetimeformat-objects\n  locale = 'en',\n  long, // true if format should be in long readable form.\n  includeTime, // true if short date format should include time\n  formatToParts = false,\n}) {\n  date = toDate(date);\n  format = format\n    ? format\n    : long && !includeTime\n    ? long_date_format\n    : includeTime\n    ? short_date_and_time_format\n    : short_date_format;\n\n  const formatter = new Intl.DateTimeFormat(locale, format);\n  return formatToParts ? formatter.formatToParts(date) : formatter.format(date);\n}\n\nexport function formatRelativeDate({\n  date,\n  locale = 'en',\n  relativeTo,\n  style = 'long', // long|short|narrow\n  formatToParts = false,\n}) {\n  date = toDate(date);\n  relativeTo = toDate(relativeTo || new Date());\n\n  const deltaMiliTime = date.getTime() - relativeTo.getTime();\n  const absDeltaMiliTime = Math.abs(deltaMiliTime);\n\n  const deltaSeconds = absDeltaMiliTime / SECOND;\n  const deltaMinutes = absDeltaMiliTime / MINUTE;\n  const deltaHours = absDeltaMiliTime / HOUR;\n  const deltaDays = absDeltaMiliTime / DAY;\n  const deltaMonths = absDeltaMiliTime / MONTH;\n  const deltaYears = absDeltaMiliTime / YEAR;\n  const deltas = [\n    deltaYears,\n    deltaMonths,\n    deltaDays,\n    deltaHours,\n    deltaMinutes,\n    deltaSeconds,\n  ];\n  const pos = deltas.map(Math.round).findIndex((d) => d > 0);\n  const tag = ['years', 'months', 'days', 'hours', 'minutes', 'seconds'][pos];\n\n  const formatter = new Intl.RelativeTimeFormat(locale, {\n    numeric: 'auto',\n    style,\n  });\n\n  const v = Math.round(deltaMiliTime < 0 ? -1 * deltas[pos] : deltas[pos]);\n  // console.log({ date, relativeTo, v });\n\n  return isNaN(v)\n    ? ''\n    : formatToParts\n    ? formatter.formatToParts(v, tag)\n    : formatter.format(v, tag); // use \"now\" ?\n}\n","/**\n * View container.\n * @module components/theme/View/View\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { injectIntl } from 'react-intl';\nimport qs from 'query-string';\n\nimport {\n  ContentMetadataTags,\n  Comments,\n  Tags,\n  Toolbar,\n} from '@plone/volto/components';\nimport { listActions, getContent } from '@plone/volto/actions';\nimport {\n  BodyClass,\n  getBaseUrl,\n  flattenToAppURL,\n  getLayoutFieldname,\n} from '@plone/volto/helpers';\n\nimport config from '@plone/volto/registry';\n\n/**\n * View container class.\n * @class View\n * @extends Component\n */\nclass View extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    actions: PropTypes.shape({\n      object: PropTypes.arrayOf(PropTypes.object),\n      object_buttons: PropTypes.arrayOf(PropTypes.object),\n      user: PropTypes.arrayOf(PropTypes.object),\n    }),\n    listActions: PropTypes.func.isRequired,\n    /**\n     * Action to get the content\n     */\n    getContent: PropTypes.func.isRequired,\n    /**\n     * Pathname of the object\n     */\n    pathname: PropTypes.string.isRequired,\n    location: PropTypes.shape({\n      search: PropTypes.string,\n      pathname: PropTypes.string,\n    }).isRequired,\n    /**\n     * Version id of the object\n     */\n    versionId: PropTypes.string,\n    /**\n     * Content of the object\n     */\n    content: PropTypes.shape({\n      /**\n       * Layout of the object\n       */\n      layout: PropTypes.string,\n      /**\n       * Allow discussion of the object\n       */\n      allow_discussion: PropTypes.bool,\n      /**\n       * Title of the object\n       */\n      title: PropTypes.string,\n      /**\n       * Description of the object\n       */\n      description: PropTypes.string,\n      /**\n       * Type of the object\n       */\n      '@type': PropTypes.string,\n      /**\n       * Subjects of the object\n       */\n      subjects: PropTypes.arrayOf(PropTypes.string),\n      is_folderish: PropTypes.bool,\n    }),\n    error: PropTypes.shape({\n      /**\n       * Error type\n       */\n      status: PropTypes.number,\n    }),\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    actions: null,\n    content: null,\n    versionId: null,\n    error: null,\n  };\n\n  state = {\n    hasObjectButtons: null,\n    isClient: false,\n  };\n\n  componentDidMount() {\n    this.props.listActions(getBaseUrl(this.props.pathname));\n    this.props.getContent(\n      getBaseUrl(this.props.pathname),\n      this.props.versionId,\n    );\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.listActions(getBaseUrl(nextProps.pathname));\n      this.props.getContent(\n        getBaseUrl(nextProps.pathname),\n        this.props.versionId,\n      );\n    }\n\n    if (nextProps.actions.object_buttons) {\n      const objectButtons = nextProps.actions.object_buttons;\n      this.setState({\n        hasObjectButtons: !!objectButtons.length,\n      });\n    }\n  }\n\n  /**\n   * Default fallback view\n   * @method getViewDefault\n   * @returns {string} Markup for component.\n   */\n  getViewDefault = () => config.views.defaultView;\n\n  /**\n   * Get view by content type\n   * @method getViewByType\n   * @returns {string} Markup for component.\n   */\n  getViewByType = () =>\n    config.views.contentTypesViews[this.props.content['@type']] || null;\n\n  /**\n   * Get view by content layout property\n   * @method getViewByLayout\n   * @returns {string} Markup for component.\n   */\n  getViewByLayout = () =>\n    config.views.layoutViews[\n      this.props.content[getLayoutFieldname(this.props.content)]\n    ] || null;\n\n  /**\n   * Cleans the component displayName (specially for connected components)\n   * which have the Connect(componentDisplayName)\n   * @method cleanViewName\n   * @param  {string} dirtyDisplayName The displayName\n   * @returns {string} Clean displayName (no Connect(...)).\n   */\n  cleanViewName = (dirtyDisplayName) =>\n    dirtyDisplayName\n      .replace('Connect(', '')\n      .replace('injectIntl(', '')\n      .replace(')', '')\n      .replace('connect(', '')\n      .toLowerCase();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { views } = config;\n    if (this.props.error && this.props.error.code === 301) {\n      const redirect = flattenToAppURL(this.props.error.url).split('?')[0];\n      return <Redirect to={`${redirect}${this.props.location.search}`} />;\n    } else if (this.props.error && !this.props.connectionRefused) {\n      let FoundView;\n      if (this.props.error.status === undefined) {\n        // For some reason, while development and if CORS is in place and the\n        // requested resource is 404, it returns undefined as status, then the\n        // next statement will fail\n        FoundView = views.errorViews.corsError;\n      } else {\n        FoundView = views.errorViews[this.props.error.status.toString()];\n      }\n      if (!FoundView) {\n        FoundView = views.errorViews['404']; // default to 404\n      }\n      return (\n        <div id=\"view\">\n          <FoundView {...this.props} />\n        </div>\n      );\n    }\n    if (!this.props.content) {\n      return <span />;\n    }\n    const RenderedView =\n      this.getViewByType() || this.getViewByLayout() || this.getViewDefault();\n\n    return (\n      <div id=\"view\">\n        <ContentMetadataTags content={this.props.content} />\n        {/* Body class if displayName in component is set */}\n        <BodyClass\n          className={\n            RenderedView.displayName\n              ? `view-${this.cleanViewName(RenderedView.displayName)}`\n              : null\n          }\n        />\n        <RenderedView\n          content={this.props.content}\n          location={this.props.location}\n          token={this.props.token}\n          history={this.props.history}\n        />\n        {config.settings.showTags &&\n          this.props.content.subjects &&\n          this.props.content.subjects.length > 0 && (\n            <Tags tags={this.props.content.subjects} />\n          )}\n        {/* Add opt-in social sharing if required, disabled by default */}\n        {/* In the future this might be parameterized from the app config */}\n        {/* <SocialSharing\n          url={typeof window === 'undefined' ? '' : window.location.href}\n          title={this.props.content.title}\n          description={this.props.content.description || ''}\n        /> */}\n        {this.props.content.allow_discussion && (\n          <Comments pathname={this.props.pathname} />\n        )}\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar pathname={this.props.pathname} inner={<span />} />\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      actions: state.actions.actions,\n      token: state.userSession.token,\n      content: state.content.data,\n      error: state.content.get.error,\n      apiError: state.apierror.error,\n      connectionRefused: state.apierror.connectionRefused,\n      pathname: props.location.pathname,\n      versionId:\n        qs.parse(props.location.search) &&\n        qs.parse(props.location.search).version,\n    }),\n    {\n      listActions,\n      getContent,\n    },\n  ),\n)(View);\n","/**\n * Routes.\n * @module routes\n */\nimport {\n  Add,\n  AddonsControlpanel,\n  ChangePassword,\n  ContactForm,\n  Contents,\n  ContentType,\n  ContentTypeLayout,\n  ContentTypeSchema,\n  ContentTypes,\n  Controlpanel,\n  Controlpanels,\n  CreateTranslation,\n  DatabaseInformation,\n  Delete,\n  Diff,\n  Edit,\n  History,\n  Login,\n  Logout,\n  ManageTranslations,\n  ModerateComments,\n  NotFound,\n  PasswordReset,\n  Register,\n  RequestPasswordReset,\n  Search,\n  Sharing,\n  Sitemap,\n  UsersControlpanel,\n  UserGroupMembershipControlPanel,\n  GroupsControlpanel,\n} from '@plone/volto/components';\n\n// Deliberatelly use of absolute path of these components, since we do not want them\n// in the components/index.js file.\nimport App from '@plone/volto/components/theme/App/App';\nimport View from '@plone/volto/components/theme/View/View';\n\nimport config from '@plone/volto/registry';\n\n/**\n * Default routes array.\n * @array\n * @returns {array} Routes.\n */\nexport const multilingualRoutes = [\n  {\n    path: `/(${config.settings?.supportedLanguages.join('|')})/sitemap`,\n    component: Sitemap,\n  },\n  {\n    path: `/(${config.settings?.supportedLanguages.join('|')})/search`,\n    component: Search,\n  },\n  {\n    path: `/(${config.settings?.supportedLanguages.join('|')})/contact-form`,\n    component: ContactForm,\n  },\n  {\n    path: `/(${config.settings?.supportedLanguages.join('|')})/change-password`,\n    component: ChangePassword,\n  },\n  {\n    path: `/(${config.settings?.supportedLanguages.join('|')})/register`,\n    component: Register,\n  },\n  {\n    path: `/(${config.settings?.supportedLanguages.join('|')})/password-reset`,\n    component: RequestPasswordReset,\n    exact: true,\n  },\n  {\n    path: `/(${config.settings?.supportedLanguages.join(\n      '|',\n    )})/password-reset/:token`,\n    component: PasswordReset,\n    exact: true,\n  },\n];\n\nexport const defaultRoutes = [\n  {\n    path: '/',\n    component: View,\n    exact: true,\n  },\n  {\n    path: '/login',\n    component: Login,\n  },\n  {\n    path: '/logout',\n    component: Logout,\n  },\n  {\n    path: '/sitemap',\n    component: Sitemap,\n  },\n  {\n    path: '/search',\n    component: Search,\n  },\n  {\n    path: '/contact-form',\n    component: ContactForm,\n  },\n  {\n    path: '/controlpanel',\n    exact: true,\n    component: Controlpanels,\n  },\n  {\n    path: '/controlpanel/dexterity-types/:id/layout',\n    component: ContentTypeLayout,\n  },\n  {\n    path: '/controlpanel/dexterity-types/:id/schema',\n    component: ContentTypeSchema,\n  },\n  {\n    path: '/controlpanel/dexterity-types/:id',\n    component: ContentType,\n  },\n  {\n    path: '/controlpanel/dexterity-types',\n    component: ContentTypes,\n  },\n  {\n    path: '/controlpanel/addons',\n    component: AddonsControlpanel,\n  },\n  {\n    path: '/controlpanel/database',\n    component: DatabaseInformation,\n  },\n  {\n    path: '/controlpanel/moderate-comments',\n    component: ModerateComments,\n  },\n  {\n    path: '/controlpanel/users',\n    component: UsersControlpanel,\n  },\n  {\n    path: '/controlpanel/usergroupmembership',\n    component: UserGroupMembershipControlPanel,\n  },\n  {\n    path: '/controlpanel/groups',\n    component: GroupsControlpanel,\n  },\n  {\n    path: '/controlpanel/:id',\n    component: Controlpanel,\n  },\n  {\n    path: '/change-password',\n    component: ChangePassword,\n  },\n  {\n    path: '/add',\n    component: Add,\n  },\n  {\n    path: '/edit',\n    component: Edit,\n  },\n  {\n    path: '/contents',\n    component: Contents,\n  },\n  {\n    path: '/sharing',\n    component: Sharing,\n  },\n  {\n    path: '/**/add',\n    component: Add,\n  },\n  {\n    path: '/**/create-translation',\n    component: CreateTranslation,\n  },\n  {\n    path: '/**/contents',\n    component: Contents,\n  },\n  {\n    path: '/**/sharing',\n    component: Sharing,\n  },\n  {\n    path: '/**/delete',\n    component: Delete,\n  },\n  {\n    path: '/**/diff',\n    component: Diff,\n  },\n  {\n    path: '/**/edit',\n    component: Edit,\n  },\n  {\n    path: '/**/history',\n    component: History,\n  },\n  {\n    path: '/**/sharing',\n    component: Sharing,\n  },\n  {\n    path: '/**/manage-translations',\n    component: ManageTranslations,\n  },\n  {\n    path: '/**/login',\n    component: Login,\n  },\n  {\n    path: '/register',\n    component: Register,\n  },\n  {\n    path: '/password-reset',\n    component: RequestPasswordReset,\n    exact: true,\n  },\n  {\n    path: '/password-reset/:token',\n    component: PasswordReset,\n    exact: true,\n  },\n  {\n    path: '/**',\n    component: View,\n  },\n  {\n    path: '*',\n    component: NotFound,\n  },\n];\n\n/**\n * Routes array.\n * @array\n * @returns {array} Routes.\n */\nconst routes = [\n  {\n    path: '/',\n    component: App,\n    routes: [\n      // redirect to external links if path is in blacklist\n      ...(config.settings?.externalRoutes || []).map((route) => ({\n        ...route.match,\n        component: NotFound,\n      })),\n      // addon routes have a higher priority then default routes\n      ...(config.addonRoutes || []),\n      ...((config.settings?.isMultilingual && multilingualRoutes) || []),\n      ...defaultRoutes,\n    ],\n  },\n];\n\nexport default routes;\n","/**\n * Routes.\n * @module routes\n */\n\nimport { App } from '@plone/volto/components';\nimport { defaultRoutes } from '@plone/volto/routes';\nimport config from '@plone/volto/registry';\n\n/**\n * Routes array.\n * @array\n * @returns {array} Routes.\n */\nconst routes = [\n  {\n    path: '/',\n    component: App, // Change this if you want a different component\n    routes: [\n      // Add your routes here\n      ...(config.addonRoutes || []),\n      ...defaultRoutes,\n    ],\n  },\n];\n\nexport default routes;\n","/* eslint no-console: 0 */\nimport '@plone/volto/config'; // This is the bootstrap for the global config - server side\nimport { existsSync, lstatSync, readFileSync } from 'fs';\nimport React from 'react';\nimport { StaticRouter } from 'react-router-dom';\nimport { Provider } from 'react-intl-redux';\nimport express from 'express';\nimport { renderToString } from 'react-dom/server';\nimport { createMemoryHistory } from 'history';\nimport { parse as parseUrl } from 'url';\nimport { keys } from 'lodash';\nimport locale from 'locale';\nimport { detect } from 'detect-browser';\nimport path from 'path';\nimport { ChunkExtractor, ChunkExtractorManager } from '@loadable/server';\nimport { resetServerContext } from 'react-beautiful-dnd';\nimport { CookiesProvider } from 'react-cookie';\nimport cookiesMiddleware from 'universal-cookie-express';\nimport debug from 'debug';\n\nimport routes from '@root/routes';\nimport config from '@plone/volto/registry';\n\nimport {\n  flattenToAppURL,\n  Html,\n  Api,\n  persistAuthToken,\n  normalizeLanguageName,\n} from '@plone/volto/helpers';\nimport { changeLanguage } from '@plone/volto/actions';\n\nimport userSession from '@plone/volto/reducers/userSession/userSession';\n\nimport ErrorPage from '@plone/volto/error';\n\nimport languages from '@plone/volto/constants/Languages';\n\nimport configureStore from '@plone/volto/store';\nimport { ReduxAsyncConnect, loadOnServer } from './helpers/AsyncConnect';\n\nlet locales = {};\n\nif (config.settings) {\n  config.settings.supportedLanguages.forEach((lang) => {\n    const langFileName = normalizeLanguageName(lang);\n    import('@root/../locales/' + langFileName + '.json').then((locale) => {\n      locales = { ...locales, [lang]: locale.default };\n    });\n  });\n}\n\nfunction reactIntlErrorHandler(error) {\n  debug('i18n')(error);\n}\n\nconst supported = new locale.Locales(keys(languages), 'en');\n\nconst server = express()\n  .disable('x-powered-by')\n  .use(\n    express.static(\n      process.env.BUILD_DIR\n        ? path.join(process.env.BUILD_DIR, 'public')\n        : process.env.RAZZLE_PUBLIC_DIR,\n    ),\n  )\n  .head('/*', function (req, res) {\n    // Support for HEAD requests. Required by start-test utility in CI.\n    res.send('');\n  })\n  .use(cookiesMiddleware());\n\nconst middleware = (config.settings.expressMiddleware || []).filter((m) => m);\n\nserver.all('*', setupServer);\nif (middleware.length) server.use('/', middleware);\n\nserver.use(function (err, req, res, next) {\n  if (err) {\n    const { store } = res.locals;\n    const errorPage = (\n      <Provider store={store} onError={reactIntlErrorHandler}>\n        <StaticRouter context={{}} location={req.url}>\n          <ErrorPage message={err.message} />\n        </StaticRouter>\n      </Provider>\n    );\n\n    res.set({\n      'Cache-Control': 'public, max-age=60, no-transform',\n    });\n\n    /* Displays error in console\n     * TODO:\n     * - get ignored codes from Plone error_log\n     */\n    const ignoredErrors = [301, 302, 401, 404];\n    if (!ignoredErrors.includes(err.status)) console.error(err);\n\n    res\n      .status(err.status || 500) // If error happens in Volto code itself error status is undefined\n      .send(`<!doctype html> ${renderToString(errorPage)}`);\n  }\n});\n\nfunction setupServer(req, res, next) {\n  const api = new Api(req);\n\n  const lang = new locale.Locales(\n    req.universalCookies.get('I18N_LANGUAGE') ||\n      config.settings.defaultLanguage ||\n      req.headers['accept-language'],\n  )\n    .best(supported)\n    .toString();\n\n  // Minimum initial state for the fake Redux store instance\n  const initialState = {\n    intl: {\n      defaultLocale: 'en',\n      locale: lang,\n      messages: locales[lang],\n    },\n  };\n\n  const history = createMemoryHistory({\n    initialEntries: [req.url],\n  });\n\n  // Create a fake Redux store instance for the `errorHandler` to render\n  // and for being used by the rest of the middlewares, if required\n  const store = configureStore(initialState, history, api);\n\n  function errorHandler(error) {\n    const errorPage = (\n      <Provider store={store} onError={reactIntlErrorHandler}>\n        <StaticRouter context={{}} location={req.url}>\n          <ErrorPage message={error.message} />\n        </StaticRouter>\n      </Provider>\n    );\n\n    res.set({\n      'Cache-Control': 'public, max-age=60, no-transform',\n    });\n\n    /* Displays error in console\n     * TODO:\n     * - get ignored codes from Plone error_log\n     */\n    const ignoredErrors = [301, 302, 401, 404];\n    if (!ignoredErrors.includes(error.status)) console.error(error);\n\n    res\n      .status(error.status || 500) // If error happens in Volto code itself error status is undefined\n      .send(`<!doctype html> ${renderToString(errorPage)}`);\n  }\n\n  if (!process.env.RAZZLE_API_PATH && req.headers.host) {\n    res.locals.detectedHost = `${\n      req.headers['x-forwarded-proto'] || req.protocol\n    }://${req.headers.host}`;\n    config.settings.apiPath = res.locals.detectedHost;\n    config.settings.publicURL = res.locals.detectedHost;\n  }\n\n  res.locals = {\n    ...res.locals,\n    store,\n    api,\n    errorHandler,\n  };\n\n  next();\n}\n\nserver.get('/*', (req, res) => {\n  const { errorHandler } = res.locals;\n\n  const api = new Api(req);\n\n  const browserdetect = detect(req.headers['user-agent']);\n\n  const lang = new locale.Locales(\n    req.universalCookies.get('I18N_LANGUAGE') ||\n      config.settings.defaultLanguage ||\n      req.headers['accept-language'],\n  )\n    .best(supported)\n    .toString();\n\n  const authToken = req.universalCookies.get('auth_token');\n  const initialState = {\n    userSession: { ...userSession(), token: authToken },\n    form: req.body,\n    intl: {\n      defaultLocale: 'en',\n      locale: lang,\n      messages: locales[lang],\n    },\n    browserdetect,\n  };\n\n  const history = createMemoryHistory({\n    initialEntries: [req.url],\n  });\n\n  // Create a new Redux store instance\n  const store = configureStore(initialState, history, api);\n\n  persistAuthToken(store, req);\n\n  // @loadable/server extractor\n  const buildDir = process.env.BUILD_DIR || 'build';\n  const extractor = new ChunkExtractor({\n    statsFile: path.resolve(path.join(buildDir, 'loadable-stats.json')),\n    entrypoints: ['client'],\n  });\n\n  const url = req.originalUrl || req.url;\n  const location = parseUrl(url);\n\n  loadOnServer({ store, location, routes, api })\n    .then(() => {\n      // The content info is in the store at this point thanks to the asynconnect\n      // features, then we can force the current language info into the store when\n      // coming from an SSR request\n      const contentLang =\n        store.getState().content.data?.language?.token ||\n        config.settings.defaultLanguage;\n\n      const cookie_lang =\n        req.universalCookies.get('I18N_LANGUAGE') ||\n        config.settings.defaultLanguage ||\n        req.headers['accept-language'];\n\n      if (cookie_lang !== contentLang) {\n        store.dispatch(changeLanguage(contentLang, locales[contentLang], req));\n      }\n\n      const context = {};\n      resetServerContext();\n      const markup = renderToString(\n        <ChunkExtractorManager extractor={extractor}>\n          <CookiesProvider cookies={req.universalCookies}>\n            <Provider store={store} onError={reactIntlErrorHandler}>\n              <StaticRouter context={context} location={req.url}>\n                <ReduxAsyncConnect routes={routes} helpers={api} />\n              </StaticRouter>\n            </Provider>\n          </CookiesProvider>\n        </ChunkExtractorManager>,\n      );\n\n      const readCriticalCss =\n        config.settings.serverConfig.readCriticalCss || defaultReadCriticalCss;\n\n      if (context.url) {\n        res.redirect(flattenToAppURL(context.url));\n      } else if (context.error_code) {\n        res.set({\n          'Cache-Control': 'no-cache',\n        });\n\n        res.status(context.error_code).send(\n          `<!doctype html>\n              ${renderToString(\n                <Html\n                  extractor={extractor}\n                  markup={markup}\n                  store={store}\n                  extractScripts={\n                    config.settings.serverConfig.extractScripts?.errorPages ||\n                    process.env.NODE_ENV !== 'production'\n                  }\n                  criticalCss={readCriticalCss(req)}\n                  apiPath={res.locals.detectedHost || config.settings.apiPath}\n                  publicURL={\n                    res.locals.detectedHost || config.settings.publicURL\n                  }\n                />,\n              )}\n            `,\n        );\n      } else {\n        res.status(200).send(\n          `<!doctype html>\n              ${renderToString(\n                <Html\n                  extractor={extractor}\n                  markup={markup}\n                  store={store}\n                  criticalCss={readCriticalCss(req)}\n                  apiPath={res.locals.detectedHost || config.settings.apiPath}\n                  publicURL={\n                    res.locals.detectedHost || config.settings.publicURL\n                  }\n                />,\n              )}\n            `,\n        );\n      }\n    }, errorHandler)\n    .catch(errorHandler);\n});\n\nexport const defaultReadCriticalCss = () => {\n  const { criticalCssPath } = config.settings.serverConfig;\n\n  const e = existsSync(criticalCssPath);\n  if (!e) return;\n\n  const f = lstatSync(criticalCssPath);\n  if (!f.isFile()) return;\n\n  return readFileSync(criticalCssPath, { encoding: 'utf-8' });\n};\n\n// Exposed for the console bootstrap info messages\nserver.apiPath = config.settings.apiPath;\nserver.devProxyToApiPath = config.settings.devProxyToApiPath;\nserver.publicURL = config.settings.publicURL;\n\nexport default server;\n","/**\n * Search actions.\n * @module actions/search/search\n */\n\nimport {\n  compact,\n  concat,\n  isArray,\n  join,\n  map,\n  pickBy,\n  toPairs,\n  identity,\n} from 'lodash';\n\nimport {\n  RESET_SEARCH_CONTENT,\n  SEARCH_CONTENT,\n} from '@plone/volto/constants/ActionTypes';\n\n/**\n * Search content function.\n * @function searchContent\n * @param {string} url Url to use as base.\n * @param {Object} options Search options.\n * @param {string} subrequest Key of the subrequest.\n * @returns {Object} Search content action.\n */\nexport function searchContent(url, options, subrequest = null) {\n  let queryArray = [];\n  options = pickBy(options, identity);\n  const arrayOptions = pickBy(options, (item) => isArray(item));\n\n  queryArray = concat(\n    queryArray,\n    options\n      ? join(\n          map(toPairs(pickBy(options, (item) => !isArray(item))), (item) => {\n            if (item[0] === 'SearchableText') {\n              // Adds the wildcard to the SearchableText param\n              item[1] = `${item[1]}*`;\n            }\n            return join(item, '=');\n          }),\n          '&',\n        )\n      : '',\n  );\n\n  queryArray = concat(\n    queryArray,\n    arrayOptions\n      ? join(\n          map(pickBy(arrayOptions), (item, key) =>\n            join(\n              item.map((value) => `${key}:list=${value}`),\n              '&',\n            ),\n          ),\n          '&',\n        )\n      : '',\n  );\n\n  const querystring = join(compact(queryArray), '&');\n\n  return {\n    type: SEARCH_CONTENT,\n    subrequest,\n    request: {\n      op: 'get',\n      path: `${url}/@search${querystring ? `?${querystring}` : ''}`,\n    },\n  };\n}\n\n/**\n * Reset search content function.\n * @function resetSearchContent\n * @param {string} subrequest Key of the subrequest.\n * @returns {Object} Search content action.\n */\nexport function resetSearchContent(subrequest = null) {\n  return {\n    type: RESET_SEARCH_CONTENT,\n    subrequest,\n  };\n}\n","/**\n * ObjectBrowserWidget component.\n * @module components/manage/Widgets/ObjectBrowserWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { compact, isArray, isEmpty, remove } from 'lodash';\nimport { connect } from 'react-redux';\nimport { Label, Popup, Button } from 'semantic-ui-react';\nimport {\n  flattenToAppURL,\n  isInternalURL,\n  isUrl,\n  normalizeUrl,\n  removeProtocol,\n} from '@plone/volto/helpers/Url/Url';\nimport { searchContent } from '@plone/volto/actions/search/search';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\n\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport homeSVG from '@plone/volto/icons/home.svg';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport blankSVG from '@plone/volto/icons/blank.svg';\nimport { withRouter } from 'react-router';\n\nconst messages = defineMessages({\n  placeholder: {\n    id: 'No items selected',\n    defaultMessage: 'No items selected',\n  },\n  edit: {\n    id: 'Edit',\n    defaultMessage: 'Edit',\n  },\n  delete: {\n    id: 'Delete',\n    defaultMessage: 'Delete',\n  },\n  openObjectBrowser: {\n    id: 'Open object browser',\n    defaultMessage: 'Open object browser',\n  },\n});\n\n/**\n * ObjectBrowserWidget component class.\n * @class ObjectBrowserWidget\n * @extends Component\n */\nexport class ObjectBrowserWidgetComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    mode: PropTypes.string, // link, image, multiple\n    return: PropTypes.string, // single, multiple\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.object),\n      PropTypes.object,\n    ]),\n    onChange: PropTypes.func.isRequired,\n    openObjectBrowser: PropTypes.func.isRequired,\n    allowExternals: PropTypes.bool,\n    placeholder: PropTypes.string,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    value: [],\n    mode: 'multiple',\n    return: 'multiple',\n    allowExternals: false,\n  };\n\n  state = {\n    manualLinkInput: '',\n    validURL: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.selectedItemsRef = React.createRef();\n    this.placeholderRef = React.createRef();\n  }\n  renderLabel(item) {\n    const href = item['@id'];\n    return (\n      <Popup\n        key={flattenToAppURL(href)}\n        content={\n          <div style={{ display: 'flex' }}>\n            {isInternalURL(href) ? (\n              <Icon name={homeSVG} size=\"18px\" />\n            ) : (\n              <Icon name={blankSVG} size=\"18px\" />\n            )}\n            &nbsp;\n            {flattenToAppURL(href)}\n          </div>\n        }\n        trigger={\n          <Label>\n            <div className=\"item-title\">{item.title}</div>\n            <div>\n              {this.props.mode === 'multiple' && (\n                <Icon\n                  name={clearSVG}\n                  size=\"12px\"\n                  className=\"right\"\n                  onClick={(event) => {\n                    event.preventDefault();\n                    this.removeItem(item);\n                  }}\n                />\n              )}\n            </div>\n          </Label>\n        }\n      />\n    );\n  }\n\n  removeItem = (item) => {\n    let value = [...this.props.value];\n    remove(value, function (_item) {\n      return _item['@id'] === item['@id'];\n    });\n    this.props.onChange(this.props.id, value);\n  };\n\n  onChange = (item) => {\n    let value = this.props.mode === 'multiple' ? [...this.props.value] : [];\n    value = value.filter((item) => item != null);\n    const maxSize =\n      this.props.widgetOptions?.pattern_options?.maximumSelectionSize || -1;\n    if (maxSize === 1 && value.length === 1) {\n      value = []; //enable replace of selected item with another value, if maxsize is 1\n    }\n    let exists = false;\n    let index = -1;\n    value.forEach((_item, _index) => {\n      if (flattenToAppURL(_item['@id']) === flattenToAppURL(item['@id'])) {\n        exists = true;\n        index = _index;\n      }\n    });\n    //find(value, {\n    //   '@id': flattenToAppURL(item['@id']),\n    // });\n    if (!exists) {\n      // add item\n      // Check if we want to filter the attributes of the selected item\n      let resultantItem = item;\n      if (this.props.selectedItemAttrs) {\n        const allowedItemKeys = [\n          ...this.props.selectedItemAttrs,\n          // Add the required attributes for the widget to work\n          '@id',\n          'title',\n        ];\n        resultantItem = Object.keys(item)\n          .filter((key) => allowedItemKeys.includes(key))\n          .reduce((obj, key) => {\n            obj[key] = item[key];\n            return obj;\n          }, {});\n      }\n      // Add required @id field, just in case\n      resultantItem = { ...resultantItem, '@id': item['@id'] };\n      value.push(resultantItem);\n      if (this.props.return === 'single') {\n        this.props.onChange(this.props.id, value[0]);\n      } else {\n        this.props.onChange(this.props.id, value);\n      }\n    } else {\n      //remove item\n      value.splice(index, 1);\n      this.props.onChange(this.props.id, value);\n    }\n  };\n\n  onManualLinkInput = (e) => {\n    this.setState({ manualLinkInput: e.target.value });\n    if (this.validateManualLink(e.target.value)) {\n      this.setState({ validURL: true });\n    } else {\n      this.setState({ validURL: false });\n    }\n  };\n\n  validateManualLink = (url) => {\n    if (this.props.allowExternals) {\n      return isUrl(url);\n    } else {\n      return isInternalURL(url);\n    }\n  };\n\n  onSubmitManualLink = () => {\n    if (this.validateManualLink(this.state.manualLinkInput)) {\n      if (isInternalURL(this.state.manualLinkInput)) {\n        const link = this.state.manualLinkInput;\n        // convert it into an internal on if possible\n        this.props\n          .searchContent(\n            '/',\n            {\n              'path.query': flattenToAppURL(this.state.manualLinkInput),\n              'path.depth': '0',\n              sort_on: 'getObjPositionInParent',\n              metadata_fields: '_all',\n              b_size: 1000,\n            },\n            `${this.props.block}-${this.props.mode}`,\n          )\n          .then((resp) => {\n            if (resp.items?.length > 0) {\n              this.onChange(resp.items[0]);\n            } else {\n              this.props.onChange(this.props.id, [\n                {\n                  '@id': flattenToAppURL(link),\n                  title: removeProtocol(link),\n                },\n              ]);\n            }\n          });\n      } else {\n        this.props.onChange(this.props.id, [\n          {\n            '@id': normalizeUrl(this.state.manualLinkInput),\n            title: removeProtocol(this.state.manualLinkInput),\n          },\n        ]);\n      }\n      this.setState({ validURL: true, manualLinkInput: '' });\n    }\n  };\n\n  onKeyDownManualLink = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      e.stopPropagation();\n      this.onSubmitManualLink();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      e.stopPropagation();\n      // TODO: Do something on ESC key\n    }\n  };\n\n  showObjectBrowser = (ev) => {\n    ev.preventDefault();\n    this.props.openObjectBrowser({\n      mode: this.props.mode,\n      currentPath: this.props.location.pathname,\n      propDataName: 'value',\n      onSelectItem: (url, item) => {\n        this.onChange(item);\n      },\n      selectableTypes: this.props.widgetOptions?.pattern_options\n        ?.selectableTypes,\n      maximumSelectionSize: this.props.widgetOptions?.pattern_options\n        ?.maximumSelectionSize,\n    });\n  };\n\n  handleSelectedItemsRefClick = (e) => {\n    if (this.props.isDisabled) {\n      return;\n    }\n\n    if (\n      e.target.contains(this.selectedItemsRef.current) ||\n      e.target.contains(this.placeholderRef.current)\n    ) {\n      this.showObjectBrowser(e);\n    }\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      description,\n      fieldSet,\n      value,\n      mode,\n      onChange,\n      isDisabled,\n    } = this.props;\n\n    let items = compact(!isArray(value) && value ? [value] : value || []);\n\n    let icon =\n      mode === 'multiple' || items.length === 0 ? navTreeSVG : clearSVG;\n    let iconAction =\n      mode === 'multiple' || items.length === 0\n        ? this.showObjectBrowser\n        : (e) => {\n            e.preventDefault();\n            onChange(id, this.props.return === 'single' ? null : []);\n          };\n\n    return (\n      <FormFieldWrapper\n        {...this.props}\n        className={description ? 'help text' : 'text'}\n      >\n        <div\n          className=\"objectbrowser-field\"\n          aria-labelledby={`fieldset-${\n            fieldSet || 'default'\n          }-field-label-${id}`}\n        >\n          <div\n            className=\"selected-values\"\n            onClick={this.handleSelectedItemsRefClick}\n            onKeyDown={this.handleSelectedItemsRefClick}\n            role=\"searchbox\"\n            tabIndex={0}\n            ref={this.selectedItemsRef}\n          >\n            {items.map((item) => this.renderLabel(item))}\n\n            {items.length === 0 && this.props.mode === 'multiple' && (\n              <div className=\"placeholder\" ref={this.placeholderRef}>\n                {this.props.placeholder ??\n                  this.props.intl.formatMessage(messages.placeholder)}\n              </div>\n            )}\n            {this.props.allowExternals &&\n              items.length === 0 &&\n              this.props.mode !== 'multiple' && (\n                <input\n                  onKeyDown={this.onKeyDownManualLink}\n                  onChange={this.onManualLinkInput}\n                  value={this.state.manualLinkInput}\n                  placeholder={\n                    this.props.placeholder ??\n                    this.props.intl.formatMessage(messages.placeholder)\n                  }\n                />\n              )}\n          </div>\n          {this.state.manualLinkInput && isEmpty(items) && (\n            <Button.Group>\n              <Button\n                basic\n                className=\"cancel\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  this.setState({ manualLinkInput: '' });\n                }}\n              >\n                <Icon name={clearSVG} size=\"18px\" color=\"#e40166\" />\n              </Button>\n              <Button\n                basic\n                primary\n                disabled={!this.state.validURL}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  this.onSubmitManualLink();\n                }}\n              >\n                <Icon name={aheadSVG} size=\"18px\" />\n              </Button>\n            </Button.Group>\n          )}\n          {!this.state.manualLinkInput && (\n            <Button\n              aria-label={this.props.intl.formatMessage(\n                messages.openObjectBrowser,\n              )}\n              onClick={iconAction}\n              className=\"action\"\n              disabled={isDisabled}\n            >\n              <Icon name={icon} size=\"18px\" />\n            </Button>\n          )}\n        </div>\n      </FormFieldWrapper>\n    );\n  }\n}\n\nconst ObjectBrowserWidgetMode = (mode) =>\n  compose(\n    injectIntl,\n    withObjectBrowser,\n    withRouter,\n    connect(null, { searchContent }),\n  )((props) => <ObjectBrowserWidgetComponent {...props} mode={mode} />);\nexport { ObjectBrowserWidgetMode };\nexport default compose(\n  injectIntl,\n  withObjectBrowser,\n  withRouter,\n  connect(null, { searchContent }),\n)(ObjectBrowserWidgetComponent);\n","/**\n * A generic widget for an object. If multiple\n *\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tab } from 'semantic-ui-react';\n\nimport Field from '@plone/volto/components/manage/Form/Field';\n\n/**\n * Renders a field set. Passes some of the values in the schema to the Field\n * component used inside. Shows the current value, the errors, the required\n * status of the fields inside.\n *\n * @param {object} data\n * @param {number} index\n * @param {object} schema\n * @param {object} value\n * @param {object} errors\n * @param {function} onChange\n * @param {string} id\n */\nconst FieldSet = ({\n  block,\n  data,\n  index,\n  schema,\n  value,\n  errors,\n  onChange,\n  onChangeBlock,\n  id,\n}) => {\n  return data.fields.map((field, idx) => {\n    const v = value?.[field] || schema.properties[field].defaultValue;\n    return (\n      <Field\n        {...schema.properties[field]}\n        id={`${field}-${idx}-${id}`}\n        fieldSet={data.title.toLowerCase()}\n        block={block}\n        value={v}\n        objectvalue={value}\n        required={schema.required?.indexOf(field) !== -1}\n        onChange={(field2, fieldvalue) => {\n          return onChange(id, { ...value, [field]: fieldvalue });\n        }}\n        key={field}\n        error={errors?.[field]}\n        title={schema.properties[field].title}\n        onChangeBlock={onChangeBlock}\n      />\n    );\n  });\n};\n\n/**\n *\n * A JSON data editor widget based on a schema. If you want to represent complex\n * data using a single field, this is the widget to use.\n *\n * If there are multiple field sets, it renders a Tab component with multiple\n * tab panes. Each tab has the title of the fieldset it renders.\n */\nconst ObjectWidget = ({\n  block,\n  schema,\n  value, // not checked to not contain unknown fields\n  onChange,\n  errors = {},\n  id,\n  ...props\n}) => {\n  const createTab = React.useCallback(\n    (fieldset, index) => {\n      return {\n        menuItem: fieldset.title,\n        render: () => (\n          <Tab.Pane>\n            <FieldSet\n              block={block}\n              data={fieldset}\n              index={index}\n              schema={schema}\n              errors={errors}\n              value={value}\n              onChange={onChange}\n              id={id}\n            />\n          </Tab.Pane>\n        ),\n      };\n    },\n    [block, errors, id, onChange, schema, value],\n  );\n\n  return schema.fieldsets.length === 1 ? (\n    <>\n      <FieldSet\n        block={block}\n        data={schema.fieldsets[0]}\n        index={0}\n        schema={schema}\n        errors={errors}\n        value={value}\n        onChange={onChange}\n        id={id}\n      />\n    </>\n  ) : (\n    <Tab panes={schema.fieldsets.map(createTab)} /> // lazy loading\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nObjectWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  schema: PropTypes.object.isRequired,\n  errors: PropTypes.object,\n  value: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nObjectWidget.defaultProps = {\n  value: null,\n};\n\nexport default ObjectWidget;\n","module.exports = require(\"superagent\");","module.exports = require(\"react-router-config\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M18 4.826L4.476 13.148 5.524 14.851 18 7.174 30.476 14.851 31.524 13.148zM25 27L21 27 21 19 15 19 15 27 11 27 11 15 9 15 9 29 17 29 17 21 19 21 19 29 27 29 27 15 25 15z\\\"/></g>\"}","import React from 'react';\nimport { getBaseUrl, applyBlockDefaults } from '@plone/volto/helpers';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { map } from 'lodash';\nimport {\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  hasBlocksData,\n} from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  unknownBlock: {\n    id: 'Unknown Block',\n    defaultMessage: 'Unknown Block {block}',\n  },\n});\n\nconst RenderBlocks = (props) => {\n  const { location, intl, content, metadata } = props;\n  const blocksFieldname = getBlocksFieldname(content);\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(content);\n  const blocksConfig = props.blocksConfig || config.blocks.blocksConfig;\n  const CustomTag = `${props.as || 'div'}`;\n\n  return hasBlocksData(content) ? (\n    <CustomTag>\n      {map(content[blocksLayoutFieldname].items, (block) => {\n        const Block =\n          blocksConfig[content[blocksFieldname]?.[block]?.['@type']]?.view;\n\n        const blockData = applyBlockDefaults({\n          data: content[blocksFieldname][block],\n          intl,\n          metadata,\n          properties: content,\n        });\n\n        return Block ? (\n          <Block\n            key={block}\n            id={block}\n            metadata={metadata}\n            properties={content}\n            data={blockData}\n            path={getBaseUrl(location?.pathname || '')}\n            blocksConfig={blocksConfig}\n          />\n        ) : (\n          <div key={block}>\n            {intl.formatMessage(messages.unknownBlock, {\n              block: content[blocksFieldname]?.[block]?.['@type'],\n            })}\n          </div>\n        );\n      })}\n    </CustomTag>\n  ) : (\n    ''\n  );\n};\n\nexport default injectIntl(RenderBlocks);\n","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M3,5.0001 L3,29.0001 L33,29.0001 L33,9.0001 L17.414,9.0001 L13.414,5.0001 L3,5.0001 Z M5,7.0001 L12.586,7.0001 L16.585,11.0001 L31,11.0001 L31,15.0001 L5,15.0001 L5,7.0001 Z M5,27.0001 L31,27.0001 L31,17.0001 L5,17.0001 L5,27.0001 Z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M18.5,30 C12.159,30 7,24.841 7,18.5 C7,12.159 12.159,7 18.5,7 C24.841,7 30,12.159 30,18.5 C30,24.841 24.841,30 18.5,30 M18.5,4 C10.505,4 4,10.505 4,18.5 C4,26.495 10.505,33 18.5,33 C26.495,33 33,26.495 33,18.5 C33,10.505 26.495,4 18.5,4\\\"/><path d=\\\"M16.5 15.5C18.157 15.5 19.5 14.157 19.5 12.5 19.5 10.843 18.157 9.5 16.5 9.5 14.843 9.5 13.5 10.843 13.5 12.5 13.5 14.157 14.843 15.5 16.5 15.5M16.5 21.5C14.843 21.5 13.5 22.843 13.5 24.5 13.5 26.157 14.843 27.5 16.5 27.5 18.157 27.5 19.5 26.157 19.5 24.5 19.5 22.843 18.157 21.5 16.5 21.5M22.5 15.5C20.843 15.5 19.5 16.843 19.5 18.5 19.5 20.157 20.843 21.5 22.5 21.5 24.157 21.5 25.5 20.157 25.5 18.5 25.5 16.843 24.157 15.5 22.5 15.5\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M31 17L19 17 19 5 17 5 17 17 5 17 5 19 17 19 17 31 19 31 19 19 31 19z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path d=\\\"M13 16C11.897 16 11 16.897 11 18 11 19.103 11.897 20 13 20 14.103 20 15 19.103 15 18 15 16.897 14.103 16 13 16M13 22C10.794 22 9 20.206 9 18 9 15.794 10.794 14 13 14 15.206 14 17 15.794 17 18 17 20.206 15.206 22 13 22M23 16C21.897 16 21 16.897 21 18 21 19.103 21.897 20 23 20 24.103 20 25 19.103 25 18 25 16.897 24.103 16 23 16M23 22C20.794 22 19 20.206 19 18 19 15.794 20.794 14 23 14 25.206 14 27 15.794 27 18 27 20.206 25.206 22 23 22M13 26C11.897 26 11 26.897 11 28 11 29.103 11.897 30 13 30 14.103 30 15 29.103 15 28 15 26.897 14.103 26 13 26M13 32C10.794 32 9 30.206 9 28 9 25.794 10.794 24 13 24 15.206 24 17 25.794 17 28 17 30.206 15.206 32 13 32M23 26C21.897 26 21 26.897 21 28 21 29.103 21.897 30 23 30 24.103 30 25 29.103 25 28 25 26.897 24.103 26 23 26M23 32C20.794 32 19 30.206 19 28 19 25.794 20.794 24 23 24 25.206 24 27 25.794 27 28 27 30.206 25.206 32 23 32M13 6C11.897 6 11 6.897 11 8 11 9.103 11.897 10 13 10 14.103 10 15 9.103 15 8 15 6.897 14.103 6 13 6M13 12C10.794 12 9 10.206 9 8 9 5.794 10.794 4 13 4 15.206 4 17 5.794 17 8 17 10.206 15.206 12 13 12M23 6C21.897 6 21 6.897 21 8 21 9.103 21.897 10 23 10 24.103 10 25 9.103 25 8 25 6.897 24.103 6 23 6M23 12C20.794 12 19 10.206 19 8 19 5.794 20.794 4 23 4 25.206 4 27 5.794 27 8 27 10.206 25.206 12 23 12\\\" fill-rule=\\\"evenodd\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M7,29 L29,29 L29,25 L7,25 L7,29 Z M7,23 L29,23 L29,7 L7,7 L7,23 Z M5,31 L31,31 L31,5 L5,5 L5,31 Z\\\"/><path d=\\\"M15.012 13.037L18.781 19.633 21.917 16.497 25.219 20.625 26.781 19.375 22.083 13.503 19.219 16.367 14.988 8.963 9.126 19.515 10.874 20.485z\\\"/></g>\"}","module.exports = require(\"lodash/isArray\");","module.exports = require(\"lodash-move\");","module.exports = require(\"lodash/pull\");","module.exports = require(\"lodash/isBoolean\");","var map = {\n\t\"./de.json\": [\n\t\t493,\n\t\t0\n\t],\n\t\"./en.json\": [\n\t\t494,\n\t\t0\n\t],\n\t\"./es.json\": [\n\t\t495,\n\t\t0\n\t],\n\t\"./eu.json\": [\n\t\t496,\n\t\t0\n\t],\n\t\"./fr.json\": [\n\t\t497,\n\t\t0\n\t],\n\t\"./it.json\": [\n\t\t498,\n\t\t0\n\t],\n\t\"./ja.json\": [\n\t\t499,\n\t\t0\n\t],\n\t\"./nl.json\": [\n\t\t500,\n\t\t0\n\t],\n\t\"./pt.json\": [\n\t\t501,\n\t\t0\n\t],\n\t\"./pt_BR.json\": [\n\t\t502,\n\t\t0\n\t],\n\t\"./ro.json\": [\n\t\t503,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 99;\nmodule.exports = webpackAsyncContext;","module.exports = require(\"url\");","module.exports = require(\"lodash/mapKeys\");","module.exports = require(\"history\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path d=\\\"M8 16C6.897 16 6 16.897 6 18 6 19.103 6.897 20 8 20 9.103 20 10 19.103 10 18 10 16.897 9.103 16 8 16M8 22C5.794 22 4 20.206 4 18 4 15.794 5.794 14 8 14 10.206 14 12 15.794 12 18 12 20.206 10.206 22 8 22M18 16C16.897 16 16 16.897 16 18 16 19.103 16.897 20 18 20 19.103 20 20 19.103 20 18 20 16.897 19.103 16 18 16M18 22C15.794 22 14 20.206 14 18 14 15.794 15.794 14 18 14 20.206 14 22 15.794 22 18 22 20.206 20.206 22 18 22M28 16C26.897 16 26 16.897 26 18 26 19.103 26.897 20 28 20 29.103 20 30 19.103 30 18 30 16.897 29.103 16 28 16M28 22C25.794 22 24 20.206 24 18 24 15.794 25.794 14 28 14 30.206 14 32 15.794 32 18 32 20.206 30.206 22 28 22\\\" fill-rule=\\\"evenodd\\\"/>\"}","module.exports = require(\"lodash/nth\");","module.exports = require(\"lodash/findIndex\");","/**\n * Actions reducer.\n * @module reducers/actions/actions\n */\n\nimport { LIST_ACTIONS } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  actions: {\n    object: [],\n    object_buttons: [],\n    site_actions: [],\n    user: [],\n    document_actions: [],\n    portal_tabs: [],\n  },\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Actions reducer.\n * @function actions\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function actions(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${LIST_ACTIONS}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${LIST_ACTIONS}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        actions: action.result,\n        loaded: true,\n        loading: false,\n      };\n    case `${LIST_ACTIONS}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        actions: {},\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Addons reducer.\n * @module reducers/addons/addons\n */\n\nimport {\n  INSTALL_ADDON,\n  LIST_ADDONS,\n  UNINSTALL_ADDON,\n} from '../../constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  installedAddons: [],\n  availableAddons: [],\n  upgradableAddons: [],\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Case-insensitive sorting method for Addons names.\n * @function addonsSorter\n * @param {String} a Add-on name.\n * @param {String} b Add-on name.\n * @returns {Number} Comparison result.\n */\nfunction addonsSorter(a, b) {\n  const titleA = a.title.toUpperCase();\n  const titleB = b.title.toUpperCase();\n  if (titleA < titleB) {\n    return -1;\n  } else if (titleA > titleB) {\n    return 1;\n  }\n  return 0;\n}\n\n/**\n * Addons reducer.\n * @function addons\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function addons(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${INSTALL_ADDON}_PENDING`:\n    case `${LIST_ADDONS}_PENDING`:\n    case `${UNINSTALL_ADDON}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${LIST_ADDONS}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        installedAddons: action.result.items\n          .filter((elem) => elem.is_installed === true)\n          .sort(addonsSorter),\n        availableAddons: action.result.items\n          .filter((elem) => elem.is_installed === false)\n          .sort(addonsSorter),\n        upgradableAddons: action.result.items\n          .filter((elem) => elem.upgrade_info.available === true)\n          .sort(addonsSorter),\n        loaded: true,\n        loading: false,\n      };\n    case `${INSTALL_ADDON}_SUCCESS`:\n    case `${UNINSTALL_ADDON}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        loaded: true,\n        loading: false,\n      };\n    case `${INSTALL_ADDON}_FAIL`:\n    case `${LIST_ADDONS}_FAIL`:\n    case `${UNINSTALL_ADDON}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        installedAddons: [],\n        availableAddons: [],\n        upgradableAddons: [],\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Breadcrumbs reducer.\n * @module reducers/apierror/apierror\n */\n\nimport {\n  RESET_APIERROR,\n  SET_APIERROR,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  statusCode: null,\n  connectionRefused: false,\n  message: null,\n};\n\n/**\n * apierror reducer.\n * @function apierror\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function apierror(state = initialState, action = {}) {\n  switch (action.type) {\n    case SET_APIERROR:\n      return {\n        ...state,\n        error: action.error,\n        statusCode: action.statusCode,\n        message: action.message,\n        connectionRefused: action.connectionRefused,\n      };\n    case RESET_APIERROR:\n      return {\n        ...state,\n        error: null,\n        statusCode: null,\n        message: null,\n        connectionRefused: false,\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Breadcrumbs reducer.\n * @module reducers/breadcrumbs/breadcrumbs\n */\n\nimport { map } from 'lodash';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport { GET_BREADCRUMBS } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  items: [],\n  root: null,\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Breadcrumbs reducer.\n * @function breadcrumbs\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function breadcrumbs(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_BREADCRUMBS}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${GET_BREADCRUMBS}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        items: map(action.result.items, (item) => ({\n          title: item.title,\n          url: flattenToAppURL(item['@id']),\n        })),\n        root: flattenToAppURL(action.result.root),\n        loaded: true,\n        loading: false,\n      };\n    case `${GET_BREADCRUMBS}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        items: [],\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","const initialState = { name: null, version: null, os: null };\n\n/**\n * browserdetect reducer.\n * @function browserdetect\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function browserdetect(state = initialState, action = {}) {\n  return state;\n}\n","/**\n * Comments reducer.\n * @module reducers/comments/comments\n */\n\nimport {\n  ADD_COMMENT,\n  DELETE_COMMENT,\n  LIST_COMMENTS,\n  LIST_MORE_COMMENTS,\n  UPDATE_COMMENT,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  add: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  delete: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  list: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  items: [],\n  items_total: null,\n  next: null,\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Comments reducer.\n * @function comments\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function comments(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${ADD_COMMENT}_PENDING`:\n    case `${DELETE_COMMENT}_PENDING`:\n    case `${UPDATE_COMMENT}_PENDING`:\n    case `${LIST_COMMENTS}_PENDING`:\n    case `${LIST_MORE_COMMENTS}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${LIST_COMMENTS}_SUCCESS`:\n      return {\n        ...state,\n        items: action.result.items,\n        next: action.result.batching?.next,\n        items_total: action.result.items_total,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_MORE_COMMENTS}_SUCCESS`:\n      return {\n        ...state,\n        items: [...state.items, ...action.result.items],\n        next: action.result.batching?.next,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${ADD_COMMENT}_SUCCESS`:\n    case `${DELETE_COMMENT}_SUCCESS`:\n    case `${UPDATE_COMMENT}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_COMMENTS}_FAIL`:\n      return {\n        ...state,\n        items: [],\n        items_total: null,\n        next: null,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_MORE_COMMENTS}_FAIL`:\n    case `${ADD_COMMENT}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Content reducer.\n * @module reducers/content/content\n */\n\nimport { map, mapKeys, omit } from 'lodash';\n\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport {\n  CREATE_CONTENT,\n  DELETE_CONTENT,\n  GET_CONTENT,\n  LOCK_CONTENT,\n  UNLOCK_CONTENT,\n  ORDER_CONTENT,\n  RESET_CONTENT,\n  UPDATE_CONTENT,\n  UPDATECOLUMNS_CONTENT,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  create: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  delete: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  get: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  order: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  updatecolumns: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  lock: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  unlock: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  data: null,\n  subrequests: {},\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Content reducer.\n * @function content\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function content(state = initialState, action = {}) {\n  let { result } = action;\n  switch (action.type) {\n    case `${UPDATECOLUMNS_CONTENT}`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n          idx: action.indexcolumns,\n        },\n      };\n    case `${CREATE_CONTENT}_PENDING`:\n    case `${LOCK_CONTENT}_PENDING`:\n    case `${DELETE_CONTENT}_PENDING`:\n    case `${UNLOCK_CONTENT}_PENDING`:\n    case `${UPDATE_CONTENT}_PENDING`:\n    case `${GET_CONTENT}_PENDING`:\n    case `${ORDER_CONTENT}_PENDING`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                ...(state.subrequests[action.subrequest] || {\n                  data: null,\n                }),\n                loaded: false,\n                loading: true,\n                error: null,\n              },\n            },\n          }\n        : {\n            ...state,\n            [getRequestKey(action.type)]: {\n              loading: true,\n              loaded: false,\n              error: null,\n            },\n          };\n    case `${CREATE_CONTENT}_SUCCESS`:\n      if (result['@static_behaviors']) {\n        map(result['@static_behaviors'], (behavior) => {\n          result = {\n            ...omit(result, behavior),\n            ...mapKeys(result[behavior], (value, key) => `${behavior}.${key}`),\n          };\n        });\n      }\n      const data = action.subrequest\n        ? Array.isArray(result)\n          ? result.map((item) => ({\n              ...item,\n              url: flattenToAppURL(item['@id']),\n            }))\n          : {\n              ...result,\n              items:\n                action.result &&\n                action.result.items &&\n                action.result.items.map((item) => ({\n                  ...item,\n                  url: flattenToAppURL(item['@id']),\n                })),\n            }\n        : {\n            ...result,\n            items:\n              action.result &&\n              action.result.items &&\n              action.result.items.map((item) => ({\n                ...item,\n                url: flattenToAppURL(item['@id']),\n              })),\n          };\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                loading: false,\n                loaded: true,\n                error: null,\n                data,\n              },\n            },\n          }\n        : {\n            ...state,\n            data,\n            [getRequestKey(action.type)]: {\n              loading: false,\n              loaded: true,\n              error: null,\n            },\n          };\n    case `${GET_CONTENT}_SUCCESS`:\n      if (result['@static_behaviors']) {\n        map(result['@static_behaviors'], (behavior) => {\n          result = {\n            ...omit(result, behavior),\n            ...mapKeys(result[behavior], (value, key) => `${behavior}.${key}`),\n          };\n        });\n      }\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                loading: false,\n                loaded: true,\n                error: null,\n                data: {\n                  ...result,\n                  items:\n                    action.result &&\n                    action.result.items &&\n                    action.result.items.map((item) => ({\n                      ...item,\n                      url: flattenToAppURL(item['@id']),\n                    })),\n                },\n              },\n            },\n          }\n        : {\n            ...state,\n            data: {\n              ...result,\n              items:\n                action.result &&\n                action.result.items &&\n                action.result.items.map((item) => ({\n                  ...item,\n                  url: flattenToAppURL(item['@id']),\n                })),\n            },\n            [getRequestKey(action.type)]: {\n              loading: false,\n              loaded: true,\n              error: null,\n            },\n          };\n    case `${DELETE_CONTENT}_SUCCESS`:\n    case `${ORDER_CONTENT}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n          sort: {\n            on: action.sort?.on,\n            order: action.sort?.order,\n          },\n          index: action.index,\n        },\n      };\n    case `${UNLOCK_CONTENT}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n        data: {\n          ...state.data,\n          lock: {\n            ...result,\n          },\n        },\n      };\n    case `${UPDATE_CONTENT}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n          sort: {\n            on: action.sort?.on,\n            order: action.sort?.order,\n          },\n        },\n      };\n    case `${LOCK_CONTENT}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n        data: {\n          ...state.data,\n          lock: {\n            ...result,\n          },\n        },\n      };\n    case `${CREATE_CONTENT}_FAIL`:\n    case `${LOCK_CONTENT}_FAIL`:\n    case `${DELETE_CONTENT}_FAIL`:\n    case `${UNLOCK_CONTENT}_FAIL`:\n    case `${GET_CONTENT}_FAIL`:\n    case `${ORDER_CONTENT}_FAIL`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                data: null,\n                loading: false,\n                loaded: false,\n                error: action.error,\n              },\n            },\n          }\n        : {\n            ...state,\n            data: null,\n            [getRequestKey(action.type)]: {\n              loading: false,\n              loaded: false,\n              error: action.error,\n            },\n          };\n    case `${UPDATE_CONTENT}_FAIL`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                loading: false,\n                loaded: false,\n                error: action.error,\n              },\n            },\n          }\n        : {\n            ...state,\n            [getRequestKey(action.type)]: {\n              loading: false,\n              loaded: false,\n              error: action.error,\n            },\n          };\n    case RESET_CONTENT:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: omit(state.subrequests, action.subrequest),\n          }\n        : {\n            ...state,\n            data: null,\n          };\n    default:\n      return state;\n  }\n}\n","/**\n * Controlpanels reducer.\n * @module reducers/controlpanels/controlpanels\n */\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport {\n  GET_CONTROLPANEL,\n  POST_CONTROLPANEL,\n  DELETE_CONTROLPANEL,\n  LIST_CONTROLPANELS,\n  UPDATE_CONTROLPANEL,\n  SYSTEM_INFORMATION,\n  DATABASE_INFORMATION,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  get: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  list: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  post: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  delete: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  controlpanel: null,\n  controlpanels: [],\n  systeminformation: null,\n  databaseinformation: null,\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Controlpanels reducer.\n * @function controlpanels\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function controlpanels(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_CONTROLPANEL}_PENDING`:\n    case `${LIST_CONTROLPANELS}_PENDING`:\n    case `${SYSTEM_INFORMATION}_PENDING`:\n    case `${DATABASE_INFORMATION}_PENDING`:\n      return {\n        ...state,\n        controlpanel: null,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${POST_CONTROLPANEL}_PENDING`:\n    case `${UPDATE_CONTROLPANEL}_PENDING`:\n    case `${DELETE_CONTROLPANEL}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${GET_CONTROLPANEL}_SUCCESS`:\n      return {\n        ...state,\n        controlpanel: {\n          ...action.result,\n          '@id': flattenToAppURL(action.result['@id']),\n        },\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${POST_CONTROLPANEL}_SUCCESS`:\n    case `${UPDATE_CONTROLPANEL}_SUCCESS`:\n    case `${DELETE_CONTROLPANEL}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_CONTROLPANELS}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n        controlpanels: action.result,\n      };\n    case `${SYSTEM_INFORMATION}_SUCCESS`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n        systeminformation: action.result,\n      };\n    }\n    case `${SYSTEM_INFORMATION}_FAIL`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: action.error,\n        },\n      };\n    }\n    case `${DATABASE_INFORMATION}_SUCCESS`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n        databaseinformation: action.result,\n      };\n    }\n    case `${DATABASE_INFORMATION}_FAIL`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: action.error,\n        },\n      };\n    }\n    case `${GET_CONTROLPANEL}_FAIL`:\n      return {\n        ...state,\n        controlpanel: null,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_CONTROLPANELS}_FAIL`:\n      return {\n        ...state,\n        controlpanels: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${POST_CONTROLPANEL}_FAIL`:\n    case `${UPDATE_CONTROLPANEL}_FAIL`:\n    case `${DELETE_CONTROLPANEL}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Clipboard reducer.\n * @module reducers/clipboard/clipboard\n */\n\nimport {\n  COPY,\n  CUT,\n  COPY_CONTENT,\n  MOVE_CONTENT,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  action: null,\n  source: null,\n  request: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n};\n\n/**\n * Clipboard reducer.\n * @function clipboard\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function clipboard(state = initialState, action = {}) {\n  switch (action.type) {\n    case COPY:\n      return {\n        ...state,\n        action: 'copy',\n        source: action.source,\n      };\n    case CUT:\n      return {\n        ...state,\n        action: 'cut',\n        source: action.source,\n      };\n    case `${COPY_CONTENT}_PENDING`:\n    case `${MOVE_CONTENT}_PENDING`:\n      return {\n        ...state,\n        request: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${COPY_CONTENT}_SUCCESS`:\n    case `${MOVE_CONTENT}_SUCCESS`:\n      return {\n        ...state,\n        request: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${COPY_CONTENT}_FAIL`:\n    case `${MOVE_CONTENT}_FAIL`:\n      return {\n        ...state,\n        request: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Diff reducer.\n * @module reducers/diff/diff\n */\n\nimport { GET_DIFF } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  data: [],\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Diff reducer.\n * @function diff\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function diff(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_DIFF}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${GET_DIFF}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        data: action.result,\n        loaded: true,\n        loading: false,\n      };\n    case `${GET_DIFF}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        data: [],\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * emailNotification reducer.\n * @module reducers/emailNotification/emailNotification\n */\n\nimport { EMAIL_NOTIFICATION } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  loaded: false,\n  loading: false,\n};\n\n/**\n * emailNotification reducer.\n * @function emailNotification\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function emailNotification(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${EMAIL_NOTIFICATION}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${EMAIL_NOTIFICATION}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        loaded: true,\n        loading: false,\n      };\n    case `${EMAIL_NOTIFICATION}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * emailSend reducer.\n * @module reducers/emailSend/emailSend\n */\n\nimport { EMAIL_SEND } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  loaded: false,\n  loading: false,\n};\n\n/**\n * emailSend reducer.\n * @function emailSend\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function emailSend(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${EMAIL_SEND}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${EMAIL_SEND}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        loaded: true,\n        loading: false,\n      };\n    case `${EMAIL_SEND}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Form reducer.\n * This reducer is prepopulated on the server based on post data.\n * @module reducers/form/form\n */\n\nconst initialState = {};\n\n/**\n * Form reducer.\n * @function form\n * @param {Object} state Current state.\n * @returns {Object} New state.\n */\nexport default function form(state = initialState) {\n  return state;\n}\n","/**\n * History reducer.\n * @module reducers/history/history\n */\n\nimport {\n  GET_HISTORY,\n  REVERT_HISTORY,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  entries: [],\n  get: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  revert: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * History reducer.\n * @function history\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function history(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_HISTORY}_PENDING`:\n    case `${REVERT_HISTORY}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${GET_HISTORY}_SUCCESS`:\n      return {\n        ...state,\n        entries: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${REVERT_HISTORY}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${GET_HISTORY}_FAIL`:\n    case `${REVERT_HISTORY}_FAIL`:\n      return {\n        ...state,\n        entries: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Groups reducer.\n * @module reducers/groups/groups\n */\n\nimport {\n  CREATE_GROUP,\n  DELETE_GROUP,\n  GET_GROUP,\n  LIST_GROUPS,\n  LIST_FILTER_GROUPS,\n  UPDATE_GROUP,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  create: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  delete: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  get: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  list: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  groups: [],\n  group: {},\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Groups reducer.\n * @function groups\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function groups(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${CREATE_GROUP}_PENDING`:\n    case `${DELETE_GROUP}_PENDING`:\n    case `${GET_GROUP}_PENDING`:\n    case `${LIST_GROUPS}_PENDING`:\n    case `${LIST_FILTER_GROUPS}_PENDING`:\n    case `${UPDATE_GROUP}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${GET_GROUP}_SUCCESS`:\n      return {\n        ...state,\n        group: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_GROUPS}_SUCCESS`:\n      return {\n        ...state,\n        groups: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_FILTER_GROUPS}_SUCCESS`:\n      return {\n        ...state,\n        filter_groups: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${CREATE_GROUP}_SUCCESS`:\n    case `${DELETE_GROUP}_SUCCESS`:\n    case `${UPDATE_GROUP}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${CREATE_GROUP}_FAIL`:\n    case `${DELETE_GROUP}_FAIL`:\n    case `${UPDATE_GROUP}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${GET_GROUP}_FAIL`:\n      return {\n        ...state,\n        group: {},\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_GROUPS}_FAIL`:\n      return {\n        ...state,\n        groups: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_FILTER_GROUPS}_FAIL`:\n      return {\n        ...state,\n        filter_groups: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Messages reducer.\n * @module reducers/messages/messages\n */\nimport { map, concat, filter } from 'lodash';\n\nimport {\n  ADD_MESSAGE,\n  REMOVE_MESSAGE,\n  PURGE_MESSAGES,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  messages: [],\n};\n\n/**\n * Messages reducer.\n * @function messages\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function messages(state = initialState, action = {}) {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      return {\n        messages: concat(\n          [\n            {\n              id: action.id,\n              title: action.title,\n              body: action.body,\n              level: action.level,\n              show: action.show,\n            },\n          ],\n          state.messages,\n        ),\n      };\n    case REMOVE_MESSAGE:\n      return {\n        messages: filter(state.messages, (message, index) =>\n          action.index === -1\n            ? index !== state.messages.length - 1\n            : index !== action.index,\n        ),\n      };\n    case PURGE_MESSAGES:\n      return {\n        messages: map(\n          filter(state.messages, (message) => message.show),\n          (message) => ({\n            ...message,\n            show: false,\n          }),\n        ),\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Navigation reducer.\n * @module reducers/navigation/navigation\n */\n\nimport { map } from 'lodash';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport { GET_NAVIGATION } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  items: [],\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Recursive function that process the items returned by the navigation\n * endpoint\n * @function getRecursiveItems\n * @param {array} items The items inside a navigation response.\n * @returns {*} The navigation items object (recursive)\n */\nfunction getRecursiveItems(items) {\n  return map(items, (item) => ({\n    title: item.title,\n    url: flattenToAppURL(item['@id']),\n    ...(item.items && { items: getRecursiveItems(item.items) }),\n  }));\n}\n\n/**\n * Navigation reducer.\n * @function navigation\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function navigation(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_NAVIGATION}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${GET_NAVIGATION}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        items: getRecursiveItems(action.result.items),\n        loaded: true,\n        loading: false,\n      };\n    case `${GET_NAVIGATION}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        items: [],\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Querystring reducer.\n * @module reducers/querystring/querystring\n */\n\nimport { GET_QUERYSTRING } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  indexes: {},\n  sortable_indexes: {},\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Querystring reducer.\n * @function querystring\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function querystring(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_QUERYSTRING}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${GET_QUERYSTRING}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        indexes: action.result.indexes,\n        sortable_indexes: action.result.sortable_indexes,\n        loaded: true,\n        loading: false,\n      };\n    case `${GET_QUERYSTRING}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        indexes: {},\n        sortable_indexes: {},\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { map, omit } from 'lodash';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nconst GET_QUERYSTRING_RESULTS = 'GET_QUERYSTRING_RESULTS';\nconst RESET_QUERYSTRING_RESULTS = 'RESET_QUERYSTRING_RESULTS';\n\nconst initialState = {\n  error: null,\n  items: [],\n  total: 0,\n  loaded: false,\n  loading: false,\n  batching: {},\n  subrequests: {},\n};\n\n/**\n * querystringsearch reducer.\n * @function querystring\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function querystringsearch(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_QUERYSTRING_RESULTS}_PENDING`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                ...(state.subrequests[action.subrequest] || {\n                  items: [],\n                  total: 0,\n                  batching: {},\n                }),\n                items: [],\n                total: 0,\n                error: null,\n                loaded: false,\n                loading: true,\n              },\n            },\n          }\n        : {\n            ...state,\n            error: null,\n            loading: true,\n            loaded: false,\n          };\n    case `${GET_QUERYSTRING_RESULTS}_SUCCESS`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                error: null,\n                items: map(action.result.items, (item) => ({\n                  ...item,\n                  '@id': flattenToAppURL(item['@id']),\n                })),\n                total: action.result.items_total,\n                loaded: true,\n                loading: false,\n                batching: { ...action.result.batching },\n              },\n            },\n          }\n        : {\n            ...state,\n            error: null,\n            items: map(action.result.items, (item) => ({\n              ...item,\n              '@id': flattenToAppURL(item['@id']),\n            })),\n            total: action.result.items_total,\n            loaded: true,\n            loading: false,\n            batching: { ...action.result.batching },\n          };\n    case `${GET_QUERYSTRING_RESULTS}_FAIL`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                error: action.error,\n                items: [],\n                total: 0,\n                loading: false,\n                loaded: false,\n                batching: {},\n              },\n            },\n          }\n        : {\n            ...state,\n            error: action.error,\n            items: [],\n            total: 0,\n            loading: false,\n            loaded: false,\n            batching: {},\n          };\n    case RESET_QUERYSTRING_RESULTS:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: omit(state.subrequests, [action.subrequest]),\n          }\n        : {\n            ...state,\n            error: null,\n            items: [],\n            total: 0,\n            loading: false,\n            loaded: false,\n            batching: {},\n          };\n    default:\n      return state;\n  }\n}\n","/**\n * Roles reducer.\n * @module reducers/roles/roles\n */\n\nimport { LIST_ROLES } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  roles: [],\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Roles reducer.\n * @function roles\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function roles(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${LIST_ROLES}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${LIST_ROLES}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        roles: action.result,\n        loaded: true,\n        loading: false,\n      };\n    case `${LIST_ROLES}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        roles: [],\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Schema reducer.\n * @module reducers/schema/schema\n */\n\nimport { flatten, keys, pickBy, isArray, map, mapKeys, merge } from 'lodash';\n\nimport {\n  GET_SCHEMA,\n  POST_SCHEMA,\n  PUT_SCHEMA,\n  UPDATE_SCHEMA,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  loaded: false,\n  loading: false,\n  schema: null,\n  post: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  put: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Schema reducer.\n * @function schema\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function schema(state = initialState, action = {}) {\n  switch (action.type) {\n    /** PENDING */\n    case `${GET_SCHEMA}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loading: true,\n        loaded: false,\n      };\n    case `${POST_SCHEMA}_PENDING`:\n    case `${PUT_SCHEMA}_PENDING`:\n    case `${UPDATE_SCHEMA}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n\n    /** SUCCESS */\n    case `${GET_SCHEMA}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        loading: false,\n        loaded: true,\n        schema: {\n          ...action.result,\n          required: [\n            ...action.result.required,\n            ...flatten(\n              map(keys(pickBy(action.result.properties, isArray)), (fieldset) =>\n                map(\n                  action.result.definitions[fieldset].required,\n                  (required) => `${fieldset}.${required}`,\n                ),\n              ),\n            ),\n          ],\n          properties: {\n            ...action.result.properties,\n            ...merge(\n              ...map(\n                keys(pickBy(action.result.properties, isArray)),\n                (fieldset) =>\n                  mapKeys(\n                    action.result.definitions[fieldset].properties,\n                    (value, key) => `${fieldset}.${key}`,\n                  ),\n              ),\n            ),\n          },\n        },\n      };\n    case `${POST_SCHEMA}_SUCCESS`:\n    case `${PUT_SCHEMA}_SUCCESS`:\n    case `${UPDATE_SCHEMA}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n\n    /** FAIL */\n    case `${GET_SCHEMA}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n        loaded: false,\n        schema: null,\n      };\n    case `${POST_SCHEMA}_FAIL`:\n    case `${PUT_SCHEMA}_FAIL`:\n    case `${UPDATE_SCHEMA}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Search reducer.\n * @module reducers/search/search\n */\n\nimport { map, omit } from 'lodash';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport {\n  RESET_SEARCH_CONTENT,\n  SEARCH_CONTENT,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  items: [],\n  total: 0,\n  loaded: false,\n  loading: false,\n  batching: {},\n  subrequests: {},\n};\n\n/**\n * Search reducer.\n * @function search\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function search(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${SEARCH_CONTENT}_PENDING`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                ...(state.subrequests[action.subrequest] || {\n                  items: [],\n                  total: 0,\n                  batching: {},\n                }),\n                error: null,\n                loaded: false,\n                loading: true,\n              },\n            },\n          }\n        : {\n            ...state,\n            error: null,\n            loading: true,\n            loaded: false,\n          };\n    case `${SEARCH_CONTENT}_SUCCESS`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                error: null,\n                items: map(action.result.items, (item) => ({\n                  ...item,\n                  '@id': flattenToAppURL(item['@id']),\n                })),\n                total: action.result.items_total,\n                loaded: true,\n                loading: false,\n                batching: { ...action.result.batching },\n              },\n            },\n          }\n        : {\n            ...state,\n            error: null,\n            items: map(action.result.items, (item) => ({\n              ...item,\n              '@id': flattenToAppURL(item['@id']),\n            })),\n            total: action.result.items_total,\n            loaded: true,\n            loading: false,\n            batching: { ...action.result.batching },\n          };\n    case `${SEARCH_CONTENT}_FAIL`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                error: action.error,\n                items: [],\n                total: 0,\n                loading: false,\n                loaded: false,\n                batching: {},\n              },\n            },\n          }\n        : {\n            ...state,\n            error: action.error,\n            items: [],\n            total: 0,\n            loading: false,\n            loaded: false,\n            batching: {},\n          };\n    case RESET_SEARCH_CONTENT:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: omit(state.subrequests, [action.subrequest]),\n          }\n        : {\n            ...state,\n            error: null,\n            items: [],\n            total: 0,\n            loading: false,\n            loaded: false,\n            batching: {},\n          };\n    default:\n      return state;\n  }\n}\n","/**\n * Sharing reducer.\n * @module reducers/sharing/sharing\n */\n\nimport {\n  UPDATE_SHARING,\n  GET_SHARING,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  update: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  get: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  data: {\n    available_roles: [],\n    entries: [],\n    inherit: null,\n  },\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Sharing reducer.\n * @function sharing\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function sharing(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${UPDATE_SHARING}_PENDING`:\n    case `${GET_SHARING}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${UPDATE_SHARING}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${GET_SHARING}_SUCCESS`:\n      return {\n        ...state,\n        data: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${UPDATE_SHARING}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${GET_SHARING}_FAIL`:\n      return {\n        ...state,\n        data: initialState.data,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Sidebar reducer.\n * @module reducers/sidebar/sidebar\n */\n\nimport { SET_SIDEBAR_TAB } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  tab: 0,\n};\n\n/**\n * Sidebar reducer.\n * @function sidebar\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function sidebar(state = initialState, action = {}) {\n  switch (action.type) {\n    case SET_SIDEBAR_TAB:\n      return {\n        ...state,\n        tab: action.index,\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Types reducer.\n * @module reducers/types/types\n */\n\nimport { GET_TYPES } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  loaded: false,\n  loading: false,\n  types: [],\n};\n\n/**\n * Types reducer.\n * @function types\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function types(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_TYPES}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loading: true,\n        loaded: false,\n      };\n    case `${GET_TYPES}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        loading: false,\n        loaded: true,\n        types: action.result,\n      };\n    case `${GET_TYPES}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n        loaded: false,\n        types: [],\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Users reducer.\n * @module reducers/users/users\n */\n\nimport { startsWith } from 'lodash';\n\nimport {\n  CREATE_USER,\n  DELETE_USER,\n  GET_USER,\n  LIST_USERS,\n  UPDATE_PASSWORD,\n  UPDATE_USER,\n  INITIAL_PASSWORD,\n  RESET_PASSWORD,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  user: {},\n  users: [],\n  create: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  get: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  list: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  delete: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  update: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  update_password: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  password: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  initial: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  reset: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  if (startsWith(actionType, 'UPDATE_PASSWORD')) {\n    return 'update_password';\n  }\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Users reducer.\n * @function users\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function users(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${CREATE_USER}_PENDING`:\n    case `${DELETE_USER}_PENDING`:\n    case `${GET_USER}_PENDING`:\n    case `${LIST_USERS}_PENDING`:\n    case `${UPDATE_USER}_PENDING`:\n    case `${UPDATE_PASSWORD}_PENDING`:\n    case `${INITIAL_PASSWORD}_PENDING`:\n    case `${RESET_PASSWORD}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${GET_USER}_SUCCESS`:\n      return {\n        ...state,\n        user: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_USERS}_SUCCESS`:\n      return {\n        ...state,\n        users: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${CREATE_USER}_SUCCESS`:\n    case `${DELETE_USER}_SUCCESS`:\n    case `${UPDATE_USER}_SUCCESS`:\n    case `${UPDATE_PASSWORD}_SUCCESS`:\n    case `${INITIAL_PASSWORD}_SUCCESS`:\n    case `${RESET_PASSWORD}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${GET_USER}_FAIL`:\n      return {\n        ...state,\n        user: {},\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_USERS}_FAIL`:\n      return {\n        ...state,\n        users: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${CREATE_USER}_FAIL`:\n    case `${DELETE_USER}_FAIL`:\n    case `${UPDATE_USER}_FAIL`:\n    case `${UPDATE_PASSWORD}_FAIL`:\n    case `${INITIAL_PASSWORD}_FAIL`:\n    case `${RESET_PASSWORD}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import { AUTH_ROLE } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  authenticatedRole: null,\n};\n\n/**  storing the authRole state\n * authRole reducer.\n * @function authRole\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function authRole(state = initialState, action = {}) {\n  switch (action.type) {\n    case AUTH_ROLE:\n      return {\n        ...state,\n        authenticatedRole: action.result,\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Vocabularies reducer.\n * @module reducers/vocabularies/vocabularies\n */\n\nimport {\n  GET_VOCABULARY,\n  GET_VOCABULARY_TOKEN_TITLE,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {};\n\n/**\n * Vocabularies reducer.\n * @function vocabularies\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function vocabularies(state = initialState, action = {}) {\n  const vocabState = state[action.vocabulary] || {};\n  const subrequestState = action.subrequest\n    ? vocabState.subrequests?.[action.subrequest] || {}\n    : {};\n  switch (action.type) {\n    case `${GET_VOCABULARY}_PENDING`:\n    case `${GET_VOCABULARY_TOKEN_TITLE}_PENDING`:\n      return action.subrequest\n        ? {\n            ...state,\n            [action.vocabulary]: {\n              ...vocabState,\n              subrequests: {\n                ...vocabState.subrequests,\n                [action.subrequest]: {\n                  // We preserve here the previous items array to prevent the component\n                  // to rerender due to prop changes while the PENDING state is active,\n                  // this little trick allow us to use how react-select do things\n                  // internally. This has a very low consequences since in the SUCCESS\n                  // state the items are overwritten anyways.\n                  ...(subrequestState || {\n                    data: null,\n                  }),\n                  loaded: vocabState?.[action.subrequest]?.loaded || false,\n                  loading: !!(\n                    (vocabState?.[action.subrequest]?.loading || 0) + 1\n                  ),\n                  error: null,\n                },\n              },\n            },\n          }\n        : {\n            ...state,\n            [action.vocabulary]: {\n              // We preserve here the previous items array to prevent the component\n              // to rerender due to prop changes while the PENDING state is active,\n              // this little trick allow us to use how react-select do things\n              // internally. This has a very low consequences since in the SUCCESS\n              // state the items are overwritten anyways.\n              ...vocabState,\n              error: null,\n              loaded: vocabState.loaded || false,\n              loading: !!((vocabState.loading || 0) + 1),\n            },\n          };\n    case `${GET_VOCABULARY}_SUCCESS`:\n      return action.subrequest\n        ? {\n            ...state,\n            [action.vocabulary]: {\n              ...vocabState,\n              subrequests: {\n                ...vocabState.subrequests,\n                [action.subrequest]: {\n                  ...subrequestState,\n                  error: null,\n                  loaded: true,\n                  loading: !!(subrequestState.loading - 1),\n                  items: [\n                    ...action.result.items.map((item) => ({\n                      label: item.title,\n                      value: item.token,\n                    })),\n                  ],\n                  batching: action.result.batching,\n                  itemsTotal: action.result.items_total,\n                },\n              },\n            },\n          }\n        : {\n            ...state,\n            [action.vocabulary]: {\n              ...vocabState,\n              error: null,\n              loaded: true,\n              loading: !!(vocabState.loading - 1),\n              items: [\n                ...action.result.items.map((item) => ({\n                  label: item.title,\n                  value: item.token,\n                })),\n              ],\n              batching: action.result.batching,\n              itemsTotal: action.result.items_total,\n            },\n          };\n    case `${GET_VOCABULARY}_FAIL`:\n    case `${GET_VOCABULARY_TOKEN_TITLE}_FAIL`:\n      return action.subrequest\n        ? {\n            ...state,\n            [action.vocabulary]: {\n              subrequests: {\n                ...vocabState.subrequests,\n                [action.subrequest]: {\n                  error: action.error,\n                  loaded: false,\n                  loading: !!(subrequestState.loading - 1),\n                },\n              },\n            },\n          }\n        : {\n            ...state,\n            [action.vocabulary]: {\n              error: action.error,\n              loaded: false,\n              loading: !!(vocabState.loading - 1),\n            },\n          };\n    case `${GET_VOCABULARY_TOKEN_TITLE}_SUCCESS`:\n      return action.subrequest\n        ? {\n            ...state,\n            [action.vocabulary]: {\n              ...vocabState,\n              subrequests: {\n                ...vocabState.subrequests,\n                [action.subrequest]: {\n                  ...subrequestState,\n                  error: null,\n                  loaded: true,\n                  loading: !!(subrequestState.loading - 1),\n                  ...(action.token && {\n                    [action.token]: action.result.items[0].title,\n                  }),\n                  ...(action.tokens && {\n                    items: [\n                      ...action.result.items.map((item) => ({\n                        label: item.title,\n                        value: item.token,\n                      })),\n                    ],\n                  }),\n                },\n              },\n            },\n          }\n        : {\n            ...state,\n            [action.vocabulary]: {\n              ...vocabState,\n              error: null,\n              loaded: true,\n              loading: !!(vocabState.loading - 1),\n              [action.token]: action.result.items[0].title,\n            },\n          };\n    default:\n      return state;\n  }\n}\n","/**\n * Workflow reducer.\n * @module reducers/workflow/workflow\n */\n\nimport {\n  TRANSITION_WORKFLOW,\n  GET_WORKFLOW,\n  GET_WORKFLOW_MULTIPLE,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  get: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  transition: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  history: [],\n  transitions: [],\n  multiple: [],\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Content reducer.\n * @function content\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function content(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_WORKFLOW}_PENDING`:\n    case `${GET_WORKFLOW_MULTIPLE}_PENDING`:\n    case `${TRANSITION_WORKFLOW}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${GET_WORKFLOW}_SUCCESS`:\n    case `${TRANSITION_WORKFLOW}_SUCCESS`:\n      return {\n        ...state,\n        history: action.result.history ? action.result.history : state.history,\n        transitions: action.result.transitions\n          ? action.result.transitions\n          : state.transitions,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${GET_WORKFLOW_MULTIPLE}_SUCCESS`:\n      return {\n        ...state,\n        multiple: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${GET_WORKFLOW}_FAIL`:\n    case `${TRANSITION_WORKFLOW}_FAIL`:\n      return {\n        ...state,\n        history: [],\n        transitions: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${GET_WORKFLOW_MULTIPLE}_FAIL`:\n      return {\n        ...state,\n        multiple: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Toolbar reducer.\n * @module reducers/toolbar/toolbar\n */\n\nimport { EXPAND_TOOLBAR } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  expanded: false,\n};\n\n/**\n * Toolbar reducer.\n * @function toolbar\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function toolbar(state = initialState, action = {}) {\n  switch (action.type) {\n    case EXPAND_TOOLBAR:\n      return {\n        expanded: action.isExpanded,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  SET_BLOCKS_CLIPBOARD,\n  RESET_BLOCKS_CLIPBOARD,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {};\n\nexport default function blocks(state = initialState, action = {}) {\n  switch (action.type) {\n    case RESET_BLOCKS_CLIPBOARD:\n      return initialState;\n    case SET_BLOCKS_CLIPBOARD:\n      return {\n        ...Object.assign(\n          {},\n          action.cut ? { cut: action.cut } : {},\n          action.copy ? { copy: action.copy } : {},\n        ),\n      };\n    default:\n      break;\n  }\n  return state;\n}\n","import { LOAD_LAZY_LIBRARY } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {};\n\nexport default function lazyLibraries(state = initialState, action = {}) {\n  switch (action.type) {\n    case LOAD_LAZY_LIBRARY:\n      const { libName, libModule } = action;\n      return {\n        ...state,\n        [libName]: libModule,\n      };\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  loaded: false,\n  loadState: {},\n};\n\nexport default function asyncConnect(state = initialState, action = {}) {\n  const { key, data, error } = action;\n  switch (action.type) {\n    case '@redux-conn/BEGIN_GLOBAL_LOAD':\n      return {\n        ...state,\n        loaded: false,\n      };\n    case '@redux-conn/END_GLOBAL_LOAD':\n      return {\n        ...state,\n        loaded: true,\n      };\n    case '@redux-conn/LOAD':\n      return {\n        ...state,\n        loadState: {\n          ...state.loadState,\n          [key]: {\n            loading: true,\n            loaded: false,\n          },\n        },\n      };\n    case '@redux-conn/LOAD_SUCCESS':\n      return {\n        ...state,\n        loadState: {\n          ...state.loadState,\n          [key]: {\n            loading: false,\n            loaded: true,\n            error: null,\n          },\n        },\n        [key]: data,\n      };\n    case '@redux-conn/LOAD_FAIL':\n      return {\n        ...state,\n        loadState: {\n          ...state.loadState,\n          [key]: {\n            loading: false,\n            loaded: false,\n            error: error,\n          },\n        },\n      };\n    case '@redux-conn/CLEAR':\n      return {\n        ...state,\n        loadState: {\n          ...state.loadState,\n          [key]: {\n            loading: false,\n            loaded: false,\n            error: null,\n          },\n        },\n        [key]: null,\n      };\n    default:\n      break;\n  }\n  return state;\n}\n","/**\n * User session reducer.\n * @module reducers/workingcopy/workingcopy\n */\n\nimport {\n  APPLY_WORKING_COPY,\n  CREATE_WORKING_COPY,\n  REMOVE_WORKING_COPY,\n} from '@plone/volto/constants/ActionTypes';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nconst initialState = {\n  info: {},\n  apply: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  create: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  remove: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Working copy reducer.\n * @function workingCopy\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function workingCopy(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${CREATE_WORKING_COPY}_PENDING`:\n    case `${APPLY_WORKING_COPY}_PENDING`:\n    case `${REMOVE_WORKING_COPY}_PENDING`:\n      return {\n        ...state,\n        info: {},\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${CREATE_WORKING_COPY}_SUCCESS`:\n      return {\n        ...state,\n        info: {\n          ...action.result,\n          '@id': flattenToAppURL(action.result['@id']),\n          title: action.result.title,\n        },\n        create: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${APPLY_WORKING_COPY}_SUCCESS`:\n    case `${REMOVE_WORKING_COPY}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${CREATE_WORKING_COPY}_FAIL`:\n    case `${APPLY_WORKING_COPY}_FAIL`:\n    case `${REMOVE_WORKING_COPY}_FAIL`:\n      return {\n        ...state,\n        info: {},\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error?.response?.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * Root reducer.\n * @module reducers/root\n */\n\nimport defaultReducers from '@plone/volto/reducers';\n\n/**\n * Root reducer.\n * @function\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nconst reducers = {\n  ...defaultReducers,\n  // Add your reducers here\n};\n\nexport default reducers;\n","/**\n * Root reducer.\n * @module reducers/root\n */\n\nimport { intlReducer } from 'react-intl-redux';\n\nimport actions from '@plone/volto/reducers/actions/actions';\nimport addons from '@plone/volto/reducers/addons/addons';\nimport apierror from '@plone/volto/reducers/apierror/apierror';\nimport breadcrumbs from '@plone/volto/reducers/breadcrumbs/breadcrumbs';\nimport browserdetect from '@plone/volto/reducers/browserdetect/browserdetect';\nimport comments from '@plone/volto/reducers/comments/comments';\nimport content from '@plone/volto/reducers/content/content';\nimport controlpanels from '@plone/volto/reducers/controlpanels/controlpanels';\nimport clipboard from '@plone/volto/reducers/clipboard/clipboard';\nimport diff from '@plone/volto/reducers/diff/diff';\nimport emailNotification from '@plone/volto/reducers/emailNotification/emailNotification';\nimport emailSend from '@plone/volto/reducers/emailSend/emailSend';\nimport form from '@plone/volto/reducers/form/form';\nimport history from '@plone/volto/reducers/history/history';\nimport groups from '@plone/volto/reducers/groups/groups';\nimport messages from '@plone/volto/reducers/messages/messages';\nimport navigation from '@plone/volto/reducers/navigation/navigation';\nimport querystring from '@plone/volto/reducers/querystring/querystring';\nimport querystringsearch from '@plone/volto/reducers/querystringsearch/querystringsearch';\nimport roles from '@plone/volto/reducers/roles/roles';\nimport schema from '@plone/volto/reducers/schema/schema';\nimport search from '@plone/volto/reducers/search/search';\nimport sharing from '@plone/volto/reducers/sharing/sharing';\nimport sidebar from '@plone/volto/reducers/sidebar/sidebar';\nimport types from '@plone/volto/reducers/types/types';\nimport users from '@plone/volto/reducers/users/users';\nimport authRole from '@plone/volto/reducers/authRole/authRole';\nimport userSession from '@plone/volto/reducers/userSession/userSession';\nimport vocabularies from '@plone/volto/reducers/vocabularies/vocabularies';\nimport workflow from '@plone/volto/reducers/workflow/workflow';\nimport toolbar from '@plone/volto/reducers/toolbar/toolbar';\nimport blocksClipboard from '@plone/volto/reducers/blocksClipboard/blocksClipboard';\nimport lazyLibraries from '@plone/volto/reducers/lazyLibraries/lazyLibraries';\nimport contextNavigation from '@plone/volto/reducers/contextNavigation/contextNavigation';\nimport reduxAsyncConnect from './asyncConnect/asyncConnect';\nimport workingCopy from './workingcopy/workingcopy';\n\n/**\n * Root reducer.\n * @function\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nconst reducers = {\n  intl: intlReducer,\n  reduxAsyncConnect,\n  actions,\n  addons,\n  apierror,\n  breadcrumbs,\n  browserdetect,\n  comments,\n  content,\n  controlpanels,\n  clipboard,\n  diff,\n  emailNotification,\n  emailSend,\n  form,\n  groups,\n  history,\n  messages,\n  navigation,\n  querystring,\n  querystringsearch,\n  roles,\n  schema,\n  search,\n  sharing,\n  sidebar,\n  types,\n  users,\n  authRole,\n  userSession,\n  vocabularies,\n  workflow,\n  toolbar,\n  blocksClipboard,\n  lazyLibraries,\n  contextNavigation,\n  workingCopy,\n};\n\nexport default reducers;\n","import { GET_CONTEXT_NAVIGATION } from '@plone/volto/constants/ActionTypes';\n\n/**\n * Context Navigation reducer.\n * @function navigation\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function rawdata(state = {}, action = {}) {\n  let { result, url } = action;\n\n  switch (action.type) {\n    case `${GET_CONTEXT_NAVIGATION}_PENDING`:\n      return {\n        ...state,\n        [url]: {\n          ...state[url],\n          loading: true,\n          loaded: false,\n          error: undefined,\n        },\n      };\n    case `${GET_CONTEXT_NAVIGATION}_SUCCESS`:\n      return {\n        ...state,\n        [url]: {\n          ...state[url],\n          loading: false,\n          loaded: true,\n          error: undefined,\n          data: result,\n        },\n      };\n    case `${GET_CONTEXT_NAVIGATION}_FAIL`:\n      return {\n        ...state,\n        [url]: {\n          ...state[url],\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      break;\n  }\n  return state;\n}\n","/**\n * Api middleware.\n * @module middleware/api\n */\n\nimport Cookies from 'universal-cookie';\nimport jwtDecode from 'jwt-decode';\nimport { compact, flatten, union } from 'lodash';\nimport { matchPath } from 'react-router';\nimport qs from 'query-string';\n\nimport config from '@plone/volto/registry';\n\nimport {\n  GET_CONTENT,\n  LOGIN,\n  RESET_APIERROR,\n  SET_APIERROR,\n} from '@plone/volto/constants/ActionTypes';\nimport { changeLanguage } from '@plone/volto/actions';\nimport { normalizeLanguageName, getCookieOptions } from '@plone/volto/helpers';\nlet socket = null;\n\n/**\n *\n * Add configured expanders to an api call for an action\n * Requirements:\n *\n * - It should add the expanders set in the config settings\n * - It should preserve any query if present\n * - It should preserve (and add) any expand parameter (if present) e.g. translations\n * - It should take use the correct codification for arrays in querystring (repeated parameter for each member of the array)\n *\n * @function addExpandersToPath\n * @param {string} path The url/path including the querystring\n * @param {*} type The action type\n * @returns {string} The url/path with the configured expanders added to the query string\n */\nexport function addExpandersToPath(path, type) {\n  const { settings } = config;\n  const { apiExpanders = [] } = settings;\n\n  const {\n    url,\n    query: { expand, ...query },\n  } = qs.parseUrl(path);\n\n  const expandersFromConfig = apiExpanders\n    .filter((expand) => matchPath(url, expand.match) && expand[type])\n    .map((expand) => expand[type]);\n\n  const expandMerge = compact(union([expand, ...flatten(expandersFromConfig)]));\n\n  const stringifiedExpand = qs.stringify(\n    { expand: expandMerge },\n    {\n      arrayFormat: 'comma',\n      encode: false,\n    },\n  );\n\n  const stringifiedQuery = qs.stringify(query, {\n    encode: false,\n  });\n\n  if (stringifiedQuery && stringifiedExpand) {\n    return `${url}?${stringifiedExpand}&${stringifiedQuery}`;\n  } else if (!stringifiedQuery && stringifiedExpand) {\n    return `${url}?${stringifiedExpand}`;\n  } else if (stringifiedQuery && !stringifiedExpand) {\n    return `${url}?${stringifiedQuery}`;\n  } else {\n    return url;\n  }\n}\n\n/**\n * Send a message on a websocket.\n * @function sendOnSocket\n * @param {Object} request Request object.\n * @returns {Promise} message is send\n */\nfunction sendOnSocket(request) {\n  return new Promise((resolve, reject) => {\n    switch (socket.readyState) {\n      case socket.CONNECTING:\n        socket.addEventListener('open', () => resolve(socket));\n        socket.addEventListener('error', reject);\n        break;\n      case socket.OPEN:\n        resolve(socket);\n        break;\n      default:\n        reject();\n        break;\n    }\n  }).then(() => {\n    socket.send(JSON.stringify(request));\n  });\n}\n\n/**\n * Api middleware.\n * @function\n * @param {Object} api Api object.\n * @returns {Promise} Action promise.\n */\nexport default (api) => ({ dispatch, getState }) => (next) => (action) => {\n  const { settings } = config;\n\n  if (typeof action === 'function') {\n    return action(dispatch, getState);\n  }\n\n  const { request, type, mode = 'parallel', ...rest } = action;\n  const { subrequest } = action; // We want subrequest remains in `...rest` above\n\n  let actionPromise;\n\n  if (!request) {\n    return next(action);\n  }\n\n  next({ ...rest, type: `${type}_PENDING` });\n\n  if (socket) {\n    actionPromise = Array.isArray(request)\n      ? Promise.all(\n          request.map((item) =>\n            sendOnSocket({\n              ...item,\n              path: addExpandersToPath(item.path, type),\n              id: type,\n            }),\n          ),\n        )\n      : sendOnSocket({\n          ...request,\n          path: addExpandersToPath(request.path, type),\n          id: type,\n        });\n  } else {\n    actionPromise = Array.isArray(request)\n      ? mode === 'serial'\n        ? request.reduce((prevPromise, item) => {\n            return prevPromise.then((acc) => {\n              return api[item.op](addExpandersToPath(item.path, type), {\n                data: item.data,\n                type: item.type,\n                headers: item.headers,\n                params: request.params,\n                checkUrl: settings.actions_raising_api_errors.includes(\n                  action.type,\n                ),\n              }).then((reqres) => {\n                return [...acc, reqres];\n              });\n            });\n          }, Promise.resolve([]))\n        : Promise.all(\n            request.map((item) =>\n              api[item.op](addExpandersToPath(item.path, type), {\n                data: item.data,\n                type: item.type,\n                headers: item.headers,\n                params: request.params,\n                checkUrl: settings.actions_raising_api_errors.includes(\n                  action.type,\n                ),\n              }),\n            ),\n          )\n      : api[request.op](addExpandersToPath(request.path, type), {\n          data: request.data,\n          type: request.type,\n          headers: request.headers,\n          params: request.params,\n          checkUrl: settings.actions_raising_api_errors.includes(action.type),\n        });\n    actionPromise.then(\n      (result) => {\n        const { settings } = config;\n        if (getState().apierror.connectionRefused) {\n          next({\n            ...rest,\n            type: RESET_APIERROR,\n          });\n        }\n        if (type === GET_CONTENT) {\n          const lang = result?.language?.token;\n          if (lang && getState().intl.language !== lang && !subrequest) {\n            const langFileName = normalizeLanguageName(lang);\n            import('~/../locales/' + langFileName + '.json').then((locale) => {\n              dispatch(changeLanguage(lang, locale.default));\n            });\n          }\n        }\n        if (type === LOGIN && settings.websockets) {\n          const cookies = new Cookies();\n          cookies.set(\n            'auth_token',\n            result.token,\n            getCookieOptions({\n              expires: new Date(jwtDecode(result.token).exp * 1000),\n            }),\n          );\n          api.get('/@wstoken').then((res) => {\n            socket = new WebSocket(\n              `${settings.apiPath.replace('http', 'ws')}/@ws?ws_token=${\n                res.token\n              }`,\n            );\n            socket.onmessage = (message) => {\n              const packet = JSON.parse(message.data);\n              if (packet.error) {\n                dispatch({\n                  type: `${packet.id}_FAIL`,\n                  error: packet.error,\n                });\n              } else {\n                dispatch({\n                  type: `${packet.id}_SUCCESS`,\n                  result: JSON.parse(packet.data),\n                });\n              }\n            };\n          });\n        }\n        return next({ ...rest, result, type: `${type}_SUCCESS` });\n      },\n      (error) => {\n        // Only SRR can set ECONNREFUSED\n        if (error.code === 'ECONNREFUSED') {\n          next({\n            ...rest,\n            error,\n            statusCode: error.code,\n            connectionRefused: true,\n            type: SET_APIERROR,\n          });\n        }\n\n        // Response error is marked crossDomain if CORS error happen\n        else if (error.crossDomain) {\n          next({\n            ...rest,\n            error,\n            statusCode: 'CORSERROR',\n            connectionRefused: false,\n            type: SET_APIERROR,\n          });\n        }\n\n        // Check for actions who can raise api errors\n        if (settings.actions_raising_api_errors.includes(action.type)) {\n          // Gateway timeout\n          if (error?.response?.statusCode === 504) {\n            next({\n              ...rest,\n              error,\n              statusCode: error.code,\n              connectionRefused: true,\n              type: SET_APIERROR,\n            });\n          }\n\n          // Redirect\n          else if (error?.code === 301) {\n            next({\n              ...rest,\n              error,\n              statusCode: error.code,\n              connectionRefused: false,\n              type: SET_APIERROR,\n            });\n          }\n          // Redirect\n          else if (error?.code === 408) {\n            next({\n              ...rest,\n              error,\n              statusCode: error.code,\n              connectionRefused: false,\n              type: SET_APIERROR,\n            });\n          }\n          // Unauthorized\n          else if (error?.response?.statusCode === 401) {\n            next({\n              ...rest,\n              error,\n              statusCode: error.response,\n              message: error.response.body.message,\n              connectionRefused: false,\n              type: SET_APIERROR,\n            });\n          }\n        }\n        return next({ ...rest, error, type: `${type}_FAIL` });\n      },\n    );\n  }\n\n  return actionPromise;\n};\n","const Sentry = __CLIENT__\n  ? require('@sentry/browser')\n  : require('@sentry/node');\n\nconst crashReporter = (store) => (next) => (action) => {\n  try {\n    return next(action);\n  } catch (error) {\n    if (\n      __SENTRY__?.SENTRY_DSN ||\n      process?.env?.RAZZLE_SENTRY_DSN ||\n      window?.env?.RAZZLE_SENTRY_DSN\n    ) {\n      Sentry.withScope((scope) => {\n        scope.setExtras({\n          action,\n          state: store.getState(),\n        });\n        Sentry.captureException(error);\n      });\n    }\n    throw error;\n  }\n};\n\nexport default crashReporter;\n","import config from '@plone/volto/registry';\nimport { matchPath } from 'react-router';\n\nconst blacklistRoutes = ({ dispatch, getState }) => (next) => (action) => {\n  if (typeof action === 'function') {\n    return next(action);\n  }\n\n  switch (action.type) {\n    case '@@router/LOCATION_CHANGE':\n      const { pathname } = action.payload.location;\n      const { externalRoutes = [] } = config.settings;\n\n      const route = externalRoutes.find((route) =>\n        matchPath(pathname, route.match),\n      );\n\n      if (!route) {\n        return next(action);\n      } else {\n        window.location.replace(\n          route.url ? route.url(action.payload) : pathname,\n        );\n      }\n      break;\n    default:\n      return next(action);\n  }\n};\n\nexport default blacklistRoutes;\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { save, load } from 'redux-localstorage-simple';\n\nimport config from '@plone/volto/registry';\nimport reducers from '@root/reducers';\n\nimport { api, crashReporter, blacklistRoutes } from '@plone/volto/middleware';\n\nconst configureStore = (initialState, history, apiHelper) => {\n  let stack = [\n    blacklistRoutes,\n    routerMiddleware(history),\n    crashReporter,\n    thunk,\n    ...(apiHelper ? [api(apiHelper)] : []),\n    ...(__CLIENT__\n      ? [save({ states: config.settings.persistentReducers, debounce: 500 })]\n      : []),\n  ];\n  stack = config.settings.storeExtenders.reduce(\n    (acc, extender) => extender(acc),\n    stack,\n  );\n  const middlewares = composeWithDevTools(applyMiddleware(...stack));\n  const store = createStore(\n    combineReducers({\n      router: connectRouter(history),\n      ...reducers,\n      ...config.addonReducers,\n    }),\n    {\n      ...initialState,\n      ...(__CLIENT__\n        ? load({ states: config.settings.persistentReducers })\n        : {}),\n    },\n    middlewares,\n  );\n\n  return store;\n};\n\nexport default configureStore;\n","module.exports = require(\"hoist-non-react-statics\");","import { isBoolean, isObject, isString } from 'lodash';\nimport { getBoolean } from '@plone/volto/helpers';\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  no_value: {\n    id: 'No value',\n    defaultMessage: 'No value',\n  },\n});\n\n/**\n * Prepares a vocab endpoint query for tokens based on passed value.\n *\n * This can be used to facilitate querying a vocabulary endpoint for labels,\n * given some token values. This assumes that the value has already been\n * normalized by normalizeValue.\n */\nexport function convertValueToVocabQuery(value) {\n  if (isString(value) || isBoolean(value)) return { token: value.toString() };\n\n  if (!value) return {};\n\n  if (Array.isArray(value)) {\n    return {\n      tokens: value\n        .map((v) =>\n          isObject(v)\n            ? v.value ?? v.token\n            : isString(v) || isBoolean(v)\n            ? v\n            : null,\n        )\n        .filter((f) => f !== null),\n    };\n  }\n\n  const token = value.value ?? value.token;\n  return isString(token) ? { token } : {};\n}\n\n/**\n * Normalizes provided value to a \"best representation\" value, as accepted by\n * react-select. In this case, it is an object of shape `{ label, value }`\n */\nexport function normalizeSingleSelectOption(value, intl) {\n  if (!value) return value;\n\n  if (Array.isArray(value)) {\n    // assuming [token, title] pair.\n    if (value.length === 2)\n      return { value: value[0], label: value[1] || value[0] };\n\n    throw new Error(`Unknown value type of select widget: ${value}`);\n  }\n\n  const token = value.token ?? value.value ?? 'no-value';\n  const label =\n    (value.title && value.title !== 'None' ? value.title : undefined) ??\n    value.label ??\n    value.token ??\n    intl.formatMessage(messages.no_value);\n\n  return {\n    value: token,\n    label,\n  };\n}\n\nexport const normalizeChoices = (items, intl) =>\n  items.map((item) => normalizeSingleSelectOption(item, intl));\n\n/**\n * Given the value from the API, it normalizes to a value valid to use in react-select.\n * This is necessary because of the inconsistencies in p.restapi vocabularies implementations as\n * they need to adapt to react-select public interface.\n * @function normalizeValue\n * @param {array} choices The choices\n * @param {string|object|boolean|array} value The value\n * @returns {Object} An object of shape {label: \"\", value: \"\"} (or an array)\n */\nexport function normalizeValue(choices, value, intl) {\n  choices = normalizeChoices(choices || [], intl);\n  const choiceMap = Object.assign(\n    {},\n    ...choices.map(({ label, value }) => ({\n      [value]: label,\n    })),\n  );\n\n  if (!isObject(value) && isBoolean(value)) {\n    // We have a boolean value, which means we need to provide a \"No value\"\n    // option\n    const label = choiceMap[getBoolean(value)];\n    return label\n      ? {\n          label,\n          value,\n        }\n      : {};\n  }\n  if (value === 'no-value') {\n    return {\n      label: intl.formatMessage(messages.no_value),\n      value: 'no-value',\n    };\n  }\n\n  if (value === undefined || !value || value.length === 0) return null;\n\n  if (Array.isArray(value)) {\n    // a list of values, like ['foo', 'bar'];\n    return value.map((v) => normalizeValue(choices, v));\n  }\n\n  if (isObject(value)) {\n    // an object like `{label, value}` or `{ title, value }`\n    return normalizeSingleSelectOption(value, intl);\n  }\n\n  // fallback: treat value as a token and look it up in choices\n  return Object.keys(choiceMap).includes(value)\n    ? { label: choiceMap[value], value }\n    : { label: value, value };\n}\n","module.exports = require(\"react-dropzone\");","module.exports = require(\"draft-js-plugins-editor\");","/**\n * DatetimeWidget component.\n * @module components/manage/Widgets/DatetimeWidget\n */\nimport React, { Component } from 'react';\nimport { compose } from 'redux';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport loadable from '@loadable/component';\nimport cx from 'classnames';\nimport { Icon, FormFieldWrapper } from '@plone/volto/components';\nimport { parseDateTime } from '@plone/volto/helpers';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport leftKey from '@plone/volto/icons/left-key.svg';\nimport rightKey from '@plone/volto/icons/right-key.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport 'rc-time-picker/assets/index.css';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nconst TimePicker = loadable(() => import('rc-time-picker'));\n\nconst messages = defineMessages({\n  date: {\n    id: 'Date',\n    defaultMessage: 'Date',\n  },\n  time: {\n    id: 'Time',\n    defaultMessage: 'Time',\n  },\n});\n\nconst PrevIcon = () => (\n  <div\n    style={{\n      color: '#000',\n      left: '22px',\n      padding: '5px',\n      position: 'absolute',\n      top: '15px',\n    }}\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n    tabIndex=\"0\"\n  >\n    <Icon name={leftKey} size=\"30px\" />\n  </div>\n);\nconst NextIcon = () => (\n  <div\n    style={{\n      color: '#000',\n      right: '22px',\n      padding: '5px',\n      position: 'absolute',\n      top: '15px',\n    }}\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n    tabIndex=\"0\"\n  >\n    <Icon name={rightKey} size=\"30px\" />\n  </div>\n);\n\nconst defaultTimeDateOnly = {\n  hour: 12,\n  minute: 0,\n  second: 0,\n};\n\n/**\n * DatetimeWidget component class\n * @class DatetimeWidget\n * @extends Component\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Publish date\",\n *  type: 'datetime',\n * }\n * ```\n */\nexport class DatetimeWidgetComponent extends Component {\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs DatetimeWidget\n   */\n  constructor(props) {\n    super(props);\n    this.moment = props.moment.default;\n\n    this.state = {\n      focused: false,\n      // if passed value matches the construction time, we guess it's a default\n      isDefault:\n        parseDateTime(\n          this.props.lang,\n          this.props.value,\n          undefined,\n          this.moment,\n        )?.toISOString() === this.moment().utc().toISOString(),\n    };\n  }\n\n  getInternalValue() {\n    return parseDateTime(\n      this.props.lang,\n      this.props.value,\n      undefined,\n      this.moment,\n    );\n  }\n\n  getDateOnly() {\n    return this.props.dateOnly || this.props.widget === 'date';\n  }\n\n  /**\n   * Update date storage\n   * @method onDateChange\n   * @param {Object} date updated momentjs Object for date\n   * @returns {undefined}\n   */\n  onDateChange = (date) => {\n    if (date) {\n      const moment = this.props.moment.default;\n      const isDateOnly = this.getDateOnly();\n      const base = (this.getInternalValue() || moment()).set({\n        year: date.year(),\n        month: date.month(),\n        date: date.date(),\n        ...(isDateOnly ? defaultTimeDateOnly : {}),\n      });\n      const dateValue = isDateOnly\n        ? base.format('YYYY-MM-DD')\n        : base.toISOString();\n      this.props.onChange(this.props.id, dateValue);\n    }\n    this.setState({ isDefault: false });\n  };\n\n  /**\n   * Update date storage\n   * @method onTimeChange\n   * @param {Object} time updated momentjs Object for time\n   * @returns {undefined}\n   */\n  onTimeChange = (time) => {\n    const moment = this.props.moment.default;\n    if (time) {\n      const base = (this.getInternalValue() || moment()).set({\n        hours: time?.hours() ?? 0,\n        minutes: time?.minutes() ?? 0,\n        seconds: 0,\n      });\n      const dateValue = base.toISOString();\n      this.props.onChange(this.props.id, dateValue);\n    }\n  };\n\n  onResetDates = () => {\n    this.setState({ isDefault: false });\n    this.props.onChange(this.props.id, null);\n  };\n\n  /**\n   * Handle SingleDatePicker focus\n   * @method onFocusChange\n   * @param {boolean} focused component focus state.\n   * @returns {undefined}\n   */\n  onFocusChange = ({ focused }) => this.setState({ focused });\n\n  render() {\n    const {\n      id,\n      resettable,\n      intl,\n      reactDates,\n      widgetOptions,\n      lang,\n    } = this.props;\n    const noPastDates =\n      this.props.noPastDates || widgetOptions?.pattern_options?.noPastDates;\n    const moment = this.props.moment.default;\n    const datetime = this.getInternalValue();\n    const dateOnly = this.getDateOnly();\n    const { SingleDatePicker } = reactDates;\n\n    return (\n      <FormFieldWrapper {...this.props}>\n        <div className=\"date-time-widget-wrapper\">\n          <div\n            className={cx('ui input date-input', {\n              'default-date': this.state.isDefault,\n            })}\n          >\n            <SingleDatePicker\n              date={datetime}\n              disabled={this.props.isDisabled}\n              onDateChange={this.onDateChange}\n              focused={this.state.focused}\n              numberOfMonths={1}\n              {...(noPastDates ? {} : { isOutsideRange: () => false })}\n              onFocusChange={this.onFocusChange}\n              noBorder\n              displayFormat={moment.localeData(lang).longDateFormat('L')}\n              navPrev={<PrevIcon />}\n              navNext={<NextIcon />}\n              id={`${id}-date`}\n              placeholder={intl.formatMessage(messages.date)}\n            />\n          </div>\n          {!dateOnly && (\n            <div\n              className={cx('ui input time-input', {\n                'default-date': this.state.isDefault,\n              })}\n            >\n              <TimePicker\n                disabled={this.props.isDisabled}\n                defaultValue={datetime}\n                value={datetime}\n                onChange={this.onTimeChange}\n                allowEmpty={false}\n                showSecond={false}\n                use12Hours={lang === 'en'}\n                id={`${id}-time`}\n                format={moment.localeData(lang).longDateFormat('LT')}\n                placeholder={intl.formatMessage(messages.time)}\n                focusOnOpen\n                placement=\"bottomRight\"\n              />\n            </div>\n          )}\n          {resettable && (\n            <button\n              disabled={this.props.isDisabled || !datetime}\n              onClick={() => this.onResetDates()}\n              className=\"item ui noborder button\"\n            >\n              <Icon name={clearSVG} size=\"24px\" className=\"close\" />\n            </button>\n          )}\n        </div>\n      </FormFieldWrapper>\n    );\n  }\n}\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nDatetimeWidgetComponent.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  dateOnly: PropTypes.bool,\n  noPastDates: PropTypes.bool,\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  wrapped: PropTypes.bool,\n  resettable: PropTypes.bool,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nDatetimeWidgetComponent.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  dateOnly: false,\n  noPastDates: false,\n  value: null,\n  resettable: true,\n};\n\nexport default compose(\n  injectLazyLibs(['reactDates', 'moment']),\n  connect((state) => ({\n    lang: state.intl.locale,\n  })),\n  injectIntl,\n)(DatetimeWidgetComponent);\n","/**\n * View toc block.\n * @module components/manage/Blocks/ToC/View\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { map, filter } from 'lodash';\nimport { List } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\n\nimport {\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n} from '@plone/volto/helpers';\n\nconst messages = defineMessages({\n  text: {\n    id: 'Table of Contents',\n    defaultMessage: 'Table of Contents',\n  },\n});\n\n/**\n * View toc block class.\n * @class View\n * @extends Component\n */\nconst View = ({ properties, data, intl }) => {\n  const blocksFieldname = getBlocksFieldname(properties);\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(properties);\n  const placeholder = data?.placeholder || intl.formatMessage(messages.text);\n  return (\n    <div className=\"block table-of-contents\">\n      <h2>{placeholder}</h2>\n      <List bulleted>\n        {map(\n          filter(\n            map(\n              properties[blocksLayoutFieldname].items,\n              (id) => properties[blocksFieldname][id],\n            ),\n            (block) =>\n              block['@type'] === 'text' &&\n              block.text?.blocks[0].type.indexOf('header-') === 0,\n          ),\n          (block) => (\n            <List.Item\n              key={block.text.blocks[0].key}\n              className={block.text.blocks[0].type}\n            >\n              <AnchorLink href={`#${block.text.blocks[0].key}`}>\n                {block.text.blocks[0].text}\n              </AnchorLink>\n            </List.Item>\n          ),\n        )}\n      </List>\n    </div>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default React.memo(injectIntl(View));\n","module.exports = require(\"lodash/intersection\");","module.exports = require(\"lodash/flatten\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M20.9997,2.9997 L20.9997,7.0007 L15.0007,7.0007 L15.0007,2.9997 L8.9997,2.9997 L8.9997,7.0007 L5.0007,7.0007 L5.0007,12.9997 L5.0007,15.0007 L5.0007,30.9997 L30.9997,30.9997 L30.9997,15.0007 L30.9997,12.9997 L30.9997,7.0007 L26.9997,7.0007 L26.9997,2.9997 L20.9997,2.9997 Z M23.0007,7.9997 L23.0007,5.0007 L25.0007,5.0007 L25.0007,7.9997 L25.0007,8.9987 L23.0007,8.9987 L23.0007,7.9997 Z M10.9997,7.9997 L10.9997,5.0007 L12.9997,5.0007 L12.9997,7.9997 L12.9997,8.9987 L10.9997,8.9987 L10.9997,7.9997 Z M26.9997,10.9997 L26.9997,8.9987 L28.9997,8.9987 L28.9997,12.9997 L7.0007,12.9997 L7.0007,8.9987 L8.9997,8.9987 L8.9997,10.9997 L15.0007,10.9997 L15.0007,8.9987 L20.9997,8.9987 L20.9997,10.9997 L26.9997,10.9997 Z M7.0007,28.9997 L29.0017,28.9997 L29.0017,15.0007 L7.0007,15.0007 L7.0007,28.9997 Z\\\"/><path d=\\\"M9 19L11 19 11 17 9 17zM13 19L15 19 15 17 13 17zM17 19L19 19 19 17 17 17zM21 19L23 19 23 17 21 17zM25 19L27 19 27 17 25 17zM9 23L11 23 11 21 9 21zM13 23L15 23 15 21 13 21zM17 23L19 23 19 21 17 21zM21 23L23 23 23 21 21 21zM25 23L27 23 27 21 25 21zM9 27L11 27 11 25 9 25zM13 27L15 27 15 25 13 25zM17 27L19 27 19 25 17 25zM21 27L23 27 23 25 21 25zM25 27L27 27 27 25 25 25z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M26,29 C24.346,29 23,27.654 23,26 C23,24.346 24.346,23 26,23 C27.654,23 29,24.346 29,26 C29,27.654 27.654,29 26,29 M10,29 C8.346,29 7,27.654 7,26 C7,24.346 8.346,23 10,23 C11.654,23 13,24.346 13,26 C13,27.654 11.654,29 10,29 M26,21 C24.983,21 24.038,21.309 23.247,21.833 L19.414,18 L29.707,7.707 L28.293,6.293 L18,16.586 L7.707,6.293 L6.293,7.707 L16.586,18 L12.753,21.833 C11.962,21.309 11.017,21 10,21 C7.243,21 5,23.243 5,26 C5,28.757 7.243,31 10,31 C12.757,31 15,28.757 15,26 C15,24.983 14.691,24.038 14.167,23.247 L18,19.414 L21.833,23.247 C21.309,24.038 21,24.983 21,26 C21,28.757 23.243,31 26,31 C28.757,31 31,28.757 31,26 C31,23.243 28.757,21 26,21\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M14.9997,3.0003 L14.9997,7.0003 L17.0007,7.0003 L17.0007,5.0003 L24.9997,5.0003 L24.9997,11.0003 L30.9997,11.0003 L30.9997,25.0003 L24.9997,25.0003 L24.9997,26.9993 L32.9997,26.9993 L32.9997,9.5853 L26.4147,3.0003 L14.9997,3.0003 Z M27.0007,6.4143 L29.5857,8.9993 L27.0007,8.9993 L27.0007,6.4143 Z\\\"/><path d=\\\"M4.9998,8.9997 L4.9998,32.9997 L22.9998,32.9997 L22.9998,15.5857 L16.4148,8.9997 L4.9998,8.9997 Z M6.9998,11.0007 L14.9998,11.0007 L14.9998,16.9997 L20.9998,16.9997 L20.9998,31.0007 L6.9998,31.0007 L6.9998,11.0007 Z M17.0008,12.4147 L19.5858,14.9997 L17.0008,14.9997 L17.0008,12.4147 Z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.1489,31 L29.8659,31 C28.9469,28.423 24.7499,26.945 24.7019,26.93 C20.1909,25.863 20.0059,23.309 19.9999,23.021 L19.9999,19.343 L20.5549,19.067 C21.9049,18.396 21.9389,17.185 21.9379,17.049 L21.9349,16.378 L22.5539,16.105 C22.7179,15.989 23.0089,15.3 23.1659,14.93 L23.3109,14.592 C23.2749,14.575 23.0639,14.35 22.9479,14.268 L22.3489,13.841 L23.0479,11.696 C23.4589,10.035 23.2839,8.605 22.5499,7.666 C22.1689,7.179 21.6629,7 21.1619,7 L20.6129,7 L20.3179,6.437 C20.3129,6.429 19.4429,5.078 18.0419,5.078 C17.4239,5.082 15.5859,5.212 14.5679,5.877 C13.3689,6.661 12.1199,8.31 12.9809,11.778 L13.6699,13.873 L13.0319,14.29 C12.8809,14.396 12.7099,14.61 12.7319,14.674 C13.1429,15.896 13.4309,16.093 13.4619,16.111 L14.1019,16.377 L14.0669,17.065 C14.0659,17.188 14.0969,18.398 15.4449,19.067 L15.9999,19.343 L15.9999,23 C15.9949,23.306 15.8159,25.862 11.2159,26.954 C10.0019,27.369 6.9249,28.854 6.1489,31 L6.1489,31 Z M31.9999,33 L3.9999,33 L3.9999,32 C3.9999,27.334 10.4089,25.125 10.6829,25.033 C13.8199,24.284 14.0089,22.949 14.0099,22.936 L14.0039,20.538 C12.6399,19.628 12.2339,18.339 12.1169,17.592 C11.4859,17.034 11.1059,16.11 10.8369,15.312 C10.5399,14.429 10.8879,13.668 11.3329,13.151 L11.0599,12.317 C9.8349,7.397 12.0479,5.109 13.4739,4.178 C15.1699,3.069 17.7509,3.029 18.0389,3.028 C19.8919,3.028 21.1359,4.191 21.6859,4.841 C22.6139,4.985 23.4829,5.512 24.1249,6.334 C24.7809,7.172 25.7619,9.056 24.9699,12.248 L24.6739,13.158 C25.1509,13.711 25.5249,14.519 25.1429,15.393 L25.0079,15.708 C24.7259,16.375 24.4159,17.109 23.8899,17.587 C23.7719,18.333 23.3679,19.625 21.9999,20.538 L21.9999,22.999 L21.9999,22.998 C22.0079,22.998 22.2369,24.298 25.2299,25.009 C25.5909,25.125 31.9999,27.334 31.9999,32 L31.9999,33 Z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M29.082,8.8701 L27.946,10.0061 L26.178,8.2381 L27.314,7.1021 L29.082,8.8701 Z M15.91,21.7981 L14.111,22.3351 L13.771,21.9951 L14.368,20.2551 L15.91,21.7981 Z M23.928,10.4881 L24.764,9.6521 L26.532,11.4201 L25.696,12.2561 L23.928,10.4881 Z M24.282,13.6701 L17.447,20.5061 L15.678,18.7371 L22.514,11.9021 L24.282,13.6701 Z M10.45,25.5141 L17.316,23.4651 L30.673,10.1071 C31.355,9.4251 31.355,8.3151 30.673,7.6331 L28.552,5.5121 C27.891,4.8501 26.738,4.8491 26.077,5.5121 L12.735,18.8531 L10.45,25.5141 Z\\\"/><path d=\\\"M29 29L7 29 7 7 22 7 22 5 5 5 5 31 31 31 31 14 29 14z\\\"/></g>\"}","module.exports = require(\"lodash/includes\");","module.exports = require(\"redraft\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M3,29 L33,29 L33,6.999 L3,6.999 L3,29 Z M5,27 L31,27 L31,9 L5,9 L5,27 Z\\\"/><path d=\\\"M12.293 22.707L7.586 18 12.293 13.293 13.707 14.707 10.414 18 13.707 21.293zM23.707 22.707L22.293 21.293 25.586 18 22.293 14.707 23.707 13.293 28.414 18zM16.949 24.316L15.052 23.683 19.052 11.683 20.949 12.316z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M11 11L33 11 33 8.999 11 8.999zM11 19L33 19 33 17 11 17zM11 27L33 27 33 25 11 25zM6 11.5C6.828 11.5 7.5 10.828 7.5 10 7.5 9.172 6.828 8.5 6 8.5 5.172 8.5 4.5 9.172 4.5 10 4.5 10.828 5.172 11.5 6 11.5M6 19.5C6.828 19.5 7.5 18.828 7.5 18 7.5 17.172 6.828 16.5 6 16.5 5.172 16.5 4.5 17.172 4.5 18 4.5 18.828 5.172 19.5 6 19.5M6 27.5C6.828 27.5 7.5 26.828 7.5 26 7.5 25.172 6.828 24.5 6 24.5 5.172 24.5 4.5 25.172 4.5 26 4.5 26.828 5.172 27.5 6 27.5\\\"/></g>\"}","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { matchPath } from \"react-router\";\n\nvar createSelectors = function createSelectors(structure) {\n  var getIn = structure.getIn,\n      toJS = structure.toJS;\n\n  var isRouter = function isRouter(value) {\n    return value != null && _typeof(value) === 'object' && getIn(value, ['location']) && getIn(value, ['action']);\n  };\n\n  var getRouter = function getRouter(state) {\n    var router = toJS(getIn(state, ['router']));\n\n    if (!isRouter(router)) {\n      throw 'Could not find router reducer in state tree, it must be mounted under \"router\"';\n    }\n\n    return router;\n  };\n\n  var getLocation = function getLocation(state) {\n    return toJS(getIn(getRouter(state), ['location']));\n  };\n\n  var getAction = function getAction(state) {\n    return toJS(getIn(getRouter(state), ['action']));\n  };\n\n  var getSearch = function getSearch(state) {\n    return toJS(getIn(getRouter(state), ['location', 'search']));\n  };\n\n  var getHash = function getHash(state) {\n    return toJS(getIn(getRouter(state), ['location', 'hash']));\n  }; // It only makes sense to recalculate the `matchPath` whenever the pathname\n  // of the location changes. That's why `createMatchSelector` memoizes\n  // the latest result based on the location's pathname.\n\n\n  var createMatchSelector = function createMatchSelector(path) {\n    var lastPathname = null;\n    var lastMatch = null;\n    return function (state) {\n      var _ref = getLocation(state) || {},\n          pathname = _ref.pathname;\n\n      if (pathname === lastPathname) {\n        return lastMatch;\n      }\n\n      lastPathname = pathname;\n      var match = matchPath(pathname, path);\n\n      if (!match || !lastMatch || match.url !== lastMatch.url // When URL matched for nested routes, URL is the same but isExact is not.\n      || match.isExact !== lastMatch.isExact) {\n        lastMatch = match;\n      }\n\n      return lastMatch;\n    };\n  };\n\n  return {\n    getLocation: getLocation,\n    getAction: getAction,\n    getRouter: getRouter,\n    getSearch: getSearch,\n    getHash: getHash,\n    createMatchSelector: createMatchSelector\n  };\n};\n\nexport default createSelectors;","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, ReactReduxContext } from 'react-redux';\nimport { Router } from 'react-router';\nimport { onLocationChanged as _onLocationChanged } from './actions';\nimport createSelectors from './selectors';\n\nvar createConnectedRouter = function createConnectedRouter(structure) {\n  var _createSelectors = createSelectors(structure),\n      getLocation = _createSelectors.getLocation;\n  /*\n   * ConnectedRouter listens to a history object passed from props.\n   * When history is changed, it dispatches action to redux store.\n   * Then, store will pass props to component to render.\n   * This creates uni-directional flow from history->store->router->components.\n   */\n\n\n  var ConnectedRouter = /*#__PURE__*/function (_PureComponent) {\n    _inherits(ConnectedRouter, _PureComponent);\n\n    function ConnectedRouter(props) {\n      var _this;\n\n      _classCallCheck(this, ConnectedRouter);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(ConnectedRouter).call(this, props));\n      var store = props.store,\n          history = props.history,\n          onLocationChanged = props.onLocationChanged;\n      _this.inTimeTravelling = false; // Subscribe to store changes to check if we are in time travelling\n\n      _this.unsubscribe = store.subscribe(function () {\n        // Extract store's location\n        var _getLocation = getLocation(store.getState()),\n            pathnameInStore = _getLocation.pathname,\n            searchInStore = _getLocation.search,\n            hashInStore = _getLocation.hash,\n            stateInStore = _getLocation.state; // Extract history's location\n\n\n        var _history$location = history.location,\n            pathnameInHistory = _history$location.pathname,\n            searchInHistory = _history$location.search,\n            hashInHistory = _history$location.hash,\n            stateInHistory = _history$location.state; // If we do time travelling, the location in store is changed but location in history is not changed\n\n        if (props.history.action === 'PUSH' && (pathnameInHistory !== pathnameInStore || searchInHistory !== searchInStore || hashInHistory !== hashInStore || stateInStore !== stateInHistory)) {\n          _this.inTimeTravelling = true; // Update history's location to match store's location\n\n          history.push({\n            pathname: pathnameInStore,\n            search: searchInStore,\n            hash: hashInStore,\n            state: stateInStore\n          });\n        }\n      });\n\n      var handleLocationChange = function handleLocationChange(location, action) {\n        var isFirstRendering = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        // Dispatch onLocationChanged except when we're in time travelling\n        if (!_this.inTimeTravelling) {\n          onLocationChanged(location, action, isFirstRendering);\n        } else {\n          _this.inTimeTravelling = false;\n        }\n      }; // Listen to history changes\n\n\n      _this.unlisten = history.listen(handleLocationChange);\n\n      if (!props.noInitialPop) {\n        // Dispatch a location change action for the initial location.\n        // This makes it backward-compatible with react-router-redux.\n        // But, we add `isFirstRendering` to `true` to prevent double-rendering.\n        handleLocationChange(history.location, history.action, true);\n      }\n\n      return _this;\n    }\n\n    _createClass(ConnectedRouter, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.unlisten();\n        this.unsubscribe();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            history = _this$props.history,\n            children = _this$props.children;\n        return React.createElement(Router, {\n          history: history\n        }, children);\n      }\n    }]);\n\n    return ConnectedRouter;\n  }(PureComponent);\n\n  ConnectedRouter.propTypes = {\n    store: PropTypes.shape({\n      getState: PropTypes.func.isRequired,\n      subscribe: PropTypes.func.isRequired\n    }).isRequired,\n    history: PropTypes.shape({\n      action: PropTypes.string.isRequired,\n      listen: PropTypes.func.isRequired,\n      location: PropTypes.object.isRequired,\n      push: PropTypes.func.isRequired\n    }).isRequired,\n    basename: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n    onLocationChanged: PropTypes.func.isRequired,\n    noInitialPop: PropTypes.bool\n  };\n\n  var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n    return {\n      onLocationChanged: function onLocationChanged(location, action, isFirstRendering) {\n        return dispatch(_onLocationChanged(location, action, isFirstRendering));\n      }\n    };\n  };\n\n  var ConnectedRouterWithContext = function ConnectedRouterWithContext(props) {\n    var Context = props.context || ReactReduxContext;\n\n    if (Context == null) {\n      throw 'Please upgrade to react-redux v6';\n    }\n\n    return React.createElement(Context.Consumer, null, function (_ref) {\n      var store = _ref.store;\n      return React.createElement(ConnectedRouter, _extends({\n        store: store\n      }, props));\n    });\n  };\n\n  ConnectedRouterWithContext.propTypes = {\n    context: PropTypes.object\n  };\n  return connect(null, mapDispatchToProps)(ConnectedRouterWithContext);\n};\n\nexport default createConnectedRouter;","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { LOCATION_CHANGE } from './actions';\n/**\n * Adds query to location.\n * Utilises the search prop of location to construct query.\n */\n\nvar injectQuery = function injectQuery(location) {\n  if (location && location.query) {\n    // Don't inject query if it already exists in history\n    return location;\n  }\n\n  var searchQuery = location && location.search;\n\n  if (typeof searchQuery !== 'string' || searchQuery.length === 0) {\n    return _objectSpread({}, location, {\n      query: {}\n    });\n  } // Ignore the `?` part of the search string e.g. ?username=codejockie\n\n\n  var search = searchQuery.substring(1); // Split the query string on `&` e.g. ?username=codejockie&name=Kennedy\n\n  var queries = search.split('&'); // Contruct query\n\n  var query = queries.reduce(function (acc, currentQuery) {\n    // Split on `=`, to get key and value\n    var _currentQuery$split = currentQuery.split('='),\n        _currentQuery$split2 = _slicedToArray(_currentQuery$split, 2),\n        queryKey = _currentQuery$split2[0],\n        queryValue = _currentQuery$split2[1];\n\n    return _objectSpread({}, acc, _defineProperty({}, queryKey, queryValue));\n  }, {});\n  return _objectSpread({}, location, {\n    query: query\n  });\n};\n\nvar createConnectRouter = function createConnectRouter(structure) {\n  var fromJS = structure.fromJS,\n      merge = structure.merge;\n\n  var createRouterReducer = function createRouterReducer(history) {\n    var initialRouterState = fromJS({\n      location: injectQuery(history.location),\n      action: history.action\n    });\n    /*\n    * This reducer will update the state with the most recent location history\n    * has transitioned to.\n    */\n\n    return function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialRouterState;\n\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          type = _ref.type,\n          payload = _ref.payload;\n\n      if (type === LOCATION_CHANGE) {\n        var location = payload.location,\n            action = payload.action,\n            isFirstRendering = payload.isFirstRendering; // Don't update the state ref for the first rendering\n        // to prevent the double-rendering issue on initilization\n\n        return isFirstRendering ? state : merge(state, {\n          location: fromJS(injectQuery(location)),\n          action: action\n        });\n      }\n\n      return state;\n    };\n  };\n\n  return createRouterReducer;\n};\n\nexport default createConnectRouter;","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport getIn from './getIn';\nvar structure = {\n  fromJS: function fromJS(value) {\n    return value;\n  },\n  getIn: getIn,\n  merge: function merge(state, payload) {\n    return _objectSpread({}, state, {}, payload);\n  },\n  toJS: function toJS(value) {\n    return value;\n  }\n};\nexport default structure;","/* Code from github.com/erikras/redux-form by Erik Rasmussen */\nvar getIn = function getIn(state, path) {\n  if (!state) {\n    return state;\n  }\n\n  var length = path.length;\n\n  if (!length) {\n    return undefined;\n  }\n\n  var result = state;\n\n  for (var i = 0; i < length && !!result; ++i) {\n    result = result[path[i]];\n  }\n\n  return result;\n};\n\nexport default getIn;","import createConnectedRouter from \"./ConnectedRouter\";\nimport createConnectRouter from \"./reducer\";\nimport createSelectors from \"./selectors\";\nimport plainStructure from \"./structure/plain\";\nexport { LOCATION_CHANGE, CALL_HISTORY_METHOD, onLocationChanged, push, replace, go, goBack, goForward, routerActions } from \"./actions\";\nexport { default as routerMiddleware } from \"./middleware\";\nexport var ConnectedRouter = /*#__PURE__*/createConnectedRouter(plainStructure);\nexport var connectRouter = /*#__PURE__*/createConnectRouter(plainStructure);\n\nvar _createSelectors = /*#__PURE__*/createSelectors(plainStructure),\n    getLocation = _createSelectors.getLocation,\n    getAction = _createSelectors.getAction,\n    getHash = _createSelectors.getHash,\n    getSearch = _createSelectors.getSearch,\n    createMatchSelector = _createSelectors.createMatchSelector;\n\nexport { getLocation, getAction, getHash, getSearch, createMatchSelector };","module.exports = require(\"lodash/endsWith\");","module.exports = require(\"lodash/mapValues\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M5,31 L31,31 L31,5 L5,5 L5,31 Z M7,29.001 L29.001,29.001 L29.001,7 L7,7 L7,29.001 Z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M5,31 L31,31 L31,5 L5,5 L5,31 Z M7,29.001 L29.001,29.001 L29.001,7 L7,7 L7,29.001 Z\\\"/><path d=\\\"M15 24.414L9.293 18.707 10.707 17.293 15 21.586 25.293 11.293 26.707 12.707z\\\"/></g>\"}","module.exports = require(\"lodash/isString\");","/**\n * Error Page.\n * @module Error\n */\n\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\n/**\n * Error page.\n * @function Error\n * @returns {string} Markup of the error page.\n */\nconst Error = ({ message, stackTrace }) => {\n  let history = useHistory();\n\n  return (\n    <div\n      style={{\n        fontFamily: 'Helvetica, sans-serif',\n        fontSize: '20px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {/* TODO: Replace inline styling with a CSS class, inline style only for __SERVER__ */}\n      <h2>\n        <FormattedMessage\n          id=\"Sorry, something went wrong with your request\"\n          defaultMessage=\"Sorry, something went wrong with your request&nbsp;\"\n        />\n      </h2>\n      <strong style={{ color: 'red' }}>{message}</strong>\n      <pre>{stackTrace}</pre>\n      <span style={{ textAlign: 'center' }}>\n        <p>\n          <button onClick={() => history.goBack()}>\n            <FormattedMessage\n              id=\"Navigate back\"\n              defaultMessage=\"Navigate back\"\n            />\n          </button>\n        </p>\n        <p>\n          <a href=\"/\">\n            <FormattedMessage\n              id=\"return to the site root\"\n              defaultMessage=\"return to the site root\"\n            />\n          </a>\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"or try a different page.\"\n            defaultMessage=\"or try a different page.\"\n          />\n        </p>\n      </span>\n    </div>\n  );\n};\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n  stackTrace: PropTypes.string,\n};\n\nError.defaultProps = {\n  stackTrace: null,\n};\n\nexport default injectIntl(Error);\n","/**\n * Document view component.\n * @module components/theme/View/DefaultView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Container, Image } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport config from '@plone/volto/registry';\n\nimport {\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  hasBlocksData,\n  getBaseUrl,\n} from '@plone/volto/helpers';\n\nconst messages = defineMessages({\n  unknownBlock: {\n    id: 'Unknown Block',\n    defaultMessage: 'Unknown Block {block}',\n  },\n});\n\n/**\n * Component to display the default view.\n * @function DefaultView\n * @param {Object} content Content object.\n * @returns {string} Markup of the component.\n */\nconst DefaultView = ({ content, intl, location }) => {\n  const blocksFieldname = getBlocksFieldname(content);\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(content);\n\n  return hasBlocksData(content) ? (\n    <div id=\"page-document\" className=\"ui container\">\n      {map(content[blocksLayoutFieldname].items, (block) => {\n        const Block =\n          config.blocks.blocksConfig[\n            content[blocksFieldname]?.[block]?.['@type']\n          ]?.['view'] || null;\n        return Block !== null ? (\n          <Block\n            key={block}\n            id={block}\n            properties={content}\n            data={content[blocksFieldname][block]}\n            path={getBaseUrl(location?.pathname || '')}\n          />\n        ) : (\n          <div key={block}>\n            {intl.formatMessage(messages.unknownBlock, {\n              block: content[blocksFieldname]?.[block]?.['@type'],\n            })}\n          </div>\n        );\n      })}\n    </div>\n  ) : (\n    <Container id=\"page-document\">\n      <h1 className=\"documentFirstHeading\">{content.title}</h1>\n      {content.description && (\n        <p className=\"documentDescription\">{content.description}</p>\n      )}\n      {content.image && (\n        <Image\n          className=\"document-image\"\n          src={content.image.scales.thumb.download}\n          floated=\"right\"\n        />\n      )}\n      {content.remoteUrl && (\n        <span>\n          The link address is:\n          <a href={content.remoteUrl}>{content.remoteUrl}</a>\n        </span>\n      )}\n      {content.text && (\n        <div\n          dangerouslySetInnerHTML={{\n            __html: content.text.data,\n          }}\n        />\n      )}\n    </Container>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nDefaultView.propTypes = {\n  /**\n   * Content of the object\n   */\n  content: PropTypes.shape({\n    /**\n     * Title of the object\n     */\n    title: PropTypes.string,\n    /**\n     * Description of the object\n     */\n    description: PropTypes.string,\n    /**\n     * Text of the object\n     */\n    text: PropTypes.shape({\n      /**\n       * Data of the text of the object\n       */\n      data: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default injectIntl(DefaultView);\n","/**\n * ArrayWidget component.\n * @module components/manage/Widgets/ArrayWidget\n */\n\nimport React, { Component } from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { find, isObject } from 'lodash';\n\nimport {\n  getVocabFromHint,\n  getVocabFromField,\n  getVocabFromItems,\n} from '@plone/volto/helpers';\nimport { getVocabulary } from '@plone/volto/actions';\n\nimport {\n  Option,\n  DropdownIndicator,\n  ClearIndicator,\n  selectTheme,\n  customSelectStyles,\n  MenuList,\n  SortableMultiValue,\n  SortableMultiValueLabel,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\n\nimport { FormFieldWrapper } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  select: {\n    id: 'Select…',\n    defaultMessage: 'Select…',\n  },\n  no_value: {\n    id: 'No value',\n    defaultMessage: 'No value',\n  },\n  no_options: {\n    id: 'No options',\n    defaultMessage: 'No options',\n  },\n});\n\nfunction arrayMove(array, from, to) {\n  const slicedArray = array.slice();\n  slicedArray.splice(\n    to < 0 ? array.length + to : to,\n    0,\n    slicedArray.splice(from, 1)[0],\n  );\n  return slicedArray;\n}\n\nfunction normalizeArrayValue(choices, value) {\n  if (!value || !Array.isArray(value)) return [];\n  if (value.length === 0) return value;\n\n  if (typeof value[0] === 'string') {\n    // raw value like ['foo', 'bar']\n    return value.map((v) => {\n      return {\n        label: find(choices, (c) => c.value === v)?.label || v,\n        value: v,\n      };\n    });\n  }\n\n  if (\n    isObject(value[0]) &&\n    Object.keys(value[0]).includes('token') // Array of objects, w/ label+value\n  ) {\n    return value\n      .map((v) => {\n        const item = find(choices, (c) => c.value === v.token);\n        return item\n          ? {\n              label: item.label || item.title || item.token,\n              value: v.token,\n            }\n          : {\n              // avoid a crash if choices doesn't include this item\n              label: v.label,\n              value: v.token,\n            };\n      })\n      .filter((f) => !!f);\n  }\n\n  return [];\n}\n\nfunction normalizeChoices(choices) {\n  if (Array.isArray(choices) && choices.length && Array.isArray(choices[0])) {\n    return choices.map((option) => ({\n      value: option[0],\n      label:\n        // Fix \"None\" on the serializer, to remove when fixed in p.restapi\n        option[1] !== 'None' && option[1] ? option[1] : option[0],\n    }));\n  }\n\n  return choices;\n}\n\n/**\n * Compare values and return true if equal.\n * Consider upper and lower case.\n * @method compareOption\n * @param {*} inputValue\n * @param {*} option\n * @param {*} accessors\n * @returns {boolean}\n */\nconst compareOption = (inputValue = '', option, accessors) => {\n  const candidate = String(inputValue);\n  const optionValue = String(accessors.getOptionValue(option));\n  const optionLabel = String(accessors.getOptionLabel(option));\n  return optionValue === candidate || optionLabel === candidate;\n};\n\n/**\n * ArrayWidget component class.\n * @class ArrayWidget\n * @extends Component\n *\n * A createable select array widget will be rendered if the named vocabulary is\n * in the widget definition (hint) like:\n *\n * ```\n * list_field_voc_unconstrained = schema.List(\n *     title=u\"List field with values from vocabulary but not constrained to them.\",\n *     description=u\"zope.schema.List\",\n *     value_type=schema.TextLine(),\n *     required=False,\n *     missing_value=[],\n * )\n * directives.widget(\n *     \"list_field_voc_unconstrained\",\n *     AjaxSelectFieldWidget,\n *     vocabulary=\"plone.app.vocabularies.PortalTypes\",\n * )\n * ```\n */\nclass ArrayWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    getVocabulary: PropTypes.func.isRequired,\n    choices: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    ),\n    items: PropTypes.shape({\n      vocabulary: PropTypes.object,\n    }),\n    widgetOptions: PropTypes.shape({\n      vocabulary: PropTypes.object,\n    }),\n    value: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    ),\n    placeholder: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    wrapped: PropTypes.bool,\n    creatable: PropTypes.bool, //if widget has no vocab and you want to be creatable\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    items: {\n      vocabulary: null,\n    },\n    widgetOptions: {\n      vocabulary: null,\n    },\n    error: [],\n    choices: [],\n    value: null,\n    creatable: false,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Actions\n   */\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (\n      !this.props.items?.choices?.length &&\n      !this.props.choices?.length &&\n      this.props.vocabBaseUrl\n    ) {\n      this.props.getVocabulary({\n        vocabNameOrURL: this.props.vocabBaseUrl,\n        size: -1,\n        subrequest: this.props.lang,\n      });\n    }\n  }\n\n  /**\n   * Handle the field change, store it in the local state and back to simple\n   * array of tokens for correct serialization\n   * @method handleChange\n   * @param {array} selectedOption The selected options (already aggregated).\n   * @returns {undefined}\n   */\n  handleChange(selectedOption) {\n    this.props.onChange(\n      this.props.id,\n      selectedOption ? selectedOption.map((item) => item.value) : null,\n    );\n  }\n\n  onSortEnd = (selectedOption, { oldIndex, newIndex }) => {\n    const newValue = arrayMove(selectedOption, oldIndex, newIndex);\n\n    this.handleChange(newValue);\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const choices = normalizeChoices(this.props?.choices || []);\n    const selectedOption = normalizeArrayValue(choices, this.props.value);\n\n    const CreatableSelect = this.props.reactSelectCreateable.default;\n    const { SortableContainer } = this.props.reactSortableHOC;\n    const Select = this.props.reactSelect.default;\n    const SortableSelect =\n      // It will be only createable if the named vocabulary is in the widget definition\n      // (hint) like:\n      // list_field_voc_unconstrained = schema.List(\n      //     title=u\"List field with values from vocabulary but not constrained to them.\",\n      //     description=u\"zope.schema.List\",\n      //     value_type=schema.TextLine(),\n      //     required=False,\n      //     missing_value=[],\n      // )\n      // directives.widget(\n      //     \"list_field_voc_unconstrained\",\n      //     AjaxSelectFieldWidget,\n      //     vocabulary=\"plone.app.vocabularies.PortalTypes\",\n      // )\n      this.props?.choices &&\n      !getVocabFromHint(this.props) &&\n      !this.props.creatable\n        ? SortableContainer(Select)\n        : SortableContainer(CreatableSelect);\n\n    return (\n      <FormFieldWrapper {...this.props}>\n        <SortableSelect\n          useDragHandle\n          // react-sortable-hoc props:\n          axis=\"xy\"\n          onSortEnd={this.onSortEnd}\n          distance={4}\n          // small fix for https://github.com/clauderic/react-sortable-hoc/pull/352:\n          getHelperDimensions={({ node }) => node.getBoundingClientRect()}\n          id={`field-${this.props.id}`}\n          key={this.props.id}\n          isDisabled={this.props.disabled || this.props.isDisabled}\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          options={\n            this.props.vocabBaseUrl\n              ? choices\n              : this.props.choices\n              ? [\n                  ...choices,\n                  ...(this.props.noValueOption && !this.props.default\n                    ? [\n                        {\n                          label: this.props.intl.formatMessage(\n                            messages.no_value,\n                          ),\n                          value: 'no-value',\n                        },\n                      ]\n                    : []),\n                ]\n              : [\n                  {\n                    label: this.props.intl.formatMessage(messages.no_value),\n                    value: 'no-value',\n                  },\n                ]\n          }\n          styles={customSelectStyles}\n          theme={selectTheme}\n          components={{\n            ...(this.props.choices?.length > 25 && {\n              MenuList,\n            }),\n            MultiValue: SortableMultiValue,\n            MultiValueLabel: SortableMultiValueLabel,\n            DropdownIndicator,\n            ClearIndicator,\n            Option,\n          }}\n          value={selectedOption || []}\n          placeholder={\n            this.props.placeholder ??\n            this.props.intl.formatMessage(messages.select)\n          }\n          onChange={this.handleChange}\n          isValidNewOption={(\n            inputValue,\n            selectValue,\n            selectOptions,\n            accessors,\n          ) =>\n            !(\n              !inputValue ||\n              selectValue.some((option) =>\n                compareOption(inputValue, option, accessors),\n              ) ||\n              selectOptions.some((option) =>\n                compareOption(inputValue, option, accessors),\n              )\n            )\n          }\n          isClearable\n          isMulti\n        />\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport const ArrayWidgetComponent = injectIntl(ArrayWidget);\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs(['reactSelect', 'reactSelectCreateable', 'reactSortableHOC']),\n  connect(\n    (state, props) => {\n      const vocabBaseUrl =\n        getVocabFromHint(props) ||\n        getVocabFromField(props) ||\n        getVocabFromItems(props);\n\n      const vocabState =\n        state.vocabularies?.[vocabBaseUrl]?.subrequests?.[state.intl.locale];\n\n      // If the schema already has the choices in it, then do not try to get the vocab,\n      // even if there is one\n      if (props.items?.choices) {\n        return {\n          choices: props.items.choices,\n          lang: state.intl.locale,\n        };\n      } else if (vocabState) {\n        return {\n          choices: vocabState.items,\n          vocabBaseUrl,\n          lang: state.intl.locale,\n        };\n      }\n      return { vocabBaseUrl, lang: state.intl.locale };\n    },\n    { getVocabulary },\n  ),\n)(ArrayWidget);\n","/**\n * FileWidget component.\n * @module components/manage/Widgets/FileWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Image, Dimmer } from 'semantic-ui-react';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { injectIntl } from 'react-intl';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport { Icon, FormFieldWrapper } from '@plone/volto/components';\nimport loadable from '@loadable/component';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst imageMimetypes = [\n  'image/png',\n  'image/jpeg',\n  'image/webp',\n  'image/jpg',\n  'image/gif',\n  'image/svg+xml',\n];\nconst Dropzone = loadable(() => import('react-dropzone'));\n\nconst messages = defineMessages({\n  releaseDrag: {\n    id: 'Drop files here ...',\n    defaultMessage: 'Drop files here ...',\n  },\n  editFile: {\n    id: 'Drop file here to replace the existing file',\n    defaultMessage: 'Drop file here to replace the existing file',\n  },\n  fileDrag: {\n    id: 'Drop file here to upload a new file',\n    defaultMessage: 'Drop file here to upload a new file',\n  },\n  replaceFile: {\n    id: 'Replace existing file',\n    defaultMessage: 'Replace existing file',\n  },\n  addNewFile: {\n    id: 'Choose a file',\n    defaultMessage: 'Choose a file',\n  },\n});\n\n/**\n * FileWidget component class.\n * @function FileWidget\n * @returns {string} Markup of the component.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"File\",\n *  widget: 'file',\n * }\n * ```\n * or:\n *\n * ```jsx\n * {\n *  title: \"File\",\n *  type: 'object',\n * }\n * ```\n *\n */\nconst FileWidget = (props) => {\n  const { id, value, onChange } = props;\n  const [fileType, setFileType] = React.useState(false);\n  const intl = useIntl();\n\n  React.useEffect(() => {\n    if (value && imageMimetypes.includes(value['content-type'])) {\n      setFileType(true);\n    }\n  }, [value]);\n\n  const imgsrc = value?.download\n    ? `${flattenToAppURL(value?.download)}?id=${Date.now()}`\n    : null || value?.data\n    ? `data:${value['content-type']};${value.encoding},${value.data}`\n    : null;\n\n  /**\n   * Drop handler\n   * @method onDrop\n   * @param {array} files File objects\n   * @returns {undefined}\n   */\n  const onDrop = (files) => {\n    const file = files[0];\n    readAsDataURL(file).then((data) => {\n      const fields = data.match(/^data:(.*);(.*),(.*)$/);\n      onChange(id, {\n        data: fields[3],\n        encoding: fields[2],\n        'content-type': fields[1],\n        filename: file.name,\n      });\n    });\n\n    let reader = new FileReader();\n    reader.onload = function () {\n      const fields = reader.result.match(/^data:(.*);(.*),(.*)$/);\n      if (imageMimetypes.includes(fields[1])) {\n        setFileType(true);\n        let imagePreview = document.getElementById(`field-${id}-image`);\n        imagePreview.src = reader.result;\n      } else {\n        setFileType(false);\n      }\n    };\n    reader.readAsDataURL(files[0]);\n  };\n\n  return (\n    <FormFieldWrapper {...props}>\n      <Dropzone onDrop={onDrop}>\n        {({ getRootProps, getInputProps, isDragActive }) => (\n          <div className=\"file-widget-dropzone\" {...getRootProps()}>\n            {isDragActive && <Dimmer active></Dimmer>}\n            {fileType ? (\n              <Image\n                className=\"image-preview\"\n                id={`field-${id}-image`}\n                size=\"small\"\n                src={imgsrc}\n              />\n            ) : (\n              <div className=\"dropzone-placeholder\">\n                {isDragActive ? (\n                  <p className=\"dropzone-text\">\n                    {intl.formatMessage(messages.releaseDrag)}\n                  </p>\n                ) : value ? (\n                  <p className=\"dropzone-text\">\n                    {intl.formatMessage(messages.editFile)}\n                  </p>\n                ) : (\n                  <p className=\"dropzone-text\">\n                    {intl.formatMessage(messages.fileDrag)}\n                  </p>\n                )}\n              </div>\n            )}\n\n            <label className=\"label-file-widget-input\">\n              {value\n                ? intl.formatMessage(messages.replaceFile)\n                : intl.formatMessage(messages.addNewFile)}\n            </label>\n            <input\n              {...getInputProps({\n                type: 'file',\n                style: { display: 'none' },\n              })}\n              id={`field-${id}`}\n              name={id}\n              type=\"file\"\n            />\n          </div>\n        )}\n      </Dropzone>\n      <div className=\"field-file-name\">\n        {value && value.filename}\n        {value && (\n          <Button\n            icon\n            basic\n            className=\"delete-button\"\n            aria-label=\"delete file\"\n            onClick={() => {\n              onChange(id, null);\n              setFileType(false);\n            }}\n          >\n            <Icon name={deleteSVG} size=\"20px\" />\n          </Button>\n        )}\n      </div>\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nFileWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.shape({\n    '@type': PropTypes.string,\n    title: PropTypes.string,\n  }),\n  onChange: PropTypes.func.isRequired,\n  wrapped: PropTypes.bool,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nFileWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n};\n\nexport default injectIntl(FileWidget);\n","/**\n * IdWidget component.\n * @module components/manage/Widgets/IdWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Input } from 'semantic-ui-react';\nimport { compact, concat, keys, map, union, uniq } from 'lodash';\n\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Icon, FormFieldWrapper } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\nimport { getQuerystring } from '@plone/volto/actions';\n\nconst messages = defineMessages({\n  reservedId: {\n    id: \"This is a reserved name and can't be used\",\n    defaultMessage: \"This is a reserved name and can't be used\",\n  },\n  invalidCharacters: {\n    id:\n      'Only lowercase letters (a-z) without accents, numbers (0-9), and the two characters \"-\" and \"_\" are allowed.',\n    defaultMessage:\n      'Only lowercase letters (a-z) without accents, numbers (0-9), and the two characters \"-\" and \"_\" are allowed.',\n  },\n});\n\n/**\n * The id widget.\n *\n * This is the id widget to handle for example the short name field.\n */\nclass IdWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.string,\n    focus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    onClick: PropTypes.func,\n    onEdit: PropTypes.func,\n    onDelete: PropTypes.func,\n    icon: PropTypes.shape({\n      xmlns: PropTypes.string,\n      viewBox: PropTypes.string,\n      content: PropTypes.string,\n    }),\n    iconAction: PropTypes.func,\n    minLength: PropTypes.number,\n    maxLength: PropTypes.number,\n    wrapped: PropTypes.bool,\n    placeholder: PropTypes.string,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    value: null,\n    onChange: () => {},\n    onBlur: () => {},\n    onClick: () => {},\n    onEdit: null,\n    onDelete: null,\n    focus: false,\n    icon: null,\n    iconAction: null,\n    minLength: null,\n    maxLength: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Actions\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: [],\n      reservedIds: compact(\n        uniq(\n          union(\n            config.settings.reservedIds,\n            map(config.settings.nonContentRoutes, (route) =>\n              String(route).replace(/[^a-z-]/g, ''),\n            ),\n          ),\n        ),\n      ),\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.fieldValidation = this.fieldValidation.bind(this);\n  }\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n    this.props.getQuerystring();\n    this.fieldValidation(this.props.value);\n  }\n\n  /**\n   * Field validation.\n   * @method fieldValidation\n   * @param {string} value New value\n   * @returns {undefined}\n   */\n  fieldValidation(value) {\n    const error = [];\n\n    // Check reserved id's\n    if (this.state.reservedIds.indexOf(value) !== -1) {\n      error.push(this.props.intl.formatMessage(messages.reservedId));\n    }\n\n    // Check invalid characters\n    if (!/^[a-z0-9_-]*$/.test(value)) {\n      error.push(this.props.intl.formatMessage(messages.invalidCharacters));\n    }\n\n    // Check indexes\n    if (this.props.indexes.indexOf(value) !== -1) {\n      error.push(this.props.intl.formatMessage(messages.reservedId));\n    }\n\n    this.setState({ error });\n  }\n\n  /**\n   * Handle the field change.\n   * @method handleChange\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  handleChange({ target }) {\n    this.fieldValidation(target.value);\n    this.props.onChange(\n      this.props.id,\n      target.value === '' ? undefined : target.value,\n    );\n  }\n\n  /**\n   * Handle the field blur.\n   * @method handleBlur\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  handleBlur({ target }) {\n    this.fieldValidation(target.value);\n    this.props.onBlur(\n      this.props.id,\n      target.value === '' ? undefined : target.value,\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      value,\n      onClick,\n      icon,\n      iconAction,\n      minLength,\n      maxLength,\n      placeholder,\n    } = this.props;\n\n    const props = {\n      ...this.props,\n      error: concat(this.props.error, this.state.error),\n    };\n\n    return (\n      <FormFieldWrapper {...props} className=\"text\">\n        <Input\n          id={`field-${id}`}\n          name={id}\n          value={value || ''}\n          disabled={this.props.isDisabled}\n          icon={icon || null}\n          placeholder={placeholder}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onClick={() => onClick()}\n          ref={(node) => {\n            this.node = node;\n          }}\n          minLength={minLength || null}\n          maxLength={maxLength || null}\n        />\n        {icon && iconAction && (\n          <button className={`field-${id}-action-button`} onClick={iconAction}>\n            <Icon name={icon} size=\"18px\" />\n          </button>\n        )}\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      indexes: keys(state.querystring.indexes),\n    }),\n    {\n      getQuerystring,\n    },\n  ),\n)(IdWidget);\n","/**\n * PasswordWidget component.\n * @module components/manage/Widgets/PassswordWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { injectIntl } from 'react-intl';\n\n/**\n * PasswordWidget component class.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Password\",\n *  type: 'password',\n * }\n * ```\n */\nconst PasswordWidget = (props) => {\n  const {\n    id,\n    value,\n    onChange,\n    onBlur,\n    onClick,\n    minLength,\n    maxLength,\n    placeholder,\n  } = props;\n\n  return (\n    <FormFieldWrapper {...props}>\n      <Input\n        id={`field-${id}`}\n        name={id}\n        type=\"password\"\n        disabled={props.isDisabled}\n        value={value || ''}\n        placeholder={placeholder}\n        onChange={({ target }) =>\n          onChange(id, target.value === '' ? undefined : target.value)\n        }\n        onBlur={({ target }) =>\n          onBlur(id, target.value === '' ? undefined : target.value)\n        }\n        onClick={() => onClick()}\n        minLength={minLength || null}\n        maxLength={maxLength || null}\n        autoComplete=\"off\"\n      />\n    </FormFieldWrapper>\n  );\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nPasswordWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  wrapped: PropTypes.bool,\n  placeholder: PropTypes.string,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nPasswordWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  minLength: null,\n  maxLength: null,\n};\n\nexport default injectIntl(PasswordWidget);\n","export function isPromise(obj) {\n  return typeof obj === 'object' && obj && obj.then instanceof Function;\n}\n\nexport const mapSeries =\n  Promise.mapSeries ||\n  function promiseMapSeries(iterable, iterator) {\n    const { length } = iterable;\n    const results = new Array(length);\n    let i = 0;\n\n    function iterateOverResults() {\n      return iterator(iterable[i], i, iterable).then((result) => {\n        results[i] = result;\n        i += 1;\n        if (i < length) {\n          return iterateOverResults();\n        }\n\n        return results;\n      });\n    }\n\n    return iterateOverResults();\n  };\n\nconst identity = (arg) => arg;\nlet immutableStateFunc = identity;\nlet mutableStateFunc = identity;\nexport const getImmutableState = (state) => immutableStateFunc(state);\nexport const getMutableState = (state) => mutableStateFunc(state);\n","import { matchRoutes } from 'react-router-config';\nimport { mapSeries, isPromise } from './utils';\nimport { endGlobalLoad } from '@plone/volto/actions/asyncConnect/asyncConnect';\n\nexport function filterComponents(branch) {\n  return branch.reduce((result, { route, match }) => {\n    if (route.component && route.component.reduxAsyncConnect) {\n      result.push([route.component, { route, match }]);\n    }\n\n    return result;\n  }, []);\n}\n\nexport function loadAsyncConnect({\n  location,\n  routes = [],\n  filter = () => true,\n  ...rest\n}) {\n  const layered = filterComponents(matchRoutes(routes, location.pathname));\n\n  if (layered.length === 0) {\n    return Promise.resolve();\n  }\n\n  // this allows us to have nested promises, that rely on each other's completion\n  // cycle\n  return mapSeries(layered, ([component, routeParams]) => {\n    if (component == null) {\n      return Promise.resolve();\n    }\n\n    // Collect the results of each component\n    const results = [];\n    const asyncItems = component.reduxAsyncConnect;\n    const asyncItemsArr = [...component.reduxAsyncConnect];\n\n    // get array of results\n    asyncItems.forEach((item) => {\n      if (filter(item, component)) {\n        // handle Volto's voltoLoadAsyncProps\n        if (item.key === 'voltoLoadAsyncProps') {\n          results.push(item);\n          const asyncPropsItems = item.promise({\n            ...rest,\n            ...routeParams,\n            location,\n            routes,\n          });\n          asyncItemsArr.push(...asyncPropsItems);\n\n          asyncPropsItems.forEach((asyncPropItem) => {\n            let innerPromiseOrResult =\n              (asyncPropItem && asyncPropItem.promise) || asyncPropItem;\n\n            if (isPromise(innerPromiseOrResult)) {\n              innerPromiseOrResult = innerPromiseOrResult.catch((error) => ({\n                error,\n              }));\n            }\n            results.push(innerPromiseOrResult);\n          });\n          return;\n        }\n\n        // handles default case of classic asyncConnect\n        let promiseOrResult = item.promise({\n          ...rest,\n          ...routeParams,\n          location,\n          routes,\n        });\n\n        if (isPromise(promiseOrResult)) {\n          promiseOrResult = promiseOrResult.catch((error) => ({ error }));\n        }\n\n        results.push(promiseOrResult);\n      }\n    });\n\n    // map results to keys for prop injection\n    const resolver = (finalResults) => {\n      return Object.assign(\n        {},\n        finalResults.map((result, idx) => {\n          const { key } = asyncItemsArr[idx];\n          return key ? { [key]: result } : null;\n        }),\n      );\n    };\n\n    return Promise.all(results).then(resolver);\n  });\n}\n\nexport function loadOnServer(args) {\n  return loadAsyncConnect(args).then(() => {\n    args.store.dispatch(endGlobalLoad());\n  });\n}\n","/* eslint-disable react/forbid-prop-types,react/no-unused-prop-types,react/require-default-props */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router';\nimport { renderRoutes } from 'react-router-config';\nimport { ReactReduxContext } from 'react-redux';\nimport { loadAsyncConnect } from './ssr';\nimport { getMutableState } from './utils';\n\nexport class AsyncConnect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      previousLocation: this.isLoaded() ? null : props.location,\n    };\n\n    this.mounted = false;\n    this.loadDataCounter = 0;\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    const dataLoaded = this.isLoaded();\n\n    // we dont need it if we already made it on server-side\n    if (!dataLoaded) {\n      this.loadAsyncData(this.props);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // eslint-disable-line camelcase\n    const { location, reloadOnPropsChange } = this.props;\n    const navigated = location !== nextProps.location;\n\n    // Allow a user supplied function to determine if an async reload is necessary\n    if (navigated && reloadOnPropsChange(this.props, nextProps)) {\n      this.loadAsyncData(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  isLoaded() {\n    const { reduxConnectStore } = this.props;\n    return getMutableState(reduxConnectStore.getState()).reduxAsyncConnect\n      .loaded;\n  }\n\n  loadAsyncData({ reduxConnectStore, ...otherProps }) {\n    const { location, beginGlobalLoad, endGlobalLoad } = this.props;\n    const loadResult = loadAsyncConnect({\n      ...otherProps,\n      store: reduxConnectStore,\n    });\n\n    this.setState({ previousLocation: location });\n\n    // TODO: think of a better solution to a problem?\n    this.loadDataCounter += 1;\n    beginGlobalLoad();\n    return ((loadDataCounterOriginal) =>\n      loadResult.then(() => {\n        // We need to change propsToShow only if loadAsyncData that called this promise\n        // is the last invocation of loadAsyncData method. Otherwise we can face a situation\n        // when user is changing route several times and we finally show him route that has\n        // loaded props last time and not the last called route\n        if (\n          this.loadDataCounter === loadDataCounterOriginal &&\n          this.mounted !== false\n        ) {\n          this.setState({ previousLocation: null });\n        }\n\n        // TODO: investigate race conditions\n        // do we need to call this if it's not last invocation?\n        endGlobalLoad();\n      }))(this.loadDataCounter);\n  }\n\n  render() {\n    const { previousLocation } = this.state;\n    const { location, render } = this.props;\n\n    return (\n      <Route\n        location={previousLocation || location}\n        render={() => render(this.props)}\n      />\n    );\n  }\n}\n\nAsyncConnect.propTypes = {\n  render: PropTypes.func,\n  beginGlobalLoad: PropTypes.func.isRequired,\n  endGlobalLoad: PropTypes.func.isRequired,\n  reloadOnPropsChange: PropTypes.func,\n  routes: PropTypes.array.isRequired,\n  location: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  helpers: PropTypes.any,\n  reduxConnectStore: PropTypes.object.isRequired,\n};\n\nAsyncConnect.defaultProps = {\n  helpers: {},\n  reloadOnPropsChange() {\n    return true;\n  },\n  render({ routes }) {\n    return renderRoutes(routes);\n  },\n};\n\nexport const AsyncConnectWithContext = ({ context, ...otherProps }) => {\n  const Context = context || ReactReduxContext;\n\n  if (Context == null) {\n    throw new Error('Please upgrade to react-redux v6');\n  }\n\n  return (\n    <Context.Consumer>\n      {({ store: reduxConnectStore }) => (\n        <AsyncConnect reduxConnectStore={reduxConnectStore} {...otherProps} />\n      )}\n    </Context.Consumer>\n  );\n};\n\nAsyncConnectWithContext.propTypes = {\n  context: PropTypes.object,\n};\n","import { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport config from '@plone/volto/registry';\nimport { matchRoutes } from 'react-router-config';\n\nimport {\n  load,\n  loadSuccess,\n  loadFail,\n  beginGlobalLoad,\n  endGlobalLoad,\n} from '@plone/volto/actions/asyncConnect/asyncConnect';\n\nimport { isPromise, getMutableState, getImmutableState } from './utils';\nimport { AsyncConnectWithContext } from './AsyncConnect';\nexport { loadOnServer, loadAsyncConnect } from './ssr';\n\n// options is: { location, store: { dispatch }, route, match, routes }\nconst wrapWithDispatch = (Component, asyncItems = []) => {\n  return [\n    {\n      key: 'voltoLoadAsyncProps',\n      promise: (options) => {\n        const {\n          store: { dispatch },\n          location: { pathname },\n        } = options;\n\n        const foundAsyncItems = applyExtenders(asyncItems, pathname);\n\n        const connects = foundAsyncItems.map((item) => {\n          const { key } = item;\n          if (!key) return item;\n          const next = item.promise(options);\n\n          if (isPromise(next)) {\n            dispatch(load(key));\n            // add action dispatchers\n            next\n              .then((data) => dispatch(loadSuccess(key, data)))\n              .catch((err) => dispatch(loadFail(key, err)));\n          } else if (next) {\n            dispatch(loadSuccess(key, next));\n          }\n          return {\n            ...item,\n            promise: next,\n          };\n        });\n\n        Component.reduxAsyncConnect = connects;\n        return connects;\n      },\n    },\n  ];\n};\n\nconst applyExtenders = (asyncItems, pathname) => {\n  const { asyncPropsExtenders = [] } = config.settings;\n  const extenders = matchRoutes(asyncPropsExtenders, pathname);\n\n  const foundAsyncItems = extenders.reduce(\n    (acc, extender) => extender.route.extend(acc),\n    asyncItems,\n  );\n\n  let uniqueAsyncItems = foundAsyncItems.reduce((a, d) => {\n    if (!a.some((el) => el.key === d.key)) {\n      a.push(d);\n    }\n    return a;\n  }, []);\n\n  return uniqueAsyncItems;\n};\n\n/**\n * A replacement for redux-connect's asyncConnect.\n *\n * It was needed because asyncConnect works as a direct wrapper on top of\n * a Component, so the config registry is not yet initialized. To solve this\n * problem we replace the original reduxAsyncConnect implementation (which was\n * a list of asyncConnected \"object promises\") with as single promise exposed\n * as { key: 'voltoLoadAsyncProps', promise: ... }.\n *\n * In more details, the original asyncConnect worked by replacing all our\n * \"object promises\" with a special version that's integrated with its own\n * Redux actions. We do another wrap, which takes the initial passed \"object\n * promises\", finds registered, per route, \"extenders\", calls these extenders\n * with the \"object promises\" and that's our \"object promises\" (which it calls\n * internally \"asyncItems\").\n */\nexport function asyncConnect(\n  asyncItems,\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n  options,\n) {\n  return (Component) => {\n    Component.reduxAsyncConnect = wrapWithDispatch(Component, asyncItems);\n\n    const finalMapStateToProps = (state, ownProps) => {\n      const { pathname } = state.router.location;\n      const foundAsyncItems = applyExtenders(asyncItems, pathname);\n      const mutableState = getMutableState(state);\n      const asyncStateToProps = foundAsyncItems.reduce((result, { key }) => {\n        if (!key) {\n          return result;\n        }\n\n        return {\n          ...result,\n          [key]: mutableState.reduxAsyncConnect[key],\n        };\n      }, {});\n\n      if (typeof mapStateToProps !== 'function') {\n        return asyncStateToProps;\n      }\n\n      return {\n        ...mapStateToProps(getImmutableState(mutableState), ownProps),\n        ...asyncStateToProps,\n      };\n    };\n\n    return connect(\n      finalMapStateToProps,\n      mapDispatchToProps,\n      mergeProps,\n      options,\n    )(Component);\n  };\n}\n\nexport const ReduxAsyncConnect = connect(null, {\n  beginGlobalLoad,\n  endGlobalLoad,\n})(withRouter(AsyncConnectWithContext));\n","module.exports = require(\"react-transition-group\");","/**\n * Languages.\n * @module constants/Languages\n */\n\nmodule.exports = {\n  en: 'English',\n  de: 'Deutsch',\n  nl: 'Nederlands',\n  ro: 'Română',\n  ja: '日本語',\n  pt: 'Português',\n  pt_BR: 'Português (Brasil)',\n  es: 'Spanish',\n  it: 'Italian',\n  eu: 'Euskara',\n};\n","module.exports = require(\"lodash/merge\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M18,5 C10.832,5 5,10.832 5,18 C5,25.168 10.832,31 18,31 C25.168,31 31,25.168 31,18 C31,10.832 25.168,5 18,5 M18,33 C9.729,33 3,26.271 3,18 C3,9.729 9.729,3 18,3 C26.271,3 33,9.729 33,18 C33,26.271 26.271,33 18,33\\\"/><path d=\\\"M16 23.414L11.293 18.707 12.707 17.293 16 20.586 23.293 13.293 24.707 14.707z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M6,11 C5.449,11 5,11.448 5,12 L5,26 C5,26.552 5.449,27 6,27 L30,27 C30.551,27 31,26.552 31,26 L31,12 C31,11.448 30.551,11 30,11 L25.382,11 L23.382,7 L12.618,7 L10.618,11 L6,11 Z M30,29 L6,29 C4.346,29 3,27.654 3,26 L3,12 C3,10.346 4.346,9 6,9 L9.382,9 L11.382,5 L24.618,5 L26.618,9 L30,9 C31.654,9 33,10.346 33,12 L33,26 C33,27.654 31.654,29 30,29 L30,29 Z\\\"/><path d=\\\"M18 13C15.243 13 13 15.243 13 18 13 20.757 15.243 23 18 23 20.757 23 23 20.757 23 18 23 15.243 20.757 13 18 13M18 25C14.14 25 11 21.859 11 18 11 14.141 14.14 11 18 11 21.86 11 25 14.141 25 18 25 21.859 21.86 25 18 25M29.5 14C29.5 14.828 28.828 15.5 28 15.5 27.172 15.5 26.5 14.828 26.5 14 26.5 13.172 27.172 12.5 28 12.5 28.828 12.5 29.5 13.172 29.5 14\\\"/></g>\"}","module.exports = require(\"lodash/indexOf\");","import loadable from '@loadable/component';\n\nimport DefaultView from '@plone/volto/components/theme/View/DefaultView';\nimport FileView from '@plone/volto/components/theme/View/FileView';\nimport ImageView from '@plone/volto/components/theme/View/ImageView';\nimport ListingView from '@plone/volto/components/theme/View/ListingView';\nimport NewsItemView from '@plone/volto/components/theme/View/NewsItemView';\nimport SummaryView from '@plone/volto/components/theme/View/SummaryView';\nimport TabularView from '@plone/volto/components/theme/View/TabularView';\nimport LinkView from '@plone/volto/components/theme/View/LinkView';\nimport NotFoundView from '@plone/volto/components/theme/NotFound/NotFound';\nimport ConnectionRefused from '@plone/volto/components/theme/ConnectionRefused/ConnectionRefused';\nimport CorsError from '@plone/volto/components/theme/CorsError/CorsError';\nimport RequestTimeout from '@plone/volto/components/theme/RequestTimeout/RequestTimeout';\nimport AlbumView from '@plone/volto/components/theme/View/AlbumView';\nimport Unauthorized from '@plone/volto/components/theme/Unauthorized/Unauthorized';\nimport Forbidden from '@plone/volto/components/theme/Forbidden/Forbidden';\n\nconst EventView = loadable(() =>\n  import('@plone/volto/components/theme/View/EventView'),\n);\n\n// Layout View Registry\nexport const layoutViews = {\n  document_view: DefaultView,\n  summary_view: SummaryView,\n  tabular_view: TabularView,\n  listing_view: ListingView,\n  link_redirect_view: LinkView,\n  album_view: AlbumView,\n};\n\n// Content Types View Registry\nexport const contentTypesViews = {\n  'News Item': NewsItemView,\n  File: FileView,\n  Image: ImageView,\n  Event: EventView,\n};\n\n// Default view\nexport const defaultView = DefaultView;\n\nexport const errorViews = {\n  '404': NotFoundView,\n  '401': Unauthorized,\n  '403': Forbidden,\n  '408': RequestTimeout,\n  ECONNREFUSED: ConnectionRefused,\n  corsError: CorsError,\n};\n","/**\n * EventView view component.\n * @module components/theme/View/EventView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { hasBlocksData, flattenHTMLToAppURL } from '@plone/volto/helpers';\nimport { Image, Grid } from 'semantic-ui-react';\nimport RenderBlocks from '@plone/volto/components/theme/View/RenderBlocks';\nimport { EventDetails } from '@plone/volto/components';\n\nconst EventTextfieldView = ({ content }) => (\n  <React.Fragment>\n    {content.title && <h1 className=\"documentFirstHeading\">{content.title}</h1>}\n    {content.description && (\n      <p className=\"documentDescription\">{content.description}</p>\n    )}\n    {content.image && (\n      <Image\n        className=\"document-image\"\n        src={content.image.scales.thumb.download}\n        floated=\"right\"\n      />\n    )}\n    {content.text && (\n      <div\n        dangerouslySetInnerHTML={{\n          __html: flattenHTMLToAppURL(content.text.data),\n        }}\n      />\n    )}\n  </React.Fragment>\n);\n\n/**\n * EventView view component class.\n * @function EventView\n * @params {object} content Content object.\n * @returns {string} Markup of the component.\n */\nconst EventView = (props) => {\n  const { content } = props;\n\n  return (\n    <div id=\"page-document\" className=\"ui container viewwrapper event-view\">\n      <Grid>\n        <Grid.Column width={7} className=\"mobile hidden\">\n          {hasBlocksData(content) ? (\n            <RenderBlocks {...props} />\n          ) : (\n            <EventTextfieldView {...props} />\n          )}\n        </Grid.Column>\n        <Grid.Column width={5} className=\"mobile hidden\">\n          <EventDetails content={content} />\n        </Grid.Column>\n        <Grid.Column width={12} only=\"mobile\">\n          {hasBlocksData(content) ? (\n            <>\n              <RenderBlocks\n                {...props}\n                content={{\n                  ...content,\n                  blocks_layout: {\n                    items: props.content.blocks_layout.items.slice(0, 1),\n                  },\n                }}\n              />\n              <EventDetails content={content} display_as=\"div\" />\n              <RenderBlocks\n                {...props}\n                content={{\n                  ...content,\n                  blocks_layout: {\n                    items: props.content.blocks_layout.items.slice(1),\n                  },\n                }}\n              />\n            </>\n          ) : (\n            <EventTextfieldView {...props} />\n          )}\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nEventView.propTypes = {\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    text: PropTypes.shape({\n      data: PropTypes.string,\n    }),\n    attendees: PropTypes.arrayOf(PropTypes.string).isRequired,\n    contact_email: PropTypes.string,\n    contact_name: PropTypes.string,\n    contact_phone: PropTypes.string,\n    end: PropTypes.string.isRequired,\n    event_url: PropTypes.string,\n    location: PropTypes.string,\n    open_end: PropTypes.bool,\n    recurrence: PropTypes.any,\n    start: PropTypes.string.isRequired,\n    subjects: PropTypes.arrayOf(PropTypes.string).isRequired,\n    whole_day: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default EventView;\n","import { RRule } from 'rrule';\nimport { defineMessages } from 'react-intl';\n\nexport const Days = {\n  MO: RRule.MO,\n  TU: RRule.TU,\n  WE: RRule.WE,\n  TH: RRule.TH,\n  FR: RRule.FR,\n  SA: RRule.SA,\n  SU: RRule.SU,\n};\n\nexport const WEEKLY_DAYS = [Days.MO, Days.TU, Days.WE, Days.TH, Days.FR];\nexport const MONDAYFRIDAY_DAYS = [Days.MO, Days.FR];\n\nexport const FREQUENCES = {\n  DAILY: 'daily',\n  MONDAYFRIDAY: 'mondayfriday',\n  WEEKDAYS: 'weekdays',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  YEARLY: 'yearly',\n};\n\nexport const OPTIONS = {\n  frequences: {\n    [FREQUENCES.DAILY]: { rrule: RRule.DAILY, interval: true },\n    [FREQUENCES.MONDAYFRIDAY]: { rrule: RRule.WEEKLY },\n    [FREQUENCES.WEEKDAYS]: { rrule: RRule.WEEKLY },\n    [FREQUENCES.WEEKLY]: { rrule: RRule.WEEKLY, interval: true, byday: true },\n    [FREQUENCES.MONTHLY]: {\n      rrule: RRule.MONTHLY,\n      interval: true,\n      bymonth: true,\n    },\n    [FREQUENCES.YEARLY]: { rrule: RRule.YEARLY, interval: true, byyear: true },\n  },\n};\n\nexport const toISOString = (date) => {\n  return date.toISOString().split('T')[0];\n};\n\nexport const rrulei18n = (intl, moment, lang) => {\n  moment.locale(lang);\n\n  const messages = defineMessages({\n    every: { id: 'rrule_every', defaultMessage: 'every' },\n    until: { id: 'rrule_until', defaultMessage: 'until' },\n    for: { id: 'rrule_for', defaultMessage: 'for' },\n    time: { id: 'rrule_time', defaultMessage: 'time' },\n    times: { id: 'rrule_times', defaultMessage: 'times' },\n    '(~ approximate)': {\n      id: 'rrule_approximate',\n      defaultMessage: '(~approximate)',\n    },\n    hour: { id: 'rrule_hour', defaultMessage: 'hour' },\n    hours: { id: 'rrule_hours', defaultMessage: 'hours' },\n    minutes: {\n      id: 'rrule_minutes',\n      defaultMessage: 'minutes',\n    },\n    weekdays: {\n      id: 'rrule_weekdays',\n      defaultMessage: 'weekdays',\n    },\n    weekday: {\n      id: 'rrule_weekday',\n      defaultMessage: 'weekday',\n    },\n    day: { id: 'rrule_day', defaultMessage: 'day' },\n    days: { id: 'rrule_days', defaultMessage: 'days' },\n    in: { id: 'rrule_in', defaultMessage: 'in' },\n    week: { id: 'rrule_week', defaultMessage: 'week' },\n    weeks: { id: 'rrule_weeks', defaultMessage: 'weeks' },\n    month: {\n      id: 'rrule_month',\n      defaultMessage: 'month',\n    },\n    months: {\n      id: 'rrule_months',\n      defaultMessage: 'months',\n    },\n    on: { id: 'rrule_on', defaultMessage: 'on' },\n    year: { id: 'rrule_year', defaultMessage: 'year' },\n    years: { id: 'rrule_years', defaultMessage: 'years' },\n    'on the': {\n      id: 'rrule_on the',\n      defaultMessage: 'on the',\n    },\n    the: { id: 'rrule_the', defaultMessage: 'the' },\n    and: { id: 'rrule_and', defaultMessage: 'and' },\n    or: { id: 'rrule_or', defaultMessage: 'or' },\n    at: { id: 'rrule_at', defaultMessage: 'at' },\n    last: { id: 'rrule_last', defaultMessage: 'last' },\n    st: { id: 'rrule_st', defaultMessage: 'st' },\n    nd: { id: 'rrule_nd', defaultMessage: 'nd' },\n    rd: { id: 'rrule_rd', defaultMessage: 'rd' },\n    th: { id: 'rrule_th', defaultMessage: 'th' },\n    dateFormat: {\n      id: 'rrule_dateFormat',\n      defaultMessage: '[month] [day], [year]',\n    },\n  });\n\n  let strings = {};\n  Object.keys(messages).map(\n    (k) => (strings[k] = intl.formatMessage(messages[k])),\n  );\n\n  let dateFormat = strings.dateFormat\n    .replace(new RegExp('\\\\[', 'g'), '${')\n    .replace(new RegExp('\\\\]', 'g'), '}');\n\n  const dateFormatter = (year, month, day) =>\n    dateFormat\n      .replace(/\\$\\{year\\}/g, year)\n      .replace(/\\$\\{month\\}/g, month)\n      .replace(/\\$\\{day\\}/g, day);\n  const LANGUAGE = {\n    dayNames: moment.weekdays(),\n    monthNames: moment.months(),\n    strings: strings,\n    dateFormatter: dateFormatter,\n  };\n  return LANGUAGE;\n};\n","/**\n * IntervalField component.\n * @module components/manage/Widgets/RecurrenceWidget/IntervalField\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Grid, Input } from 'semantic-ui-react';\n\n/**\n * IntervalField component class.\n * @function IntervalField\n * @returns {string} Markup of the component.\n */\nconst IntervalField = ({ label, labelAfter, value, onChange }) => {\n  return (\n    <Form.Field inline className=\"text\">\n      <Grid>\n        <Grid.Row stretched>\n          <Grid.Column width=\"4\">\n            <div className=\"wrapper\">\n              <label htmlFor=\"interval\">{label}</label>\n            </div>\n          </Grid.Column>\n          <Grid.Column width=\"8\">\n            <Form.Field inline>\n              <Input\n                id=\"interval\"\n                name=\"interval\"\n                value={value || ''}\n                onChange={({ target }) => {\n                  onChange(\n                    target.id,\n                    target.value === '' ? undefined : parseInt(target.value),\n                  );\n                }}\n              />\n              {labelAfter && <span>{labelAfter}</span>}\n            </Form.Field>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Form.Field>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nIntervalField.propTypes = {\n  label: PropTypes.string.isRequired,\n  labelAfter: PropTypes.string,\n  value: PropTypes.any,\n  onChange: PropTypes.func,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nIntervalField.defaultProps = {\n  label: null,\n  labelAfter: null,\n  onChange: null,\n};\n\nexport default IntervalField;\n","/**\n * ByDayField component.\n * @module components/manage/Widgets/RecurrenceWidget/ByDayField\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Grid, Button } from 'semantic-ui-react';\nimport { Days } from './Utils';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { useSelector } from 'react-redux';\n\n/**\n * ByDayField component class.\n * @function ByDayField\n * @returns {string} Markup of the component.\n */\nconst ByDayField = ({ label, value, onChange, moment: momentlib }) => {\n  const lang = useSelector((state) => state.intl.locale);\n  const moment = momentlib.default;\n  moment.locale(lang);\n\n  const toggleWeekDay = (dayName) => {\n    var day = Days[dayName];\n    var byweekday = value ? [...value] : [];\n\n    var i = byweekday.indexOf(day);\n    if (i >= 0) {\n      byweekday.splice(i, 1);\n    } else {\n      byweekday.push(day);\n    }\n    onChange('byweekday', byweekday);\n  };\n\n  return (\n    <Form.Field inline className=\"text\">\n      <Grid>\n        <Grid.Row stretched>\n          <Grid.Column width=\"4\">\n            <div className=\"wrapper\">\n              <label htmlFor=\"byday\">{label}</label>\n            </div>\n          </Grid.Column>\n          <Grid.Column width=\"8\">\n            <Button.Group basic className=\"byday-field\">\n              {Object.keys(Days).map((d) => (\n                <Button\n                  key={d}\n                  active={value?.indexOf(Days[d]) >= 0}\n                  type=\"button\"\n                  content={moment.weekdaysShort(Days[d].weekday + 1)}\n                  onClick={() => {\n                    toggleWeekDay(d);\n                  }}\n                />\n              ))}\n            </Button.Group>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Form.Field>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nByDayField.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.any,\n  onChange: PropTypes.func,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nByDayField.defaultProps = {\n  label: null,\n  value: null,\n  onChange: null,\n};\n\nexport default injectLazyLibs(['moment'])(ByDayField);\n","/**\n * EndField component.\n * @module components/manage/Widgets/RecurrenceWidget/EndField\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Form, Grid, Input, Radio } from 'semantic-ui-react';\nimport DatetimeWidget from '../DatetimeWidget';\n\nconst messages = defineMessages({\n  recurrenceEnds: { id: 'Recurrence ends', defaultMessage: 'Ends' },\n  recurrenceEndsCount: { id: 'Recurrence ends after', defaultMessage: 'after' },\n  recurrenceEndsUntil: { id: 'Recurrence ends on', defaultMessage: 'on' },\n  occurrences: { id: 'Occurences', defaultMessage: 'occurrence(s)' },\n});\n/**\n * EndField component class.\n * @function EndField\n * @returns {string} Markup of the component.\n */\nconst EndField = ({ value, count, until, onChange, intl }) => {\n  return (\n    <Form.Field inline className=\"text\">\n      <Grid>\n        <Grid.Row stretched>\n          <Grid.Column width=\"4\">\n            <div className=\"wrapper\">\n              <label htmlFor=\"recurrenceEnds\">\n                {intl.formatMessage(messages.recurrenceEnds)}\n              </label>\n            </div>\n          </Grid.Column>\n          <Grid.Column width=\"8\">\n            <Form.Group inline>\n              <Form.Field>\n                <Radio\n                  label=\"\"\n                  name=\"recurrenceEnds\"\n                  id=\"recurrenceEndsCount\"\n                  value=\"count\"\n                  checked={value === 'count'}\n                  onChange={(e, { value }) => onChange('recurrenceEnds', value)}\n                />\n              </Form.Field>\n              <Form.Field disabled={value !== 'count'}>\n                {intl.formatMessage(messages.recurrenceEndsCount)}\n              </Form.Field>\n              <Form.Field disabled={value !== 'count'}>\n                <Input\n                  id=\"count\"\n                  name=\"count\"\n                  value={count || ''}\n                  onChange={({ target }) => {\n                    onChange(\n                      target.id,\n                      target.value === '' ? undefined : target.value,\n                    );\n                  }}\n                />\n              </Form.Field>\n              <Form.Field disabled={value !== 'count'}>\n                {intl.formatMessage(messages.occurrences)}\n              </Form.Field>\n            </Form.Group>\n            <Form.Group inline>\n              <Form.Field>\n                <Radio\n                  id=\"recurrenceEndsUntil\"\n                  label=\"\"\n                  name=\"recurrenceEnds\"\n                  value=\"until\"\n                  checked={value === 'until'}\n                  onChange={(e, { value }) => onChange('recurrenceEnds', value)}\n                />\n              </Form.Field>\n\n              <Form.Field disabled={value !== 'until'}>\n                <DatetimeWidget\n                  id=\"until\"\n                  title={intl.formatMessage(messages.recurrenceEndsUntil)}\n                  dateOnly={true}\n                  value={until || ''}\n                  resettable={false}\n                  onChange={(id, value) => {\n                    onChange(id, value === '' ? undefined : value);\n                  }}\n                />\n              </Form.Field>\n            </Form.Group>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Form.Field>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nEndField.propTypes = {\n  value: PropTypes.string,\n  count: PropTypes.any,\n  until: PropTypes.any,\n  onChange: PropTypes.func,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nEndField.defaultProps = {\n  value: null,\n  count: null,\n  until: null,\n  onChange: null,\n};\n\nexport default injectIntl(EndField);\n","/**\n * ByMonthDayField component.\n * @module components/manage/Widgets/RecurrenceWidget/ByMonthDayField\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Form, Input } from 'semantic-ui-react';\n\nconst messages = defineMessages({\n  bymonthDay: { id: 'Month day', defaultMessage: 'Day' },\n  ofTheMonth: { id: 'of the month', defaultMessage: 'of the month' },\n});\n/**\n * ByMonthDayField component class.\n * @function ByMonthDayField\n * @returns {string} Markup of the component.\n */\nconst ByMonthDayField = ({\n  value,\n  disabled,\n  onChange,\n  hideAfterLabel,\n  intl,\n}) => {\n  return (\n    <>\n      <Form.Field inline disabled={disabled}>\n        {intl.formatMessage(messages.bymonthDay)}\n      </Form.Field>\n      <Form.Field inline disabled={disabled}>\n        <Input\n          type=\"number\"\n          id=\"bymonthday\"\n          name=\"bymonthday\"\n          value={value || ''}\n          onChange={({ target }) => {\n            onChange(\n              target.id,\n              target.value === '' ? undefined : [parseInt(target.value)],\n            );\n          }}\n        />\n      </Form.Field>\n      {!hideAfterLabel && (\n        <Form.Field inline disabled={disabled}>\n          {intl.formatMessage(messages.ofTheMonth)}\n        </Form.Field>\n      )}\n    </>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nByMonthDayField.propTypes = {\n  disabled: PropTypes.bool,\n  value: PropTypes.any,\n  onChange: PropTypes.func,\n  hideAfterLabel: PropTypes.bool,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nByMonthDayField.defaultProps = {\n  disabled: false,\n  value: null,\n  onChange: null,\n  hideAfterLabel: false,\n};\n\nexport default injectIntl(ByMonthDayField);\n","/**\n * SelectInput component.\n * @module components/manage/Widgets/RecurrenceWidget/SelectInput\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport { find } from 'lodash';\nimport {\n  Option,\n  DropdownIndicator,\n  selectTheme,\n  customSelectStyles,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\n/**\n * SelectInput component class.\n * @function SelectInput\n * @returns {string} Markup of the component.\n */\nconst SelectInput = ({ name, disabled, options, value, onChange }) => {\n  const inlineSelectStyles = {\n    ...customSelectStyles,\n    control: (styles, state) => ({\n      ...customSelectStyles.control(styles, state),\n      minWidth: '130px',\n    }),\n  };\n  const getDefaultValue = (choices, value) => {\n    const element = find(choices, (o) => o.value === value);\n    return element ? element : {};\n  };\n\n  return (\n    <Select\n      isDisabled={disabled}\n      id={name}\n      name={name}\n      className=\"react-select-container\"\n      classNamePrefix=\"react-select\"\n      defaultValue={getDefaultValue(options, value)}\n      value={getDefaultValue(options, value)}\n      options={options}\n      styles={inlineSelectStyles}\n      theme={selectTheme}\n      components={{\n        DropdownIndicator,\n        Option,\n      }}\n      onChange={(data) => onChange(name, data.value)}\n    />\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nSelectInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  disabled: PropTypes.bool,\n  value: PropTypes.any,\n  onChange: PropTypes.func,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nSelectInput.defaultProps = {\n  name: 'select',\n  options: [],\n  disabled: false,\n  value: null,\n  onChange: null,\n};\n\nexport default SelectInput;\n","/**\n * WeekdayOfTheMonthIndexField component.\n * @module components/manage/Widgets/RecurrenceWidget/WeekdayOfTheMonthIndexField\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { map } from 'lodash';\nimport { Form } from 'semantic-ui-react';\nimport SelectInput from './SelectInput';\n\n/**\n * WeekdayOfTheMonthIndexField component class.\n * @function WeekdayOfTheMonthIndexField\n * @returns {string} Markup of the component.\n */\n\nconst messages = defineMessages({\n  bymonthDayNumber: { id: 'Weeek day of month', defaultMessage: 'The' },\n\n  first: { id: 'First', defaultMessage: 'First' },\n  second: { id: 'Second', defaultMessage: 'Second' },\n  third: { id: 'Third', defaultMessage: 'Third' },\n  fourth: { id: 'Fourth', defaultMessage: 'Fourth' },\n  last: { id: 'Last', defaultMessage: 'Last' },\n});\n\nconst ORDINAL_NUMBERS = {\n  '1': 'first',\n  '2': 'second',\n  '3': 'third',\n  '4': 'fourth',\n  '-1': 'last',\n};\n\nclass WeekdayOfTheMonthIndexField extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    disabled: PropTypes.bool,\n    value: PropTypes.any,\n    onChange: PropTypes.func,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    disabled: false,\n    value: null,\n    onChange: null,\n  };\n\n  render() {\n    const { intl, disabled } = this.props;\n    const weekdayOfTheMonthIndexList = [\n      ...map(Object.keys(ORDINAL_NUMBERS), (option) => ({\n        value: parseInt(option),\n        label: intl.formatMessage(messages[ORDINAL_NUMBERS[option]]),\n      })),\n    ];\n    return (\n      <>\n        <Form.Field disabled={disabled}>\n          {intl.formatMessage(messages.bymonthDayNumber)}\n        </Form.Field>\n\n        <Form.Field disabled={disabled}>\n          <SelectInput\n            name=\"weekdayOfTheMonthIndex\"\n            options={weekdayOfTheMonthIndexList}\n            {...this.props}\n          />\n        </Form.Field>\n      </>\n    );\n  }\n}\n\nexport default injectIntl(WeekdayOfTheMonthIndexField);\n","/**\n * WeekdayOfTheMonthField component.\n * @module components/manage/Widgets/RecurrenceWidget/WeekdayOfTheMonthField\n */\n\nimport React from 'react';\nimport { map } from 'lodash';\nimport { Days } from './Utils';\nimport SelectInput from './SelectInput';\nimport { Form } from 'semantic-ui-react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { useSelector } from 'react-redux';\n\n/**\n * WeekdayOfTheMonthField component class.\n * @function WeekdayOfTheMonthField\n * @returns {string} Markup of the component.\n */\n\nconst WeekdayOfTheMonthField = (props) => {\n  const { disabled = false, moment: momentlib } = props;\n  const lang = useSelector((state) => state.intl.locale);\n\n  const moment = momentlib.default;\n  moment.locale(lang);\n\n  const weekdayOfTheMonthList = [\n    ...map(Object.keys(Days), (d) => ({\n      value: Days[d].weekday,\n      label: moment.weekdays(Days[d].weekday + 1),\n    })),\n  ];\n\n  return (\n    <Form.Field disabled={disabled}>\n      <SelectInput\n        name=\"weekdayOfTheMonth\"\n        options={weekdayOfTheMonthList}\n        {...props}\n      />\n    </Form.Field>\n  );\n};\n\nexport default injectLazyLibs(['moment'])(WeekdayOfTheMonthField);\n","/**\n * ByMonthField component.\n * @module components/manage/Widgets/RecurrenceWidget/ByMonthField\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport { Form, Grid, Radio } from 'semantic-ui-react';\nimport ByMonthDayField from './ByMonthDayField';\nimport WeekdayOfTheMonthIndexField from './WeekdayOfTheMonthIndexField';\nimport WeekdayOfTheMonthField from './WeekdayOfTheMonthField';\n\n/**\n * ByMonthField component class.\n * @function ByMonthField\n * @returns {string} Markup of the component.\n */\nconst ByMonthField = ({\n  label,\n  value,\n  bymonthday,\n  weekdayOfTheMonthIndex,\n  weekdayOfTheMonth,\n  onChange,\n  intl,\n}) => {\n  return (\n    <Form.Field inline className=\"text\">\n      <Grid>\n        <Grid.Row stretched>\n          <Grid.Column width=\"4\">\n            <div className=\"wrapper\">\n              <label htmlFor=\"monthly\">{label}</label>\n            </div>\n          </Grid.Column>\n          <Grid.Column width=\"8\">\n            <Form.Group inline>\n              <Form.Field>\n                <Radio\n                  label=\"\"\n                  name=\"monthly\"\n                  id=\"monthly-bymonthday\"\n                  value=\"bymonthday\"\n                  checked={value === 'bymonthday'}\n                  onChange={(e, { value }) => onChange('monthly', value)}\n                />\n              </Form.Field>\n              <ByMonthDayField\n                value={bymonthday}\n                disabled={value !== 'bymonthday'}\n                onChange={onChange}\n              />\n            </Form.Group>\n            <Form.Group inline>\n              <Form.Field>\n                <Radio\n                  label=\"\"\n                  name=\"monthly\"\n                  id=\"monthly-byweekday\"\n                  value=\"byweekday\"\n                  checked={value === 'byweekday'}\n                  onChange={(e, { value }) => onChange('monthly', value)}\n                />\n              </Form.Field>\n\n              <WeekdayOfTheMonthIndexField\n                disabled={value !== 'byweekday'}\n                value={weekdayOfTheMonthIndex}\n                onChange={onChange}\n              />\n\n              <WeekdayOfTheMonthField\n                disabled={value !== 'byweekday'}\n                value={weekdayOfTheMonth}\n                onChange={onChange}\n              />\n            </Form.Group>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Form.Field>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nByMonthField.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.any,\n  bymonthday: PropTypes.any,\n  weekdayOfTheMonthIndex: PropTypes.any,\n  weekdayOfTheMonth: PropTypes.any,\n  onChange: PropTypes.func,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nByMonthField.defaultProps = {\n  label: null,\n  value: null,\n  bymonthday: null,\n  weekdayOfTheMonthIndex: null,\n  weekdayOfTheMonth: null,\n  onChange: null,\n};\n\nexport default injectIntl(ByMonthField);\n","/**\n * MonthOfTheYearField component.\n * @module components/manage/Widgets/RecurrenceWidget/MonthOfTheYearField\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { map } from 'lodash';\nimport { Form } from 'semantic-ui-react';\nimport SelectInput from './SelectInput';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { useSelector } from 'react-redux';\n\n/**\n * MonthOfTheYearField component class.\n * @function MonthOfTheYearField\n * @returns {string} Markup of the component.\n */\nconst MonthOfTheYearField = ({\n  value,\n  disabled,\n  inline,\n  onChange,\n  moment: momentlib,\n}) => {\n  const moment = momentlib.default;\n  const lang = useSelector((state) => state.intl.locale);\n  moment.locale(lang);\n  const monthList = [\n    ...map(moment.months(), (m, i) => ({\n      value: i + 1,\n      label: m,\n    })),\n  ];\n\n  return (\n    <Form.Field inline={inline} disabled={disabled}>\n      <SelectInput\n        name=\"monthOfTheYear\"\n        disabled={disabled}\n        options={monthList}\n        value={value}\n        onChange={onChange}\n      />\n    </Form.Field>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nMonthOfTheYearField.propTypes = {\n  value: PropTypes.any,\n  disabled: PropTypes.bool,\n  inline: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nMonthOfTheYearField.defaultProps = {\n  value: null,\n  disabled: false,\n  inline: false,\n  onChange: null,\n};\n\nexport default injectLazyLibs(['moment'])(MonthOfTheYearField);\n","/**\n * ByYearField component.\n * @module components/manage/Widgets/RecurrenceWidget/ByYearField\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Form, Grid, Radio } from 'semantic-ui-react';\n\nimport ByMonthDayField from './ByMonthDayField';\nimport MonthOfTheYearField from './MonthOfTheYearField';\nimport WeekdayOfTheMonthIndexField from './WeekdayOfTheMonthIndexField';\nimport WeekdayOfTheMonthField from './WeekdayOfTheMonthField';\nconst messages = defineMessages({\n  ofTheMonth: { id: 'of the month', defaultMessage: 'of the month' },\n});\n/**\n * ByYearField component class.\n * @function ByYearField\n * @returns {string} Markup of the component.\n */\nconst ByYearField = ({\n  label,\n  value,\n  bymonthday,\n  monthOfTheYear,\n  weekdayOfTheMonthIndex,\n  weekdayOfTheMonth,\n  onChange,\n  intl,\n}) => {\n  return (\n    <Form.Field inline className=\"text byyear-field\">\n      <Grid>\n        <Grid.Row stretched>\n          <Grid.Column width=\"4\">\n            <div className=\"wrapper\">\n              <label htmlFor=\"yearly\">{label}</label>\n            </div>\n          </Grid.Column>\n          <Grid.Column width=\"8\">\n            <Form.Group inline className=\"byyear-bymonthday\">\n              <Form.Field>\n                <Radio\n                  label=\"\"\n                  name=\"yearly\"\n                  value=\"bymonthday\"\n                  id=\"yearly-bymonthday\"\n                  checked={value === 'bymonthday'}\n                  onChange={(e, { value }) => onChange('yearly', value)}\n                />\n              </Form.Field>\n\n              <ByMonthDayField\n                value={bymonthday}\n                disabled={value !== 'bymonthday'}\n                onChange={onChange}\n                hideAfterLabel={true}\n              />\n\n              <MonthOfTheYearField\n                value={monthOfTheYear}\n                disabled={value !== 'bymonthday'}\n                onChange={onChange}\n              />\n            </Form.Group>\n            <Form.Group inline className=\"byyear-byday\">\n              <Form.Field>\n                <Radio\n                  label=\"\"\n                  name=\"yearly\"\n                  id=\"yearly-byday\"\n                  value=\"byday\"\n                  checked={value === 'byday'}\n                  onChange={(e, { value }) => onChange('yearly', value)}\n                />\n              </Form.Field>\n\n              <WeekdayOfTheMonthIndexField\n                disabled={value !== 'byday'}\n                value={weekdayOfTheMonthIndex}\n                onChange={onChange}\n              />\n\n              <WeekdayOfTheMonthField\n                disabled={value !== 'byday'}\n                value={weekdayOfTheMonth}\n                onChange={onChange}\n              />\n\n              <Form.Field disabled={value !== 'byday'}>\n                {intl.formatMessage(messages.ofTheMonth)}\n              </Form.Field>\n\n              <MonthOfTheYearField\n                value={monthOfTheYear}\n                disabled={value !== 'byday'}\n                onChange={onChange}\n                inline={false}\n              />\n            </Form.Group>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Form.Field>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nByYearField.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.any,\n  bymonthday: PropTypes.any,\n  monthOfTheYear: PropTypes.any,\n  weekdayOfTheMonthIndex: PropTypes.any,\n  weekdayOfTheMonth: PropTypes.any,\n  onChange: PropTypes.func,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nByYearField.defaultProps = {\n  label: null,\n  value: null,\n  bymonthday: null,\n  monthOfTheYear: null,\n  weekdayOfTheMonthIndex: null,\n  weekdayOfTheMonth: null,\n  onChange: null,\n};\n\nexport default injectIntl(ByYearField);\n","/**\n * Occurences component.\n * @module components/manage/Widgets/RecurrenceWidget/Occurences\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { List, Button, Header, Label } from 'semantic-ui-react';\nimport { Icon } from '@plone/volto/components';\nimport addSVG from '@plone/volto/icons/circle-plus.svg';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport { useSelector } from 'react-redux';\nimport { toISOString } from './Utils';\n\nconst messages = defineMessages({\n  selected_dates: {\n    id: 'Selected dates',\n    defaultMessage: 'Selected dates',\n  },\n  start_of_recurrence: {\n    id: 'Start of the recurrence',\n    defaultMessage: 'Start of the recurrence',\n  },\n  additional_date: {\n    id: 'Additional date',\n    defaultMessage: 'Additional date',\n  },\n  other_items: {\n    id: 'others',\n    defaultMessage: 'others',\n  },\n  no_occurences: {\n    id: 'No occurences set',\n    defaultMessage: 'No occurences set',\n  },\n  exclude: {\n    id: 'Exclude this occurence',\n    defaultMessage: 'Exclude this occurence',\n  },\n  include: {\n    id: 'Include this occurence',\n    defaultMessage: 'Include this occurence',\n  },\n});\n\nconst formatDate = (d, moment) => {\n  const m = moment(d);\n  return m.format('dddd') + ', ' + m.format('LL');\n};\n\n/**\n * Occurences component class.\n * @function Occurences\n * @returns {string} Markup of the component.\n */\nconst Occurences_ = ({\n  rruleSet,\n  exclude,\n  undoExclude,\n  intl,\n  showTitle,\n  editOccurences,\n  moment: momentlib,\n}) => {\n  const moment = momentlib.default;\n  const lang = useSelector((state) => state.intl.locale);\n  moment.locale(lang);\n  let all = [];\n  const isExcluded = (date) => {\n    var dateISO = toISOString(date);\n    var excluded = false;\n    rruleSet.exdates().forEach((ex) => {\n      var exISO = toISOString(ex);\n      if (exISO === dateISO) {\n        excluded = true;\n      }\n    });\n    return excluded;\n  };\n\n  const isAdditional = (date) => {\n    var dateISO = toISOString(date);\n    var additional = false;\n    rruleSet.rdates().forEach((d) => {\n      var dd = toISOString(d);\n      if (dd === dateISO) {\n        additional = true;\n      }\n    });\n    return additional;\n  };\n\n  if (rruleSet) {\n    all = rruleSet.all();\n\n    rruleSet.exdates().forEach((date) => {\n      if (all.indexOf(date) < 0) {\n        all.push(date);\n      }\n    });\n    all.sort((a, b) => {\n      return a > b ? 1 : -1;\n    });\n  }\n\n  const others = all.splice(100);\n\n  return (\n    <div className=\"occurences\">\n      {all.length === 0 && <>{intl.formatMessage(messages.no_occurences)}</>}\n      {showTitle && (\n        <Header as=\"h2\">{intl.formatMessage(messages.selected_dates)}</Header>\n      )}\n\n      <List divided verticalAlign=\"middle\">\n        {all.map((date, index) => {\n          const excluded = isExcluded(date);\n          return (\n            <List.Item key={date.toString()}>\n              {editOccurences && (\n                <List.Content floated=\"right\">\n                  {index > 0 ? (\n                    <>\n                      {!excluded && (\n                        <Button\n                          basic\n                          icon\n                          className=\"exclude-button\"\n                          onClick={() => {\n                            exclude(date);\n                          }}\n                          aria-label={intl.formatMessage(messages.exclude)}\n                        >\n                          <Icon name={trashSVG} size=\"18px\" />\n                        </Button>\n                      )}\n                      {excluded && (\n                        <Button\n                          basic\n                          icon\n                          className=\"include-button\"\n                          onClick={() => {\n                            undoExclude(date);\n                          }}\n                          aria-label={intl.formatMessage(messages.include)}\n                        >\n                          <Icon name={addSVG} size=\"24px\" />\n                        </Button>\n                      )}\n                    </>\n                  ) : (\n                    intl.formatMessage(messages.start_of_recurrence)\n                  )}\n                </List.Content>\n              )}\n              <List.Content className={cx({ excluded: excluded })}>\n                {formatDate(date, moment)}\n                {isAdditional(date) && (\n                  <Label\n                    pointing=\"left\"\n                    size=\"small\"\n                    color={excluded ? 'grey' : 'green'}\n                  >\n                    {intl.formatMessage(messages.additional_date)}\n                  </Label>\n                )}\n              </List.Content>\n            </List.Item>\n          );\n        })}\n        {others.length > 0 && (\n          <List.Item>\n            <List.Content>\n              {`... ${intl.formatMessage(messages.other_items)} ${\n                others.length\n              }`}\n            </List.Content>\n          </List.Item>\n        )}\n      </List>\n    </div>\n  );\n};\n\nexport const Occurences = injectLazyLibs(['moment'])(Occurences_);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nOccurences.propTypes = {\n  rruleSet: PropTypes.any,\n  showTitle: PropTypes.bool,\n  editOccurences: PropTypes.bool,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nOccurences.defaultProps = {\n  rruleSet: null,\n  showTitle: true,\n  editOccurences: true,\n};\n\nexport default injectIntl(Occurences);\n","/**\n * RecurrenceWidget component.\n * @module components/manage/Widgets/RecurrenceWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { RRule, RRuleSet, rrulestr } from 'rrule';\nimport { connect } from 'react-redux';\n\nimport cx from 'classnames';\nimport { isEqual, map, find, concat, remove } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport {\n  Form,\n  Grid,\n  Label,\n  Button,\n  Segment,\n  Modal,\n  Header,\n} from 'semantic-ui-react';\n\nimport { SelectWidget, Icon, DatetimeWidget } from '@plone/volto/components';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport editingSVG from '@plone/volto/icons/editing.svg';\nimport trashSVG from '@plone/volto/icons/delete.svg';\n\nimport {\n  Days,\n  OPTIONS,\n  FREQUENCES,\n  WEEKLY_DAYS,\n  MONDAYFRIDAY_DAYS,\n  toISOString,\n  rrulei18n,\n} from './Utils';\n\nimport IntervalField from './IntervalField';\nimport ByDayField from './ByDayField';\nimport EndField from './EndField';\nimport ByMonthField from './ByMonthField';\nimport ByYearField from './ByYearField';\nimport Occurences from './Occurences';\n\nconst messages = defineMessages({\n  editRecurrence: {\n    id: 'Edit recurrence',\n    defaultMessage: 'Edit recurrence',\n  },\n  save: {\n    id: 'Save recurrence',\n    defaultMessage: 'Save',\n  },\n  remove: {\n    id: 'Remove recurrence',\n    defaultMessage: 'Remove',\n  },\n  repeat: {\n    id: 'Repeat',\n    defaultMessage: 'Repeat',\n  },\n  daily: {\n    id: 'Daily',\n    defaultMessage: 'Daily',\n  },\n  mondayfriday: {\n    id: 'Monday and Friday',\n    defaultMessage: 'Monday and Friday',\n  },\n\n  weekdays: {\n    id: 'Weekday',\n    defaultMessage: 'Weekday',\n  },\n  weekly: {\n    id: 'Weekly',\n    defaultMessage: 'Weekly',\n  },\n  monthly: {\n    id: 'Monthly',\n    defaultMessage: 'Monthly',\n  },\n  yearly: {\n    id: 'Yearly',\n    defaultMessage: 'Yearly',\n  },\n\n  repeatEvery: {\n    id: 'Repeat every',\n    defaultMessage: 'Repeat every',\n  },\n  repeatOn: {\n    id: 'Repeat on',\n    defaultMessage: 'Repeat on',\n  },\n\n  interval_daily: {\n    id: 'Interval Daily',\n    defaultMessage: 'days',\n  },\n  interval_weekly: {\n    id: 'Interval Weekly',\n    defaultMessage: 'week(s)',\n  },\n  interval_monthly: {\n    id: 'Interval Monthly',\n    defaultMessage: 'Month(s)',\n  },\n  interval_yearly: {\n    id: 'Interval Yearly',\n    defaultMessage: 'year(s)',\n  },\n  add_date: {\n    id: 'Add date',\n    defaultMessage: 'Add date',\n  },\n  select_date_to_add_to_recurrence: {\n    id: 'Select a date to add to recurrence',\n    defaultMessage: 'Select a date to add to recurrence',\n  },\n});\n\nconst NoRRuleOptions = [\n  'recurrenceEnds',\n  'monthly',\n  'weekdayOfTheMonthIndex',\n  'weekdayOfTheMonth',\n  'yearly',\n  'monthOfTheYear',\n  'byhour',\n  'byminute',\n  'bysecond',\n  'bynmonthday',\n  'exdates',\n  'rdates',\n];\n/**\n * RecurrenceWidget component class.\n * @function RecurrenceWidget\n * @returns {string} Markup of the component.\n */\nclass RecurrenceWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    formData: PropTypes.object,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    value: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Actions\n   */\n  constructor(props, intl) {\n    super(props);\n\n    this.moment = this.props.moment.default;\n    this.moment.locale(this.props.lang);\n\n    let rruleSet = this.props.value\n      ? rrulestr(props.value, {\n          compatible: true, //If set to True, the parser will operate in RFC-compatible mode. Right now it means that unfold will be turned on, and if a DTSTART is found, it will be considered the first recurrence instance, as documented in the RFC.\n          forceset: true,\n          // dtstart: props.formData.start\n          //   ? this.getUTCDate(props.formData.start)\n          //       .startOf('day')\n          //       .toDate()\n          //   : null,\n        })\n      : new RRuleSet();\n\n    this.state = {\n      open: false,\n      rruleSet: rruleSet,\n      formValues: this.getFormValues(rruleSet),\n      RRULE_LANGUAGE: rrulei18n(this.props.intl, this.moment, this.props.lang),\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.value) {\n      this.setRecurrenceStartEnd();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.value) {\n      if (prevProps.formData?.start !== this.props.formData?.start) {\n        let start = this.getUTCDate(this.props.formData?.start)\n          .startOf('day')\n          .toDate();\n\n        this.setState((prevState) => {\n          let rruleSet = prevState.rruleSet;\n\n          rruleSet = this.updateRruleSet(\n            rruleSet,\n            prevState.formValues,\n            'dtstart',\n            start,\n          );\n\n          return {\n            ...prevState,\n            rruleSet,\n          };\n        });\n      }\n    }\n  }\n\n  editRecurrence = () => {\n    this.setRecurrenceStartEnd();\n  };\n\n  setRecurrenceStartEnd = () => {\n    const start = this.props.formData?.start;\n\n    let _start = this.getUTCDate(start).startOf('day').toDate();\n\n    this.setState((prevState) => {\n      let rruleSet = prevState.rruleSet;\n      const formValues = this.getFormValues(rruleSet); //to set default values, included end\n\n      rruleSet = this.updateRruleSet(rruleSet, formValues, 'dtstart', _start);\n      return {\n        ...prevState,\n        rruleSet,\n        formValues,\n      };\n    });\n  };\n\n  getUTCDate = (date) => {\n    return date.match(/T(.)*(-|\\+|Z)/g)\n      ? this.moment(date).utc()\n      : this.moment(`${date}Z`).utc();\n  };\n\n  show = (dimmer) => () => {\n    this.setState({ dimmer, open: true });\n    this.editRecurrence();\n  };\n  close = () => this.setState({ open: false });\n\n  getFreq = (number, weekdays) => {\n    let freq = FREQUENCES.DAILY;\n    Object.entries(OPTIONS.frequences).forEach(([f, o]) => {\n      if (o.rrule === number) {\n        freq = f;\n      }\n    });\n    if (freq === FREQUENCES.WEEKLY && weekdays) {\n      if (isEqual(weekdays.sort(), WEEKLY_DAYS.map((w) => w.weekday).sort())) {\n        freq = FREQUENCES.WEEKDAYS;\n      }\n    }\n    return freq;\n  };\n\n  getWeekday = (number) => {\n    var day = null;\n    const n = number === -1 ? 6 : number; //because sunday for moment has index 0, but for rrule has index 6\n    Object.keys(Days).forEach((d) => {\n      if (Days[d].weekday === n) {\n        day = Days[d];\n      }\n    });\n    return day;\n  };\n\n  /**\n   * Called on init, to populate form values\n   * */\n  getFormValues = (rruleSet) => {\n    //default\n    let formValues = {\n      freq: FREQUENCES.DAILY,\n      interval: 1,\n    };\n\n    formValues = this.changeField(\n      formValues,\n      'recurrenceEnds',\n      this.props.formData?.end ? 'until' : 'count',\n    );\n\n    const rrule = rruleSet.rrules()[0];\n\n    if (rrule) {\n      var freq = this.getFreq(rrule.options.freq, rrule.options.byweekday);\n\n      //init with rruleOptions\n      Object.entries(rrule.options).forEach(([option, value]) => {\n        switch (option) {\n          case 'freq':\n            formValues[option] = freq;\n            break;\n          case 'count':\n            if (value != null) {\n              formValues['recurrenceEnds'] = option;\n              formValues[option] = value;\n            }\n            break;\n          case 'until':\n            if (value != null) {\n              formValues['recurrenceEnds'] = option;\n              formValues[option] = toISOString(value);\n            }\n            break;\n          case 'byweekday':\n            if (value && value.length > 0) {\n              if (isEqual(value, WEEKLY_DAYS)) {\n                formValues['freq'] = FREQUENCES.WEEKDAYS;\n              }\n              if (isEqual(value, MONDAYFRIDAY_DAYS)) {\n                formValues['freq'] = FREQUENCES.MONDAYFRIDAY;\n              }\n            }\n            formValues[option] = value\n              ? value.map((d) => {\n                  return this.getWeekday(d);\n                })\n              : [];\n            break;\n          case 'bymonthday':\n            if (value && value.length > 0) {\n              if (freq === FREQUENCES.MONTHLY) {\n                formValues['monthly'] = option;\n              }\n              if (freq === FREQUENCES.YEARLY) {\n                formValues['yearly'] = option;\n              }\n            } else {\n              if (freq === FREQUENCES.MONTHLY) {\n                formValues['monthly'] = null;\n              }\n              if (freq === FREQUENCES.YEARLY) {\n                formValues['yearly'] = null;\n              }\n            }\n            formValues[option] = value;\n            break;\n          case 'bynweekday':\n            if (value && value.length > 0) {\n              //[weekDayNumber,orinal_number] -> translated is for example: [sunday, third] -> the third sunday of the month\n\n              if (freq === FREQUENCES.SMONTHLY) {\n                formValues['monthly'] = 'byweekday';\n              }\n              if (freq === FREQUENCES.YEARLY) {\n                formValues['yearly'] = 'byday';\n              }\n              formValues['weekdayOfTheMonth'] = value[0][0];\n              formValues['weekdayOfTheMonthIndex'] = value[0][1];\n            }\n            break;\n          case 'bymonth':\n            if (freq === FREQUENCES.YEARLY) {\n              formValues['yearly'] = 'byday';\n            }\n            formValues['monthOfTheYear'] = value ? value[0] : null;\n            break;\n\n          default:\n            formValues[option] = value;\n        }\n      });\n    }\n    return formValues;\n  };\n\n  formValuesToRRuleOptions = (formValues) => {\n    var values = Object.assign({}, formValues);\n\n    //remove NoRRuleOptions\n    NoRRuleOptions.forEach((opt) => {\n      delete values[opt];\n    });\n\n    //transform values for rrule\n    Object.keys(values).forEach((field) => {\n      var value = values[field];\n      switch (field) {\n        case 'freq':\n          if (value) {\n            value = OPTIONS.frequences[value].rrule;\n          }\n          break;\n        case 'until':\n          value = value ? this.moment(new Date(value)).utc().toDate() : null;\n          break;\n        default:\n          break;\n      }\n\n      if (value) {\n        //set value\n        values[field] = value;\n      } else {\n        //remove empty values\n        delete values[field];\n      }\n    });\n\n    return values;\n  };\n\n  updateRruleSet = (rruleSet, formValues, field, value) => {\n    var rruleOptions = this.formValuesToRRuleOptions(formValues);\n    var dstart =\n      field === 'dtstart'\n        ? value\n        : rruleSet.dtstart()\n        ? rruleSet.dtstart()\n        : this.moment().utc().toDate();\n    var exdates =\n      field === 'exdates' ? value : Object.assign([], rruleSet.exdates());\n\n    var rdates =\n      field === 'rdates' ? value : Object.assign([], rruleSet.rdates());\n\n    rruleOptions.dtstart = dstart;\n\n    let set = new RRuleSet();\n    //set.dtstart(dstart);\n    set.rrule(new RRule(rruleOptions));\n\n    exdates.map((ex) => set.exdate(ex));\n    rdates.map((r) => set.rdate(r));\n\n    return set;\n  };\n\n  getDefaultUntil = (freq) => {\n    const moment = this.moment;\n    var end = this.props.formData?.end\n      ? toISOString(this.getUTCDate(this.props.formData.end).toDate())\n      : null;\n    var tomorrow = toISOString(moment().add(1, 'days').utc().toDate());\n    var nextWeek = toISOString(moment().add(7, 'days').utc().toDate());\n    var nextMonth = toISOString(moment().add(1, 'months').utc().toDate());\n    var nextYear = toISOString(moment().add(1, 'years').utc().toDate());\n\n    var until = end;\n    switch (freq) {\n      case FREQUENCES.DAILY:\n        until = end ? end : tomorrow;\n        break;\n      case FREQUENCES.WEEKLY:\n        until = end ? end : nextWeek;\n        break;\n      case FREQUENCES.WEEKDAYS:\n        until = end ? end : nextWeek;\n        break;\n      case FREQUENCES.MONDAYFRIDAY:\n        until = end ? end : nextWeek;\n        break;\n      case FREQUENCES.MONTHLY:\n        until = end ? end : nextMonth;\n        break;\n      case FREQUENCES.YEARLY:\n        until = end ? end : nextYear;\n        break;\n      default:\n        break;\n    }\n\n    return until;\n  };\n\n  changeField = (formValues, field, value) => {\n    //  git p.log('field', field, 'value', value);\n    //get weekday from state.\n    const moment = this.moment;\n    const byweekday =\n      this.state?.rruleSet?.rrules().length > 0\n        ? this.state.rruleSet.rrules()[0].origOptions.byweekday\n        : null;\n    const currWeekday = this.getWeekday(moment().day() - 1);\n    const currMonth = moment().month() + 1;\n\n    const startMonth = this.props.formData?.start\n      ? moment(this.props.formData.start).month() + 1\n      : currMonth;\n\n    const startWeekday = this.props.formData?.start\n      ? this.getWeekday(moment(this.props.formData.start).day() - 1)\n      : currWeekday;\n    formValues[field] = value;\n\n    const defaultMonthDay = this.props.formData?.start\n      ? moment(this.props.formData.start).date()\n      : moment().date();\n\n    switch (field) {\n      case 'freq':\n        formValues.interval = 1;\n        const fconfig = OPTIONS.frequences[value];\n\n        //clear values\n        if (!fconfig.interval) {\n          formValues.interval = null;\n        }\n\n        formValues = this.changeField(formValues, 'byweekday', null);\n        formValues = this.changeField(formValues, 'yearly', null);\n        formValues = this.changeField(formValues, 'bymonthday', null);\n        formValues = this.changeField(formValues, 'byweekday', null);\n        formValues = this.changeField(formValues, 'monthOfTheYear', null);\n\n        if (!formValues.until) {\n          formValues.until = this.getDefaultUntil(value);\n        }\n\n        //set defaults\n        switch (value) {\n          case FREQUENCES.DAILY:\n            break;\n          case FREQUENCES.WEEKDAYS:\n            formValues = this.changeField(formValues, 'byweekday', WEEKLY_DAYS);\n            break;\n          case FREQUENCES.MONDAYFRIDAY:\n            formValues = this.changeField(\n              formValues,\n              'byweekday',\n              MONDAYFRIDAY_DAYS,\n            );\n            break;\n          case FREQUENCES.WEEKLY:\n            formValues = this.changeField(formValues, 'byweekday', [\n              startWeekday,\n            ]);\n\n            break;\n          case FREQUENCES.MONTHLY:\n            formValues = this.changeField(formValues, 'monthly', 'bymonthday');\n\n            break;\n          case FREQUENCES.YEARLY:\n            formValues = this.changeField(formValues, 'yearly', 'bymonthday');\n            break;\n          default:\n            break;\n        }\n\n        break;\n\n      case 'recurrenceEnds':\n        if (value === 'count') {\n          formValues.count = 1;\n          formValues.until = null;\n        }\n        if (value === 'until') {\n          formValues.until = this.getDefaultUntil(formValues.freq);\n          formValues.count = null; //default value\n        }\n        break;\n\n      case 'byweekday':\n        formValues.byweekday = value;\n\n        if (FREQUENCES.WEEKLY !== formValues.freq) {\n          formValues.weekdayOfTheMonth = value ? value[0].weekday : null;\n          formValues.weekdayOfTheMonthIndex = value ? value[0].n : null;\n        } else {\n          delete formValues.weekdayOfTheMonth;\n          delete formValues.weekdayOfTheMonthIndex;\n        }\n\n        break;\n      case 'weekdayOfTheMonth':\n        var weekday = this.getWeekday(value); // get new day\n        var n = byweekday ? byweekday[0].n : 1;\n        //set nth value\n        formValues.byweekday = weekday ? [weekday.nth(n)] : null;\n        break;\n      case 'weekdayOfTheMonthIndex':\n        var week_day = byweekday ? byweekday[0] : currWeekday; //get day from state. If not set get current day\n        //set nth value\n        formValues.byweekday = value ? [week_day.nth(value)] : null;\n        break;\n\n      case 'monthOfTheYear':\n        if (value === null || value === undefined) {\n          delete formValues.bymonth;\n        } else {\n          formValues.bymonth = [value];\n        }\n        break;\n\n      case 'monthly':\n        if (value === 'bymonthday') {\n          formValues.bymonthday = [defaultMonthDay]; //default value\n          formValues = this.changeField(formValues, 'byweekday', null); //default value\n        }\n        if (value === 'byweekday') {\n          formValues.bymonthday = null; //default value\n          formValues = this.changeField(formValues, 'byweekday', [\n            currWeekday.nth(1),\n          ]); //default value\n        }\n        if (value === null) {\n          formValues = this.changeField(formValues, 'bymonthday', null); //default value\n          formValues = this.changeField(formValues, 'byweekday', null); //default value\n        }\n        break;\n      case 'yearly':\n        if (value === 'bymonthday') {\n          //sets bymonth and bymonthday in rruleset\n          formValues.bymonthday = [defaultMonthDay]; //default value\n\n          formValues = this.changeField(\n            formValues,\n            'monthOfTheYear',\n            startMonth,\n          ); //default value: current month\n          formValues = this.changeField(formValues, 'byweekday', null); //default value\n        }\n        if (value === 'byday') {\n          formValues = this.changeField(formValues, 'bymonthday', null); //default value\n          formValues = this.changeField(formValues, 'byweekday', [\n            startWeekday.nth(1),\n          ]); //default value\n          formValues = this.changeField(\n            formValues,\n            'monthOfTheYear',\n            startMonth,\n          ); //default value\n        }\n        break;\n      default:\n        break;\n    }\n    return formValues;\n  };\n\n  onChangeRule = (field, value) => {\n    var formValues = Object.assign({}, this.state.formValues);\n    formValues = this.changeField(formValues, field, value);\n\n    this.setState((prevState) => {\n      var rruleSet = prevState.rruleSet;\n      rruleSet = this.updateRruleSet(rruleSet, formValues, field, value);\n      return {\n        ...prevState,\n        rruleSet,\n        formValues,\n      };\n    });\n  };\n\n  exclude = (date) => {\n    let list = this.state.rruleSet.exdates().slice(0);\n    list.push(date);\n    this.onChangeRule('exdates', list);\n  };\n\n  undoExclude = (date) => {\n    let list = this.state.rruleSet.exdates().slice(0);\n    remove(list, (e) => {\n      return e.getTime() === date.getTime();\n    });\n    this.onChangeRule('exdates', list);\n  };\n\n  addDate = (date) => {\n    const moment = this.moment;\n    let all = concat(this.state.rruleSet.all(), this.state.rruleSet.exdates());\n\n    var simpleDate = moment(new Date(date)).startOf('day').toDate().getTime();\n    var exists = find(all, (e) => {\n      var d = moment(e).startOf('day').toDate().getTime();\n      return d === simpleDate;\n    });\n    if (!exists) {\n      let list = this.state.rruleSet.rdates().slice(0);\n      list.push(new Date(date));\n      this.onChangeRule('rdates', list);\n    }\n  };\n\n  save = () => {\n    var value = this.state.rruleSet.toString();\n    this.props.onChange(this.props.id, value);\n    this.close();\n  };\n\n  remove = () => {\n    this.props.onChange(this.props.id, null);\n    let rruleSet = new RRuleSet();\n    this.setState({\n      rruleSet: rruleSet,\n      formValues: this.getFormValues(rruleSet),\n    });\n  };\n\n  render() {\n    const { open, dimmer, rruleSet, formValues, RRULE_LANGUAGE } = this.state;\n\n    const {\n      id,\n      title,\n      required,\n      description,\n      error,\n      fieldSet,\n      intl,\n    } = this.props;\n\n    return (\n      <Form.Field\n        inline\n        required={required}\n        error={error.length > 0}\n        className={cx('recurrence-widget', description ? 'help' : '')}\n        id={`${fieldSet || 'field'}-${id}`}\n      >\n        <Grid>\n          <Grid.Row stretched>\n            <Grid.Column width=\"4\">\n              <div className=\"wrapper\">\n                <label htmlFor={`field-${id}`}>{title}</label>\n              </div>\n            </Grid.Column>\n            <Grid.Column width=\"8\">\n              {rruleSet.rrules()[0] && (\n                <>\n                  <Label>\n                    {rruleSet.rrules()[0]?.toText(\n                      (t) => {\n                        return RRULE_LANGUAGE.strings[t];\n                      },\n                      RRULE_LANGUAGE,\n                      RRULE_LANGUAGE.dateFormatter,\n                    )}\n                  </Label>\n\n                  <Segment>\n                    <Occurences\n                      rruleSet={rruleSet}\n                      exclude={this.exclude}\n                      undoExclude={this.undoExclude}\n                      showTitle={false}\n                      editOccurences={false}\n                    />\n                  </Segment>\n                </>\n              )}\n              <div>\n                <Button\n                  basic\n                  disabled={this.props.isDisabled}\n                  color=\"blue\"\n                  className=\"edit-recurrence\"\n                  onClick={this.show('blurring')}\n                  type=\"button\"\n                  aria-label={intl.formatMessage(messages.editRecurrence)}\n                >\n                  <Icon\n                    name={editingSVG}\n                    size=\"20px\"\n                    title={intl.formatMessage(messages.editRecurrence)}\n                  />\n                </Button>\n                {this.props.value && (\n                  <Button\n                    basic\n                    color=\"pink\"\n                    className=\"remove-recurrence\"\n                    onClick={() => {\n                      this.remove();\n                    }}\n                    type=\"button\"\n                    aria-label={intl.formatMessage(messages.remove)}\n                  >\n                    <Icon\n                      name={trashSVG}\n                      size=\"20px\"\n                      title={intl.formatMessage(messages.remove)}\n                    />\n                  </Button>\n                )}\n              </div>\n              <Modal\n                dimmer={dimmer}\n                open={open}\n                onClose={this.close}\n                className=\"recurrence-form\"\n                closeIcon\n              >\n                <Modal.Header>\n                  {intl.formatMessage(messages.editRecurrence)}{' '}\n                </Modal.Header>\n                <Modal.Content scrolling>\n                  {rruleSet.rrules().length > 0 && (\n                    <Modal.Description>\n                      <Segment>\n                        <Form>\n                          <SelectWidget\n                            id=\"freq\"\n                            title={intl.formatMessage(messages.repeat)}\n                            getVocabulary={() => {}}\n                            getVocabularyTokenTitle={() => {}}\n                            choices={Object.keys(OPTIONS.frequences).map(\n                              (t) => {\n                                return [t, intl.formatMessage(messages[t])];\n                              },\n                            )}\n                            value={formValues.freq}\n                            onChange={this.onChangeRule}\n                          />\n                          {OPTIONS.frequences[formValues.freq].interval && (\n                            <IntervalField\n                              label={intl.formatMessage(messages.repeatEvery)}\n                              labelAfter={\n                                formValues.freq &&\n                                intl.formatMessage(\n                                  messages['interval_' + formValues.freq],\n                                )\n                              }\n                              value={formValues.interval}\n                              onChange={this.onChangeRule}\n                            />\n                          )}\n\n                          {/***** byday *****/}\n                          {OPTIONS.frequences[formValues.freq].byday && (\n                            <ByDayField\n                              label={intl.formatMessage(messages.repeatOn)}\n                              value={formValues.byweekday}\n                              onChange={this.onChangeRule}\n                            />\n                          )}\n\n                          {/***** bymonth *****/}\n                          {OPTIONS.frequences[formValues.freq].bymonth && (\n                            <ByMonthField\n                              label={intl.formatMessage(messages.repeatOn)}\n                              value={formValues.monthly}\n                              bymonthday={formValues.bymonthday}\n                              weekdayOfTheMonthIndex={\n                                formValues.weekdayOfTheMonthIndex\n                              }\n                              weekdayOfTheMonth={formValues.weekdayOfTheMonth}\n                              onChange={this.onChangeRule}\n                            />\n                          )}\n\n                          {/***** byyear *****/}\n                          {OPTIONS.frequences[formValues.freq].byyear && (\n                            <ByYearField\n                              label={intl.formatMessage(messages.repeatOn)}\n                              value={formValues.yearly}\n                              bymonthday={formValues.bymonthday}\n                              monthOfTheYear={formValues.monthOfTheYear}\n                              weekdayOfTheMonthIndex={\n                                formValues.weekdayOfTheMonthIndex\n                              }\n                              weekdayOfTheMonth={formValues.weekdayOfTheMonth}\n                              onChange={this.onChangeRule}\n                            />\n                          )}\n\n                          {/*-- ends after N recurrence or date --*/}\n                          <EndField\n                            value={formValues.recurrenceEnds}\n                            count={formValues.count}\n                            until={formValues.until}\n                            onChange={this.onChangeRule}\n                          />\n                        </Form>\n                      </Segment>\n                      <Segment>\n                        <Occurences\n                          rruleSet={rruleSet}\n                          exclude={this.exclude}\n                          undoExclude={this.undoExclude}\n                        />\n                      </Segment>\n                      <Segment>\n                        <Header as=\"h2\">\n                          {intl.formatMessage(messages.add_date)}\n                        </Header>\n\n                        <DatetimeWidget\n                          id=\"addDate\"\n                          title={intl.formatMessage(\n                            messages.select_date_to_add_to_recurrence,\n                          )}\n                          dateOnly={true}\n                          noPastDates={true}\n                          onChange={(id, value) => {\n                            this.addDate(value === '' ? undefined : value);\n                          }}\n                        />\n                      </Segment>\n                    </Modal.Description>\n                  )}\n                </Modal.Content>\n                <Modal.Actions>\n                  <Button\n                    className=\"save\"\n                    basic\n                    onClick={() => {\n                      this.save();\n                    }}\n                    aria-label={intl.formatMessage(messages.save)}\n                  >\n                    <Icon\n                      name={saveSVG}\n                      className=\"circled\"\n                      size=\"30px\"\n                      title={intl.formatMessage(messages.save)}\n                    />\n                  </Button>\n                </Modal.Actions>\n              </Modal>\n              {map(error, (message) => (\n                <Label key={message} basic color=\"red\" pointing>\n                  {message}\n                </Label>\n              ))}\n            </Grid.Column>\n          </Grid.Row>\n          {description && (\n            <Grid.Row stretched>\n              <Grid.Column stretched width=\"12\">\n                <p className=\"help\">{description}</p>\n              </Grid.Column>\n            </Grid.Row>\n          )}\n        </Grid>\n      </Form.Field>\n    );\n  }\n}\n\nexport default compose(\n  injectLazyLibs(['moment']),\n  connect((state) => ({\n    lang: state.intl.locale,\n  })),\n  injectIntl,\n)(RecurrenceWidget);\n","import { defineMessages } from 'react-intl';\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\nimport { cloneDeep } from 'lodash';\n\nconst messages = defineMessages({\n  variation: {\n    id: 'Variation',\n    defaultMessage: 'Variation',\n  },\n});\n\n/**\n * Sets the field name as first field in schema\n */\nfunction _addField(schema, name) {\n  if (schema.fieldsets[0].fields.indexOf(name) === -1) {\n    schema.fieldsets[0].fields.unshift(name);\n  }\n}\n\n/**\n * Utility function that adds the Select dropdown field to a schema\n */\nexport const addExtensionFieldToSchema = ({\n  schema,\n  name,\n  items,\n  intl,\n  title,\n  description,\n  insertFieldToOrder = _addField,\n}) => {\n  const _ = intl.formatMessage;\n\n  insertFieldToOrder(schema, name);\n\n  const hasDefaultExtension =\n    items?.findIndex(({ isDefault }) => isDefault) > -1;\n\n  if (!hasDefaultExtension) {\n    // eslint-disable-next-line\n    console.warn('You should provide a default extension in extension:', name);\n  }\n\n  schema.properties[name] = {\n    title: _(title),\n    choices: items?.map(({ id, title }) => [\n      id,\n      _({ id: title, defaultMessage: title }),\n    ]),\n    noValueOption: false,\n    default: hasDefaultExtension\n      ? items?.find((item) => item.isDefault).id\n      : null,\n  };\n\n  return schema;\n};\n\n/**\n * A generic HOC that provides \"schema enhancer functionality\" for any custom\n * block extension.\n *\n * This enables blocks to have additional \"variations\", beyond the usual\n * `variations` field. This function is not directly used by Volto.\n *\n * To be used with a block configuration like:\n *\n * ```\n *  {\n *    id: 'someBlockId',\n *    extensions: {\n *      '<someExtensionName>': {\n *        items: [\n *          {\n *            id: 'selectFacet',\n *            title: 'Select',\n *            view: SelectFacet,\n *            isDefault: true,\n *          },\n *          {\n *            id: 'checkboxFacet',\n *            title: 'Checkbox',\n *            view: CheckboxFacet,\n *            isDefault: false,\n *          },\n *        ]\n *      }\n *     }\n *  }\n * ```\n */\nexport const withBlockSchemaEnhancer = (\n  FormComponent,\n  extensionName = 'vendor',\n  insertFieldToOrder = _addField,\n) => ({ ...props }) => {\n  const { formData, schema: originalSchema } = props;\n  const intl = useIntl();\n\n  const { blocks } = config;\n\n  const blockType = formData['@type'];\n  const extensionConfig =\n    blocks?.blocksConfig[blockType]?.extensions?.[extensionName];\n\n  if (!extensionConfig)\n    return <FormComponent {...props} schema={originalSchema} />;\n\n  const activeItemName = formData?.[extensionName];\n  let activeItem = extensionConfig.items?.find(\n    (item) => item.id === activeItemName,\n  );\n  if (!activeItem)\n    activeItem = extensionConfig.items?.find((item) => item.isDefault);\n\n  const schemaEnhancer =\n    // For the main \"variation\" of blocks, allow simply passing a\n    // schemaEnhancer in the block configuration\n    activeItem?.['schemaEnhancer'] ||\n    (extensionName === 'variation' &&\n      blocks.blocksConfig?.[blockType]?.schemaEnhancer);\n\n  let schema = schemaEnhancer\n    ? schemaEnhancer({ schema: cloneDeep(originalSchema), formData, intl })\n    : cloneDeep(originalSchema);\n\n  const { title = messages.variation, description } = extensionConfig;\n\n  if (extensionConfig.items?.length > 1) {\n    addExtensionFieldToSchema({\n      schema,\n      name: extensionName,\n      items: extensionConfig.items || [],\n      intl,\n      title,\n      description,\n      insertFieldToOrder,\n    });\n  }\n\n  return <FormComponent {...props} schema={schema} />;\n};\n\n/**\n * Apply block variation schema enhancers to the provided schema, using block\n * information from the provided block data (as `formData`).\n *\n * Blocks can be enhanced with variations declared like:\n *\n * ```\n *  {\n *    id: 'searchBlock',\n *    schemaEnhancer: ({schema, formData, intl}) => schema,\n *    variations: [\n *      {\n *        id: 'facetsRightSide',\n *        title: 'Facets on right side',\n *        view: RightColumnFacets,\n *        isDefault: true,\n *      },\n *      {\n *        id: 'facetsLeftSide',\n *        title: 'Facets on left side',\n *        view: LeftColumnFacets,\n *        isDefault: false,\n *        schemaEnhancer: ({schema, formData, intl}) => schema,\n *      },\n *    ],\n *\n * ```\n * Notice that each variation can declare an option schema enhancer, and each\n * block supports an optional `schemaEnhancer` function.\n */\nexport const applySchemaEnhancer = ({\n  schema: originalSchema,\n  formData,\n  intl,\n}) => {\n  let schema, schemaEnhancer;\n  const { blocks } = config;\n\n  const blockType = formData['@type'];\n  const variations = blocks?.blocksConfig[blockType]?.variations || [];\n\n  if (variations.length === 0) {\n    // No variations present but we finalize the schema with a schemaEnhancer\n    // in the block config (if present)\n    schemaEnhancer = blocks.blocksConfig?.[blockType]?.schemaEnhancer;\n    if (schemaEnhancer)\n      schema = schemaEnhancer({\n        schema: cloneDeep(originalSchema),\n        formData,\n        intl,\n      });\n    return schema || originalSchema;\n  }\n\n  const activeItemName = formData?.variation;\n  let activeItem = variations.find((item) => item.id === activeItemName);\n  if (!activeItem) activeItem = variations.find((item) => item.isDefault);\n\n  schemaEnhancer = activeItem?.['schemaEnhancer'];\n\n  schema = schemaEnhancer\n    ? schemaEnhancer({ schema: cloneDeep(originalSchema), formData, intl })\n    : cloneDeep(originalSchema);\n\n  // Finalize the schema with a schemaEnhancer in the block config;\n  schemaEnhancer = blocks.blocksConfig?.[blockType]?.schemaEnhancer;\n  if (schemaEnhancer) schema = schemaEnhancer({ schema, formData, intl });\n\n  return schema || originalSchema;\n};\n\n/**\n * A HOC that enhances the incoming schema prop with block variations support\n * by:\n *\n * - applies the selected variation's schema enhancer\n * - adds the variation selection input (as a choice widget)\n */\nexport const withVariationSchemaEnhancer = (FormComponent) => (props) => {\n  const { formData, schema: originalSchema } = props;\n  const intl = useIntl();\n\n  const { blocks } = config;\n\n  const blockType = formData['@type'];\n  const variations = blocks?.blocksConfig[blockType]?.variations || [];\n\n  let schema = applySchemaEnhancer({ schema: originalSchema, formData, intl });\n\n  if (variations.length > 1) {\n    addExtensionFieldToSchema({\n      schema,\n      name: 'variation',\n      items: variations,\n      intl,\n      title: messages.variation,\n      insertFieldToOrder: _addField,\n    });\n  }\n\n  return <FormComponent {...props} schema={schema} />;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport DefaultImageSVG from '@plone/volto/components/manage/Blocks/Listing/default-image.svg';\n\n/**\n * Renders a preview image for a catalog brain result item.\n *\n */\nfunction PreviewImage(props) {\n  const { item, size = 'preview', alt, ...rest } = props;\n  const src = item.image_field\n    ? flattenToAppURL(`${item['@id']}/@@images/${item.image_field}/${size}`)\n    : DefaultImageSVG;\n\n  return <img src={src} alt={alt ?? item.title} {...rest} />;\n}\n\nPreviewImage.propTypes = {\n  size: PropTypes.string,\n  item: PropTypes.shape({\n    '@id': PropTypes.string.isRequired,\n    image_field: PropTypes.string,\n    title: PropTypes.string.isRequired,\n  }),\n};\n\nexport default PreviewImage;\n","/**\n * Home container.\n * @module components/theme/NotFound/NotFound\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport { withServerErrorCode } from '@plone/volto/helpers/Utils/Utils';\n\n/**\n * Not found function.\n * @function NotFound\n * @returns {string} Markup of the not found page.\n */\nconst NotFound = () => (\n  <Container className=\"view-wrapper\">\n    <h1>\n      <FormattedMessage\n        id=\"This page does not seem to exist…\"\n        defaultMessage=\"This page does not seem to exist…\"\n      />\n    </h1>\n    <p className=\"description\">\n      <FormattedMessage\n        id=\"We apologize for the inconvenience, but the page you were trying to access is not at this address. You can use the links below to help you find what you are looking for.\"\n        defaultMessage=\"We apologize for the inconvenience, but the page you were trying to access is not at this address. You can use the links below to help you find what you are looking for.\"\n      />\n    </p>\n    <p>\n      <FormattedMessage\n        id=\"If you are certain you have the correct web address but are encountering an error, please contact the {site_admin}.\"\n        defaultMessage=\"If you are certain you have the correct web address but are encountering an error, please contact the {site_admin}.\"\n        values={{\n          site_admin: (\n            <Link to=\"/contact-form\">\n              <FormattedMessage\n                id=\"Site Administration\"\n                defaultMessage=\"Site Administration\"\n              />\n            </Link>\n          ),\n        }}\n      />\n    </p>\n    <p>\n      <FormattedMessage id=\"Thank you.\" defaultMessage=\"Thank you.\" />\n    </p>\n  </Container>\n);\n\nexport default withServerErrorCode(404)(NotFound);\n","/**\n * @module components/theme/Forbidden/Forbidden\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Container } from 'semantic-ui-react';\nimport { withServerErrorCode } from '@plone/volto/helpers/Utils/Utils';\n\n/**\n * forbidden function.\n * @function Forbidden\n * @returns {string} Markup of the forbidden page.\n */\nconst Forbidden = () => (\n  <Container className=\"view-wrapper\">\n    <h1>\n      <FormattedMessage id=\"Forbidden\" defaultMessage=\"Forbidden\" />\n    </h1>\n    <p className=\"description\">\n      <FormattedMessage\n        id=\"We apologize for the inconvenience, but you don't have permissions on this resource.\"\n        defaultMessage=\"We apologize for the inconvenience, but you don't have permissions on this resource.\"\n      />\n    </p>\n  </Container>\n);\n\nexport default withServerErrorCode(403)(Forbidden);\n","/**\n * @module components/theme/Unauthorized/Unauthorized\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { withServerErrorCode } from '@plone/volto/helpers/Utils/Utils';\nimport { getBaseUrl } from '@plone/volto/helpers';\n\n/**\n * unauthorized function.\n * @function Unauthorized\n * @returns {string} Markup of the unauthorized page.\n */\nconst Unauthorized = () => {\n  const error_message = useSelector((state) => state.apierror?.message);\n  let location = useLocation();\n\n  return (\n    <Container className=\"view-wrapper\">\n      <h1>\n        <FormattedMessage id=\"Unauthorized\" defaultMessage=\"Unauthorized\" />\n      </h1>\n      <h3>{error_message}</h3>\n      <p className=\"description\">\n        <FormattedMessage\n          id=\"You are trying to access a protected resource, please {login} first.\"\n          defaultMessage=\"You are trying to access a protected resource, please {login} first.\"\n          values={{\n            login: (\n              <Link to={`${getBaseUrl(location.pathname)}/login`}>\n                <FormattedMessage id=\"log in\" defaultMessage=\"log in\" />\n              </Link>\n            ),\n          }}\n        />\n      </p>\n      <p>\n        <FormattedMessage\n          id=\"If you are certain you have the correct web address but are encountering an error, please contact the {site_admin}.\"\n          defaultMessage=\"If you are certain you have the correct web address but are encountering an error, please contact the {site_admin}.\"\n          values={{\n            site_admin: (\n              <Link to=\"/contact-form\">\n                <FormattedMessage\n                  id=\"Site Administration\"\n                  defaultMessage=\"Site Administration\"\n                />\n              </Link>\n            ),\n          }}\n        />\n      </p>\n      <p>\n        <FormattedMessage id=\"Thank you.\" defaultMessage=\"Thank you.\" />\n      </p>\n    </Container>\n  );\n};\n\nexport default withServerErrorCode(401)(Unauthorized);\n","/*\n * UniversalLink\n * @module components/UniversalLink\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport {\n  flattenToAppURL,\n  isInternalURL,\n  URLUtils,\n} from '@plone/volto/helpers/Url/Url';\nimport { matchPath } from 'react-router';\n\nimport config from '@plone/volto/registry';\n\nconst UniversalLink = ({\n  href,\n  item = null,\n  openLinkInNewTab,\n  download = false,\n  children,\n  className = null,\n  title = null,\n  ...props\n}) => {\n  const token = useSelector((state) => state.userSession?.token);\n\n  let url = href;\n  if (!href && item) {\n    if (!item['@id']) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Invalid item passed to UniversalLink',\n        item,\n        props,\n        children,\n      );\n      url = '#';\n    } else {\n      //case: generic item\n      url = flattenToAppURL(item['@id']);\n\n      //case: item like a Link\n      let remoteUrl = item.remoteUrl || item.getRemoteUrl;\n      if (!token && remoteUrl) {\n        url = remoteUrl;\n      }\n\n      //case: item of type 'File'\n      if (\n        !token &&\n        config.settings.downloadableObjects.includes(item['@type'])\n      ) {\n        url = `${url}/@@download/file`;\n      }\n\n      if (\n        !token &&\n        config.settings.viewableInBrowserObjects.includes(item['@type'])\n      ) {\n        url = `${url}/@@display-file/file`;\n      }\n    }\n  }\n\n  const isBlacklisted =\n    (config.settings.externalRoutes ?? []).find((route) =>\n      matchPath(flattenToAppURL(url), route.match),\n    )?.length > 0;\n  const isExternal = !isInternalURL(url) || isBlacklisted;\n  const isDownload = (!isExternal && url.includes('@@download')) || download;\n  const isDisplayFile =\n    (!isExternal && url.includes('@@display-file')) || false;\n\n  const checkedURL = URLUtils.checkAndNormalizeUrl(url);\n\n  url = checkedURL.url;\n\n  let tag = (\n    <Link\n      to={flattenToAppURL(url)}\n      target={openLinkInNewTab ?? false ? '_blank' : null}\n      title={title}\n      className={className}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n\n  if (isExternal) {\n    tag = (\n      <a\n        href={url}\n        title={title}\n        target={\n          !checkedURL.isMail &&\n          !checkedURL.isTelephone &&\n          !(openLinkInNewTab === false)\n            ? '_blank'\n            : null\n        }\n        rel=\"noopener noreferrer\"\n        className={className}\n        {...props}\n      >\n        {children}\n      </a>\n    );\n  } else if (isDownload) {\n    tag = (\n      <a\n        href={flattenToAppURL(url)}\n        download\n        title={title}\n        className={className}\n        {...props}\n      >\n        {children}\n      </a>\n    );\n  } else if (isDisplayFile) {\n    tag = (\n      <a\n        href={flattenToAppURL(url)}\n        title={title}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className={className}\n        {...props}\n      >\n        {children}\n      </a>\n    );\n  }\n  return tag;\n};\n\nUniversalLink.propTypes = {\n  href: PropTypes.string,\n  openLinkInNewTab: PropTypes.bool,\n  download: PropTypes.bool,\n  className: PropTypes.string,\n  title: PropTypes.string,\n  item: PropTypes.shape({\n    '@id': PropTypes.string.isRequired,\n    remoteUrl: PropTypes.string, //of plone @type 'Link'\n  }),\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default UniversalLink;\n","/**\n * Personal preferences component.\n * @module components/manage/Preferences/PersonalPreferences\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { map, keys } from 'lodash';\nimport { withCookies } from 'react-cookie';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\n\nimport { Form, Toast } from '@plone/volto/components';\nimport languages from '@plone/volto/constants/Languages';\nimport { changeLanguage } from '@plone/volto/actions';\nimport { normalizeLanguageName } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  personalPreferences: {\n    id: 'Personal Preferences',\n    defaultMessage: 'Personal Preferences',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  language: {\n    id: 'Language',\n    defaultMessage: 'Language',\n  },\n  languageDescription: {\n    id: 'Your preferred language',\n    defaultMessage: 'Your preferred language',\n  },\n  saved: {\n    id: 'Changes saved',\n    defaultMessage: 'Changes saved',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n});\n\n/**\n * PersonalPreferences class.\n * @class PersonalPreferences\n * @extends Component\n */\nclass PersonalPreferences extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    changeLanguage: PropTypes.func.isRequired,\n    closeMenu: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs PersonalPreferences\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    let language = data.language || 'en';\n    if (config.settings.supportedLanguages.includes(language)) {\n      const langFileName = normalizeLanguageName(language);\n      import('@root/../locales/' + langFileName + '.json').then((locale) => {\n        this.props.changeLanguage(language, locale.default);\n      });\n    }\n    toast.success(\n      <Toast success title={this.props.intl.formatMessage(messages.saved)} />,\n    );\n    this.props.closeMenu();\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.closeMenu();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { cookies } = this.props;\n    return (\n      <Form\n        formData={{ language: cookies.get('I18N_LANGUAGE') || '' }}\n        schema={{\n          fieldsets: [\n            {\n              id: 'default',\n              title: this.props.intl.formatMessage(messages.default),\n              fields: ['language'],\n            },\n          ],\n          properties: {\n            language: {\n              description: this.props.intl.formatMessage(\n                messages.languageDescription,\n              ),\n              title: this.props.intl.formatMessage(messages.language),\n              type: 'string',\n              choices: map(keys(languages), (lang) => [lang, languages[lang]]),\n            },\n          },\n          required: [],\n        }}\n        onSubmit={this.onSubmit}\n        onCancel={this.onCancel}\n      />\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  withCookies,\n  connect(null, { changeLanguage }),\n)(PersonalPreferences);\n","/**\n * Personal information component.\n * @module components/manage/Preferences/PersonalInformation\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\n\nimport { Form, Toast } from '@plone/volto/components';\nimport { getUser, updateUser } from '@plone/volto/actions';\n\nconst messages = defineMessages({\n  personalInformation: {\n    id: 'Personal Information',\n    defaultMessage: 'Personal Information',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  fullnameTitle: {\n    id: 'Full Name',\n    defaultMessage: 'Full Name',\n  },\n  fullnameDescription: {\n    id: 'Enter full name, e.g. John Smith.',\n    defaultMessage: 'Enter full name, e.g. John Smith.',\n  },\n  emailTitle: {\n    id: 'E-mail',\n    defaultMessage: 'E-mail',\n  },\n  emailDescription: {\n    id: 'We will use this address if you need to recover your password',\n    defaultMessage:\n      'We will use this address if you need to recover your password',\n  },\n  portraitTitle: {\n    id: 'Portrait',\n    defaultMessage: 'Portrait',\n  },\n  portraitDescription: {\n    id: 'The user portrait/avatar',\n    defaultMessage: 'The user portrait/avatar',\n  },\n  homePageTitle: {\n    id: 'Home page',\n    defaultMessage: 'Home page',\n  },\n  homePageDescription: {\n    id: 'The URL for your external home page, if you have one.',\n    defaultMessage: 'The URL for your external home page, if you have one.',\n  },\n  locationTitle: {\n    id: 'Location',\n    defaultMessage: 'Location',\n  },\n  locationDescription: {\n    id:\n      'Your location - either city and country - or in a company setting, where your office is located.',\n    defaultMessage:\n      'Your location - either city and country - or in a company setting, where your office is located.',\n  },\n  saved: {\n    id: 'Changes saved',\n    defaultMessage: 'Changes saved',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n});\n\n/**\n * PersonalInformation class.\n * @class PersonalInformation\n * @extends Component\n */\nclass PersonalInformation extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    user: PropTypes.shape({\n      fullname: PropTypes.string,\n      email: PropTypes.string,\n      home_page: PropTypes.string,\n      location: PropTypes.string,\n    }).isRequired,\n    updateUser: PropTypes.func.isRequired,\n    getUser: PropTypes.func.isRequired,\n    userId: PropTypes.string.isRequired,\n    loaded: PropTypes.bool.isRequired,\n    loading: PropTypes.bool,\n    closeMenu: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ChangePassword\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getUser(this.props.userId);\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    // We don't want the user to change his login name/username or the roles\n    // from this form\n    // Backend will complain anyways, but we clean the data here before it does\n    delete data.id;\n    delete data.username;\n    delete data.roles;\n    this.props.updateUser(this.props.userId, data);\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.saved)}\n      />,\n    );\n    this.props.closeMenu();\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.closeMenu();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Form\n        formData={this.props.user}\n        schema={{\n          fieldsets: [\n            {\n              id: 'default',\n              title: this.props.intl.formatMessage(messages.default),\n              fields: [\n                'fullname',\n                'email',\n                'portrait',\n                'home_page',\n                'location',\n              ],\n            },\n          ],\n          properties: {\n            fullname: {\n              description: this.props.intl.formatMessage(\n                messages.fullnameDescription,\n              ),\n              title: this.props.intl.formatMessage(messages.fullnameTitle),\n              type: 'string',\n            },\n            email: {\n              description: this.props.intl.formatMessage(\n                messages.emailDescription,\n              ),\n              title: this.props.intl.formatMessage(messages.emailTitle),\n              type: 'string',\n            },\n            portrait: {\n              description: this.props.intl.formatMessage(\n                messages.portraitDescription,\n              ),\n              title: this.props.intl.formatMessage(messages.portraitTitle),\n              type: 'object',\n            },\n            home_page: {\n              description: this.props.intl.formatMessage(\n                messages.homePageDescription,\n              ),\n              title: this.props.intl.formatMessage(messages.homePageTitle),\n              type: 'string',\n            },\n            location: {\n              description: this.props.intl.formatMessage(\n                messages.locationDescription,\n              ),\n              title: this.props.intl.formatMessage(messages.locationTitle),\n              type: 'string',\n            },\n          },\n          required: ['email'],\n        }}\n        onSubmit={this.onSubmit}\n        onCancel={this.onCancel}\n        loading={this.props.loading}\n      />\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      user: state.users.user,\n      userId: state.userSession.token\n        ? jwtDecode(state.userSession.token).sub\n        : '',\n      loaded: state.users.get.loaded,\n      loading: state.users.update.loading,\n    }),\n    { getUser, updateUser },\n  ),\n)(PersonalInformation);\n","/**\n * File view component.\n * @module components/theme/View/FileView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from 'semantic-ui-react';\n\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\n/**\n * File view component class.\n * @function FileView\n * @params {object} content Content object.\n * @returns {string} Markup of the component.\n */\nconst FileView = ({ content }) => (\n  <Container className=\"view-wrapper\">\n    <h1 className=\"documentFirstHeading\">\n      {content.title}\n      {content.subtitle && ` - ${content.subtitle}`}\n    </h1>\n    {content.description && (\n      <p className=\"documentDescription\">{content.description}</p>\n    )}\n    {content.file?.download && (\n      <a href={flattenToAppURL(content.file.download)}>\n        {content.file.filename}\n      </a>\n    )}\n  </Container>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nFileView.propTypes = {\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    file: PropTypes.shape({\n      download: PropTypes.string,\n      filename: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default FileView;\n","/**\n * Image view component.\n * @module components/theme/View/ImageView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from 'semantic-ui-react';\nimport { FormattedMessage } from 'react-intl';\nimport prettybytes from 'pretty-bytes';\n\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\n/**\n * Image view component class.\n * @function ImageView\n * @params {object} content Content object.\n * @returns {string} Markup of the component.\n */\nconst ImageView = ({ content }) => (\n  <Container className=\"view-wrapper\">\n    <h1 className=\"documentFirstHeading\">\n      {content.title}\n      {content.subtitle && ` - ${content.subtitle}`}\n    </h1>\n    {content.description && (\n      <p className=\"documentDescription\">{content.description}</p>\n    )}\n    {content?.image?.download && (\n      <a href={flattenToAppURL(content.image.download)}>\n        <img\n          alt={content.title}\n          src={flattenToAppURL(content.image.scales.preview.download)}\n        />\n        <figcaption>\n          <FormattedMessage\n            id=\"Size: {size}\"\n            defaultMessage=\"Size: {size}\"\n            values={{ size: prettybytes(content.image.size) }}\n          />\n          &nbsp; &mdash; &nbsp;\n          <FormattedMessage\n            id=\"Click to download full sized image\"\n            defaultMessage=\"Click to download full sized image\"\n          />\n        </figcaption>\n      </a>\n    )}\n  </Container>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nImageView.propTypes = {\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.shape({\n      scales: PropTypes.shape({\n        preview: PropTypes.shape({\n          download: PropTypes.string,\n        }),\n      }),\n    }),\n  }).isRequired,\n};\n\nexport default ImageView;\n","/**\n * NewsItemView view component.\n * @module components/theme/View/NewsItemView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Image } from 'semantic-ui-react';\nimport {\n  hasBlocksData,\n  flattenToAppURL,\n  flattenHTMLToAppURL,\n} from '@plone/volto/helpers';\nimport RenderBlocks from '@plone/volto/components/theme/View/RenderBlocks';\n\n/**\n * NewsItemView view component class.\n * @function NewsItemView\n * @params {object} content Content object.\n * @returns {string} Markup of the component.\n */\nconst NewsItemView = ({ content }) =>\n  hasBlocksData(content) ? (\n    <div id=\"page-document\" className=\"ui container viewwrapper event-view\">\n      <RenderBlocks content={content} />\n    </div>\n  ) : (\n    <Container className=\"view-wrapper\">\n      {content.title && (\n        <h1 className=\"documentFirstHeading\">\n          {content.title}\n          {content.subtitle && ` - ${content.subtitle}`}\n        </h1>\n      )}\n      {content.description && (\n        <p className=\"documentDescription\">{content.description}</p>\n      )}\n      {content.image && (\n        <Image\n          className=\"documentImage\"\n          alt={content.title}\n          title={content.title}\n          src={\n            content.image['content-type'] === 'image/svg+xml'\n              ? flattenToAppURL(content.image.download)\n              : flattenToAppURL(content.image.scales.mini.download)\n          }\n          floated=\"right\"\n        />\n      )}\n      {content.text && (\n        <div\n          dangerouslySetInnerHTML={{\n            __html: flattenHTMLToAppURL(content.text.data),\n          }}\n        />\n      )}\n    </Container>\n  );\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nNewsItemView.propTypes = {\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    text: PropTypes.shape({\n      data: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default NewsItemView;\n","/**\n * Document view component.\n * @module components/theme/View/ListingView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Container } from 'semantic-ui-react';\nimport { UniversalLink, PreviewImage } from '@plone/volto/components';\n\n/**\n * List view component class.\n * @function ListingView\n * @params {object} content Content object.\n * @returns {string} Markup of the component.\n */\nconst ListingView = ({ content }) => (\n  <Container id=\"page-home\">\n    <section id=\"content-core\">\n      {content.items.map((item) => (\n        <Segment key={item.url} className=\"listing-item\">\n          <Container>\n            <h2>\n              <UniversalLink item={item} title={item['@type']}>\n                {item.title}\n              </UniversalLink>\n            </h2>\n            {item.description && <p>{item.description}</p>}\n          </Container>\n          {item.image_field && (\n            <PreviewImage\n              item={item}\n              size=\"thumb\"\n              alt={item.image_caption ? item.image_caption : item.title}\n              className=\"ui image\"\n            />\n          )}\n        </Segment>\n      ))}\n    </section>\n  </Container>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nListingView.propTypes = {\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        '@type': PropTypes.string,\n        description: PropTypes.string,\n        review_state: PropTypes.string,\n        title: PropTypes.string,\n        url: PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n};\n\nexport default ListingView;\n","/**\n * Summary view component.\n * @module components/theme/View/SummaryView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { UniversalLink } from '@plone/volto/components';\nimport { Container } from 'semantic-ui-react';\nimport { FormattedMessage } from 'react-intl';\nimport PreviewImage from '../PreviewImage/PreviewImage';\n\n/**\n * Summary view component class.\n * @function SummaryView\n * @param {Object} content Content object.\n * @returns {string} Markup of the component.\n */\nconst SummaryView = ({ content }) => (\n  <Container className=\"view-wrapper summary-view\">\n    <article id=\"content\">\n      <header>\n        <h1 className=\"documentFirstHeading\">{content.title}</h1>\n        {content.description && (\n          <p className=\"documentDescription\">{content.description}</p>\n        )}\n      </header>\n      <section id=\"content-core\">\n        {content.items.map((item) => (\n          <article key={item.url}>\n            <h2>\n              <UniversalLink item={item} title={item['@type']}>\n                {item.title}\n              </UniversalLink>\n            </h2>\n            {item.image_field && (\n              <PreviewImage\n                item={item}\n                alt={item.image_caption ? item.image_caption : item.title}\n                size=\"thumb\"\n                className=\"ui image floated right clear\"\n              />\n            )}\n            {item.description && <p>{item.description}</p>}\n            <p>\n              <UniversalLink item={item}>\n                <FormattedMessage id=\"Read More…\" defaultMessage=\"Read More…\" />\n              </UniversalLink>\n            </p>\n          </article>\n        ))}\n      </section>\n    </article>\n  </Container>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nSummaryView.propTypes = {\n  /**\n   * Content of the object\n   */\n  content: PropTypes.shape({\n    /**\n     * Title of the object\n     */\n    title: PropTypes.string,\n    /**\n     * Description of the object\n     */\n    description: PropTypes.string,\n    /**\n     * Child items of the object\n     */\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        /**\n         * Title of the item\n         */\n        title: PropTypes.string,\n        /**\n         * Description of the item\n         */\n        description: PropTypes.string,\n        /**\n         * Url of the item\n         */\n        url: PropTypes.string,\n        /**\n         * Image of the item\n         */\n        image: PropTypes.object,\n        /**\n         * Image caption of the item\n         */\n        image_caption: PropTypes.string,\n        /**\n         * Type of the item\n         */\n        '@type': PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n};\n\nexport default SummaryView;\n","/**\n * Tabular view component.\n * @module components/theme/View/TabularView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { UniversalLink } from '@plone/volto/components';\nimport { Container, Table } from 'semantic-ui-react';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * Tabular view component class.\n * @function TabularView\n * @param {Object} content Content object.\n * @returns {string} Markup of the component.\n */\nconst TabularView = ({ content }) => (\n  <Container className=\"view-wrapper\">\n    <article id=\"content\">\n      <header>\n        <h1 className=\"documentFirstHeading\">{content.title}</h1>\n        {content.description && (\n          <p className=\"documentDescription\">{content.description}</p>\n        )}\n      </header>\n      <section id=\"content-core\">\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>\n                <FormattedMessage id=\"Title\" defaultMessage=\"Title\" />\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <FormattedMessage\n                  id=\"Description\"\n                  defaultMessage=\"Description\"\n                />\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <FormattedMessage id=\"Type\" defaultMessage=\"Type\" />\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <FormattedMessage id=\"State\" defaultMessage=\"State\" />\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {content.items.map((item) => (\n              <Table.Row key={item.url}>\n                <Table.Cell>\n                  <UniversalLink\n                    item={item}\n                    className=\"summary url\"\n                    title={item['@type']}\n                  >\n                    {item.title}\n                  </UniversalLink>\n                </Table.Cell>\n                <Table.Cell>{item.description}</Table.Cell>\n                <Table.Cell>{item['@type']}</Table.Cell>\n                <Table.Cell>{item.review_state}</Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </section>\n    </article>\n  </Container>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nTabularView.propTypes = {\n  /**\n   * Content of the object\n   */\n  content: PropTypes.shape({\n    /**\n     * Title of the object\n     */\n    title: PropTypes.string,\n    /**\n     * Description of the object\n     */\n    description: PropTypes.string,\n    /**\n     * Child items of the object\n     */\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        /**\n         * Title of the item\n         */\n        title: PropTypes.string,\n        /**\n         * Description of the item\n         */\n        description: PropTypes.string,\n        /**\n         * Url of the item\n         */\n        url: PropTypes.string,\n        /**\n         * Review state of the item\n         */\n        review_state: PropTypes.string,\n        /**\n         * Type of the item\n         */\n        '@type': PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n};\n\nexport default TabularView;\n","/**\n * Album view component.\n * @module components/theme/View/AlbumView\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, GridColumn, Segment } from 'semantic-ui-react';\nimport { Button, Modal, Grid } from 'semantic-ui-react';\nimport { Icon, UniversalLink, PreviewImage } from '@plone/volto/components';\n\nimport openSVG from '@plone/volto/icons/open.svg';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\n\n/**\n * Album view component class.\n * @function AlbumView\n * @param {Object} content Content object.\n * @returns {string} Markup of the component.\n */\nclass AlbumView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      openIndex: undefined,\n    };\n\n    this.closeModal = this.closeModal.bind(this);\n    this.nextImage = this.nextImage.bind(this);\n    this.prevImage = this.prevImage.bind(this);\n  }\n\n  closeModal() {\n    this.setState({\n      openIndex: -1,\n    });\n  }\n\n  nextImage() {\n    const openIndex =\n      (this.state.openIndex + 1) % this.props.content.items.length;\n    this.setState({\n      openIndex,\n    });\n  }\n\n  prevImage() {\n    const openIndex =\n      (this.state.openIndex - 1) % this.props.content.items.length;\n    this.setState({\n      openIndex,\n    });\n  }\n\n  render() {\n    const { content } = this.props;\n    return (\n      <Container className=\"view-wrapper\">\n        <article id=\"content\">\n          <header>\n            <h1 className=\"documentFirstHeading\">{content.title}</h1>\n            {content.description && (\n              <p className=\"documentDescription\">{content.description}</p>\n            )}\n          </header>\n          <section id=\"content-core\">\n            <Grid doubling stackable columns={4}>\n              {content.items &&\n                content.items.map((item, index) => (\n                  <React.Fragment key={item.url}>\n                    {item.image_field && (\n                      <Modal\n                        className=\"gallery\"\n                        onClose={this.closeModal}\n                        open={this.state.openIndex === index}\n                        trigger={\n                          <Grid.Column>\n                            <Segment className=\"imageborder\">\n                              <PreviewImage\n                                item={item}\n                                alt={\n                                  item.image_caption\n                                    ? item.image_caption\n                                    : item.title\n                                }\n                                onClick={() => {\n                                  this.setState({\n                                    openIndex: index,\n                                  });\n                                }}\n                                className=\"ui middle aligned image\"\n                              />\n                            </Segment>\n                          </Grid.Column>\n                        }\n                        closeIcon\n                      >\n                        <Modal.Header>\n                          <Grid>\n                            <Grid.Row>\n                              <GridColumn width={10}>{item.title}</GridColumn>\n                              <GridColumn width={2} textAlign=\"right\">\n                                <UniversalLink\n                                  href={item.url}\n                                  title={item['@type']}\n                                  onClick={this.closeModal}\n                                >\n                                  <Icon size=\"30px\" fitted name={openSVG} />\n                                </UniversalLink>\n                              </GridColumn>\n                            </Grid.Row>\n                          </Grid>\n                        </Modal.Header>\n                        <Grid centered verticalAlign=\"middle\">\n                          <Grid.Row>\n                            <Grid.Column width={2} textAlign=\"center\">\n                              <Button\n                                className=\"gallery noborder\"\n                                onClick={this.nextImage}\n                                style={{ margin: 0 }}\n                              >\n                                <Icon\n                                  name={backSVG}\n                                  className=\"circled\"\n                                  size=\"30px\"\n                                  style={{ margin: 0 }}\n                                />\n                              </Button>\n                            </Grid.Column>\n                            <Grid.Column width={8}>\n                              <Modal.Content image>\n                                <PreviewImage\n                                  item={item}\n                                  alt={\n                                    item.image_caption\n                                      ? item.image_caption\n                                      : item.title\n                                  }\n                                  onClick={() => {\n                                    this.setState({\n                                      openIndex: index,\n                                    });\n                                  }}\n                                  size=\"large\"\n                                  className=\"ui image\"\n                                />\n\n                                <Modal.Description>\n                                  <p>{item.description}</p>\n                                </Modal.Description>\n                              </Modal.Content>\n                            </Grid.Column>\n                            <Grid.Column width={2} textAlign=\"center\">\n                              <Button\n                                onClick={this.nextImage}\n                                className=\"gallery noborder\"\n                                style={{ margin: 0 }}\n                              >\n                                <Icon\n                                  name={aheadSVG}\n                                  className=\"circled\"\n                                  size=\"30px\"\n                                  style={{ margin: 0 }}\n                                />\n                              </Button>\n                            </Grid.Column>\n                          </Grid.Row>\n                        </Grid>\n                      </Modal>\n                    )}\n                  </React.Fragment>\n                ))}\n            </Grid>\n          </section>\n        </article>\n      </Container>\n    );\n  }\n}\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nAlbumView.propTypes = {\n  /**\n   * Content of the object\n   */\n  content: PropTypes.shape({\n    /**\n     * Title of the object\n     */\n    title: PropTypes.string,\n    /**\n     * Description of the object\n     */\n    description: PropTypes.string,\n    /**\n     * Child items of the object\n     */\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        /**\n         * Title of the item\n         */\n        title: PropTypes.string,\n        /**\n         * Description of the item\n         */\n        description: PropTypes.string,\n        /**\n         * Url of the item\n         */\n        url: PropTypes.string,\n        /**\n         * Image of the item\n         */\n        image: PropTypes.object,\n        /**\n         * Image caption of the item\n         */\n        image_caption: PropTypes.string,\n        /**\n         * Type of the item\n         */\n        '@type': PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n};\n\nexport default AlbumView;\n","/**\n * More component.\n * @module components/manage/Toolbar/More\n */\n\nimport React, { Component } from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { find } from 'lodash';\nimport { toast } from 'react-toastify';\nimport { parse } from 'date-fns';\nimport { Toast } from '@plone/volto/components';\nimport { Pluggable, Plug } from '@plone/volto/components/manage/Pluggable';\nimport { Icon, Display, Workflow } from '@plone/volto/components';\nimport {\n  applyWorkingCopy,\n  createWorkingCopy,\n  removeWorkingCopy,\n} from '@plone/volto/actions';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nimport rightArrowSVG from '@plone/volto/icons/right-key.svg';\nimport userSVG from '@plone/volto/icons/user.svg';\nimport applySVG from '@plone/volto/icons/ready.svg';\nimport removeSVG from '@plone/volto/icons/circle-dismiss.svg';\n\nconst messages = defineMessages({\n  personalTools: {\n    id: 'Personal tools',\n    defaultMessage: 'Personal tools',\n  },\n  history: {\n    id: 'History',\n    defaultMessage: 'History',\n  },\n  sharing: {\n    id: 'Sharing',\n    defaultMessage: 'Sharing',\n  },\n  ManageTranslations: {\n    id: 'Manage Translations',\n    defaultMessage: 'Manage Translations',\n  },\n  manageContent: {\n    id: 'Manage content…',\n    defaultMessage: 'Manage content…',\n  },\n  CreateWorkingCopy: {\n    id: 'Create working copy',\n    defaultMessage: 'Create working copy',\n  },\n  applyWorkingCopy: {\n    id: 'Apply working copy',\n    defaultMessage: 'Apply working copy',\n  },\n  removeWorkingCopy: {\n    id: 'Remove working copy',\n    defaultMessage: 'Remove working copy',\n  },\n  viewWorkingCopy: {\n    id: 'View working copy',\n    defaultMessage: 'View working copy',\n  },\n  workingAppliedTitle: {\n    id: 'Changes applied.',\n    defaultMessage: 'Changes applied',\n  },\n  workingCopyAppliedBy: {\n    id:\n      'Made by {creator} on {date}. This is not a working copy anymore, but the main content.',\n    defaultMessage:\n      'Made by {creator} on {date}. This is not a working copy anymore, but the main content.',\n  },\n  workingCopyRemovedTitle: {\n    id: 'The working copy was discarded',\n    defaultMessage: 'The working copy was discarded',\n  },\n  Unauthorized: {\n    id: 'Unauthorized',\n    defaultMessage: 'Unauthorized',\n  },\n  workingCopyErrorUnauthorized: {\n    id: 'workingCopyErrorUnauthorized',\n    defaultMessage: 'You are not authorized to perform this operation.',\n  },\n  Error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  workingCopyGenericError: {\n    id: 'workingCopyGenericError',\n    defaultMessage: 'An error occurred while performing this operation.',\n  },\n});\n\n/**\n * More container class.\n * @class More\n * @extends Component\n */\nclass More extends Component {\n  static propTypes = {\n    actions: PropTypes.shape({\n      object: PropTypes.arrayOf(PropTypes.object),\n      object_buttons: PropTypes.arrayOf(PropTypes.object),\n      user: PropTypes.arrayOf(PropTypes.object),\n    }),\n    pathname: PropTypes.string.isRequired,\n    content: PropTypes.shape({\n      title: PropTypes.string,\n      '@type': PropTypes.string,\n      is_folderish: PropTypes.bool,\n      review_state: PropTypes.string,\n    }),\n    loadComponent: PropTypes.func.isRequired,\n    closeMenu: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    actions: null,\n    content: null,\n  };\n  state = {\n    openManageTranslations: false,\n    pushed: false,\n  };\n\n  push = (selector) => {\n    this.setState(() => ({\n      pushed: true,\n    }));\n    this.props.loadComponent(selector);\n    document.removeEventListener('mousedown', this.handleClickOutside, false);\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    let erroredAction = '';\n    if (\n      prevProps.workingCopy.apply.loading &&\n      this.props.workingCopy.apply.error\n    ) {\n      erroredAction = 'apply';\n    } else if (\n      prevProps.workingCopy.create.loading &&\n      this.props.workingCopy.create.error\n    ) {\n      erroredAction = 'create';\n    } else if (\n      prevProps.workingCopy.remove.loading &&\n      this.props.workingCopy.remove.error\n    ) {\n      erroredAction = 'remove';\n    }\n\n    if (erroredAction) {\n      const errorStatus = this.props.workingCopy[erroredAction].error.status;\n      if (errorStatus === 401 || errorStatus === 403) {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.Unauthorized)}\n            content={this.props.intl.formatMessage(\n              messages.workingCopyErrorUnauthorized,\n            )}\n          />,\n          {\n            toastId: 'workingCopyErrorUnauthorized',\n            autoClose: 10000,\n          },\n        );\n      } else {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.Error)}\n            content={this.props.intl.formatMessage(\n              messages.workingCopyGenericError,\n            )}\n          />,\n          {\n            toastId: 'workingCopyGenericError',\n            autoClose: 10000,\n          },\n        );\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const path = getBaseUrl(this.props.pathname);\n    const editAction = find(this.props.actions.object, { id: 'edit' });\n    const historyAction = find(this.props.actions.object, { id: 'history' });\n    const sharingAction = find(this.props.actions.object, {\n      id: 'local_roles',\n    });\n    const { content, intl, lang } = this.props;\n    const dateOptions = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    };\n\n    return (\n      <div\n        className=\"menu-more pastanaga-menu\"\n        style={{\n          flex: this.props.theToolbar.current\n            ? `0 0 ${\n                this.props.theToolbar.current.getBoundingClientRect().width\n              }px`\n            : null,\n        }}\n      >\n        <header>\n          <h2>{this.props.content.title}</h2>\n          <button\n            className=\"more-user\"\n            aria-label={this.props.intl.formatMessage(messages.personalTools)}\n            onClick={() => this.push('personalTools')}\n            tabIndex={0}\n          >\n            <Icon\n              name={userSVG}\n              size=\"30px\"\n              title={this.props.intl.formatMessage(messages.personalTools)}\n            />\n          </button>\n        </header>\n        <div className=\"pastanaga-menu-list\">\n          <ul>\n            <Pluggable name=\"toolbar-more-menu-list\" />\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"state\">\n              {this.props.content['@type'] !== 'Plone Site' && (\n                // Plone Site does not have workflow\n                <li className=\"state-select\">\n                  <Workflow pathname={path} />\n                </li>\n              )}\n            </Plug>\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"view\">\n              {this.props.content['@type'] !== 'Plone Site' && (\n                // Plone Site does not have view (yet)\n                <li className=\"display-select\">\n                  {editAction && <Display pathname={path} />}\n                </li>\n              )}\n            </Plug>\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"history\">\n              {this.props.content['@type'] !== 'Plone Site' && (\n                // Plone Site does not have history (yet)\n                <li>\n                  <Link to={`${path}/history`}>\n                    <div>\n                      <span className=\"pastanaga-menu-label\">\n                        {historyAction?.title ||\n                          this.props.intl.formatMessage(messages.history)}\n                      </span>\n                      <span className=\"pastanaga-menu-value\" />\n                    </div>\n                    <Icon name={rightArrowSVG} size=\"24px\" />\n                  </Link>\n                </li>\n              )}\n            </Plug>\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"sharing\">\n              {sharingAction && (\n                <li>\n                  <Link to={`${path}/sharing`}>\n                    {this.props.intl.formatMessage(messages.sharing)}\n                    <Icon name={rightArrowSVG} size=\"24px\" />\n                  </Link>\n                </li>\n              )}\n            </Plug>\n          </ul>\n        </div>\n        <Pluggable name=\"toolbar-more-manage-content\">\n          {(pluggables) => (\n            <>\n              {pluggables.length > 0 && (\n                <>\n                  <header>\n                    <h2>\n                      {this.props.intl.formatMessage(messages.manageContent)}\n                    </h2>\n                  </header>\n                  <div className=\"pastanaga-menu-list\">\n                    <ul>\n                      {pluggables.map((p) => (\n                        <>{p()}</>\n                      ))}\n                    </ul>\n                  </div>\n                </>\n              )}\n            </>\n          )}\n        </Pluggable>\n        {config.settings.hasWorkingCopySupport &&\n          this.props.content['@type'] !== 'Plone Site' && (\n            <>\n              {!this.props.content.working_copy && (\n                <Plug pluggable=\"toolbar-more-manage-content\" id=\"workingcopy\">\n                  <li>\n                    <button\n                      aria-label={this.props.intl.formatMessage(\n                        messages.CreateWorkingCopy,\n                      )}\n                      onClick={() => {\n                        this.props.createWorkingCopy(path).then((response) => {\n                          this.props.history.push(\n                            flattenToAppURL(response['@id']),\n                          );\n                          this.props.closeMenu();\n                        });\n                      }}\n                    >\n                      {this.props.intl.formatMessage(\n                        messages.CreateWorkingCopy,\n                      )}\n\n                      <Icon name={rightArrowSVG} size=\"24px\" />\n                    </button>\n                  </li>\n                </Plug>\n              )}\n              {this.props.content.working_copy &&\n                this.props.content.working_copy_of && (\n                  <Plug\n                    pluggable=\"toolbar-more-manage-content\"\n                    id=\"workingcopy\"\n                  >\n                    <li>\n                      <button\n                        aria-label={this.props.intl.formatMessage(\n                          messages.applyWorkingCopy,\n                        )}\n                        onClick={() => {\n                          this.props.applyWorkingCopy(path).then((response) => {\n                            this.props.history.push(\n                              flattenToAppURL(\n                                this.props.content.working_copy_of['@id'],\n                              ),\n                            );\n                            this.props.closeMenu();\n                            toast.info(\n                              <Toast\n                                info\n                                title={intl.formatMessage(\n                                  messages.workingAppliedTitle,\n                                )}\n                                content={intl.formatMessage(\n                                  messages.workingCopyAppliedBy,\n                                  {\n                                    creator: content.working_copy?.creator_name,\n                                    date: new Intl.DateTimeFormat(\n                                      lang,\n                                      dateOptions,\n                                    ).format(\n                                      parse(content.working_copy?.created),\n                                    ),\n                                  },\n                                )}\n                              />,\n                              {\n                                toastId: 'workingcopyapplyinfo',\n                                autoClose: 10000,\n                              },\n                            );\n                          });\n                        }}\n                      >\n                        {this.props.intl.formatMessage(\n                          messages.applyWorkingCopy,\n                        )}\n\n                        <Icon\n                          name={applySVG}\n                          size=\"24px\"\n                          title={this.props.intl.formatMessage(\n                            messages.applyWorkingCopy,\n                          )}\n                        />\n                      </button>\n                    </li>\n                    <li>\n                      <button\n                        aria-label={this.props.intl.formatMessage(\n                          messages.removeWorkingCopy,\n                        )}\n                        onClick={() => {\n                          this.props\n                            .removeWorkingCopy(path)\n                            .then((response) => {\n                              this.props.history.push(\n                                flattenToAppURL(\n                                  this.props.content.working_copy_of['@id'],\n                                ),\n                              );\n                              this.props.closeMenu();\n                              toast.info(\n                                <Toast\n                                  info\n                                  title={intl.formatMessage(\n                                    messages.workingCopyRemovedTitle,\n                                  )}\n                                />,\n                                {\n                                  toastId: 'workingcopyremovednotice',\n                                  autoClose: 10000,\n                                },\n                              );\n                            });\n                        }}\n                      >\n                        {this.props.intl.formatMessage(\n                          messages.removeWorkingCopy,\n                        )}\n\n                        <Icon\n                          name={removeSVG}\n                          size=\"24px\"\n                          color=\"#e40166\"\n                          title={this.props.intl.formatMessage(\n                            messages.removeWorkingCopy,\n                          )}\n                        />\n                      </button>\n                    </li>\n                  </Plug>\n                )}\n              {this.props.content.working_copy &&\n                !this.props.content.working_copy_of && (\n                  <Plug\n                    pluggable=\"toolbar-more-manage-content\"\n                    id=\"workingcopy\"\n                  >\n                    <li>\n                      <Link\n                        to={flattenToAppURL(\n                          this.props.content.working_copy['@id'],\n                        )}\n                        onClick={() => this.props.closeMenu()}\n                      >\n                        {this.props.intl.formatMessage(\n                          messages.viewWorkingCopy,\n                        )}\n                        <Icon name={rightArrowSVG} size=\"24px\" />\n                      </Link>\n                    </li>\n                  </Plug>\n                )}\n            </>\n          )}\n        {editAction && config.settings.isMultilingual && (\n          <Plug pluggable=\"toolbar-more-manage-content\" id=\"multilingual\">\n            <li>\n              <Link to={`${path}/manage-translations`}>\n                {this.props.intl.formatMessage(messages.ManageTranslations)}\n\n                <Icon name={rightArrowSVG} size=\"24px\" />\n              </Link>\n            </li>\n          </Plug>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  withRouter,\n  connect(\n    (state, props) => ({\n      actions: state.actions.actions,\n      pathname: props.pathname,\n      content: state.content.data,\n      lang: state.intl.locale,\n      workingCopy: state.workingCopy,\n    }),\n    { applyWorkingCopy, createWorkingCopy, removeWorkingCopy },\n  ),\n)(More);\n","/**\n * PersonalTools container.\n * @module components/manage/Toolbar/PersonalTools\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport cx from 'classnames';\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport { getUser } from '@plone/volto/actions';\nimport { Pluggable } from '@plone/volto/components/manage/Pluggable';\nimport { userHasRoles } from '@plone/volto/helpers';\n\nimport logoutSVG from '@plone/volto/icons/log-out.svg';\nimport rightArrowSVG from '@plone/volto/icons/right-key.svg';\n\nimport backSVG from '@plone/volto/icons/back.svg';\nimport cameraSVG from '@plone/volto/icons/camera.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  logout: {\n    id: 'Logout',\n    defaultMessage: 'Logout',\n  },\n  preferences: {\n    id: 'Preferences',\n    defaultMessage: 'Preferences',\n  },\n  profile: {\n    id: 'Profile',\n    defaultMessage: 'Profile',\n  },\n  userAvatar: {\n    id: 'user avatar',\n    defaultMessage: 'user avatar',\n  },\n});\n\n/**\n * Toolbar container class.\n * @class PersonalTools\n * @extends Component\n */\nclass PersonalTools extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    user: PropTypes.shape({\n      fullname: PropTypes.string,\n      email: PropTypes.string,\n      home_page: PropTypes.string,\n      location: PropTypes.string,\n    }).isRequired,\n    userId: PropTypes.string.isRequired,\n    getUser: PropTypes.func.isRequired,\n    loadComponent: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.props.getUser(this.props.userId);\n  }\n\n  push = (selector) => {\n    this.setState(() => ({\n      pushed: true,\n    }));\n    this.props.loadComponent(selector);\n  };\n\n  pull = () => {\n    this.props.unloadComponent();\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <div\n        className={cx('personal-tools pastanaga-menu', {\n          'has-inner-actions': this.props.hasActions,\n        })}\n        style={{\n          flex: this.props.theToolbar.current\n            ? `0 0 ${\n                this.props.theToolbar.current.getBoundingClientRect().width\n              }px`\n            : null,\n        }}\n      >\n        <header className=\"header\">\n          <button className=\"back\" onClick={this.pull}>\n            <Icon\n              name={backSVG}\n              size=\"30px\"\n              title={this.props.intl.formatMessage(messages.back)}\n            />\n          </button>\n          <div className=\"vertical divider\" />\n          <h2>\n            {this.props.user.fullname\n              ? this.props.user.fullname\n              : this.props.user.username}\n          </h2>\n          <Link id=\"toolbar-logout\" to=\"/logout\">\n            <Icon\n              className=\"logout\"\n              name={logoutSVG}\n              size=\"30px\"\n              title={this.props.intl.formatMessage(messages.logout)}\n            />\n          </Link>\n        </header>\n        <div className={cx('avatar', { default: !this.props.user.portrait })}>\n          {this.props.user.portrait ? (\n            <img\n              src={this.props.user.portrait}\n              alt={this.props.intl.formatMessage(messages.userAvatar)}\n            />\n          ) : (\n            <Icon name={cameraSVG} size=\"96px\" />\n          )}\n        </div>\n        {/* <Stats /> Maybe we can find a good fit in the future for this visual element */}\n        <div className=\"pastanaga-menu-list\">\n          {/* This (probably also) should be a Component by itself*/}\n          <ul>\n            <li>\n              <button\n                aria-label={this.props.intl.formatMessage(messages.profile)}\n                onClick={() => this.push('profile')}\n              >\n                <FormattedMessage id=\"Profile\" defaultMessage=\"Profile\" />\n                <Icon name={rightArrowSVG} size=\"24px\" />\n              </button>\n            </li>\n            <li>\n              <button\n                aria-label={this.props.intl.formatMessage(messages.preferences)}\n                onClick={() => this.push('preferences')}\n              >\n                <FormattedMessage\n                  id=\"Preferences\"\n                  defaultMessage=\"Preferences\"\n                />\n                <Icon name={rightArrowSVG} size=\"24px\" />\n              </button>\n            </li>\n\n            {userHasRoles(this.props.user, [\n              'Site Administrator',\n              'Manager',\n            ]) && (\n              <li>\n                <Link to=\"/controlpanel\">\n                  <FormattedMessage\n                    id=\"Site Setup\"\n                    defaultMessage=\"Site Setup\"\n                  />\n                  <Icon name={rightArrowSVG} size=\"24px\" />\n                </Link>\n              </li>\n            )}\n            <Pluggable name=\"toolbar-user-menu\" />\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(\n  connect(\n    (state) => ({\n      user: state.users.user,\n      userId: state.userSession.token\n        ? jwtDecode(state.userSession.token).sub\n        : '',\n    }),\n    { getUser },\n  )(PersonalTools),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { filter, find, isEmpty, map } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\nimport { flattenToAppURL, langmap } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nconst Types = ({ types, pathname, content, currentLanguage }) => {\n  const { settings } = config;\n  return types.length > 0 ||\n    (settings.isMultilingual && content['@components'].translations) ? (\n    <div className=\"menu-more pastanaga-menu\">\n      {types.length > 0 && (\n        <>\n          <header>\n            <FormattedMessage id=\"Add Content\" defaultMessage=\"Add Content…\" />\n          </header>\n          <div className=\"pastanaga-menu-list\">\n            <ul>\n              {map(filter(types), (item) => {\n                // Strip the type for the item we want to add\n                const contentTypeToAdd = item['@id'].split('@types/')[1];\n                // If we are in the root or in /contents, we need to strip the preceeding / and /contents\n                const currentPath = pathname\n                  .replace(/\\/contents$/, '')\n                  .replace(/\\/$/, '');\n                // Finally build the route URL\n                const addContentTypeRoute = `${currentPath}/add?type=${contentTypeToAdd}`;\n                return (\n                  <li key={item['@id']}>\n                    <Link\n                      to={addContentTypeRoute}\n                      id={`toolbar-add-${item['@id']\n                        .split('@types/')[1]\n                        .toLowerCase()\n                        .replace(' ', '-')}`}\n                      className=\"item\"\n                      key={item.title}\n                    >\n                      <FormattedMessage id={item.title} />\n                    </Link>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </>\n      )}\n      {settings.isMultilingual &&\n        content['@components'].translations &&\n        (() => {\n          const translationsLeft = filter(\n            settings.supportedLanguages,\n            (lang) =>\n              !Boolean(\n                content['@components'].translations &&\n                  find(content['@components'].translations.items, {\n                    language: lang,\n                  }),\n              ) && currentLanguage !== lang,\n          );\n\n          return (\n            !isEmpty(translationsLeft) && (\n              <>\n                <header>\n                  <FormattedMessage\n                    id=\"Add Translation…\"\n                    defaultMessage=\"Add Translation…\"\n                  />\n                </header>\n                <div className=\"pastanaga-menu-list\">\n                  <ul>\n                    {map(translationsLeft, (lang) => (\n                      <li key={lang}>\n                        <Link\n                          to={{\n                            pathname: `${pathname}/create-translation`,\n                            state: {\n                              type: content['@type'],\n                              translationOf: flattenToAppURL(content['@id']),\n                              language: lang,\n                            },\n                          }}\n                          className=\"item\"\n                        >\n                          <FormattedMessage\n                            id=\"Translate to {lang}\"\n                            defaultMessage=\"Translate to {lang}\"\n                            values={{\n                              lang: langmap[lang].nativeName.toLowerCase(),\n                            }}\n                          />\n                        </Link>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </>\n            )\n          );\n        })()}\n    </div>\n  ) : (\n    <span />\n  );\n};\n\nTypes.propTypes = {\n  pathname: PropTypes.string.isRequired,\n  types: PropTypes.arrayOf(\n    PropTypes.shape({\n      '@id': PropTypes.string,\n      addable: PropTypes.bool,\n      title: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default connect(\n  (state) => ({\n    types: filter(state.types.types, 'addable'),\n    currentLanguage: state.intl.locale,\n  }),\n  {},\n)(Types);\n","import React from 'react';\nimport { Portal } from 'react-portal';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\n\nconst DEFAULT_TIMEOUT = 500;\n\nconst SidebarPopup = (props) => {\n  const { children, open, onClose, overlay } = props;\n\n  const asideElement = React.createRef();\n\n  const handleClickOutside = (e) => {\n    if (asideElement && doesNodeContainClick(asideElement.current, e)) return;\n    onClose();\n  };\n\n  React.useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside, false);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside, false);\n    };\n  });\n\n  return (\n    <>\n      {overlay && (\n        <CSSTransition\n          in={open}\n          timeout={DEFAULT_TIMEOUT}\n          classNames=\"overlay-container\"\n          unmountOnExit\n        >\n          <Portal node={document?.body}>\n            <div className=\"overlay-container\"></div>\n          </Portal>\n        </CSSTransition>\n      )}\n      <CSSTransition\n        in={open}\n        timeout={DEFAULT_TIMEOUT}\n        classNames=\"sidebar-container\"\n        unmountOnExit\n      >\n        <Portal>\n          <aside\n            role=\"presentation\"\n            onClick={(e) => {\n              e.stopPropagation();\n            }}\n            onKeyDown={(e) => {\n              e.stopPropagation();\n            }}\n            ref={asideElement}\n            key=\"sidebarpopup\"\n            className=\"sidebar-container\"\n            style={{ overflowY: 'auto' }}\n          >\n            {children}\n          </aside>\n        </Portal>\n      </CSSTransition>\n    </>\n  );\n};\n\nSidebarPopup.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  overlay: PropTypes.bool,\n};\n\nSidebarPopup.defaultProps = {\n  open: false,\n  onClose: () => {},\n  overlay: false,\n};\n\nexport default SidebarPopup;\n","/**\n * Field component.\n * @module components/manage/Form/Field\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nconst MODE_HIDDEN = 'hidden'; //hidden mode. If mode is hidden, field is not rendered\n/**\n * Get default widget\n * @method getViewDefault\n * @returns {string} Widget component.\n */\nconst getWidgetDefault = () => config.widgets.default;\n\n/**\n * Get widget by field's `id` attribute\n * @method getWidgetById\n * @param {string} id Id\n * @returns {string} Widget component.\n */\nconst getWidgetByFieldId = (id) => config.widgets.id[id] || null;\n\n/**\n * Get widget by factory attribute\n * @method getWidgetByFactory\n * @param {string} id Id\n * @returns {string} Widget component.\n */\nconst getWidgetByFactory = (factory) =>\n  config.widgets.factory?.[factory] || null;\n\n/**\n * Get widget by field's `widget` attribute\n * @method getWidgetByName\n * @param {string} widget Widget\n * @returns {string} Widget component.\n */\nconst getWidgetByName = (widget) =>\n  typeof widget === 'string'\n    ? config.widgets.widget[widget] || getWidgetDefault()\n    : null;\n\n/**\n * Get widget by tagged values\n * @param {object} widgetOptions\n * @returns {string} Widget component.\n *\n\ndirectives.widget(\n    'fieldname',\n    frontendOptions={\n        \"widget\": 'specialwidget',\n        \"version\": 'extra'\n    })\n\n */\nconst getWidgetFromTaggedValues = (widgetOptions) =>\n  typeof widgetOptions?.frontendOptions?.widget === 'string'\n    ? config.widgets.widget[widgetOptions.frontendOptions.widget]\n    : null;\n\n/**\n * Get widget props from tagged values\n * @param {object} widgetOptions\n * @returns {string} Widget component.\n *\n\ndirectives.widget(\n    \"fieldname\",\n    frontendOptions={\n        \"widget\": \"specialwidget\",\n        \"widgetProps\": {\"prop1\": \"specialprop\"}\n    })\n\n */\nconst getWidgetPropsFromTaggedValues = (widgetOptions) =>\n  typeof widgetOptions?.frontendOptions?.widgetProps === 'object'\n    ? widgetOptions.frontendOptions.widgetProps\n    : null;\n\n/**\n * Get widget by field's `vocabulary` attribute\n * @method getWidgetByVocabulary\n * @param {string} vocabulary Widget\n * @returns {string} Widget component.\n */\nconst getWidgetByVocabulary = (vocabulary) =>\n  vocabulary && vocabulary['@id']\n    ? config.widgets.vocabulary[\n        vocabulary['@id'].replace(/^.*\\/@vocabularies\\//, '')\n      ]\n    : null;\n\n/**\n * Get widget by field's hints `vocabulary` attribute in widgetOptions\n * @method getWidgetByVocabularyFromHint\n * @param {string} props Widget props\n * @returns {string} Widget component.\n */\nconst getWidgetByVocabularyFromHint = (props) =>\n  props.widgetOptions && props.widgetOptions.vocabulary\n    ? config.widgets.vocabulary[\n        props.widgetOptions.vocabulary['@id'].replace(\n          /^.*\\/@vocabularies\\//,\n          '',\n        )\n      ]\n    : null;\n\n/**\n * Get widget by field's `choices` attribute\n * @method getWidgetByChoices\n * @param {string} choices Widget\n * @returns {string} Widget component.\n */\nconst getWidgetByChoices = (props) => {\n  if (props.choices) {\n    return config.widgets.choices;\n  }\n\n  if (props.vocabulary) {\n    // If vocabulary exists, then it means it's a choice field in disguise with\n    // no widget specified that probably contains a string then we force it\n    // to be a select widget instead\n    return config.widgets.choices;\n  }\n\n  return null;\n};\n\n/**\n * Get widget by field's `type` attribute\n * @method getWidgetByType\n * @param {string} type Type\n * @returns {string} Widget component.\n */\nconst getWidgetByType = (type) => config.widgets.type[type] || null;\n\n/**\n * Field component class.\n * @function Field\n * @param {Object} props Properties.\n * @returns {string} Markup of the component.\n */\nconst UnconnectedField = (props, { intl }) => {\n  const Widget =\n    getWidgetByFieldId(props.id) ||\n    getWidgetFromTaggedValues(props.widgetOptions) ||\n    getWidgetByName(props.widget) ||\n    getWidgetByChoices(props) ||\n    getWidgetByVocabulary(props.vocabulary) ||\n    getWidgetByVocabularyFromHint(props) ||\n    getWidgetByFactory(props.factory) ||\n    getWidgetByType(props.type) ||\n    getWidgetDefault();\n\n  if (props.mode === MODE_HIDDEN) {\n    return null;\n  }\n\n  // Adding the widget props from tagged values (if any)\n  const widgetProps = {\n    ...props,\n    ...getWidgetPropsFromTaggedValues(props.widgetOptions),\n  };\n\n  if (props.onOrder) {\n    const { DropTarget, DragSource } = props.reactDnd;\n    const WrappedWidget = DropTarget(\n      'field',\n      {\n        hover(properties, monitor) {\n          const dragOrder = monitor.getItem().order;\n          const hoverOrder = properties.order;\n\n          if (dragOrder === hoverOrder) {\n            return;\n          }\n          properties.onOrder(dragOrder, hoverOrder - dragOrder);\n\n          monitor.getItem().order = hoverOrder;\n        },\n      },\n      (connect) => ({\n        connectDropTarget: connect.dropTarget(),\n      }),\n    )(\n      DragSource(\n        'field',\n        {\n          beginDrag(properties) {\n            return {\n              id: properties.label,\n              order: properties.order,\n            };\n          },\n        },\n        (connect, monitor) => ({\n          connectDragSource: connect.dragSource(),\n          connectDragPreview: connect.dragPreview(),\n          isDragging: monitor.isDragging(),\n        }),\n      )(\n        ({\n          connectDropTarget,\n          connectDragSource,\n          connectDragPreview,\n          ...rest\n        }) =>\n          connectDropTarget(\n            connectDragSource(\n              connectDragPreview(\n                <div>\n                  <Widget {...rest} />\n                </div>,\n              ),\n            ),\n          ),\n      ),\n    );\n    return <WrappedWidget {...widgetProps} />;\n  }\n  return <Widget {...widgetProps} />;\n};\n\nconst DndConnectedField = injectLazyLibs(['reactDnd'])(UnconnectedField);\n\nconst Field = (props) =>\n  props.onOrder ? (\n    <DndConnectedField {...props} />\n  ) : (\n    <UnconnectedField {...props} />\n  );\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nField.propTypes = {\n  widget: PropTypes.string,\n  vocabulary: PropTypes.shape({ '@id': PropTypes.string }),\n  choices: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)),\n  type: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  focus: PropTypes.bool,\n  onOrder: PropTypes.func,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nField.defaultProps = {\n  widget: null,\n  vocabulary: null,\n  choices: null,\n  type: 'string',\n  focus: false,\n  onOrder: null,\n};\n\nexport default injectIntl(Field);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accordion, Segment, Message } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport AnimateHeight from 'react-animate-height';\nimport { keys, map, isEqual } from 'lodash';\n\nimport { Field, Icon } from '@plone/volto/components';\n\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\n\nconst messages = defineMessages({\n  editValues: {\n    id: 'Edit values',\n    defaultMessage: 'Edit values',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  thereWereSomeErrors: {\n    id: 'There were some errors',\n    defaultMessage: 'There were some errors',\n  },\n});\n\nconst InlineForm = (props) => {\n  const {\n    block,\n    description,\n    error, // Such as {message: \"It's not good\"}\n    errors = {},\n    formData,\n    onChangeField,\n    schema,\n    title,\n    icon,\n    headerActions,\n    footer,\n    focusIndex,\n    intl,\n  } = props;\n  const _ = intl.formatMessage;\n  const defaultFieldset = schema.fieldsets.find((o) => o.id === 'default');\n  const other = schema.fieldsets.filter((o) => o.id !== 'default');\n\n  React.useEffect(() => {\n    // Will set field values from schema, by matching the default values\n\n    const objectSchema = typeof schema === 'function' ? schema(props) : schema;\n    const initialData = {\n      ...Object.keys(objectSchema.properties).reduce(\n        (accumulator, currentField) => {\n          return objectSchema.properties[currentField].default\n            ? {\n                ...accumulator,\n                [currentField]: objectSchema.properties[currentField].default,\n              }\n            : accumulator;\n        },\n        {},\n      ),\n      ...formData,\n    };\n\n    Object.keys(initialData).forEach((k) => {\n      if (!isEqual(initialData[k], formData?.[k])) {\n        onChangeField(k, initialData[k]);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [currentActiveFieldset, setCurrentActiveFieldset] = React.useState(0);\n  function handleCurrentActiveFieldset(e, blockProps) {\n    const { index } = blockProps;\n    const newIndex = currentActiveFieldset === index ? -1 : index;\n\n    setCurrentActiveFieldset(newIndex);\n  }\n\n  return (\n    <div className=\"ui form\">\n      {title && (\n        <header className=\"header pulled\">\n          {icon}\n          <h2>{title || _(messages.editValues)}</h2>\n          {headerActions}\n        </header>\n      )}\n      {description && (\n        <Segment secondary className=\"attached\">\n          {description}\n        </Segment>\n      )}\n      {keys(errors).length > 0 && (\n        <Message\n          icon=\"warning\"\n          negative\n          attached\n          header={_(messages.error)}\n          content={_(messages.thereWereSomeErrors)}\n        />\n      )}\n      {error && (\n        <Message\n          icon=\"warning\"\n          negative\n          attached\n          header={_(messages.error)}\n          content={error.message}\n        />\n      )}\n\n      <div id={`blockform-fieldset-${defaultFieldset.id}`}>\n        <Segment className=\"form attached\">\n          {map(defaultFieldset.fields, (field, index) => (\n            <Field\n              {...schema.properties[field]}\n              id={field}\n              fieldSet={defaultFieldset.title.toLowerCase()}\n              focus={index === focusIndex}\n              value={formData[field]}\n              required={schema.required.indexOf(field) !== -1}\n              onChange={(id, value) => {\n                onChangeField(id, value);\n              }}\n              key={field}\n              error={errors[field]}\n              block={block}\n            />\n          ))}\n        </Segment>\n      </div>\n\n      {other.map((fieldset, index) => (\n        <Accordion fluid styled className=\"form\" key={fieldset.id}>\n          <div key={fieldset.id} id={`blockform-fieldset-${fieldset.id}`}>\n            <Accordion.Title\n              active={currentActiveFieldset === index}\n              index={index}\n              onClick={handleCurrentActiveFieldset}\n            >\n              {fieldset.title && <>{fieldset.title}</>}\n              {currentActiveFieldset === index ? (\n                <Icon name={upSVG} size=\"20px\" />\n              ) : (\n                <Icon name={downSVG} size=\"20px\" />\n              )}\n            </Accordion.Title>\n            <Accordion.Content active={currentActiveFieldset === index}>\n              <AnimateHeight\n                animateOpacity\n                duration={500}\n                height={currentActiveFieldset === index ? 'auto' : 0}\n              >\n                <Segment className=\"attached\">\n                  {map(fieldset.fields, (field) => (\n                    <Field\n                      {...schema.properties[field]}\n                      id={field}\n                      value={formData[field]}\n                      required={schema.required.indexOf(field) !== -1}\n                      onChange={(id, value) => {\n                        onChangeField(id, value);\n                      }}\n                      key={field}\n                      error={errors[field]}\n                      block={block}\n                    />\n                  ))}\n                </Segment>\n              </AnimateHeight>\n            </Accordion.Content>\n          </div>\n        </Accordion>\n      ))}\n      {footer}\n    </div>\n  );\n};\n\nInlineForm.defaultProps = {\n  block: null,\n  description: null,\n  formData: null,\n  onChangeField: null,\n  error: null,\n  errors: {},\n  schema: {},\n  focusIndex: null,\n};\n\nInlineForm.propTypes = {\n  block: PropTypes.string,\n  description: PropTypes.string,\n  schema: PropTypes.shape({\n    fieldsets: PropTypes.arrayOf(\n      PropTypes.shape({\n        fields: PropTypes.arrayOf(PropTypes.string),\n        id: PropTypes.string,\n        title: PropTypes.string,\n      }),\n    ),\n    properties: PropTypes.objectOf(PropTypes.any),\n    definitions: PropTypes.objectOf(PropTypes.any),\n    required: PropTypes.arrayOf(PropTypes.string),\n  }),\n  formData: PropTypes.objectOf(PropTypes.any),\n  pathname: PropTypes.string,\n  onChangeField: PropTypes.func,\n  error: PropTypes.shape({\n    message: PropTypes.string,\n  }),\n  focusIndex: PropTypes.number,\n};\n\nexport default injectIntl(InlineForm, { forwardRef: true });\n","/**\n * Edit block.\n * @module components/manage/Blocks/Block/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { setSidebarTab } from '@plone/volto/actions';\nimport config from '@plone/volto/registry';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport { applyBlockDefaults } from '@plone/volto/helpers';\n\nimport {\n  SidebarPortal,\n  BlockSettingsSidebar,\n  BlockSettingsSchema,\n} from '@plone/volto/components';\n\nconst messages = defineMessages({\n  unknownBlock: {\n    id: 'Unknown Block',\n    defaultMessage: 'Unknown Block {block}',\n  },\n});\n\n/**\n * Edit block class.\n * @class Edit\n * @extends Component\n */\nexport class Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    type: PropTypes.string.isRequired,\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    // properties is mapped to formData, so it's not connected to changes of the object\n    properties: PropTypes.objectOf(PropTypes.any).isRequired,\n    selected: PropTypes.bool.isRequired,\n    multiSelected: PropTypes.bool,\n    index: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n    manage: PropTypes.bool,\n    onMoveBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    editable: PropTypes.bool,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    manage: false,\n    editable: true,\n  };\n\n  componentDidMount() {\n    const { type } = this.props;\n    const { blocksConfig = config.blocks.blocksConfig } = this.props;\n\n    const blockHasOwnFocusManagement =\n      blocksConfig?.[type]?.['blockHasOwnFocusManagement'] || null;\n    if (\n      !blockHasOwnFocusManagement &&\n      this.props.selected &&\n      this.blockNode.current\n    ) {\n      this.blockNode.current.focus();\n    }\n    const tab = this.props.manage ? 1 : blocksConfig?.[type]?.sidebarTab || 0;\n    if (this.props.selected && this.props.editable) {\n      this.props.setSidebarTab(tab);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { blocksConfig = config.blocks.blocksConfig } = this.props;\n    const { selected, type } = this.props;\n    const blockHasOwnFocusManagement =\n      blocksConfig?.[type]?.['blockHasOwnFocusManagement'] || null;\n    if (\n      !blockHasOwnFocusManagement &&\n      nextProps.selected &&\n      selected !== nextProps.selected &&\n      this.blockNode.current\n    ) {\n      this.blockNode.current.focus();\n    }\n    if (\n      ((!this.props.selected && nextProps.selected) ||\n        type !== nextProps.type) &&\n      this.props.editable\n    ) {\n      const tab = this.props.manage\n        ? 1\n        : blocksConfig?.[nextProps.type]?.sidebarTab || 0;\n      this.props.setSidebarTab(tab);\n    }\n  }\n\n  blockNode = React.createRef();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { blocksConfig = config.blocks.blocksConfig } = this.props;\n    const { editable, type } = this.props;\n\n    const disableNewBlocks = this.props.data?.disableNewBlocks;\n\n    let Block = blocksConfig?.[type]?.['edit'] || null;\n    if (\n      this.props.data?.readOnly ||\n      (!editable && !config.blocks.showEditBlocksInBabelView)\n    ) {\n      Block = blocksConfig?.[type]?.['view'] || null;\n    }\n    const schema = blocksConfig?.[type]?.['schema'] || BlockSettingsSchema;\n    const blockHasOwnFocusManagement =\n      blocksConfig?.[type]?.['blockHasOwnFocusManagement'] || null;\n\n    return (\n      <>\n        {Block !== null ? (\n          <div\n            role=\"presentation\"\n            onClick={(e) => {\n              const isMultipleSelection = e.shiftKey || e.ctrlKey || e.metaKey;\n              !this.props.selected &&\n                this.props.onSelectBlock(\n                  this.props.id,\n                  this.props.selected ? false : isMultipleSelection,\n                  e,\n                );\n            }}\n            onKeyDown={\n              !(blockHasOwnFocusManagement || disableNewBlocks)\n                ? (e) =>\n                    this.props.handleKeyDown(\n                      e,\n                      this.props.index,\n                      this.props.id,\n                      this.blockNode.current,\n                    )\n                : null\n            }\n            className={cx(`block ${type}`, {\n              selected: this.props.selected || this.props.multiSelected,\n              multiSelected: this.props.multiSelected,\n            })}\n            style={{ outline: 'none' }}\n            ref={this.blockNode}\n            // The tabIndex is required for the keyboard navigation\n            /* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n            tabIndex={!blockHasOwnFocusManagement ? -1 : null}\n          >\n            <Block\n              {...this.props}\n              blockNode={this.blockNode}\n              data={applyBlockDefaults(this.props)}\n            />\n            {this.props.manage && (\n              <SidebarPortal\n                selected={this.props.selected}\n                tab=\"sidebar-settings\"\n              >\n                <BlockSettingsSidebar {...this.props} schema={schema} />\n              </SidebarPortal>\n            )}\n          </div>\n        ) : (\n          <div\n            role=\"presentation\"\n            onClick={() =>\n              !this.props.selected && this.props.onSelectBlock(this.props.id)\n            }\n            onKeyDown={\n              !(blockHasOwnFocusManagement || disableNewBlocks)\n                ? (e) =>\n                    this.props.handleKeyDown(\n                      e,\n                      this.props.index,\n                      this.props.id,\n                      this.blockNode.current,\n                    )\n                : null\n            }\n            className={cx(`block ${type}`, { selected: this.props.selected })}\n            style={{ outline: 'none' }}\n            ref={this.blockNode}\n            // The tabIndex is required for the keyboard navigation\n            tabIndex={-1}\n          >\n            {this.props.intl.formatMessage(messages.unknownBlock, {\n              block: type,\n            })}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  withObjectBrowser,\n  connect(null, { setSidebarTab }),\n)(Edit);\n","/**\n * FormFieldWrapper component.\n * @module components/manage/Widgets/FormFieldWrapper\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Grid, Icon as IconOld, Label } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport cx from 'classnames';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  edit: {\n    id: 'Edit',\n    defaultMessage: 'Edit',\n  },\n  delete: {\n    id: 'Delete',\n    defaultMessage: 'Delete',\n  },\n  language_independent: {\n    id: 'Language independent field.',\n    defaultMessage: 'Language independent field.',\n  },\n});\n/**\n * FormFieldWrapper component class.\n * @class FormFieldWrapper\n * @extends Component\n */\nclass FormFieldWrapper extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    wrapped: PropTypes.bool,\n    columns: PropTypes.number,\n    draggable: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    onEdit: PropTypes.func,\n    className: PropTypes.string,\n    onDelete: PropTypes.func,\n    intl: PropTypes.object,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    wrapped: true,\n    columns: 2,\n    onDelete: null,\n    intl: null,\n    isDisabled: null,\n    draggable: null,\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      title,\n      description,\n      fieldSet,\n      required,\n      error,\n      wrapped,\n      columns,\n      draggable,\n      onEdit,\n      className,\n      isDisabled,\n      onDelete,\n      intl,\n      noForInFieldLabel,\n      multilingual_options,\n    } = this.props;\n    const wdg = (\n      <>\n        {this.props.children}\n\n        {map(error, (message) => (\n          <Label key={message} basic color=\"red\" pointing>\n            {message}\n          </Label>\n        ))}\n      </>\n    );\n\n    return wrapped ? (\n      <Form.Field\n        inline\n        required={required}\n        error={error.length > 0}\n        className={cx(\n          description ? 'help' : '',\n          className,\n          `field-wrapper-${id}`,\n          multilingual_options?.language_independent\n            ? 'language-independent-field'\n            : null,\n        )}\n      >\n        <Grid>\n          <Grid.Row stretched>\n            {columns === 2 && (\n              <Grid.Column width=\"4\">\n                <div className=\"wrapper\">\n                  <label\n                    id={`fieldset-${fieldSet}-field-label-${id}`}\n                    htmlFor={noForInFieldLabel ? null : `field-${id}`}\n                  >\n                    {draggable && onEdit && (\n                      <i\n                        aria-hidden=\"true\"\n                        className=\"grey bars icon drag handle\"\n                      />\n                    )}\n                    {title}\n                  </label>\n                </div>\n              </Grid.Column>\n            )}\n            <Grid.Column width={columns === 2 ? 8 : 12}>\n              {onEdit && !isDisabled && (\n                <div className=\"toolbar\" style={{ zIndex: '2' }}>\n                  <button\n                    aria-label={intl.formatMessage(messages.edit)}\n                    className=\"item ui noborder button\"\n                    onClick={(evt) => {\n                      evt.preventDefault();\n                      onEdit(id);\n                    }}\n                  >\n                    <IconOld name=\"write square\" size=\"large\" color=\"blue\" />\n                  </button>\n                  <button\n                    aria-label={intl.formatMessage(messages.delete)}\n                    className=\"item ui noborder button\"\n                    onClick={(evt) => {\n                      evt.preventDefault();\n                      onDelete(id);\n                    }}\n                  >\n                    <IconOld name=\"close\" size=\"large\" color=\"red\" />\n                  </button>\n                </div>\n              )}\n              {wdg}\n            </Grid.Column>\n          </Grid.Row>\n          {description && (\n            <Grid.Row stretched>\n              <Grid.Column stretched width=\"12\">\n                <p className=\"help\">\n                  {this.props.multilingual_options\n                    ? `${intl.formatMessage(messages.language_independent)} `\n                    : null}\n                  {description}\n                </p>\n              </Grid.Column>\n            </Grid.Row>\n          )}\n        </Grid>\n      </Form.Field>\n    ) : (\n      <>{wdg}</>\n    );\n  }\n}\n\nexport default injectIntl(FormFieldWrapper);\n","/**\n * CheckboxWidget component.\n * @module components/manage/Widgets/CheckboxWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'semantic-ui-react';\n\nimport { injectIntl } from 'react-intl';\nimport { FormFieldWrapper } from '@plone/volto/components';\n\n/**\n * CheckboxWidget component class.\n * @function CheckboxWidget\n * @returns {string} Markup of the component.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Active\",\n *  type: 'boolean',\n * }\n * ```\n */\nconst CheckboxWidget = (props) => {\n  const { id, title, value, onChange, isDisabled } = props;\n\n  return (\n    <FormFieldWrapper {...props} columns={1}>\n      <div className=\"wrapper\">\n        <Checkbox\n          name={`field-${id}`}\n          checked={value || false}\n          disabled={isDisabled}\n          onChange={(event, { checked }) => {\n            onChange(id, checked);\n          }}\n          label={<label htmlFor={`field-${id}`}>{title}</label>}\n        />\n      </div>\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nCheckboxWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nCheckboxWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null,\n};\n\nexport default injectIntl(CheckboxWidget);\n","/**\n * ReferenceWidget component.\n * @module components/manage/Widgets/ReferenceWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Label, Dropdown, Popup, Icon } from 'semantic-ui-react';\nimport { compact, concat, fromPairs, map, values, uniqBy } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { resetSearchContent, searchContent } from '@plone/volto/actions';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nconst messages = defineMessages({\n  no_results_found: {\n    id: 'No results found.',\n    defaultMessage: 'No results found.',\n  },\n  no_value: {\n    id: 'No value',\n    defaultMessage: 'No value',\n  },\n});\n\n/**\n * ReferenceWidget component class.\n * @class ReferenceWidget\n * @extends Component\n */\nclass ReferenceWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    multiple: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.object),\n      PropTypes.object,\n    ]),\n    onChange: PropTypes.func.isRequired,\n    resetSearchContent: PropTypes.func.isRequired,\n    searchContent: PropTypes.func.isRequired,\n    search: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        '@type': PropTypes.string,\n        title: PropTypes.string,\n        description: PropTypes.string,\n      }),\n    ),\n    wrapped: PropTypes.bool,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    search: [],\n    value: null,\n    multiple: true,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Actions\n   */\n  constructor(props) {\n    super(props);\n    this.onSearchChange = this.onSearchChange.bind(this);\n\n    this.state = {\n      choices: props.value\n        ? props.multiple\n          ? fromPairs(\n              map(props.value, (value) => [\n                value['@id'],\n                {\n                  key: value['@id'],\n                  text: flattenToAppURL(value['@id']),\n                  value: value['@id'],\n                  label: {\n                    content: value.title,\n                  },\n                  data: value,\n                },\n              ]),\n            )\n          : {\n              [props.value['@id']]: {\n                key: props.value['@id'],\n                text: flattenToAppURL(props.value),\n                value: props.value['@id'],\n                label: {\n                  content: props.value.title,\n                },\n                data: props.value,\n              },\n              novalue: {\n                key: 'novalue',\n                text: this.props.intl.formatMessage(messages.no_value),\n                value: 'novalue',\n                data: null,\n              },\n            }\n        : {},\n    };\n  }\n\n  componentDidMount() {\n    this.props.resetSearchContent();\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.setState({\n      choices: {\n        ...fromPairs(\n          map(\n            uniqBy(\n              map(\n                compact(concat(nextProps.value, nextProps.search)),\n                (item) => ({\n                  ...item,\n                  '@id': flattenToAppURL(item['@id']),\n                }),\n              ),\n              '@id',\n            ),\n            (value) => [\n              value['@id'],\n              {\n                key: value['@id'],\n                text: flattenToAppURL(value['@id']),\n                value: value['@id'],\n                label: {\n                  content: value.title,\n                },\n                data: value,\n              },\n            ],\n          ),\n        ),\n        novalue: {\n          key: 'novalue',\n          text: this.props.intl.formatMessage(messages.no_value),\n          value: 'novalue',\n          data: null,\n        },\n      },\n    });\n  }\n\n  /**\n   * On search change handler\n   * @method onSearchChange\n   * @param {object} event Event object.\n   * @param {object} data Event data.\n   * @returns {undefined}\n   */\n\n  onSearchChange(event, data) {\n    if (data.searchQuery && data.searchQuery !== '') {\n      this.props.searchContent('', {\n        Title: `*${data.searchQuery}*`,\n      });\n    } else {\n      this.props.resetSearchContent();\n    }\n  }\n  renderLabel = (item, index, defaultProps) => {\n    return (\n      <Popup\n        key={item.value}\n        content={\n          <>\n            <Icon name=\"home\" /> {item.value}\n          </>\n        }\n        trigger={\n          defaultProps && (\n            <Label active={defaultProps.active}>\n              {item.label.content}\n              <Icon\n                name=\"delete\"\n                onClick={(event) => {\n                  defaultProps.onRemove(event, defaultProps);\n                }}\n              />\n            </Label>\n          )\n        }\n      />\n    );\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { id, title, value, multiple, onChange } = this.props;\n\n    return (\n      <FormFieldWrapper {...this.props}>\n        <Dropdown\n          options={values(this.state.choices)}\n          placeholder={title}\n          search\n          selection\n          fluid\n          noResultsMessage={this.props.intl.formatMessage(\n            messages.no_results_found,\n          )}\n          multiple={multiple}\n          value={\n            multiple\n              ? value\n                ? map(value, (item) =>\n                    item && item['@id'] ? flattenToAppURL(item['@id']) : item,\n                  )\n                : []\n              : value\n              ? flattenToAppURL(value['@id'])\n              : ''\n          }\n          onChange={(event, data) => {\n            return onChange(\n              id,\n              multiple\n                ? map(data.value, (item) => this.state.choices[item].data)\n                : this.state.choices[data.value].data,\n            );\n          }}\n          onSearchChange={this.onSearchChange}\n          renderLabel={this.renderLabel}\n        />\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      search: state.search.items,\n    }),\n    { resetSearchContent, searchContent },\n  ),\n)(ReferenceWidget);\n","/**\n * SchemaWidget component.\n * @module components/manage/Widgets/SchemaWidget\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport PropTypes from 'prop-types';\nimport { concat, findIndex, isString, map, omit, slice, without } from 'lodash';\nimport move from 'lodash-move';\nimport { Confirm, Form, Grid, Icon, Message, Segment } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport {\n  Field,\n  ModalForm,\n  SchemaWidgetFieldset,\n} from '@plone/volto/components';\n\nconst messages = defineMessages({\n  add: {\n    id: 'Add',\n    defaultMessage: 'Add',\n  },\n  addField: {\n    id: 'Add field',\n    defaultMessage: 'Add field',\n  },\n  addFieldset: {\n    id: 'Add fieldset',\n    defaultMessage: 'Add fieldset',\n  },\n  parentFieldSet: {\n    id: 'Parent fieldset',\n    defaultMessage: 'Parent fieldset',\n  },\n  editField: {\n    id: 'Edit field',\n    defaultMessage: 'Edit field',\n  },\n  editFieldset: {\n    id: 'Edit fieldset',\n    defaultMessage: 'Edit fieldset',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  idTitle: {\n    id: 'Short Name',\n    defaultMessage: 'Short Name',\n  },\n  idDescription: {\n    id: 'Used for programmatic access to the fieldset.',\n    defaultMessage: 'Used for programmatic access to the fieldset.',\n  },\n  choices: {\n    id: 'Possible values',\n    defaultMessage: 'Possible values (Enter allowed choices one per line).',\n  },\n  string: {\n    id: 'String',\n    defaultMessage: 'String',\n  },\n  text: {\n    id: 'Text',\n    defaultMessage: 'Text',\n  },\n  richtext: {\n    id: 'Richtext',\n    defaultMessage: 'Richtext',\n  },\n  checkbox: {\n    id: 'Checkbox',\n    defaultMessage: 'Checkbox',\n  },\n  selection: {\n    id: 'Selection',\n    defaultMessage: 'Selection',\n  },\n  type: {\n    id: 'Type',\n    defaultMessage: 'Type',\n  },\n  title: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  description: {\n    id: 'Description',\n    defaultMessage: 'Description',\n  },\n  required: {\n    id: 'Required',\n    defaultMessage: 'Required',\n  },\n  minLength: {\n    id: 'minLength',\n    defaultMessage: 'Minimum Length',\n  },\n  maxLength: {\n    id: 'maxLength',\n    defaultMessage: 'Maximum Length',\n  },\n  minimum: {\n    id: 'minimum',\n    defaultMessage: 'Start of the range',\n  },\n  maximum: {\n    id: 'maximum',\n    defaultMessage: 'End of the range (including the value itself)',\n  },\n  deleteFieldset: {\n    id: 'Are you sure you want to delete this fieldset including all fields?',\n    defaultMessage:\n      'Are you sure you want to delete this fieldset including all fields?',\n  },\n  deleteField: {\n    id: 'Are you sure you want to delete this field?',\n    defaultMessage: 'Are you sure you want to delete this field?',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n});\n\n/**\n * Makes a list of fieldset types formatted for select widget\n * @param {Object[]} listOfTypes array of strings\n * @param {*} intl\n * @returns {Object[]} example [['default', 'default']]\n */\nconst makeFieldsetList = (listOfFieldsets, intl) => {\n  const result = listOfFieldsets.map((type) => [type.id, type.title]);\n  return result;\n};\n\n/**\n * schemaField used for modal form, when editing a field\n * - based on the factory a set of fields is presented\n * - fields can be moved to another fieldset\n * @param {string} factory - the kind of field\n * @param {Object} intl\n * @param {*} fieldsets\n * @return {Object} - schema\n */\nconst schemaField = (factory, intl, fieldsets) => ({\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'default',\n      fields: [\n        ...['title', 'description', 'parentFieldSet'],\n        ...((factory) => {\n          switch (factory) {\n            case 'Rich Text':\n              return ['maxLength'];\n            case 'URL':\n            case 'Password':\n            case 'label_password_field':\n            case 'Email':\n            case 'label_email':\n              return ['minLength', 'maxLength'];\n            case 'Integer':\n            case 'label_integer_field':\n              return ['minimum', 'maximum'];\n            case 'Floating-point number':\n            case 'label_float_field':\n            case 'Date/Time':\n            case 'label_datetime_field':\n            case 'Date':\n            case 'label_date_field':\n            case 'File':\n            case 'File Upload':\n            case 'Image':\n            case 'Yes/No':\n            case 'label_boolean_field':\n            case 'JSONField':\n            case 'Relation Choice':\n            case 'Relation List':\n              return [];\n            case 'Multiple Choice':\n            case 'label_multi_choice_field':\n            case 'Choice':\n            case 'label_choice_field':\n              return ['values'];\n            default:\n              return ['minLength', 'maxLength'];\n          }\n        })(factory),\n        ...['required'],\n      ],\n    },\n  ],\n  properties: {\n    title: {\n      type: 'string',\n      title: intl.formatMessage(messages.title),\n    },\n    description: {\n      type: 'string',\n      widget: 'textarea',\n      title: intl.formatMessage(messages.description),\n    },\n    parentFieldSet: {\n      type: 'string',\n      title: intl.formatMessage(messages.parentFieldSet),\n      choices: makeFieldsetList(fieldsets),\n    },\n    required: {\n      type: 'boolean',\n      title: intl.formatMessage(messages.required),\n    },\n    ...((factory) => {\n      switch (factory) {\n        case 'Rich Text':\n          return {\n            maxLength: {\n              type: 'integer',\n              title: intl.formatMessage(messages.maxLength),\n            },\n          };\n        case 'URL':\n        case 'Password':\n        case 'label_password_field':\n        case 'Email':\n        case 'label_email':\n          return {\n            minLength: {\n              type: 'integer',\n              title: intl.formatMessage(messages.minLength),\n            },\n            maxLength: {\n              type: 'integer',\n              title: intl.formatMessage(messages.maxLength),\n            },\n          };\n        case 'Integer':\n        case 'label_integer_field':\n          return {\n            minimum: {\n              type: 'integer',\n              title: intl.formatMessage(messages.minimum),\n            },\n            maximum: {\n              type: 'integer',\n              title: intl.formatMessage(messages.maximum),\n            },\n          };\n        case 'Floating-point number':\n        case 'label_float_field':\n        case 'Date/Time':\n        case 'label_datetime_field':\n        case 'Date':\n        case 'label_date_field':\n        case 'File':\n        case 'File Upload':\n        case 'Image':\n        case 'Yes/No':\n        case 'label_boolean_field':\n        case 'JSONField':\n        case 'Relation Choice':\n        case 'Relation List':\n          return {};\n        case 'Multiple Choice':\n        case 'label_multi_choice_field':\n        case 'Choice':\n        case 'label_choice_field':\n          return {\n            values: {\n              type: 'string',\n              title: intl.formatMessage(messages.choices),\n              widget: 'textarea',\n            },\n          };\n        default:\n          return {\n            minLength: {\n              type: 'integer',\n              title: intl.formatMessage(messages.minLength),\n            },\n            maxLength: {\n              type: 'integer',\n              title: intl.formatMessage(messages.maxLength),\n            },\n          };\n      }\n    })(factory),\n  },\n  required: ['type', 'title'],\n});\n\n/**\n * schema for adding a new field\n * @param {Object} intl\n */\nconst fieldsetSchema = (intl) => ({\n  fieldsets: [\n    {\n      id: 'default',\n      title: intl.formatMessage(messages.default),\n      fields: ['title', 'id'],\n    },\n  ],\n  properties: {\n    id: {\n      type: 'string',\n      title: intl.formatMessage(messages.idTitle),\n      description: intl.formatMessage(messages.idDescription),\n    },\n    title: {\n      type: 'string',\n      title: intl.formatMessage(messages.title),\n    },\n  },\n  required: ['id', 'title'],\n});\n\n/**\n * 'plone.dexterity.schema.generated' is considered user created\n * @param {Object} field\n */\nconst isEditable = (field) =>\n  !field.behavior || field.behavior.includes('generated');\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n\n  // change background colour if dragging\n  background: isDragging ? 'white' : 'transparent',\n\n  // styles we need to apply on draggable\n  ...draggableStyle,\n});\n\nconst getTabStyle = (isDraggingOver) => ({\n  background: isDraggingOver ? '#f4f4f4' : 'transparent',\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n});\n\nconst getFieldStyle = (isDraggingOver) => ({\n  background: isDraggingOver ? '#f4f4f4' : 'transparent',\n});\n\n/**\n * will transform a string with new lines in an array for each item on a line\n * @param {string} textarea - has '\\r\\n' characters\n */\nconst formatTextareaToArray = (textarea) => {\n  const values =\n    textarea && textarea\n      ? textarea\n          .split(/(\\r\\n|\\n|\\r)/gm)\n          .map((elem) => elem.trim())\n          .filter((elem) => elem !== '')\n      : null;\n\n  return values ? { values } : {};\n};\n\nconst formatArrayToTextarea = (props) => {\n  if (props?.values) {\n    return props.values.join('\\n');\n  }\n  if (props?.choices) {\n    return props.choices.map((elem) => elem[0]).join('\\n');\n  }\n  if (props?.items?.choices) {\n    return props.items.choices.map((elem) => elem[0]).join('\\n');\n  }\n  return '';\n};\n\nconst formatTextareaToChoices = (textarea, multiple) => {\n  const choices =\n    textarea && textarea\n      ? textarea\n          .split(/(\\r\\n|\\n|\\r)/gm)\n          .map((elem) => elem.trim())\n          .filter((elem) => elem !== '')\n          .map((elem) => [elem, elem])\n      : null;\n\n  if (!multiple) {\n    return choices ? { choices } : {};\n  }\n\n  const items = choices ? { choices: choices } : {};\n  return items ? { items } : {};\n};\n\n/**\n * SchemaWidget component class.\n * @class SchemaWidget\n * @extends Component\n */\nclass SchemaWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    /**\n     * Id of the field\n     */\n    id: PropTypes.string.isRequired,\n    /**\n     * Title of the field\n     */\n    required: PropTypes.bool,\n    /**\n     * Value of the field\n     */\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    /**\n     * List of error messages\n     */\n    error: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * On change handler\n     */\n    onChange: PropTypes.func.isRequired,\n    /**\n     * Intl object\n     */\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    required: false,\n    value: {},\n    error: [],\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeDefaultValue = this.onChangeDefaultValue.bind(this);\n    this.onAddField = this.onAddField.bind(this);\n    this.onAddFieldset = this.onAddFieldset.bind(this);\n    this.onEditField = this.onEditField.bind(this);\n    this.onEditFieldset = this.onEditFieldset.bind(this);\n    this.onDeleteFieldset = this.onDeleteFieldset.bind(this);\n    this.onDeleteField = this.onDeleteField.bind(this);\n    this.onShowAddField = this.onShowAddField.bind(this);\n    this.onShowAddFieldset = this.onShowAddFieldset.bind(this);\n    this.onShowEditFieldset = this.onShowEditFieldset.bind(this);\n    this.onShowEditField = this.onShowEditField.bind(this);\n    this.onShowDeleteFieldset = this.onShowDeleteFieldset.bind(this);\n    this.onShowDeleteField = this.onShowDeleteField.bind(this);\n    this.onSetCurrentFieldset = this.onSetCurrentFieldset.bind(this);\n    this.onOrderField = this.onOrderField.bind(this);\n    this.onOrderFieldset = this.onOrderFieldset.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.onDragEnd = this.onDragEnd.bind(this);\n    this.state = {\n      addField: null,\n      addFieldset: null,\n      editFieldset: null,\n      editField: null,\n      deleteFieldset: null,\n      deleteField: null,\n      currentFieldset: 0,\n    };\n  }\n\n  /**\n   * Add field handler\n   * @method onAddField\n   * @param {Object} values Form values\n   * @returns {undefined}\n   */\n  onAddField(values) {\n    const fieldId = values.title.trim().replace(' ', '_');\n    const currentFieldsetFields = this.props.value.fieldsets[\n      this.state.currentFieldset\n    ].fields;\n    const hasChangeNote = currentFieldsetFields.indexOf('changeNote') > -1;\n    const newFieldsetFields = hasChangeNote\n      ? [\n          ...currentFieldsetFields.slice(0, currentFieldsetFields.length - 1),\n          fieldId,\n          currentFieldsetFields[currentFieldsetFields.length - 1],\n        ]\n      : [...currentFieldsetFields, fieldId];\n\n    this.onChange({\n      ...this.props.value,\n      fieldsets: [\n        ...slice(this.props.value.fieldsets, 0, this.state.currentFieldset),\n        {\n          ...this.props.value.fieldsets[this.state.currentFieldset],\n          fields: newFieldsetFields,\n        },\n        ...slice(this.props.value.fieldsets, this.state.currentFieldset + 1),\n      ],\n      properties: {\n        ...this.props.value.properties,\n        [fieldId]: {\n          title: values.title,\n          description: values.description,\n          id: fieldId,\n          ...((factory) => {\n            switch (factory) {\n              case 'Date/Time':\n              case 'label_datetime_field':\n                return {\n                  type: 'string',\n                  widget: 'datetime',\n                  factory,\n                };\n              case 'Date':\n              case 'label_date_field':\n                return {\n                  type: 'string',\n                  widget: 'date',\n                  factory,\n                };\n              case 'Email':\n              case 'label_email':\n                return {\n                  type: 'string',\n                  widget: 'email',\n                  factory,\n                };\n              case 'File':\n              case 'File Upload':\n                return {\n                  type: 'object',\n                  factory,\n                };\n              case 'Floating-point number':\n              case 'label_float_field':\n                return {\n                  type: 'number',\n                  factory,\n                };\n              case 'Integer':\n              case 'label_integer_field':\n                return {\n                  type: 'integer',\n                  factory,\n                };\n              case 'Image':\n                return {\n                  type: 'object',\n                  factory,\n                };\n              case 'JSONField':\n                return {\n                  type: 'dict',\n                  widget: 'json',\n                  factory,\n                };\n              case 'Multiple Choice':\n              case 'label_multi_choice_field':\n                return {\n                  type: 'array',\n                  factory,\n                };\n              case 'Relation List':\n                return {\n                  type: 'array',\n                  factory,\n                };\n              case 'Choice':\n              case 'label_choice_field':\n                return {\n                  type: 'string',\n                  choices: [],\n                  factory,\n                };\n              case 'Relation Choice':\n                return {\n                  type: 'string',\n                  factory,\n                };\n              case 'Password':\n              case 'label_password_field':\n                return {\n                  type: 'string',\n                  widget: 'password',\n                  factory,\n                };\n              case 'Rich Text':\n                return {\n                  type: 'string',\n                  widget: 'richtext',\n                  factory,\n                };\n              case 'URL':\n                return {\n                  type: 'string',\n                  widget: 'url',\n                  factory,\n                };\n              case 'Yes/No':\n              case 'label_boolean_field':\n                return {\n                  type: 'boolean',\n                  factory,\n                };\n              default:\n                return {\n                  type: 'string',\n                  factory,\n                };\n            }\n          })(values.factory),\n        },\n      },\n      required: values.required\n        ? [...this.props.value.required, fieldId]\n        : this.props.value.required,\n    });\n    this.onCancel();\n  }\n\n  /**\n   * Add fieldset handler\n   * @method onAddFieldset\n   * @param {Object} values Form values\n   * @returns {undefined}\n   */\n  onAddFieldset(values) {\n    this.onChange({\n      ...this.props.value,\n      fieldsets: [\n        ...this.props.value.fieldsets,\n        {\n          ...values,\n          fields: [],\n        },\n      ],\n    });\n    this.onCancel();\n  }\n\n  /**\n   * Edit fieldset handler\n   * @method onEditFieldset\n   * @param {Object} values Form values\n   * @returns {undefined}\n   */\n  onEditFieldset(values) {\n    values.fields =\n      values.fields ||\n      this.props.value.fieldsets[this.state.editFieldset]?.fields ||\n      [];\n    this.onChange({\n      ...this.props.value,\n      fieldsets: [\n        ...slice(this.props.value.fieldsets, 0, this.state.editFieldset),\n        values,\n        ...slice(this.props.value.fieldsets, this.state.editFieldset + 1),\n      ],\n    });\n    this.onCancel();\n  }\n\n  /**\n   * Recreates the fieldset structure\n   * will move change name of the field if needed and\n   * change fieldset if changed\n   * @param {Object[]} fieldsets\n   * @param {string} parentFieldSet - id\n   * @param {number} currentFieldset - index\n   * @param {Object} oldfieldId\n   * @param {Object} newfieldId\n   * @returns {Object[]} fieldsets\n   */\n  editFieldset(\n    fieldsets,\n    parentFieldSet,\n    currentFieldset,\n    oldfieldId,\n    newfieldId,\n  ) {\n    const moveToFieldsetWithNewName = () => {\n      const newParentFieldsetIndex = fieldsets.findIndex(\n        (field) => field.id === parentFieldSet,\n      );\n      const indexOfChangeNote = fieldsets[\n        newParentFieldsetIndex\n      ].fields.indexOf('changeNote');\n      // remove from current fieldset\n      const fieldsetsWithoutField = [\n        ...slice(fieldsets, 0, currentFieldset),\n        {\n          ...fieldsets[currentFieldset],\n          fields: fieldsets[currentFieldset].fields.filter(\n            (fieldId) => fieldId !== oldfieldId,\n          ),\n        },\n        ...slice(fieldsets, currentFieldset + 1),\n      ];\n\n      const fieldsOfNewFieldset =\n        indexOfChangeNote > -1\n          ? [\n              ...fieldsetsWithoutField[newParentFieldsetIndex].fields.slice(\n                0,\n                indexOfChangeNote + 1,\n              ),\n              oldfieldId,\n              fieldsetsWithoutField[newParentFieldsetIndex].fields[\n                indexOfChangeNote\n              ],\n            ]\n          : [\n              ...fieldsetsWithoutField[newParentFieldsetIndex].fields,\n              oldfieldId,\n            ];\n\n      // add to new fieldset\n      const fieldsetsWithField = [\n        ...slice(fieldsetsWithoutField, 0, newParentFieldsetIndex),\n        {\n          ...fieldsetsWithoutField[newParentFieldsetIndex],\n          fields: fieldsOfNewFieldset,\n        },\n        ...slice(fieldsetsWithoutField, newParentFieldsetIndex + 1),\n      ];\n      return fieldsetsWithField;\n    };\n\n    const changeNameInFieldset = () => {\n      return [\n        ...slice(fieldsets, 0, currentFieldset),\n        {\n          ...fieldsets[currentFieldset],\n          fields: map(fieldsets[currentFieldset].fields, (field) =>\n            field === oldfieldId ? newfieldId : field,\n          ),\n        },\n        ...slice(fieldsets, currentFieldset + 1),\n      ];\n    };\n\n    const result =\n      parentFieldSet !== fieldsets[currentFieldset].id\n        ? moveToFieldsetWithNewName()\n        : changeNameInFieldset();\n    return result;\n  }\n\n  /**\n   * Edit field handler\n   * recreates the schema based on field changes (properties, name, fieldset)\n   * @method onEditField\n   * @param {Object} values Field values\n   * @returns {undefined}\n   */\n  onEditField(values) {\n    let formattedValues = { ...values };\n\n    const listOfProp = ['minLength', 'maxLength', 'minimum', 'maximum'];\n    listOfProp.forEach((prop) => {\n      formattedValues = {\n        ...formattedValues,\n        ...{ [prop]: values[prop] ? parseFloat(values[prop]) : null },\n      };\n    });\n\n    const multiple =\n      this.props.value.properties[this.state.editField.id]?.factory ===\n        'Multiple Choice' ||\n      this.props.value.properties[this.state.editField.id]?.factory ===\n        'label_multi_choice_field';\n    const result = {\n      ...this.props.value,\n      fieldsets: formattedValues.parentFieldSet\n        ? this.editFieldset(\n            this.props.value.fieldsets,\n            formattedValues.parentFieldSet,\n            this.state.currentFieldset,\n            this.state.editField.id,\n            formattedValues.id,\n          )\n        : this.props.value.fieldsets,\n      properties: {\n        ...omit(this.props.value.properties, [this.state.editField.id]),\n        [formattedValues.id]: {\n          ...this.props.value.properties[this.state.editField.id],\n          ...omit(formattedValues, ['id', 'parentFieldSet']),\n          ...formatTextareaToArray(formattedValues.values),\n          ...formatTextareaToChoices(formattedValues.values, multiple),\n        },\n      },\n      required: formattedValues.required\n        ? concat(without(this.props.value.required, this.state.editField.id), [\n            formattedValues.id,\n          ])\n        : without(this.props.value.required, this.state.editField.id),\n    };\n\n    this.onChange(result);\n\n    this.onCancel();\n  }\n\n  /**\n   * Delete fieldset handler\n   * @method onDeleteFieldset\n   * @returns {undefined}\n   */\n  onDeleteFieldset() {\n    if (this.state.currentFieldset > this.props.value.fieldsets.length - 2) {\n      this.setState({\n        currentFieldset: this.state.currentFieldset - 1,\n      });\n    }\n    this.onChange({\n      ...this.props.value,\n      fieldsets: [\n        ...slice(this.props.value.fieldsets, 0, this.state.deleteFieldset),\n        ...slice(this.props.value.fieldsets, this.state.deleteFieldset + 1),\n      ],\n      properties: omit(\n        this.props.value.properties,\n        this.props.value.fieldsets[this.state.deleteFieldset].fields,\n      ),\n    });\n    this.onCancel();\n  }\n\n  /**\n   * Delete field handler\n   * @method onDeleteField\n   * @returns {undefined}\n   */\n  onDeleteField() {\n    this.onChange({\n      ...this.props.value,\n      fieldsets: [\n        ...slice(this.props.value.fieldsets, 0, this.state.currentFieldset),\n        {\n          ...this.props.value.fieldsets[this.state.currentFieldset],\n          fields: without(\n            this.props.value.fieldsets[this.state.currentFieldset].fields,\n            this.state.deleteField,\n          ),\n        },\n        ...slice(this.props.value.fieldsets, this.state.currentFieldset + 1),\n      ],\n      properties: omit(this.props.value.properties, [this.state.deleteField]),\n    });\n    this.onCancel();\n  }\n\n  /**\n   * Change handler\n   * @method onChange\n   * @param {Object} value New schema\n   * @returns {undefined}\n   */\n  onChange(value) {\n    this.props.onChange(this.props.id, value);\n  }\n\n  /**\n   * Change default value handler\n   * @method onChangeDefaultValue\n   * @param {string} fieldId\n   * @param {string} fieldValue\n   */\n  onChangeDefaultValue(fieldId, fieldValue) {\n    // Default values can have irreversible consequence, thus skip it for now.\n    // const value = { default: fieldValue }\n    const value = {};\n\n    const fieldMerge = {\n      ...this.props.value.properties[fieldId],\n      ...value,\n    };\n    const propsMerge = {\n      ...this.props.value.properties,\n      ...{ [fieldId]: fieldMerge },\n    };\n\n    this.onChange({\n      ...this.props.value,\n      properties: propsMerge,\n    });\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.setState({\n      addField: null,\n      addFieldset: null,\n      editFieldset: null,\n      editField: null,\n      deleteFieldset: null,\n      deleteField: null,\n    });\n  }\n\n  /**\n   * Show add field handler\n   * @method onShowAddField\n   * @returns {undefined}\n   */\n  onShowAddField(event) {\n    this.setState({\n      addField: true,\n    });\n    event.preventDefault();\n  }\n\n  /**\n   * Show add fieldset handler\n   * @method onShowAddFieldset\n   * @returns {undefined}\n   */\n  onShowAddFieldset(event) {\n    this.setState({\n      addFieldset: true,\n    });\n    event.preventDefault();\n  }\n\n  /**\n   * Show edit fieldset handler\n   * @method onShowEditFieldset\n   * @param {Number} index Index of fieldset\n   * @returns {undefined}\n   */\n  onShowEditFieldset(index) {\n    this.setState({\n      editFieldset: index,\n    });\n  }\n\n  /**\n   * Show edit field handler\n   * @method onShowEditField\n   * @param {string} id Id of field\n   * @param {Object} schema Schema of the field\n   * @returns {undefined}\n   */\n  onShowEditField(id, schema) {\n    return this.setState({\n      editField: {\n        id,\n      },\n    });\n  }\n\n  /**\n   * Show delete fieldset handler\n   * @method onShowDeleteFieldset\n   * @param {Number} index Index of fieldset\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  onShowDeleteFieldset(index) {\n    this.setState({\n      deleteFieldset: index,\n    });\n  }\n\n  /**\n   * Show delete field handler\n   * @method onShowDeleteField\n   * @param {String} field Field to delete\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  onShowDeleteField(field) {\n    this.setState({\n      deleteField: field,\n    });\n  }\n\n  /**\n   * Set current fieldset handler\n   * @method onSetCurrentFieldset\n   * @param {Number} index Index of fieldset\n   * @returns {undefined}\n   */\n  onSetCurrentFieldset(index) {\n    this.setState({\n      currentFieldset: index,\n    });\n  }\n\n  /**\n   * On order fieldset\n   * @method onOrderField\n   * @param {number} index Index\n   * @param {number} delta Delta\n   * @returns {undefined}\n   */\n  onOrderField(index, delta) {\n    this.onChange({\n      ...this.props.value,\n      fieldsets: [\n        ...slice(this.props.value.fieldsets, 0, this.state.currentFieldset),\n        {\n          ...this.props.value.fieldsets[this.state.currentFieldset],\n          fields: move(\n            this.props.value.fieldsets[this.state.currentFieldset].fields,\n            index,\n            delta,\n          ),\n        },\n        ...slice(this.props.value.fieldsets, this.state.currentFieldset + 1),\n      ],\n    });\n  }\n\n  /**\n   * On order fieldset\n   * @method onOrderFieldset\n   * @param {number} index Index\n   * @param {number} delta Delta\n   * @returns {undefined}\n   */\n  onOrderFieldset(index, delta) {\n    const schema = {\n      ...this.props.value,\n      fieldsets: move(this.props.value.fieldsets, index, delta),\n    };\n    this.setState({\n      currentFieldset: findIndex(schema.fieldsets, {\n        id: schema.fieldsets[this.state.currentFieldset].id,\n      }),\n    });\n    this.onChange(schema);\n  }\n\n  /**\n   * Set current fieldset handler\n   * @method onDragEnd\n   * @param {Number} index Index of fieldset\n   * @returns {undefined}\n   */\n  onDragEnd(result) {\n    if (\n      result.destination &&\n      result.destination.droppableId === 'fields-schema-edit'\n    ) {\n      this.onOrderField(result.source.index, result.destination.index);\n    }\n    if (\n      result.destination &&\n      result.destination.droppableId === 'tabs-schema-edit'\n    ) {\n      this.onOrderFieldset(result.source.index, result.destination.index);\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { error, reactBeautifulDnd } = this.props;\n    const { Draggable, DragDropContext, Droppable } = reactBeautifulDnd;\n    if (!this.props.value) {\n      return '';\n    }\n    const nonUserCreatedFields = this.props.value.fieldsets[\n      this.state.currentFieldset\n    ].fields.filter(\n      (fieldId) =>\n        !isEditable(this.props.value.properties[fieldId]) &&\n        fieldId !== 'changeNote',\n    );\n    const hasChangeNote =\n      this.props.value.fieldsets[this.state.currentFieldset].fields.indexOf(\n        'changeNote',\n      ) > -1;\n    const userCreatedFieldsStartingIndex = nonUserCreatedFields.length;\n    const lastUserCreatedFieldsIndex = hasChangeNote\n      ? this.props.value.fieldsets[this.state.currentFieldset].fields.length - 1\n      : this.props.value.fieldsets[this.state.currentFieldset].fields.length;\n    // fields that were not created by the user, but are part of a behavior\n    const makeNonUserFields = () =>\n      map(\n        this.props.value.fieldsets[this.state.currentFieldset].fields.slice(\n          0,\n          userCreatedFieldsStartingIndex,\n        ),\n        (field, index) => (\n          <div\n            style={{ background: '#c7d5d859' }}\n            key={`${field}-${this.state.currentFieldset}-${index}`}\n          >\n            <Field\n              {...this.props.value.properties[field]}\n              id={field}\n              required={this.props.value.required.indexOf(field) !== -1}\n              onEdit={this.onShowEditField}\n              draggable={false}\n              isDisabled={true}\n              order={index}\n              onDelete={this.onShowDeleteField}\n              onChange={this.onChangeDefaultValue}\n              value={this.props.value.properties[field].default}\n            />\n          </div>\n        ),\n      );\n    // fields created by the user\n    const makeUserFields = () =>\n      map(\n        this.props.value.fieldsets[this.state.currentFieldset].fields.slice(\n          userCreatedFieldsStartingIndex,\n          lastUserCreatedFieldsIndex,\n        ),\n        (field, index) => (\n          <Draggable\n            draggableId={field}\n            index={userCreatedFieldsStartingIndex + index}\n            key={`${field}-${this.state.currentFieldset}-${index}`}\n          >\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                style={getItemStyle(\n                  snapshot.isDragging,\n                  provided.draggableProps.style,\n                )}\n              >\n                <Field\n                  {...this.props.value.properties[field]}\n                  id={field}\n                  required={this.props.value.required.indexOf(field) !== -1}\n                  onEdit={this.onShowEditField}\n                  draggable={true}\n                  isDisabled={false}\n                  order={index}\n                  onDelete={this.onShowDeleteField}\n                  onChange={this.onChangeDefaultValue}\n                  key={`${field}-${this.state.currentFieldset}-${index}`}\n                  value={this.props.value.properties[field].default}\n                />\n              </div>\n            )}\n          </Draggable>\n        ),\n      );\n\n    const canAddFields =\n      this.state.currentFieldset === 0 ||\n      !this.props.value.fieldsets[this.state.currentFieldset].behavior ||\n      this.props.value.fieldsets[this.state.currentFieldset].behavior.includes(\n        'generated',\n      );\n\n    return (\n      <div>\n        <Segment.Group\n          style={{\n            margin: '-1rem',\n          }}\n        >\n          {error.length > 0 &&\n            map(error, (err, index) => (\n              <Message\n                icon=\"warning\"\n                key={`${err}-${index}`}\n                negative\n                attached\n                header={this.props.intl.formatMessage(messages.error)}\n                content={err}\n              />\n            ))}\n          <DragDropContext onDragEnd={this.onDragEnd}>\n            <Droppable droppableId=\"tabs-schema-edit\" direction=\"horizontal\">\n              {(provided, snapshot) => (\n                <div\n                  role=\"tablist\"\n                  className=\"ui pointing secondary attached tabular menu\"\n                  ref={provided.innerRef}\n                  {...provided.draggableProps}\n                  style={getTabStyle(snapshot.isDraggingOver)}\n                >\n                  {map(this.props.value.fieldsets, (fieldset, index) => (\n                    <SchemaWidgetFieldset\n                      key={`${fieldset.id}-${this.state.currentFieldset}-${index}`}\n                      title={fieldset.title}\n                      order={index}\n                      active={index === this.state.currentFieldset}\n                      onClick={this.onSetCurrentFieldset}\n                      onShowEditFieldset={this.onShowEditFieldset}\n                      onShowDeleteFieldset={this.onShowDeleteFieldset}\n                      onOrderFieldset={this.onOrderFieldset}\n                      getItemStyle={getItemStyle}\n                      isDraggable={true}\n                      isDisabled={\n                        fieldset.behavior\n                          ? !fieldset.behavior.includes('generated')\n                          : false\n                      }\n                    />\n                  ))}\n                  <div className=\"item item-add\">\n                    <button\n                      aria-label={this.props.intl.formatMessage(messages.add)}\n                      className=\"item ui noborder button\"\n                      onClick={this.onShowAddFieldset}\n                    >\n                      <Icon name=\"plus\" size=\"large\" />\n                    </button>\n                  </div>\n\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n\n            {makeNonUserFields()}\n\n            <Droppable\n              droppableId=\"fields-schema-edit\"\n              direction=\"vertical\"\n              type=\"fixed\"\n            >\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.draggableProps}\n                  style={getFieldStyle(snapshot.isDraggingOver)}\n                >\n                  {makeUserFields()}\n\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n\n          {hasChangeNote ? (\n            <div style={{ background: '#c7d5d859' }}>\n              <Field\n                {...this.props.value.properties.changeNote}\n                id={'changeNote'}\n                required={\n                  this.props.value.required.indexOf('changeNote') !== -1\n                }\n                onEdit={this.onShowEditField}\n                draggable={false}\n                isDisabled={true}\n                order={\n                  this.props.value.fieldsets[this.state.currentFieldset]\n                    .length - 1\n                }\n                onDelete={this.onShowDeleteField}\n                onChange={this.onChangeDefaultValue}\n                key={'changeNote'}\n                value={this.props.value.properties.changeNote.default}\n              />\n            </div>\n          ) : null}\n\n          {canAddFields && (\n            <Form.Field inline>\n              <Grid>\n                <Grid.Row stretched>\n                  <Grid.Column width=\"12\">\n                    <div className=\"wrapper\">\n                      <label htmlFor=\"addfield\">\n                        {this.props.intl.formatMessage(messages.addField)}\n                      </label>\n                    </div>\n                    <div className=\"toolbar\">\n                      <button\n                        aria-label={this.props.intl.formatMessage(messages.add)}\n                        id=\"addfield\"\n                        className=\"item ui noborder button\"\n                        onClick={this.onShowAddField}\n                      >\n                        <Icon name=\"plus\" color=\"blue\" size=\"large\" />\n                      </button>\n                    </div>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Form.Field>\n          )}\n        </Segment.Group>\n        {this.state.addField !== null && (\n          <ModalForm\n            onSubmit={this.onAddField}\n            onCancel={this.onCancel}\n            title={this.props.intl.formatMessage(messages.addField)}\n            formData={{\n              type: '',\n              id: '',\n              title: '',\n            }}\n            schema={{\n              fieldsets: [\n                {\n                  id: 'default',\n                  title: this.props.intl.formatMessage(messages.default),\n                  fields: ['factory', 'title', 'description', 'required'],\n                },\n              ],\n              properties: {\n                factory: {\n                  type: 'string',\n                  factory: 'Choice',\n                  title: this.props.intl.formatMessage(messages.type),\n                  vocabulary: {\n                    '@id': `Fields`,\n                  },\n                },\n                title: {\n                  type: 'string',\n                  title: this.props.intl.formatMessage(messages.title),\n                },\n                description: {\n                  type: 'string',\n                  widget: 'textarea',\n                  title: this.props.intl.formatMessage(messages.description),\n                },\n                required: {\n                  type: 'boolean',\n                  title: this.props.intl.formatMessage(messages.required),\n                },\n              },\n              required: ['type', 'title'],\n            }}\n          />\n        )}\n        {this.state.editField !== null && (\n          <ModalForm\n            onSubmit={this.onEditField}\n            onCancel={this.onCancel}\n            title={this.props.intl.formatMessage(messages.editField)}\n            formData={{\n              ...this.props.value.properties[this.state.editField.id],\n              id: this.state.editField.id,\n              required:\n                this.props.value.required.indexOf(this.state.editField.id) !==\n                -1,\n              parentFieldSet: this.props.value.fieldsets[\n                this.state.currentFieldset\n              ].id,\n              values: formatArrayToTextarea(\n                this.props.value.properties[this.state.editField.id],\n              ),\n            }}\n            schema={schemaField(\n              this.props.value.properties[this.state.editField.id].factory,\n              this.props.intl,\n              this.props.value.fieldsets.filter(\n                (fieldset) =>\n                  !fieldset.behavior ||\n                  fieldset.id === 'default' ||\n                  fieldset.behavior.includes('generated'),\n              ),\n            )}\n          />\n        )}\n        {this.state.addFieldset !== null && (\n          <ModalForm\n            onSubmit={this.onAddFieldset}\n            onCancel={this.onCancel}\n            title={this.props.intl.formatMessage(messages.addFieldset)}\n            formData={{\n              id: '',\n              title: '',\n            }}\n            schema={fieldsetSchema(this.props.intl)}\n          />\n        )}\n        {this.state.editFieldset !== null && (\n          <ModalForm\n            onSubmit={this.onEditFieldset}\n            onCancel={this.onCancel}\n            title={this.props.intl.formatMessage(messages.editFieldset)}\n            formData={{\n              id: this.props.value.fieldsets[this.state.editFieldset].id,\n              title: this.props.value.fieldsets[this.state.editFieldset].title,\n            }}\n            schema={fieldsetSchema(this.props.intl)}\n          />\n        )}\n        {this.state.deleteFieldset !== null && (\n          <Confirm\n            open\n            content={this.props.intl.formatMessage(messages.deleteFieldset)}\n            onCancel={this.onCancel}\n            onConfirm={this.onDeleteFieldset}\n          />\n        )}\n        {this.state.deleteField !== null && (\n          <Confirm\n            open\n            content={this.props.intl.formatMessage(messages.deleteField)}\n            onCancel={this.onCancel}\n            onConfirm={this.onDeleteField}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs(['reactBeautifulDnd']),\n  connect(\n    (state, props) => ({\n      value: isString(props.value) ? JSON.parse(props.value) : props.value,\n    }),\n    {},\n  ),\n)(SchemaWidget);\n","/**\n * SelectWidget component.\n * @module components/manage/Widgets/SelectWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { map } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport {\n  getVocabFromHint,\n  getVocabFromField,\n  getVocabFromItems,\n} from '@plone/volto/helpers';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { getVocabulary, getVocabularyTokenTitle } from '@plone/volto/actions';\nimport { normalizeValue } from '@plone/volto/components/manage/Widgets/SelectUtils';\n\nimport {\n  customSelectStyles,\n  DropdownIndicator,\n  ClearIndicator,\n  Option,\n  selectTheme,\n  MenuList,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nconst messages = defineMessages({\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  idTitle: {\n    id: 'Short Name',\n    defaultMessage: 'Short Name',\n  },\n  idDescription: {\n    id: 'Used for programmatic access to the fieldset.',\n    defaultMessage: 'Used for programmatic access to the fieldset.',\n  },\n  title: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  description: {\n    id: 'Description',\n    defaultMessage: 'Description',\n  },\n  close: {\n    id: 'Close',\n    defaultMessage: 'Close',\n  },\n  choices: {\n    id: 'Choices',\n    defaultMessage: 'Choices',\n  },\n  required: {\n    id: 'Required',\n    defaultMessage: 'Required',\n  },\n  select: {\n    id: 'Select…',\n    defaultMessage: 'Select…',\n  },\n  no_value: {\n    id: 'No value',\n    defaultMessage: 'No value',\n  },\n  no_options: {\n    id: 'No options',\n    defaultMessage: 'No options',\n  },\n});\n\n/**\n * SelectWidget component class.\n * @function SelectWidget\n * @returns {string} Markup of the component.\n */\nclass SelectWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    getVocabulary: PropTypes.func.isRequired,\n    getVocabularyTokenTitle: PropTypes.func.isRequired,\n    choices: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    ),\n    items: PropTypes.shape({\n      vocabulary: PropTypes.object,\n    }),\n    widgetOptions: PropTypes.shape({\n      vocabulary: PropTypes.object,\n    }),\n    value: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.string,\n      PropTypes.bool,\n      PropTypes.func,\n      PropTypes.array,\n    ]),\n    onChange: PropTypes.func.isRequired,\n    onBlur: PropTypes.func,\n    onClick: PropTypes.func,\n    onEdit: PropTypes.func,\n    onDelete: PropTypes.func,\n    wrapped: PropTypes.bool,\n    noValueOption: PropTypes.bool,\n    customOptionStyling: PropTypes.any,\n    isMulti: PropTypes.bool,\n    placeholder: PropTypes.string,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    items: {\n      vocabulary: null,\n    },\n    widgetOptions: {\n      vocabulary: null,\n    },\n    error: [],\n    choices: [],\n    value: null,\n    onChange: () => {},\n    onBlur: () => {},\n    onClick: () => {},\n    onEdit: null,\n    onDelete: null,\n    noValueOption: true,\n    customOptionStyling: null,\n  };\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (\n      (!this.props.choices || this.props.choices?.length === 0) &&\n      this.props.vocabBaseUrl\n    ) {\n      this.props.getVocabulary({\n        vocabNameOrURL: this.props.vocabBaseUrl,\n        size: -1,\n        subrequest: this.props.lang,\n      });\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { id, choices, value, intl, onChange } = this.props;\n    const normalizedValue = normalizeValue(choices, value, intl);\n    // Make sure that both disabled and isDisabled (from the DX layout feat work)\n    const disabled = this.props.disabled || this.props.isDisabled;\n    const Select = this.props.reactSelect.default;\n\n    let options = this.props.vocabBaseUrl\n      ? this.props.choices\n      : [\n          ...map(choices, (option) => ({\n            value: option[0],\n            label:\n              // Fix \"None\" on the serializer, to remove when fixed in p.restapi\n              option[1] !== 'None' && option[1] ? option[1] : option[0],\n          })),\n          // Only set \"no-value\" option if there's no default in the field\n          // TODO: also if this.props.defaultValue?\n          ...(this.props.noValueOption && !this.props.default\n            ? [\n                {\n                  label: this.props.intl.formatMessage(messages.no_value),\n                  value: 'no-value',\n                },\n              ]\n            : []),\n        ];\n\n    const isMulti = this.props.isMulti\n      ? this.props.isMulti\n      : id === 'roles' || id === 'groups';\n\n    return (\n      <FormFieldWrapper {...this.props}>\n        <Select\n          id={`field-${id}`}\n          key={choices}\n          name={id}\n          isDisabled={disabled}\n          isSearchable={true}\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          isMulti={isMulti}\n          options={options}\n          styles={customSelectStyles}\n          theme={selectTheme}\n          components={{\n            ...(options?.length > 25 && {\n              MenuList,\n            }),\n            DropdownIndicator,\n            ClearIndicator,\n            Option: this.props.customOptionStyling || Option,\n          }}\n          value={normalizedValue}\n          placeholder={\n            this.props.placeholder ??\n            this.props.intl.formatMessage(messages.select)\n          }\n          onChange={(selectedOption) => {\n            if (isMulti) {\n              return onChange(\n                id,\n                selectedOption.map((el) => el.value),\n              );\n            }\n            return onChange(\n              id,\n              selectedOption && selectedOption.value !== 'no-value'\n                ? selectedOption.value\n                : undefined,\n            );\n          }}\n          isClearable\n        />\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport const SelectWidgetComponent = injectIntl(SelectWidget);\n\nexport default compose(\n  injectLazyLibs(['reactSelect']),\n  connect(\n    (state, props) => {\n      const vocabBaseUrl = !props.choices\n        ? getVocabFromHint(props) ||\n          getVocabFromField(props) ||\n          getVocabFromItems(props)\n        : '';\n\n      const vocabState =\n        state.vocabularies?.[vocabBaseUrl]?.subrequests?.[state.intl.locale];\n\n      // If the schema already has the choices in it, then do not try to get the vocab,\n      // even if there is one\n      if (props.choices) {\n        return {\n          choices: props.choices,\n          lang: state.intl.locale,\n        };\n      } else if (vocabState) {\n        return {\n          vocabBaseUrl,\n          choices: vocabState?.items ?? [],\n          lang: state.intl.locale,\n        };\n        // There is a moment that vocabState is not there yet, so we need to pass the\n        // vocabBaseUrl to the component.\n      } else if (vocabBaseUrl) {\n        return {\n          vocabBaseUrl,\n          lang: state.intl.locale,\n        };\n      }\n      return { lang: state.intl.locale };\n    },\n    { getVocabulary, getVocabularyTokenTitle },\n  ),\n)(SelectWidgetComponent);\n","/**\n * TextareaWidget component.\n * @module components/manage/Widgets/TextareaWidget\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, TextArea } from 'semantic-ui-react';\n\nimport { injectIntl } from 'react-intl';\nimport { FormFieldWrapper } from '@plone/volto/components';\n\n/**\n * TextareaWidget, a widget for multiple lines text\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Text\",\n *  widget: 'textarea',\n * }\n * ```\n */\nconst TextareaWidget = (props) => {\n  const { id, maxLength, value, onChange, placeholder } = props;\n  const [lengthError, setlengthError] = useState('');\n\n  const onhandleChange = (id, value) => {\n    if (maxLength & value?.length) {\n      let remlength = maxLength - value.length;\n      if (remlength < 0) {\n        setlengthError(`You have exceed word limit by ${Math.abs(remlength)}`);\n      } else {\n        setlengthError('');\n      }\n    }\n    onChange(id, value);\n  };\n\n  return (\n    <FormFieldWrapper {...props} className=\"textarea\">\n      <TextArea\n        id={`field-${id}`}\n        name={id}\n        value={value || ''}\n        disabled={props.isDisabled}\n        placeholder={placeholder}\n        onChange={({ target }) =>\n          onhandleChange(id, target.value === '' ? undefined : target.value)\n        }\n      />\n      {lengthError.length > 0 && (\n        <Label key={lengthError} basic color=\"red\" pointing>\n          {lengthError}\n        </Label>\n      )}\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nTextareaWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  maxLength: PropTypes.number,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool,\n  placeholder: PropTypes.string,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nTextareaWidget.defaultProps = {\n  description: null,\n  maxLength: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null,\n};\n\nexport default injectIntl(TextareaWidget);\n","/**\n * TextWidget component.\n * @module components/manage/Widgets/TextWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\n\nimport { injectIntl } from 'react-intl';\nimport { Icon, FormFieldWrapper } from '@plone/volto/components';\n\n/**\n * The simple text widget.\n *\n * It is the default fallback widget, so if no other widget is found based on\n * passed field properties, it will be used.\n */\nclass TextWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.string,\n    focus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    onClick: PropTypes.func,\n    onEdit: PropTypes.func,\n    onDelete: PropTypes.func,\n    icon: PropTypes.shape({\n      xmlns: PropTypes.string,\n      viewBox: PropTypes.string,\n      content: PropTypes.string,\n    }),\n    iconAction: PropTypes.func,\n    minLength: PropTypes.number,\n    maxLength: PropTypes.number,\n    wrapped: PropTypes.bool,\n    placeholder: PropTypes.string,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    value: null,\n    onChange: () => {},\n    onBlur: () => {},\n    onClick: () => {},\n    onEdit: null,\n    onDelete: null,\n    focus: false,\n    icon: null,\n    iconAction: null,\n    minLength: null,\n    maxLength: null,\n  };\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      value,\n      onChange,\n      onBlur,\n      onClick,\n      icon,\n      iconAction,\n      minLength,\n      maxLength,\n      placeholder,\n    } = this.props;\n\n    return (\n      <FormFieldWrapper {...this.props} className=\"text\">\n        <Input\n          id={`field-${id}`}\n          name={id}\n          value={value || ''}\n          disabled={this.props.isDisabled}\n          icon={icon || null}\n          placeholder={placeholder}\n          onChange={({ target }) =>\n            onChange(id, target.value === '' ? undefined : target.value)\n          }\n          ref={(node) => {\n            this.node = node;\n          }}\n          onBlur={({ target }) =>\n            onBlur(id, target.value === '' ? undefined : target.value)\n          }\n          onClick={() => onClick()}\n          minLength={minLength || null}\n          maxLength={maxLength || null}\n        />\n        {icon && iconAction && (\n          <button className={`field-${id}-action-button`} onClick={iconAction}>\n            <Icon name={icon} size=\"18px\" />\n          </button>\n        )}\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport default injectIntl(TextWidget);\n","/**\n * WysiwygWidget container.\n * @module components/manage/WysiwygWidget/WysiwygWidget\n */\n\nimport React, { Component } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport PropTypes from 'prop-types';\nimport { connect, Provider } from 'react-redux';\nimport { compose } from 'redux';\nimport redraft from 'redraft';\nimport { Form, Label, TextArea } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport configureStore from 'redux-mock-store';\nimport { MemoryRouter } from 'react-router-dom';\nimport config from '@plone/volto/registry';\n\nimport { FormFieldWrapper } from '@plone/volto/components';\n\nimport loadable from '@loadable/component';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nconst Editor = loadable(() => import('draft-js-plugins-editor'));\n\nconst messages = defineMessages({\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  idTitle: {\n    id: 'Short Name',\n    defaultMessage: 'Short Name',\n  },\n  idDescription: {\n    id: 'Used for programmatic access to the fieldset.',\n    defaultMessage: 'Used for programmatic access to the fieldset.',\n  },\n  title: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  description: {\n    id: 'Description',\n    defaultMessage: 'Description',\n  },\n  required: {\n    id: 'Required',\n    defaultMessage: 'Required',\n  },\n  delete: {\n    id: 'Delete',\n    defaultMessage: 'Delete',\n  },\n});\n\n/**\n * WysiwygWidget HTML richtext editing widget\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Rich text\",\n *  widget: 'richtext',\n * }\n * ```\n *\n */\nclass WysiwygWidgetComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    /**\n     * Id of the field\n     */\n    id: PropTypes.string.isRequired,\n    /**\n     * Title of the field\n     */\n    title: PropTypes.string.isRequired,\n    /**\n     * Description of the field\n     */\n    description: PropTypes.string,\n    /**\n     * True if field is required\n     */\n    required: PropTypes.bool,\n    /**\n     * Value of the field\n     */\n    value: PropTypes.shape({\n      /**\n       * Content type of the value\n       */\n      'content-type': PropTypes.string,\n      /**\n       * Data of the value\n       */\n      data: PropTypes.string,\n      /**\n       * Encoding of the value\n       */\n      encoding: PropTypes.string,\n    }),\n    /**\n     * Placeholder for the editor\n     */\n    placeholder: PropTypes.string,\n    /**\n     * List of error messages\n     */\n    error: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * On change handler\n     */\n    onChange: PropTypes.func,\n    /**\n     * On delete handler\n     */\n    onDelete: PropTypes.func,\n    /**\n     * On edit handler\n     */\n    onEdit: PropTypes.func,\n    /**\n     * Wrapped form component\n     */\n    wrapped: PropTypes.bool,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    value: {\n      'content-type': 'text/html',\n      data: '',\n      encoding: 'utf8',\n    },\n    error: [],\n    onEdit: null,\n    onDelete: null,\n    onChange: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygWidget\n   */\n  constructor(props) {\n    super(props);\n\n    const { stateFromHTML } = props.draftJsImportHtml;\n    const { EditorState } = props.draftJs;\n    const createInlineToolbarPlugin = props.draftJsInlineToolbarPlugin.default;\n\n    this.draftConfig = config.settings.richtextEditorSettings(props);\n\n    if (!__SERVER__) {\n      let editorState;\n      if (props.value && props.value.data) {\n        const contentState = stateFromHTML(props.value.data, {\n          customBlockFn: this.draftConfig.FromHTMLCustomBlockFn,\n        });\n        editorState = EditorState.createWithContent(contentState);\n      } else {\n        editorState = EditorState.createEmpty();\n      }\n\n      const inlineToolbarPlugin = createInlineToolbarPlugin({\n        structure: this.draftConfig.richTextEditorInlineToolbarButtons,\n      });\n\n      this.state = { editorState, inlineToolbarPlugin };\n    }\n\n    this.schema = {\n      fieldsets: [\n        {\n          id: 'default',\n          title: props.intl.formatMessage(messages.default),\n          fields: ['title', 'id', 'description', 'required'],\n        },\n      ],\n      properties: {\n        id: {\n          type: 'string',\n          title: props.intl.formatMessage(messages.idTitle),\n          description: props.intl.formatMessage(messages.idDescription),\n        },\n        title: {\n          type: 'string',\n          title: props.intl.formatMessage(messages.title),\n        },\n        description: {\n          type: 'string',\n          widget: 'textarea',\n          title: props.intl.formatMessage(messages.description),\n        },\n        required: {\n          type: 'boolean',\n          title: props.intl.formatMessage(messages.required),\n        },\n      },\n      required: ['id', 'title'],\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  /**\n   * Change handler\n   * @method onChange\n   * @param {object} editorState Editor state.\n   * @returns {undefined}\n   */\n  onChange(editorState) {\n    const { convertToRaw } = this.props.draftJs;\n    this.setState({ editorState });\n    const mockStore = configureStore();\n\n    this.props.onChange(this.props.id, {\n      'content-type': this.props.value\n        ? this.props.value['content-type']\n        : 'text/html',\n      encoding: this.props.value ? this.props.value.encoding : 'utf8',\n      data: ReactDOMServer.renderToStaticMarkup(\n        <Provider\n          store={mockStore({\n            userSession: {\n              token: this.props.token,\n            },\n          })}\n        >\n          <MemoryRouter>\n            {redraft(\n              convertToRaw(editorState.getCurrentContent()),\n              config.settings.richtextViewSettings.ToHTMLRenderers,\n              config.settings.richtextViewSettings.ToHTMLOptions,\n            )}\n          </MemoryRouter>\n        </Provider>,\n      ),\n    });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      title,\n      description,\n      required,\n      value,\n      error,\n      fieldSet,\n    } = this.props;\n\n    if (__SERVER__) {\n      return (\n        <Form.Field\n          inline\n          required={required}\n          error={error.length > 0}\n          className={description ? 'help' : ''}\n          id={`${fieldSet || 'field'}-${id}`}\n        >\n          <div className=\"wrapper\">\n            <label htmlFor={`field-${id}`}>{title}</label>\n            <TextArea id={id} name={id} value={value ? value.data : ''} />\n            {description && <p className=\"help\">{description}</p>}\n            {map(error, (message) => (\n              <Label key={message} basic color=\"red\" pointing>\n                {message}\n              </Label>\n            ))}\n          </div>\n        </Form.Field>\n      );\n    }\n    const { InlineToolbar } = this.state.inlineToolbarPlugin;\n\n    return (\n      <FormFieldWrapper {...this.props} className=\"wysiwyg\">\n        <div style={{ boxSizing: 'initial' }}>\n          {this.props.onChange ? (\n            <>\n              <Editor\n                id={`field-${id}`}\n                readOnly={this.props.isDisabled}\n                onChange={this.onChange}\n                editorState={this.state.editorState}\n                plugins={[\n                  this.state.inlineToolbarPlugin,\n                  ...this.draftConfig.richTextEditorPlugins,\n                ]}\n                placeholder={this.props.placeholder}\n                blockRenderMap={this.draftConfig.extendedBlockRenderMap}\n                blockStyleFn={this.draftConfig.blockStyleFn}\n                customStyleMap={this.draftConfig.customStyleMap}\n              />\n              {this.props.onChange && <InlineToolbar />}\n            </>\n          ) : (\n            <div className=\"DraftEditor-root\" />\n          )}\n        </div>\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport const WysiwygWidget = compose(\n  injectIntl,\n  injectLazyLibs([\n    'draftJs',\n    'draftJsBlockBreakoutPlugin',\n    'draftJsCreateBlockStyleButton',\n    'draftJsCreateInlineStyleButton',\n    'draftJsFilters',\n    'draftJsImportHtml',\n    'draftJsInlineToolbarPlugin',\n    'draftJsLibIsSoftNewlineEvent',\n    'immutableLib',\n  ]),\n  connect(\n    (state, props) => ({\n      token: state.userSession.token,\n    }),\n    {},\n  ),\n)(WysiwygWidgetComponent);\n\nconst Preloader = (props) => {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    Editor.load().then(() => setLoaded(true));\n  }, []);\n  return loaded ? <WysiwygWidget {...props} /> : null;\n};\n\nexport default Preloader;\n","import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Accordion, Button, Segment } from 'semantic-ui-react';\nimport { DragDropList, FormFieldWrapper, Icon } from '@plone/volto/components';\nimport ObjectWidget from '@plone/volto/components/manage/Widgets/ObjectWidget';\n\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport addSVG from '@plone/volto/icons/add.svg';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { v4 as uuid } from 'uuid';\n\nconst messages = defineMessages({\n  labelRemoveItem: {\n    id: 'Remove item',\n    defaultMessage: 'Remove item',\n  },\n  labelCollapseItem: {\n    id: 'Collapse item',\n    defaultMessage: 'Collapse item',\n  },\n  labelShowItem: {\n    id: 'Show item',\n    defaultMessage: 'Show item',\n  },\n  emptyObjectList: {\n    id: 'Empty object list',\n    defaultMessage: 'Empty object list',\n  },\n  add: {\n    id: 'Add (object list)',\n    defaultMessage: 'Add',\n  },\n});\n\n/**\n * This is a DataGridField-equivalent widget for schema-based values.\n * The shape of the items in the array is defined using a schema.\n *\n * ObjectListWidget can receive an optional `schemaExtender` prop which is\n * a function that can mutate the schema for each individual item in the array.\n * An example schema definition of the a field that renders with the\n * ObjectListWidget:\n *\n * ```jsx\n *  columns: {\n *    title: 'Columns',\n *    description: 'Leave empty to show all columns',\n *    schema: SomeItemSchema,\n *    widget: 'object_list',\n *    schemaExtender: (schema, data) => {\n *      const mutated = lodash.cloneDeep(schema);\n *      mutated.properties.extraField = {\n *        title: 'Extra field',\n *      }\n *      mutated.fieldsets[0].fields.push('extraField');\n *      return mutated;\n *    }\n *  },\n * ```\n */\nconst ObjectListWidget = (props) => {\n  const {\n    block,\n    fieldSet,\n    id,\n    schema,\n    value = [],\n    onChange,\n    schemaExtender,\n  } = props;\n  const [activeColumn, setActiveColumn] = React.useState(value.length - 1);\n  const intl = useIntl();\n\n  function handleChangeColumn(e, blockProps) {\n    const { index } = blockProps;\n    const newIndex = activeColumn === index ? -1 : index;\n\n    setActiveColumn(newIndex);\n  }\n  const objectSchema = typeof schema === 'function' ? schema(props) : schema;\n\n  const topLayerShadow = '0 1px 1px rgba(0,0,0,0.15)';\n  const secondLayer = ', 0 10px 0 -5px #eee, 0 10px 1px -4px rgba(0,0,0,0.15)';\n  const thirdLayer = ', 0 20px 0 -10px #eee, 0 20px 1px -9px rgba(0,0,0,0.15)';\n\n  return (\n    <div className=\"objectlist-widget\">\n      <FormFieldWrapper {...props} noForInFieldLabel className=\"objectlist\">\n        <div className=\"add-item-button-wrapper\">\n          <Button\n            compact\n            icon\n            aria-label={\n              objectSchema.addMessage ||\n              `${intl.formatMessage(messages.add)} ${objectSchema.title}`\n            }\n            onClick={(e) => {\n              e.preventDefault();\n              onChange(id, [\n                ...value,\n                {\n                  '@id': uuid(),\n                },\n              ]);\n              setActiveColumn(value.length);\n            }}\n          >\n            <Icon name={addSVG} size=\"18px\" />\n            &nbsp;\n            {/* Custom addMessage in schema, else default to english */}\n            {objectSchema.addMessage ||\n              `${intl.formatMessage(messages.add)} ${objectSchema.title}`}\n          </Button>\n        </div>\n        {value.length === 0 && (\n          <input\n            aria-labelledby={`fieldset-${\n              fieldSet || 'default'\n            }-field-label-${id}`}\n            type=\"hidden\"\n            value={intl.formatMessage(messages.emptyObjectList)}\n          />\n        )}\n      </FormFieldWrapper>\n      <DragDropList\n        style={{\n          boxShadow: `${topLayerShadow}${value.length > 1 ? secondLayer : ''}${\n            value.length > 2 ? thirdLayer : ''\n          }`,\n        }}\n        forwardedAriaLabelledBy={`fieldset-${\n          fieldSet || 'default'\n        }-field-label-${id}`}\n        childList={value.map((o) => [o['@id'], o])}\n        onMoveItem={(result) => {\n          const { source, destination } = result;\n          if (!destination) {\n            return;\n          }\n\n          const first = value[source.index];\n          const second = value[destination.index];\n          value[destination.index] = first;\n          value[source.index] = second;\n\n          onChange(id, value);\n          return true;\n        }}\n      >\n        {({ child, childId, index, draginfo }) => {\n          return (\n            <div\n              ref={draginfo.innerRef}\n              {...draginfo.draggableProps}\n              key={childId}\n            >\n              <Accordion key={index} fluid styled>\n                <Accordion.Title\n                  active={activeColumn === index}\n                  index={index}\n                  onClick={handleChangeColumn}\n                  aria-label={`${\n                    activeColumn === index\n                      ? intl.formatMessage(messages.labelCollapseItem)\n                      : intl.formatMessage(messages.labelShowItem)\n                  } #${index + 1}`}\n                >\n                  <button\n                    style={{\n                      visibility: 'visible',\n                      display: 'inline-block',\n                    }}\n                    {...draginfo.dragHandleProps}\n                    className=\"drag handle\"\n                  >\n                    <Icon name={dragSVG} size=\"18px\" />\n                  </button>\n\n                  <div className=\"accordion-title-wrapper\">\n                    {`${objectSchema.title} #${index + 1}`}\n                  </div>\n                  <div className=\"accordion-tools\">\n                    <button\n                      aria-label={`${intl.formatMessage(\n                        messages.labelRemoveItem,\n                      )} #${index + 1}`}\n                      onClick={() => {\n                        onChange(\n                          id,\n                          value.filter((v, i) => i !== index),\n                        );\n                      }}\n                    >\n                      <Icon name={deleteSVG} size=\"20px\" color=\"#e40166\" />\n                    </button>\n                    {activeColumn === index ? (\n                      <Icon name={upSVG} size=\"20px\" />\n                    ) : (\n                      <Icon name={downSVG} size=\"20px\" />\n                    )}\n                  </div>\n                </Accordion.Title>\n                <Accordion.Content active={activeColumn === index}>\n                  <Segment>\n                    <ObjectWidget\n                      id={`${id}-${index}`}\n                      key={`ow-${id}-${index}`}\n                      block={block}\n                      schema={\n                        schemaExtender\n                          ? schemaExtender(schema, child, intl)\n                          : objectSchema\n                      }\n                      value={child}\n                      onChange={(fi, fv) => {\n                        const newvalue = value.map((v, i) =>\n                          i !== index ? v : fv,\n                        );\n                        onChange(id, newvalue);\n                      }}\n                    />\n                  </Segment>\n                </Accordion.Content>\n              </Accordion>\n            </div>\n          );\n        }}\n      </DragDropList>\n    </div>\n  );\n};\nexport default ObjectListWidget;\n","/**\n * Edit description block.\n * @module components/manage/Blocks/Description/Edit\n */\n\nimport React, { Component } from 'react';\nimport { compose } from 'redux';\nimport PropTypes from 'prop-types';\nimport { isEqual } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  description: {\n    id: 'Add a description…',\n    defaultMessage: 'Add a description…',\n  },\n});\n\n/**\n * Edit description block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    properties: PropTypes.objectOf(PropTypes.any).isRequired,\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    onChangeField: PropTypes.func.isRequired,\n    onSelectBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    onAddBlock: PropTypes.func.isRequired,\n    onFocusPreviousBlock: PropTypes.func.isRequired,\n    onFocusNextBlock: PropTypes.func.isRequired,\n    editable: PropTypes.bool,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    editable: true,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n\n    if (!__SERVER__) {\n      const { Editor, EditorState, DefaultDraftBlockRenderMap } = props.draftJs;\n      const { Map } = props.immutableLib;\n\n      this.Editor = Editor;\n      this.EditorState = EditorState;\n      this.stateFromHTML = props.draftJsImportHtml.stateFromHTML;\n\n      const blockRenderMap = Map({\n        unstyled: {\n          element: 'div',\n        },\n      });\n\n      this.extendedBlockRenderMap = DefaultDraftBlockRenderMap.merge(\n        blockRenderMap,\n      );\n\n      let editorState;\n      if (props.properties && props.properties.description) {\n        const contentState = this.stateFromHTML(props.properties.description);\n        editorState = this.EditorState.createWithContent(contentState);\n      } else {\n        editorState = this.EditorState.createEmpty();\n      }\n      this.state = { editorState, focus: false };\n    }\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.node) {\n      this.node._onBlur = () => this.setState({ focus: false });\n      this.node._onFocus = () => this.setState({ focus: true });\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.properties.description &&\n      this.props.properties.description !== nextProps.properties.description &&\n      !this.state.focus\n    ) {\n      const contentState = this.stateFromHTML(nextProps.properties.description);\n      this.setState({\n        editorState: nextProps.properties.description\n          ? this.EditorState.createWithContent(contentState)\n          : this.EditorState.createEmpty(),\n      });\n    }\n\n    if (!this.props.selected && nextProps.selected) {\n      this.node.focus();\n      this.setState({ focus: true });\n    }\n  }\n\n  /**\n   * @param {*} nextProps\n   * @param {*} nextState\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps) {\n    return (\n      this.props.selected ||\n      !isEqual(\n        this.props.properties.description,\n        nextProps.properties.description,\n      )\n    );\n  }\n\n  /**\n   * Change handler\n   * @method onChange\n   * @param {object} editorState Editor state.\n   * @returns {undefined}\n   */\n  onChange(editorState) {\n    this.setState({ editorState }, () => {\n      this.props.onChangeField(\n        'description',\n        editorState.getCurrentContent().getPlainText(),\n      );\n    });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (__SERVER__) {\n      return <div />;\n    }\n\n    const Editor = this.Editor;\n\n    return (\n      <div\n        className={cx('block description', { selected: this.props.selected })}\n      >\n        <Editor\n          onChange={this.onChange}\n          editorState={this.state.editorState}\n          readOnly={!this.props.editable}\n          blockRenderMap={this.extendedBlockRenderMap}\n          handleReturn={() => {\n            if (this.props.data?.disableNewBlocks) {\n              return 'handled';\n            }\n            this.props.onSelectBlock(\n              this.props.onAddBlock(\n                config.settings.defaultBlockType,\n                this.props.index + 1,\n              ),\n            );\n            return 'handled';\n          }}\n          handleKeyCommand={(command, editorState) => {\n            if (\n              command === 'backspace' &&\n              editorState.getCurrentContent().getPlainText().length === 0\n            ) {\n              this.props.onDeleteBlock(this.props.block, true);\n            }\n          }}\n          placeholder={this.props.intl.formatMessage(messages.description)}\n          blockStyleFn={() => 'documentDescription'}\n          onUpArrow={() => {\n            const selectionState = this.state.editorState.getSelection();\n            const { editorState } = this.state;\n            if (\n              editorState.getCurrentContent().getBlockMap().first().getKey() ===\n              selectionState.getFocusKey()\n            ) {\n              this.props.onFocusPreviousBlock(this.props.block, this.node);\n            }\n          }}\n          onDownArrow={() => {\n            const selectionState = this.state.editorState.getSelection();\n            const { editorState } = this.state;\n            if (\n              editorState.getCurrentContent().getBlockMap().last().getKey() ===\n              selectionState.getFocusKey()\n            ) {\n              this.props.onFocusNextBlock(this.props.block, this.node);\n            }\n          }}\n          ref={(node) => {\n            this.node = node;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectLazyLibs(['draftJs', 'immutableLib', 'draftJsImportHtml']),\n  injectIntl,\n)(Edit);\n","/**\n * Edit title block.\n * @module components/manage/Blocks/Title/Edit\n */\n\nimport React, { Component } from 'react';\nimport { compose } from 'redux';\nimport PropTypes from 'prop-types';\nimport { isEqual } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  title: {\n    id: 'Type the title…',\n    defaultMessage: 'Type the title…',\n  },\n});\n\n/**\n * Edit title block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    properties: PropTypes.objectOf(PropTypes.any).isRequired,\n    selected: PropTypes.bool.isRequired,\n    index: PropTypes.number.isRequired,\n    onChangeField: PropTypes.func.isRequired,\n    onSelectBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    onAddBlock: PropTypes.func.isRequired,\n    onFocusPreviousBlock: PropTypes.func.isRequired,\n    onFocusNextBlock: PropTypes.func.isRequired,\n    block: PropTypes.string.isRequired,\n    editable: PropTypes.bool,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    editable: true,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n\n    if (!__SERVER__) {\n      const { Map } = props.immutableLib;\n      const { DefaultDraftBlockRenderMap, EditorState } = props.draftJs;\n      const { stateFromHTML } = props.draftJsImportHtml;\n\n      const blockRenderMap = Map({\n        unstyled: {\n          element: 'h1',\n        },\n      });\n\n      this.extendedBlockRenderMap = DefaultDraftBlockRenderMap.merge(\n        blockRenderMap,\n      );\n      let editorState;\n      if (props.properties && props.properties.title) {\n        const contentState = stateFromHTML(props.properties.title);\n        editorState = EditorState.createWithContent(contentState);\n      } else {\n        editorState = EditorState.createEmpty();\n      }\n      this.state = { editorState, focus: true };\n    }\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.node) {\n      this.node.focus();\n      this.node._onBlur = () => this.setState({ focus: false });\n      this.node._onFocus = () => this.setState({ focus: true });\n    }\n  }\n\n  /**\n   * @param {*} nextProps\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selected || !isEqual(this.props.data, nextProps.data);\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.properties.title &&\n      this.props.properties.title !== nextProps.properties.title &&\n      !this.state.focus\n    ) {\n      const { stateFromHTML } = this.props.draftJsImportHtml;\n      const { EditorState } = this.props.draftJs;\n\n      const contentState = stateFromHTML(nextProps.properties.title);\n      this.setState({\n        editorState: nextProps.properties.title\n          ? EditorState.createWithContent(contentState)\n          : EditorState.createEmpty(),\n      });\n    }\n\n    if (!this.props.selected && nextProps.selected) {\n      this.node.focus();\n      this.setState({ focus: true });\n    }\n  }\n\n  /**\n   * Change handler\n   * @method onChange\n   * @param {object} editorState Editor state.\n   * @returns {undefined}\n   */\n  onChange(editorState) {\n    this.setState({ editorState }, () => {\n      this.props.onChangeField(\n        'title',\n        editorState.getCurrentContent().getPlainText(),\n      );\n    });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (__SERVER__) {\n      return <div />;\n    }\n\n    const { Editor } = this.props.draftJs;\n\n    const placeholder =\n      this.props.data.placeholder ||\n      this.props.intl.formatMessage(messages.title);\n\n    return (\n      <Editor\n        readOnly={!this.props.editable}\n        onChange={this.onChange}\n        editorState={this.state.editorState}\n        blockRenderMap={this.extendedBlockRenderMap}\n        handleReturn={() => {\n          if (this.props.data.disableNewBlocks) {\n            return 'handled';\n          }\n          this.props.onSelectBlock(\n            this.props.onAddBlock(\n              config.settings.defaultBlockType,\n              this.props.index + 1,\n            ),\n          );\n          return 'handled';\n        }}\n        placeholder={placeholder}\n        blockStyleFn={() => 'documentFirstHeading'}\n        onUpArrow={() => {\n          const selectionState = this.state.editorState.getSelection();\n          const { editorState } = this.state;\n          if (\n            editorState.getCurrentContent().getBlockMap().first().getKey() ===\n            selectionState.getFocusKey()\n          ) {\n            this.props.onFocusPreviousBlock(this.props.block, this.node);\n          }\n        }}\n        onDownArrow={() => {\n          const selectionState = this.state.editorState.getSelection();\n          const { editorState } = this.state;\n          if (\n            editorState.getCurrentContent().getBlockMap().last().getKey() ===\n            selectionState.getFocusKey()\n          ) {\n            this.props.onFocusNextBlock(this.props.block, this.node);\n          }\n        }}\n        ref={(node) => {\n          this.node = node;\n        }}\n      />\n    );\n  }\n}\n\nexport default compose(\n  injectLazyLibs(['draftJs', 'immutableLib', 'draftJsImportHtml']),\n  injectIntl,\n)(Edit);\n","/**\n * Edit toc block.\n * @module components/manage/Blocks/ToC/Edit\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport View from '@plone/volto/components/manage/Blocks/ToC/View';\n\n/**\n * Edit toc block class.\n * @class Edit\n * @extends Component\n */\nconst Edit = ({ properties, data }) => (\n  <View properties={properties} data={data} />\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nEdit.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  data: PropTypes.objectOf(PropTypes.any),\n};\n\nexport default Edit;\n","/**\n * Edit text block.\n * @module components/manage/Blocks/Title/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\n\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { includes, isEqual } from 'lodash';\nimport config from '@plone/volto/registry';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { BlockChooserButton } from '@plone/volto/components';\n\nimport loadable from '@loadable/component';\n\nconst Editor = loadable(() => import('draft-js-plugins-editor'));\n\nconst messages = defineMessages({\n  text: {\n    id: 'Type text…',\n    defaultMessage: 'Type text…',\n  },\n});\n\n/**\n * Edit text block class.\n * @class Edit\n * @extends Component\n */\nexport class EditComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    detached: PropTypes.bool,\n    index: PropTypes.number.isRequired,\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    onAddBlock: PropTypes.func.isRequired,\n    onInsertBlock: PropTypes.func.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    onMutateBlock: PropTypes.func.isRequired,\n    onFocusPreviousBlock: PropTypes.func.isRequired,\n    onFocusNextBlock: PropTypes.func.isRequired,\n    onSelectBlock: PropTypes.func.isRequired,\n    editable: PropTypes.bool,\n    allowedBlocks: PropTypes.arrayOf(PropTypes.string),\n    showRestricted: PropTypes.bool,\n    formTitle: PropTypes.string,\n    formDescription: PropTypes.string,\n    blocksConfig: PropTypes.objectOf(PropTypes.any),\n    properties: PropTypes.objectOf(PropTypes.any),\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    detached: false,\n    editable: true,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n\n    const { settings } = config;\n\n    this.draftConfig = settings.richtextEditorSettings(props);\n\n    const { EditorState, convertFromRaw } = props.draftJs;\n    const createInlineToolbarPlugin = props.draftJsInlineToolbarPlugin.default;\n\n    if (!__SERVER__) {\n      let editorState;\n      if (props.data && props.data.text) {\n        editorState = EditorState.createWithContent(\n          convertFromRaw(props.data.text),\n        );\n      } else {\n        editorState = EditorState.createEmpty();\n      }\n\n      const inlineToolbarPlugin = createInlineToolbarPlugin({\n        structure: this.draftConfig.richTextEditorInlineToolbarButtons,\n      });\n\n      this.state = {\n        editorState,\n        inlineToolbarPlugin,\n      };\n    }\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.selected) {\n      // See https://github.com/draft-js-plugins/draft-js-plugins/issues/800\n      setTimeout(this.node.focus, 0);\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!this.props.selected && nextProps.selected) {\n      const selectionState = this.state.editorState.getSelection();\n\n      if (selectionState.getStartOffset() < selectionState.getEndOffset()) {\n        //keep selection\n      } else {\n        //nothing is selected, move focus to end\n        // See https://github.com/draft-js-plugins/draft-js-plugins/issues/800\n        setTimeout(this.node.focus, 0);\n        const { EditorState } = this.props.draftJs;\n\n        this.setState({\n          editorState: EditorState.moveFocusToEnd(this.state.editorState),\n        });\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { convertToRaw, EditorState, convertFromRaw } = this.props.draftJs;\n    if (\n      !isEqual(this.props.data, prevProps.data) &&\n      !isEqual(\n        convertToRaw(this.state.editorState.getCurrentContent()),\n        this.props.data.text,\n      )\n    ) {\n      const editorState =\n        this.props.data && this.props.data.text\n          ? EditorState.createWithContent(convertFromRaw(this.props.data.text))\n          : EditorState.createEmpty();\n\n      this.setState({\n        editorState: editorState,\n      });\n    }\n  }\n\n  /**\n   * @param {*} nextProps\n   * @param {*} nextState\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.props.selected ||\n      !isEqual(this.props.data, nextProps.data) ||\n      !isEqual(this.state.editorState, nextState.editorState)\n    );\n  }\n\n  /**\n   * Change handler\n   * @method onChange\n   * @param {object} editorState Editor state.\n   * @returns {undefined}\n   */\n  onChange(editorState) {\n    const shouldFilterPaste =\n      editorState.getLastChangeType() === 'insert-fragment';\n\n    const { convertToRaw } = this.props.draftJs;\n    const { filterEditorState } = this.props.draftJsFilters;\n\n    if (\n      !isEqual(\n        convertToRaw(editorState.getCurrentContent()),\n        convertToRaw(this.state.editorState.getCurrentContent()),\n      )\n    ) {\n      if (shouldFilterPaste) {\n        let filteredState = editorState;\n        filteredState = filterEditorState(\n          {\n            blocks: ['unordered-list-item', 'ordered-list-item'],\n            styles: ['BOLD', 'ITALIC'],\n            entities: [\n              {\n                type: 'LINK',\n                attributes: ['url'],\n              },\n            ],\n            whitespacedCharacters: [],\n          },\n          filteredState,\n        );\n        editorState = filteredState;\n      }\n      this.props.onChangeBlock(this.props.block, {\n        ...this.props.data,\n        text: convertToRaw(editorState.getCurrentContent()),\n      });\n    }\n    this.setState({ editorState });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    // console.log('draft config', this.draftConfig);\n\n    if (__SERVER__) {\n      return <div />;\n    }\n\n    const placeholder =\n      this.props.data.placeholder ||\n      this.props.formTitle ||\n      this.props.intl.formatMessage(messages.text);\n\n    const disableNewBlocks =\n      this.props.data?.disableNewBlocks || this.props.detached;\n    const { InlineToolbar } = this.state.inlineToolbarPlugin;\n    // const { settings } = config;\n\n    const isSoftNewlineEvent = this.props.draftJsLibIsSoftNewlineEvent.default;\n    const { RichUtils } = this.props.draftJs;\n\n    return (\n      <>\n        <Editor\n          readOnly={!this.props.editable}\n          onChange={this.onChange}\n          editorState={this.state.editorState}\n          plugins={[\n            this.state.inlineToolbarPlugin,\n            // ...settings.richTextEditorPlugins,\n            ...this.draftConfig.richTextEditorPlugins,\n          ]}\n          blockRenderMap={this.draftConfig.extendedBlockRenderMap}\n          blockStyleFn={this.draftConfig.blockStyleFn}\n          customStyleMap={this.draftConfig.customStyleMap}\n          placeholder={placeholder}\n          handleReturn={(e) => {\n            if (isSoftNewlineEvent(e)) {\n              this.onChange(\n                RichUtils.insertSoftNewline(this.state.editorState),\n              );\n              return 'handled';\n            }\n            if (!disableNewBlocks) {\n              const selectionState = this.state.editorState.getSelection();\n              const anchorKey = selectionState.getAnchorKey();\n              const currentContent = this.state.editorState.getCurrentContent();\n              const currentContentBlock = currentContent.getBlockForKey(\n                anchorKey,\n              );\n              const blockType = currentContentBlock.getType();\n              if (!includes(this.draftConfig.listBlockTypes, blockType)) {\n                this.props.onSelectBlock(\n                  this.props.onAddBlock(\n                    config.settings.defaultBlockType,\n                    this.props.index + 1,\n                  ),\n                );\n                return 'handled';\n              }\n              return 'un-handled';\n            }\n            return {};\n          }}\n          handleKeyCommand={(command, editorState) => {\n            if (this.props.data.required) {\n              return;\n            }\n            if (\n              command === 'backspace' &&\n              editorState.getCurrentContent().getPlainText().length === 0\n            ) {\n              this.props.onDeleteBlock(this.props.block, true);\n            }\n          }}\n          onUpArrow={() => {\n            const selectionState = this.state.editorState.getSelection();\n            const currentCursorPosition = selectionState.getStartOffset();\n\n            if (currentCursorPosition === 0) {\n              this.props.onFocusPreviousBlock(this.props.block, this.node);\n            }\n          }}\n          onDownArrow={() => {\n            const selectionState = this.state.editorState.getSelection();\n            const { editorState } = this.state;\n            const currentCursorPosition = selectionState.getStartOffset();\n            const blockLength = editorState\n              .getCurrentContent()\n              .getFirstBlock()\n              .getLength();\n\n            if (currentCursorPosition === blockLength) {\n              this.props.onFocusNextBlock(this.props.block, this.node);\n            }\n          }}\n          ref={(node) => {\n            this.node = node;\n          }}\n        />\n        <InlineToolbar />\n        {this.props.selected && (\n          <BlockChooserButton\n            data={this.props.data}\n            block={this.props.block}\n            onInsertBlock={(id, value) => {\n              this.props.onSelectBlock(this.props.onInsertBlock(id, value));\n            }}\n            allowedBlocks={this.props.allowedBlocks}\n            blocksConfig={this.props.blocksConfig}\n            size=\"24px\"\n            className=\"block-add-button\"\n            properties={this.props.properties}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport const Edit = compose(\n  injectIntl,\n  injectLazyLibs([\n    'draftJs',\n    'draftJsLibIsSoftNewlineEvent',\n    'draftJsFilters',\n    'draftJsInlineToolbarPlugin',\n    'draftJsBlockBreakoutPlugin',\n    'draftJsCreateInlineStyleButton',\n    'draftJsCreateBlockStyleButton',\n    'immutableLib',\n    // TODO: add all plugin dependencies, also in Wysiwyg and Cell\n  ]),\n)(EditComponent);\n\nconst Preloader = (props) => {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    Editor.load().then(() => setLoaded(true));\n  }, []);\n  return loaded ? <Edit {...props} /> : null;\n};\n\nexport default Preloader;\n","/**\n * Edit image block.\n * @module components/manage/Blocks/Image/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { Button, Dimmer, Input, Loader, Message } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport loadable from '@loadable/component';\nimport cx from 'classnames';\nimport { isEqual } from 'lodash';\n\nimport { Icon, ImageSidebar, SidebarPortal } from '@plone/volto/components';\nimport { createContent } from '@plone/volto/actions';\nimport {\n  flattenToAppURL,\n  getBaseUrl,\n  isInternalURL,\n} from '@plone/volto/helpers';\n\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport uploadSVG from '@plone/volto/icons/upload.svg';\n\nconst Dropzone = loadable(() => import('react-dropzone'));\n\nconst messages = defineMessages({\n  ImageBlockInputPlaceholder: {\n    id: 'Browse the site, drop an image, or type an URL',\n    defaultMessage: 'Browse the site, drop an image, or type an URL',\n  },\n});\n\n/**\n * Edit image block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    content: PropTypes.objectOf(PropTypes.any).isRequired,\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onSelectBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    onFocusPreviousBlock: PropTypes.func.isRequired,\n    onFocusNextBlock: PropTypes.func.isRequired,\n    handleKeyDown: PropTypes.func.isRequired,\n    createContent: PropTypes.func.isRequired,\n    openObjectBrowser: PropTypes.func.isRequired,\n  };\n\n  state = {\n    uploading: false,\n    url: '',\n    dragging: false,\n  };\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.request.loading &&\n      nextProps.request.loaded &&\n      this.state.uploading\n    ) {\n      this.setState({\n        uploading: false,\n      });\n      this.props.onChangeBlock(this.props.block, {\n        ...this.props.data,\n        url: nextProps.content['@id'],\n        alt: '',\n      });\n    }\n  }\n\n  /**\n   * @param {*} nextProps\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps) {\n    return (\n      this.props.selected ||\n      nextProps.selected ||\n      !isEqual(this.props.data, nextProps.data)\n    );\n  }\n\n  /**\n   * Upload image handler (not used), but useful in case that we want a button\n   * not powered by react-dropzone\n   * @method onUploadImage\n   * @returns {undefined}\n   */\n  onUploadImage = (e) => {\n    e.stopPropagation();\n    const file = e.target.files[0];\n    this.setState({\n      uploading: true,\n    });\n    readAsDataURL(file).then((data) => {\n      const fields = data.match(/^data:(.*);(.*),(.*)$/);\n      this.props.createContent(\n        getBaseUrl(this.props.pathname),\n        {\n          '@type': 'Image',\n          title: file.name,\n          image: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file.name,\n          },\n        },\n        this.props.block,\n      );\n    });\n  };\n\n  /**\n   * Align block handler\n   * @method onAlignBlock\n   * @param {string} align Alignment option\n   * @returns {undefined}\n   */\n  onAlignBlock(align) {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      align,\n    });\n  }\n\n  /**\n   * Change url handler\n   * @method onChangeUrl\n   * @param {Object} target Target object\n   * @returns {undefined}\n   */\n  onChangeUrl = ({ target }) => {\n    this.setState({\n      url: target.value,\n    });\n  };\n\n  /**\n   * Submit url handler\n   * @method onSubmitUrl\n   * @param {object} e Event\n   * @returns {undefined}\n   */\n  onSubmitUrl = () => {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      url: flattenToAppURL(this.state.url),\n    });\n  };\n\n  resetSubmitUrl = () => {\n    this.setState({\n      url: '',\n    });\n  };\n\n  /**\n   * Drop handler\n   * @method onDrop\n   * @param {array} files File objects\n   * @returns {undefined}\n   */\n  onDrop = (file) => {\n    this.setState({\n      uploading: true,\n    });\n\n    readAsDataURL(file[0]).then((data) => {\n      const fields = data.match(/^data:(.*);(.*),(.*)$/);\n      this.props.createContent(\n        getBaseUrl(this.props.pathname),\n        {\n          '@type': 'Image',\n          title: file[0].name,\n          image: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file[0].name,\n          },\n        },\n        this.props.block,\n      );\n    });\n  };\n\n  /**\n   * Keydown handler on Variant Menu Form\n   * This is required since the ENTER key is already mapped to a onKeyDown\n   * event and needs to be overriden with a child onKeyDown.\n   * @method onKeyDownVariantMenuForm\n   * @param {Object} e Event object\n   * @returns {undefined}\n   */\n  onKeyDownVariantMenuForm = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      e.stopPropagation();\n      this.onSubmitUrl();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      e.stopPropagation();\n      // TODO: Do something on ESC key\n    }\n  };\n  onDragEnter = () => {\n    this.setState({ dragging: true });\n  };\n  onDragLeave = () => {\n    this.setState({ dragging: false });\n  };\n\n  node = React.createRef();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { data } = this.props;\n    const placeholder =\n      this.props.data.placeholder ||\n      this.props.intl.formatMessage(messages.ImageBlockInputPlaceholder);\n    return (\n      <div\n        className={cx(\n          'block image align',\n          {\n            center: !Boolean(data.align),\n          },\n          data.align,\n        )}\n      >\n        {data.url ? (\n          <img\n            className={cx({\n              'full-width': data.align === 'full',\n              large: data.size === 'l',\n              medium: data.size === 'm',\n              small: data.size === 's',\n            })}\n            src={\n              isInternalURL(data.url)\n                ? // Backwards compat in the case that the block is storing the full server URL\n                  (() => {\n                    if (data.size === 'l')\n                      return `${flattenToAppURL(data.url)}/@@images/image`;\n                    if (data.size === 'm')\n                      return `${flattenToAppURL(\n                        data.url,\n                      )}/@@images/image/preview`;\n                    if (data.size === 's')\n                      return `${flattenToAppURL(data.url)}/@@images/image/mini`;\n                    return `${flattenToAppURL(data.url)}/@@images/image`;\n                  })()\n                : data.url\n            }\n            alt={data.alt || ''}\n          />\n        ) : (\n          <div>\n            {this.props.editable && (\n              <Dropzone\n                noClick\n                onDrop={this.onDrop}\n                onDragEnter={this.onDragEnter}\n                onDragLeave={this.onDragLeave}\n                className=\"dropzone\"\n              >\n                {({ getRootProps, getInputProps }) => (\n                  <div {...getRootProps()}>\n                    <Message>\n                      {this.state.dragging && <Dimmer active></Dimmer>}\n                      {this.state.uploading && (\n                        <Dimmer active>\n                          <Loader indeterminate>Uploading image</Loader>\n                        </Dimmer>\n                      )}\n                      <div className=\"no-image-wrapper\">\n                        <img src={imageBlockSVG} alt=\"\" />\n                        <div className=\"toolbar-inner\">\n                          <Button.Group>\n                            <Button\n                              basic\n                              icon\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                e.preventDefault();\n                                this.props.openObjectBrowser();\n                              }}\n                            >\n                              <Icon name={navTreeSVG} size=\"24px\" />\n                            </Button>\n                          </Button.Group>\n                          <Button.Group>\n                            <label className=\"ui button basic icon\">\n                              <Icon name={uploadSVG} size=\"24px\" />\n                              <input\n                                {...getInputProps({\n                                  type: 'file',\n                                  onChange: this.onUploadImage,\n                                  style: { display: 'none' },\n                                })}\n                              />\n                            </label>\n                          </Button.Group>\n                          <Input\n                            onKeyDown={this.onKeyDownVariantMenuForm}\n                            onChange={this.onChangeUrl}\n                            placeholder={placeholder}\n                            value={this.state.url}\n                            onClick={(e) => {\n                              e.target.focus();\n                            }}\n                            onFocus={(e) => {\n                              this.props.onSelectBlock(this.props.id);\n                            }}\n                          />\n                          {this.state.url && (\n                            <Button.Group>\n                              <Button\n                                basic\n                                className=\"cancel\"\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  this.setState({ url: '' });\n                                }}\n                              >\n                                <Icon name={clearSVG} size=\"30px\" />\n                              </Button>\n                            </Button.Group>\n                          )}\n                          <Button.Group>\n                            <Button\n                              basic\n                              primary\n                              disabled={!this.state.url}\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                this.onSubmitUrl();\n                              }}\n                            >\n                              <Icon name={aheadSVG} size=\"30px\" />\n                            </Button>\n                          </Button.Group>\n                        </div>\n                      </div>\n                    </Message>\n                  </div>\n                )}\n              </Dropzone>\n            )}\n          </div>\n        )}\n        <SidebarPortal selected={this.props.selected}>\n          <ImageSidebar {...this.props} resetSubmitUrl={this.resetSubmitUrl} />\n        </SidebarPortal>\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, ownProps) => ({\n      request: state.content.subrequests[ownProps.block] || {},\n      content: state.content.subrequests[ownProps.block]?.data,\n    }),\n    { createContent },\n  ),\n)(Edit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { isEqual } from 'lodash';\nimport { withBlockExtensions } from '@plone/volto/helpers';\n\nimport {\n  SidebarPortal,\n  ListingBlockBody as ListingBody,\n} from '@plone/volto/components';\nimport ListingData from './ListingData';\n\nimport { getBaseUrl } from '@plone/volto/helpers';\n\nconst messages = defineMessages({\n  results: {\n    id: 'Results preview',\n    defaultMessage: 'Results preview',\n  },\n  items: {\n    id: 'Contained items',\n    defaultMessage: 'Contained items',\n  },\n});\n\nconst Edit = React.memo(\n  (props) => {\n    const { data, onChangeBlock, block, selected, pathname } = props;\n\n    const intl = useIntl();\n\n    // componentDidMount\n    React.useEffect(() => {\n      if (!data.query) {\n        onChangeBlock(block, {\n          ...data,\n          query: [],\n          block,\n        });\n      }\n      /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    const placeholder =\n      data.placeholder ||\n      (data?.query?.length\n        ? intl.formatMessage(messages.results)\n        : intl.formatMessage(messages.items));\n\n    return (\n      <>\n        <p className=\"items-preview\">{placeholder}</p>\n        <ListingBody {...props} path={getBaseUrl(pathname)} isEditMode />\n        <SidebarPortal selected={selected}>\n          <ListingData\n            key={block}\n            {...props}\n            data={data}\n            block={block}\n            onChangeBlock={onChangeBlock}\n          />\n        </SidebarPortal>\n      </>\n    );\n  },\n  function areEquals(prevProps, nextProps) {\n    return !(\n      nextProps.selected !== prevProps.selected ||\n      !isEqual(prevProps.data, nextProps.data)\n    );\n  },\n);\n\nEdit.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  onSelectBlock: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.any),\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default withBlockExtensions(Edit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { BlockDataForm } from '@plone/volto/components';\nimport { schemaListing } from './schema';\n\nconst ListingData = (props) => {\n  const { data, block, onChangeBlock } = props;\n  const intl = useIntl();\n  const schema = schemaListing({ ...props, intl });\n\n  return (\n    <BlockDataForm\n      schema={schema}\n      title={schema.title}\n      onChangeField={(id, value) => {\n        onChangeBlock(block, {\n          ...data,\n          [id]: value,\n        });\n      }}\n      formData={data}\n      block={block}\n    />\n  );\n};\n\nListingData.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n};\n\nexport default ListingData;\n","/**\n * Edit video block.\n * @module components/manage/Blocks/Title/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Button, Input, Message } from 'semantic-ui-react';\nimport cx from 'classnames';\nimport { isEqual } from 'lodash';\n\nimport { Icon, SidebarPortal, VideoSidebar } from '@plone/volto/components';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport videoBlockSVG from '@plone/volto/components/manage/Blocks/Video/block-video.svg';\nimport Body from '@plone/volto/components/manage/Blocks/Video/Body';\n\nconst messages = defineMessages({\n  VideoFormDescription: {\n    id: 'Specify a youtube video or playlist url',\n    defaultMessage: 'Specify a youtube video or playlist url',\n  },\n  VideoBlockInputPlaceholder: {\n    id: 'Type a Video (YouTube, Vimeo or mp4) URL',\n    defaultMessage: 'Type a Video (YouTube, Vimeo or mp4) URL',\n  },\n});\n\n/**\n * Edit video block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onSelectBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    onFocusPreviousBlock: PropTypes.func.isRequired,\n    onFocusNextBlock: PropTypes.func.isRequired,\n    handleKeyDown: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n\n    this.onChangeUrl = this.onChangeUrl.bind(this);\n    this.onSubmitUrl = this.onSubmitUrl.bind(this);\n    this.onKeyDownVariantMenuForm = this.onKeyDownVariantMenuForm.bind(this);\n    this.state = {\n      url: '',\n    };\n  }\n\n  /**\n   * Change url handler\n   * @method onChangeUrl\n   * @param {Object} target Target object\n   * @returns {undefined}\n   */\n  onChangeUrl({ target }) {\n    this.setState({\n      url: target.value,\n    });\n  }\n\n  /**\n   * @param {*} nextProps\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps) {\n    return (\n      this.props.selected ||\n      nextProps.selected ||\n      !isEqual(this.props.data, nextProps.data)\n    );\n  }\n\n  /**\n   * Submit url handler\n   * @method onSubmitUrl\n   * @returns {undefined}\n   */\n  onSubmitUrl() {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      url: this.state.url,\n    });\n  }\n\n  resetSubmitUrl = () => {\n    this.setState({\n      url: '',\n    });\n  };\n\n  /**\n   * Keydown handler on Variant Menu Form\n   * This is required since the ENTER key is already mapped to a onKeyDown\n   * event and needs to be overriden with a child onKeyDown.\n   * @method onKeyDownVariantMenuForm\n   * @param {Object} e Event object\n   * @returns {undefined}\n   */\n  onKeyDownVariantMenuForm(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      e.stopPropagation();\n      this.onSubmitUrl();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      e.stopPropagation();\n      // TODO: Do something on ESC key\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { data } = this.props;\n    const placeholder =\n      this.props.data.placeholder ||\n      this.props.intl.formatMessage(messages.VideoBlockInputPlaceholder);\n    return (\n      <div\n        className={cx(\n          'block video align',\n          {\n            selected: this.props.selected,\n            center: !Boolean(this.props.data.align),\n          },\n          this.props.data.align,\n        )}\n      >\n        {data.url ? (\n          <Body data={this.props.data} isEditMode={true} />\n        ) : (\n          <Message>\n            <center>\n              <img src={videoBlockSVG} alt=\"\" />\n              <div className=\"toolbar-inner\">\n                <Input\n                  onKeyDown={this.onKeyDownVariantMenuForm}\n                  onChange={this.onChangeUrl}\n                  placeholder={placeholder}\n                  value={this.state.url}\n                  // Prevents propagation to the Dropzone and the opening\n                  // of the upload browser dialog\n                  onClick={(e) => e.stopPropagation()}\n                />\n                {this.state.url && (\n                  <Button.Group>\n                    <Button\n                      basic\n                      className=\"cancel\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        this.setState({ url: '' });\n                      }}\n                    >\n                      <Icon name={clearSVG} size=\"30px\" />\n                    </Button>\n                  </Button.Group>\n                )}\n                <Button.Group>\n                  <Button\n                    basic\n                    primary\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      this.onSubmitUrl();\n                    }}\n                  >\n                    <Icon name={aheadSVG} size=\"30px\" />\n                  </Button>\n                </Button.Group>\n              </div>\n            </center>\n          </Message>\n        )}\n        <SidebarPortal selected={this.props.selected}>\n          <VideoSidebar {...this.props} resetSubmitUrl={this.resetSubmitUrl} />\n        </SidebarPortal>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(Edit);\n","/**\n * View image block.\n * @module components/manage/Blocks/Hero/View\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport { LinkMore } from '@plone/volto/components';\n\n/**\n * View image block class.\n * @class View\n * @extends Component\n */\nconst View = ({ data }) => (\n  <div className=\"block hero\">\n    <div className=\"block-inner-wrapper\">\n      {data.url && (\n        <img\n          src={`${flattenToAppURL(data.url)}/@@images/image`}\n          alt=\"\"\n          className=\"hero-image\"\n          loading=\"lazy\"\n        />\n      )}\n      <div className=\"hero-body\">\n        <div className=\"hero-text\">\n          {data.title && <h1>{data.title}</h1>}\n          {data.description && <p>{data.description}</p>}\n        </div>\n        <LinkMore data={data} />\n      </div>\n    </div>\n  </div>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default View;\n","/**\n * Edit map block.\n * @module components/manage/Blocks/Maps/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Input, Message } from 'semantic-ui-react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { isEqual } from 'lodash';\n\nimport { Icon, SidebarPortal, MapsSidebar } from '@plone/volto/components';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport mapsBlockSVG from '@plone/volto/components/manage/Blocks/Maps/block-maps.svg';\n\nconst messages = defineMessages({\n  MapsBlockInputPlaceholder: {\n    id: 'Enter map Embed Code',\n    defaultMessage: 'Enter map Embed Code',\n  },\n  left: {\n    id: 'Left',\n    defaultMessage: 'Left',\n  },\n  right: {\n    id: 'Right',\n    defaultMessage: 'Right',\n  },\n  center: {\n    id: 'Center',\n    defaultMessage: 'Center',\n  },\n  full: {\n    id: 'Full',\n    defaultMessage: 'Full',\n  },\n  GoogleMapsEmbeddedBlock: {\n    id: 'Google Maps Embedded Block',\n    defaultMessage: 'Google Maps Embedded Block',\n  },\n});\n\n/**\n * Edit image block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    pathname: PropTypes.string.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onSelectBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    onFocusPreviousBlock: PropTypes.func.isRequired,\n    onFocusNextBlock: PropTypes.func.isRequired,\n    handleKeyDown: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.getSrc = this.getSrc.bind(this);\n    this.state = {\n      url: '',\n      error: null,\n    };\n    this.onSubmitUrl = this.onSubmitUrl.bind(this);\n    this.onKeyDownVariantMenuForm = this.onKeyDownVariantMenuForm.bind(this);\n  }\n\n  /**\n   * @param {*} nextProps\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps) {\n    return (\n      this.props.selected ||\n      nextProps.selected ||\n      !isEqual(this.props.data, nextProps.data)\n    );\n  }\n\n  /**\n   * Change url handler\n   * @method onChangeUrl\n   * @param {Object} target Target object\n   * @returns {undefined}\n   */\n  onChangeUrl = ({ target }) => {\n    this.setState({\n      url: target.value,\n    });\n  };\n\n  /**\n   * Submit url handler\n   * @method onSubmitUrl\n   * @param {string} e event\n   * @returns {undefined}\n   */\n  onSubmitUrl() {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      url: this.getSrc(this.state.url),\n    });\n  }\n\n  /**\n   * Keydown handler on Variant Menu Form\n   * This is required since the ENTER key is already mapped to a onKeyDown\n   * event and needs to be overriden with a child onKeyDown.\n   * @method onKeyDownVariantMenuForm\n   * @param {Object} e Event object\n   * @returns {undefined}\n   */\n  onKeyDownVariantMenuForm(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      e.stopPropagation();\n      this.onSubmitUrl();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      e.stopPropagation();\n      // TODO: Do something on ESC key\n    }\n  }\n\n  /**\n   * get getSrc handler\n   * @method getSrc\n   * @param {string} embed Embed HTML code from Google Maps share option\n   * @returns {string} Source URL\n   */\n  getSrc(embed) {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(embed, 'text/html');\n    const iframe = doc.getElementsByTagName('iframe');\n    if (iframe.length === 0) {\n      this.setState({ error: true });\n      return '';\n    }\n    this.setState({ error: false });\n    return iframe[0].src;\n  }\n\n  resetSubmitUrl = () => {\n    this.setState({\n      url: '',\n    });\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const placeholder =\n      this.props.data.placeholder ||\n      this.props.intl.formatMessage(messages.MapsBlockInputPlaceholder);\n    return (\n      <div\n        className={cx(\n          'block maps align',\n          {\n            center: !Boolean(this.props.data.align),\n          },\n          this.props.data.align,\n        )}\n      >\n        {this.props.data.url ? (\n          <div\n            className={cx('maps-inner', {\n              'full-width': this.props.data.align === 'full',\n            })}\n          >\n            <iframe\n              title={this.props.intl.formatMessage(\n                messages.GoogleMapsEmbeddedBlock,\n              )}\n              src={this.props.data.url}\n              className=\"google-map\"\n              frameBorder=\"0\"\n              allowFullScreen\n            />\n          </div>\n        ) : (\n          <Message>\n            <center>\n              <img src={mapsBlockSVG} alt=\"\" />\n              <div className=\"toolbar-inner\">\n                <Input\n                  onKeyDown={this.onKeyDownVariantMenuForm}\n                  onChange={this.onChangeUrl}\n                  placeholder={placeholder}\n                  value={this.state.url}\n                  // Prevents propagation to the Dropzone and the opening\n                  // of the upload browser dialog\n                  onClick={(e) => e.stopPropagation()}\n                />\n                {this.state.url && (\n                  <Button.Group>\n                    <Button\n                      basic\n                      className=\"cancel\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        this.setState({ url: '' });\n                      }}\n                    >\n                      <Icon name={clearSVG} size=\"30px\" />\n                    </Button>\n                  </Button.Group>\n                )}\n                <Button.Group>\n                  <Button\n                    basic\n                    primary\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      this.onSubmitUrl();\n                    }}\n                  >\n                    <Icon name={aheadSVG} size=\"30px\" />\n                  </Button>\n                </Button.Group>\n              </div>\n              <div className=\"message-text\">\n                <FormattedMessage\n                  id=\"Please enter the Embed Code provided by Google Maps -> Share -> Embed map. It should contain the <iframe> code on it.\"\n                  defaultMessage=\"Please enter the Embed Code provided by Google Maps -> Share -> Embed map. It should contain the <iframe> code on it.\"\n                />\n                {this.state.error && (\n                  <div style={{ color: 'red' }}>\n                    <FormattedMessage\n                      id=\"Embed code error, please follow the instructions and try again.\"\n                      defaultMessage=\"Embed code error, please follow the instructions and try again.\"\n                    />\n                  </div>\n                )}\n              </div>\n            </center>\n          </Message>\n        )}\n        {!this.props.selected && <div className=\"map-overlay\" />}\n        <SidebarPortal selected={this.props.selected}>\n          <MapsSidebar {...this.props} resetSubmitUrl={this.resetSubmitUrl} />\n        </SidebarPortal>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(Edit);\n","/**\n * Edit html block.\n * @module components/manage/Blocks/HTML/Edit\n */\n\nimport { compose } from 'redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Popup } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport loadable from '@loadable/component';\nimport { isEqual } from 'lodash';\n\nimport { Icon } from '@plone/volto/components';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport showSVG from '@plone/volto/icons/show.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport codeSVG from '@plone/volto/icons/code.svg';\nimport indentSVG from '@plone/volto/icons/indent.svg';\n\nconst Editor = loadable(() => import('react-simple-code-editor'));\n\nconst messages = defineMessages({\n  source: {\n    id: 'Source',\n    defaultMessage: 'Source',\n  },\n  preview: {\n    id: 'Preview',\n    defaultMessage: 'Preview',\n  },\n  placeholder: {\n    id: '<p>Add some HTML here</p>',\n    defaultMessage: '<p>Add some HTML here</p>',\n  },\n  prettier: {\n    id: 'Prettify your code',\n    defaultMessage: 'Prettify your code',\n  },\n  clear: {\n    id: 'Clear',\n    defaultMessage: 'Clear',\n  },\n  code: {\n    id: 'Code',\n    defaultMessage: 'Code',\n  },\n});\n\n/**\n * Edit html block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onSelectBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    handleKeyDown: PropTypes.func.isRequired,\n    editable: PropTypes.bool,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    editable: true,\n  };\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPreview: false,\n    };\n    this.onChangeCode = this.onChangeCode.bind(this);\n    this.onPreview = this.onPreview.bind(this);\n    this.onCodeEditor = this.onCodeEditor.bind(this);\n  }\n\n  codeEditorRef = React.createRef();\n  savedSelection = {};\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // The selection is saved in the snapshot.\n    this.savedSelection = snapshot;\n\n    this.restoreSelectionAndFocus(this.codeEditorRef.current);\n  }\n\n  /**\n   * @param {*} nextProps\n   * @param {*} nextState\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps) {\n    // Always rerender when the DOM node is not created for the Editor (the\n    // first call to shouldComponentUpdate).\n    if (!this._input) {\n      return true;\n    }\n\n    // Rerender the entire component when the Editor in it changes its selection\n    // because this way we get a call to getSnapshotBeforeUpdate where we can\n    // save the selection.\n    return (\n      this.props.selected ||\n      !isEqual(this.props.data, nextProps.data) ||\n      this._input.selectionStart !== this.savedSelection.selectionStart ||\n      this._input.selectionEnd !== this.savedSelection.selectionEnd\n    );\n  }\n\n  /**\n   * Change html handler\n   * @method onChangeCode\n   * @param {string} code New value html\n   * @returns {undefined}\n   */\n  onChangeCode(code) {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      html: code,\n    });\n  }\n\n  getValue() {\n    return this.props.data.html || '';\n  }\n\n  /**\n   * Preview mode handler\n   * @method onPreview\n   * @returns {undefined}\n   */\n  onPreview() {\n    try {\n      const code = this.props.prettierStandalone\n        .format(this.getValue(), {\n          parser: 'html',\n          plugins: [this.props.prettierParserHtml],\n        })\n        .trim();\n      this.setState(\n        {\n          isPreview: !this.state.isPreview,\n        },\n        () => this.onChangeCode(code),\n      );\n    } catch (ex) {\n      // error while parsing the user-typed HTML\n      // TODO: show a toast notification or something similar to the user\n    }\n  }\n\n  /**\n   * Prettify handler\n   * @method onPrettify\n   * @returns {undefined}\n   */\n  onPrettify = () => {\n    try {\n      const code = this.props.prettierStandalone\n        .format(this.getValue(), {\n          parser: 'html',\n          plugins: [this.props.prettierParserHtml],\n        })\n        .trim();\n      this.onChangeCode(code);\n    } catch (ex) {\n      // error while parsing the user-typed HTML\n      // TODO: show a toast notification or something similar to the user\n    }\n  };\n\n  /**\n   * Code Editor mode handler\n   * @method onPreview\n   * @returns {undefined}\n   */\n  onCodeEditor() {\n    this.setState({ isPreview: !this.state.isPreview });\n  }\n\n  getSelection = (editor) => {\n    if (!editor || !editor._input) {\n      return {};\n    }\n\n    const o = {};\n    if (editor._input.selectionStart) {\n      o.selectionStart = editor._input.selectionStart;\n    }\n    if (editor._input.selectionEnd) {\n      o.selectionEnd = editor._input.selectionEnd;\n    }\n    return o;\n  };\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    return this.getSelection(this.codeEditorRef.current);\n  }\n\n  restoreSelectionAndFocus = (editor) => {\n    // Don't restore selection when the block is not selected.\n    if (\n      this.props.selected &&\n      editor._input &&\n      typeof this.savedSelection?.selectionStart === 'number' &&\n      typeof this.savedSelection?.selectionEnd === 'number'\n    ) {\n      editor._input.selectionStart = this.savedSelection?.selectionStart;\n      editor._input.selectionEnd = this.savedSelection?.selectionEnd;\n      editor._input.focus();\n    }\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const placeholder =\n      this.props.data.placeholder ||\n      this.props.intl.formatMessage(messages.placeholder);\n    const value = this.getValue();\n    return (\n      <>\n        {this.props.selected && value && (\n          <div className=\"toolbar\">\n            <Popup\n              trigger={\n                <Button\n                  icon\n                  basic\n                  aria-label={this.props.intl.formatMessage(messages.source)}\n                  active={!this.state.isPreview}\n                  onClick={this.onCodeEditor}\n                >\n                  <Icon name={codeSVG} size=\"24px\" />\n                </Button>\n              }\n              position=\"top center\"\n              content={this.props.intl.formatMessage(messages.code)}\n              size=\"mini\"\n            />\n            <Popup\n              trigger={\n                <Button\n                  icon\n                  basic\n                  aria-label={this.props.intl.formatMessage(messages.preview)}\n                  active={this.state.isPreview}\n                  onClick={this.onPreview}\n                >\n                  <Icon name={showSVG} size=\"24px\" />\n                </Button>\n              }\n              position=\"top center\"\n              content={this.props.intl.formatMessage(messages.preview)}\n              size=\"mini\"\n            />\n            <Popup\n              trigger={\n                <Button\n                  icon\n                  basic\n                  aria-label={this.props.intl.formatMessage(messages.prettier)}\n                  onClick={this.onPrettify}\n                >\n                  <Icon name={indentSVG} size=\"24px\" />\n                </Button>\n              }\n              position=\"top center\"\n              content={this.props.intl.formatMessage(messages.prettier)}\n              size=\"mini\"\n            />\n            <div className=\"separator\" />\n            <Popup\n              trigger={\n                <Button.Group>\n                  <Button icon basic onClick={() => this.onChangeCode('')}>\n                    <Icon name={clearSVG} size=\"24px\" color=\"#e40166\" />\n                  </Button>\n                </Button.Group>\n              }\n              position=\"top center\"\n              content={this.props.intl.formatMessage(messages.clear)}\n              size=\"mini\"\n            />\n          </div>\n        )}\n        {this.state.isPreview ? (\n          <div dangerouslySetInnerHTML={{ __html: value }} />\n        ) : (\n          <Editor\n            value={this.getValue()}\n            readOnly={!this.props.editable}\n            placeholder={placeholder}\n            onValueChange={(code) => this.onChangeCode(code)}\n            highlight={\n              this.props.prismCore?.highlight &&\n              this.props.prismCore?.languages?.html\n                ? (code) =>\n                    this.props.prismCore.highlight(\n                      code,\n                      this.props.prismCore.languages.html,\n                      'html',\n                    )\n                : () => {}\n            }\n            padding={8}\n            className=\"html-editor\"\n            ref={(node) => {\n              if (node) {\n                this.codeEditorRef.current = node;\n              }\n            }}\n            ignoreTabKey={true}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nconst withPrismMarkup = (WrappedComponent) => (props) => {\n  const [loaded, setLoaded] = React.useState();\n  const promise = React.useRef(null);\n  const cancelled = React.useRef(false);\n\n  React.useEffect(() => {\n    promise.current = import('prismjs/components/prism-markup');\n    promise.current.then(() => {\n      if (!cancelled.current) {\n        setLoaded(true);\n      }\n    });\n    return () => {\n      cancelled.current = true;\n    };\n  }, []);\n\n  return loaded ? <WrappedComponent {...props} /> : null;\n};\n\nexport default compose(\n  injectLazyLibs(['prettierStandalone', 'prettierParserHtml', 'prismCore']),\n  withPrismMarkup,\n  injectIntl,\n)(Edit);\n","/**\n * View description block.\n * @module components/manage/Blocks/Description/View\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * View description block class.\n * @class View\n * @extends Component\n */\nconst View = ({ properties }) => (\n  <p className=\"documentDescription\">{properties.description}</p>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default View;\n","/**\n * View title block.\n * @module components/manage/Blocks/Title/View\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * View title block class.\n * @class View\n * @extends Component\n */\nconst View = ({ properties }) => (\n  <h1 className=\"documentFirstHeading\">{properties.title}</h1>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default View;\n","/**\n * View text block.\n * @module components/manage/Blocks/Text/View\n */\n\nimport PropTypes from 'prop-types';\nimport redraft from 'redraft';\nimport React from 'react';\nimport config from '@plone/volto/registry';\n\n/**\n * View text block class.\n * @class View\n * @extends Component\n */\nconst View = ({ data }) =>\n  data.text ? (\n    redraft(\n      data.text,\n      config.settings.richtextViewSettings.ToHTMLRenderers,\n      config.settings.richtextViewSettings.ToHTMLOptions,\n    )\n  ) : (\n    <br />\n  );\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default View;\n","/**\n * View image block.\n * @module components/manage/Blocks/Image/View\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { UniversalLink } from '@plone/volto/components';\nimport cx from 'classnames';\n\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers';\n\n/**\n * View image block class.\n * @class View\n * @extends Component\n */\nconst View = ({ data, detached }) => (\n  <p\n    className={cx(\n      'block image align',\n      {\n        center: !Boolean(data.align),\n        detached,\n      },\n      data.align,\n    )}\n  >\n    {data.url && (\n      <>\n        {(() => {\n          const image = (\n            <img\n              className={cx({\n                'full-width': data.align === 'full',\n                large: data.size === 'l',\n                medium: data.size === 'm',\n                small: data.size === 's',\n              })}\n              src={\n                isInternalURL(data.url)\n                  ? // Backwards compat in the case that the block is storing the full server URL\n                    (() => {\n                      if (data.size === 'l')\n                        return `${flattenToAppURL(data.url)}/@@images/image`;\n                      if (data.size === 'm')\n                        return `${flattenToAppURL(\n                          data.url,\n                        )}/@@images/image/preview`;\n                      if (data.size === 's')\n                        return `${flattenToAppURL(\n                          data.url,\n                        )}/@@images/image/mini`;\n                      return `${flattenToAppURL(data.url)}/@@images/image`;\n                    })()\n                  : data.url\n              }\n              alt={data.alt || ''}\n              loading=\"lazy\"\n            />\n          );\n          if (data.href) {\n            return (\n              <UniversalLink\n                href={data.href}\n                openLinkInNewTab={data.openLinkInNewTab}\n              >\n                {image}\n              </UniversalLink>\n            );\n          } else {\n            return image;\n          }\n        })()}\n      </>\n    )}\n  </p>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default View;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { withBlockExtensions } from '@plone/volto/helpers';\n\nimport { ListingBlockBody as ListingBody } from '@plone/volto/components';\n\nconst View = (props) => {\n  const { data, path, pathname } = props;\n\n  return (\n    <div className={cx('block listing', data.variation || 'default')}>\n      <ListingBody {...props} path={path ?? pathname} />\n    </div>\n  );\n};\n\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string,\n};\n\nexport default withBlockExtensions(View);\n","/**\n * View video block.\n * @module components/manage/Blocks/Video/View\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Body from '@plone/volto/components/manage/Blocks/Video/Body';\n\n/**\n * View video block class.\n * @class View\n * @extends Component\n */\nconst View = ({ data }) => {\n  return (\n    <div\n      className={cx(\n        'block video align',\n        {\n          center: !Boolean(data.align),\n        },\n        data.align,\n      )}\n    >\n      <Body data={data} />\n    </div>\n  );\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default View;\n","/**\n * View map block.\n * @module components/manage/Blocks/Maps/View\n */\n\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nconst messages = defineMessages({\n  EmbededGoogleMaps: {\n    id: 'Embeded Google Maps',\n    defaultMessage: 'Embeded Google Maps',\n  },\n});\n\n/**\n * View image block class.\n * @class View\n * @extends Component\n */\n\nconst View = ({ data, intl }) => (\n  <div\n    className={cx(\n      'block maps align',\n      {\n        center: !Boolean(data.align),\n      },\n      data.align,\n    )}\n  >\n    <div\n      className={cx('maps-inner', {\n        'full-width': data.align === 'full',\n      })}\n    >\n      <iframe\n        title={intl.formatMessage(messages.EmbededGoogleMaps)}\n        src={data.url}\n        className=\"google-map\"\n        frameBorder=\"0\"\n        allowFullScreen\n      />\n    </div>\n  </div>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default injectIntl(View);\n","/**\n * View html block.\n * @module components/manage/Blocks/HTML/View\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * View html block class.\n * @class View\n * @extends Component\n */\nconst View = ({ data }) => (\n  <div className=\"block html\" dangerouslySetInnerHTML={{ __html: data.html }} />\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default View;\n","import BlockSettingsSchema from '@plone/volto/components/manage/Blocks/Block/Schema';\n\nconst Schema = {\n  ...BlockSettingsSchema,\n  fieldsets: [\n    {\n      ...BlockSettingsSchema.fieldsets[0],\n      // fields: [\n      //   ...BlockSettingsSchema.fieldsets[0].fields,\n      //   'minLength',\n      //   'maxLength',\n      // ],\n    },\n  ],\n  properties: {\n    ...BlockSettingsSchema.properties,\n    /* TODO Enable when we have block validation inplace */\n    // minLength: {\n    //   title: 'Min length',\n    //   description: 'Minimum number of characters',\n    //   type: 'integer',\n    // },\n    // maxLength: {\n    //   title: 'Max length',\n    //   description: 'Maximum number of characters',\n    //   type: 'integer',\n    // },\n  },\n};\n\nexport default Schema;\n","import BlockSettingsSchema from '@plone/volto/components/manage/Blocks/Block/Schema';\n\nconst Schema = {\n  ...BlockSettingsSchema,\n  fieldsets: [\n    {\n      ...BlockSettingsSchema.fieldsets[0],\n      // fields: [\n      //   ...BlockSettingsSchema.fieldsets[0].fields,\n      //   'minSize',\n      //   'maxSize',\n      // ],\n    },\n  ],\n  properties: {\n    ...BlockSettingsSchema.properties,\n    /* TODO Enable when we have validators inplace */\n    // minSize: {\n    //   title: 'Min size',\n    //   description: 'Minimum image size',\n    //   type: 'integer',\n    // },\n    // maxSize: {\n    //   title: 'Max size',\n    //   description: 'Maximum image size',\n    //   type: 'integer',\n    // },\n  },\n};\n\nexport default Schema;\n","import BlockSettingsSchema from '@plone/volto/components/manage/Blocks/Block/Schema';\n\nconst Schema = {\n  ...BlockSettingsSchema,\n  properties: {\n    ...BlockSettingsSchema.properties,\n    placeholder: {\n      ...BlockSettingsSchema.properties.placeholder,\n      title: 'Title',\n      description: 'Table of contents heading text',\n    },\n  },\n};\n\nexport default Schema;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getQuerystring } from '@plone/volto/actions';\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\n/**\n * A HOC that injects querystring metadata information from the backend.\n *\n */\nexport default (WrappedComponent) => {\n  function WithQueryString(props) {\n    const dispatch = useDispatch();\n\n    const qs = useSelector((state) => state.querystring);\n    const indexes = qs?.indexes || {};\n\n    React.useEffect(() => {\n      if (Object.keys(indexes).length === 0) {\n        dispatch(getQuerystring());\n      }\n    }, [dispatch, indexes]);\n\n    return <WrappedComponent {...props} querystring={qs} />;\n  }\n  WithQueryString.displayName = `WithQueryString(${getDisplayName(\n    WrappedComponent,\n  )})`;\n  return WithQueryString;\n};\n","module.exports = require(\"react-beautiful-dnd\");","module.exports = require(\"react-select\");","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useCookies } from 'react-cookie';\nimport config from '@plone/volto/registry';\nimport { changeLanguage } from '@plone/volto/actions';\nimport { normalizeLanguageName } from '@plone/volto/helpers';\n\nconst MultilingualRedirector = (props) => {\n  const { settings } = config;\n  const { pathname, children } = props;\n  const [cookies] = useCookies();\n  const currentLanguage = cookies['I18N_LANGUAGE'] || settings.defaultLanguage;\n  const redirectToLanguage = settings.supportedLanguages.includes(\n    currentLanguage,\n  )\n    ? currentLanguage\n    : settings.defaultLanguage;\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    // ToDo: Add means to support language negotiation (with config)\n    // const detectedLang = (navigator.language || navigator.userLanguage).substring(0, 2);\n    let mounted = true;\n    if (settings.isMultilingual && pathname === '/') {\n      const langFileName = normalizeLanguageName(redirectToLanguage);\n      import('@root/../locales/' + langFileName + '.json').then((locale) => {\n        if (mounted) {\n          dispatch(changeLanguage(redirectToLanguage, locale.default));\n        }\n      });\n    }\n    return () => {\n      mounted = false;\n    };\n  }, [pathname, dispatch, redirectToLanguage, settings.isMultilingual]);\n\n  return pathname === '/' && settings.isMultilingual ? (\n    <Redirect to={`/${redirectToLanguage}`} />\n  ) : (\n    <>{children}</>\n  );\n};\n\nexport default MultilingualRedirector;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Toast } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport { parse } from 'date-fns';\nimport config from '@plone/volto/registry';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\nconst messages = defineMessages({\n  thisIsAWorkingCopyOf: {\n    id: 'This is a working copy of {title}',\n    defaultMessage: 'This is a working copy of {title}',\n  },\n  workingCopyIs: {\n    id: 'This has an ongoing working copy in {title}',\n    defaultMessage: 'This has an ongoing working copy in {title}',\n  },\n  workingCopyCreatedBy: {\n    id: 'Created by {creator} on {date}',\n    defaultMessage: 'Created by {creator} on {date}',\n  },\n});\n\nconst WorkingCopyToastsFactory = (props) => {\n  const intl = useIntl();\n  const pathname = useLocation().pathname;\n  const lang = useSelector((state) => state.intl.locale);\n  const { content } = props;\n  const title = content?.title;\n  const working_copy = content?.working_copy;\n  const dateOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n\n  useDeepCompareEffect(() => {\n    if (content && config.settings.hasWorkingCopySupport) {\n      if (working_copy) {\n        let toastMessage, toastTitle;\n        if (content.working_copy_of) {\n          // I'm a working copy\n          toastMessage = messages.thisIsAWorkingCopyOf;\n          toastTitle = (\n            <Link to={flattenToAppURL(content.working_copy_of['@id'])}>\n              {content.working_copy_of?.title}\n            </Link>\n          );\n        } else {\n          // I'm a baseline\n          toastMessage = messages.workingCopyIs;\n          toastTitle = (\n            <Link to={flattenToAppURL(working_copy['@id'])}>\n              {working_copy?.title}\n            </Link>\n          );\n        }\n        if (toast.isActive('workingcopyinfo')) {\n          toast.update('workingcopyinfo', {\n            render: (\n              <Toast\n                info\n                title={intl.formatMessage(toastMessage, {\n                  title: toastTitle,\n                })}\n                content={intl.formatMessage(messages.workingCopyCreatedBy, {\n                  creator: working_copy?.creator_name,\n                  date: new Intl.DateTimeFormat(lang, dateOptions).format(\n                    parse(working_copy?.created),\n                  ),\n                })}\n              />\n            ),\n          });\n        } else {\n          toast.info(\n            <Toast\n              info\n              title={intl.formatMessage(toastMessage, {\n                title: toastTitle,\n              })}\n              content={intl.formatMessage(messages.workingCopyCreatedBy, {\n                creator: working_copy?.creator_name,\n                date: new Intl.DateTimeFormat(lang, dateOptions).format(\n                  parse(working_copy?.created),\n                ),\n              })}\n            />,\n            {\n              toastId: 'workingcopyinfo',\n              autoClose: false,\n              closeButton: false,\n              transition: null,\n            },\n          );\n        }\n      }\n      if (!working_copy) {\n        if (toast.isActive('workingcopyinfo')) {\n          toast.dismiss('workingcopyinfo');\n        }\n      }\n    }\n  }, [pathname, content, title, working_copy, intl, lang, dateOptions]);\n\n  return null;\n};\n\nexport default WorkingCopyToastsFactory;\n","import React from 'react';\n// import { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Toast } from '@plone/volto/components';\n// import { flattenToAppURL } from '@plone/volto/helpers';\nimport { parse } from 'date-fns';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\nconst messages = defineMessages({\n  thisItemIsLocked: {\n    id: 'This item was locked by {creator} on {date}',\n    defaultMessage: 'This item was locked by {creator} on {date}',\n  },\n  unlockItem: {\n    id:\n      'If you are certain this user has abandoned the object, you may unlock the object. You will then be able to edit it.',\n    defaultMessage:\n      'If you are certain this user has abandoned the object, you may unlock the object. You will then be able to edit it.',\n  },\n});\n\nconst LockingToastsFactory = (props) => {\n  const intl = useIntl();\n  const pathname = useLocation().pathname;\n  const lang = useSelector((state) => state.intl.locale);\n  const { content, user } = props;\n  const lock = content?.lock;\n  const creator = lock?.creator_name || lock?.creator || '';\n  // const creator_url = locking?.creator_url || '';\n  const date = lock?.created || '';\n  const dateOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n  };\n\n  useDeepCompareEffect(() => {\n    if (user && content) {\n      if (lock?.locked && lock?.stealable && lock?.creator !== user) {\n        if (toast.isActive('lockinginfo')) {\n          toast.update('lockinginfo', {\n            render: (\n              <Toast\n                info\n                title={intl.formatMessage(messages.thisItemIsLocked, {\n                  creator: creator,\n                  date: new Intl.DateTimeFormat(lang, dateOptions).format(\n                    parse(date),\n                  ),\n                })}\n                content={intl.formatMessage(messages.unlockItem, {})}\n              />\n            ),\n          });\n        } else {\n          toast.info(\n            <Toast\n              info\n              title={intl.formatMessage(messages.thisItemIsLocked, {\n                creator: creator,\n                date: new Intl.DateTimeFormat(lang, dateOptions).format(\n                  parse(date),\n                ),\n              })}\n              content={intl.formatMessage(messages.unlockItem, {})}\n            />,\n            {\n              toastId: 'lockinginfo',\n              autoClose: false,\n              closeButton: false,\n              transition: null,\n            },\n          );\n        }\n      } else {\n        if (toast.isActive('lockinginfo')) {\n          toast.dismiss('lockinginfo');\n        }\n      }\n    }\n  }, [content, creator, date, dateOptions, intl, lang, lock, pathname, user]);\n\n  return null;\n};\n\nexport default LockingToastsFactory;\n","/**\n * App container.\n * @module components/theme/App/App\n */\n\nimport { Component } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { asyncConnect, Helmet } from '@plone/volto/helpers';\nimport { Segment } from 'semantic-ui-react';\nimport { renderRoutes } from 'react-router-config';\nimport { Slide, ToastContainer, toast } from 'react-toastify';\nimport split from 'lodash/split';\nimport join from 'lodash/join';\nimport trim from 'lodash/trim';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\nimport { PluggablesProvider } from '@plone/volto/components/manage/Pluggable';\nimport { visitBlocks } from '@plone/volto/helpers/Blocks/Blocks';\nimport { injectIntl } from 'react-intl';\n\nimport Error from '@plone/volto/error';\n\nimport {\n  Breadcrumbs,\n  Footer,\n  Header,\n  Icon,\n  OutdatedBrowser,\n  AppExtras,\n  SkipLinks,\n} from '@plone/volto/components';\nimport { BodyClass, getBaseUrl, getView, isCmsUi } from '@plone/volto/helpers';\nimport {\n  getBreadcrumbs,\n  getContent,\n  getNavigation,\n  getTypes,\n  getWorkflow,\n} from '@plone/volto/actions';\n\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport MultilingualRedirector from '@plone/volto/components/theme/MultilingualRedirector/MultilingualRedirector';\nimport WorkingCopyToastsFactory from '@plone/volto/components/manage/WorkingCopyToastsFactory/WorkingCopyToastsFactory';\nimport LockingToastsFactory from '@plone/volto/components/manage/LockingToastsFactory/LockingToastsFactory';\n\nimport * as Sentry from '@sentry/browser';\n\n/**\n * @export\n * @class App\n * @extends {Component}\n */\nclass App extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    pathname: PropTypes.string.isRequired,\n  };\n\n  state = {\n    hasError: false,\n    error: null,\n    errorInfo: null,\n  };\n\n  /**\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      if (this.state.hasError) {\n        this.setState({ hasError: false });\n      }\n    }\n  }\n\n  /**\n   * ComponentDidCatch\n   * @method ComponentDidCatch\n   * @param {string} error  The error\n   * @param {string} info The info\n   * @returns {undefined}\n   */\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true, error, errorInfo: info });\n    if (__CLIENT__) {\n      if (window?.env?.RAZZLE_SENTRY_DSN || __SENTRY__?.SENTRY_DSN) {\n        Sentry.captureException(error);\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { views } = config;\n    const path = getBaseUrl(this.props.pathname);\n    const action = getView(this.props.pathname);\n    const isCmsUI = isCmsUi(this.props.pathname);\n    const ConnectionRefusedView = views.errorViews.ECONNREFUSED;\n\n    const language =\n      this.props.content?.language?.token ?? this.props.intl?.locale;\n\n    return (\n      <PluggablesProvider>\n        {language && (\n          <Helmet>\n            <html lang={language} />\n          </Helmet>\n        )}\n        <BodyClass className={`view-${action}view`} />\n\n        {/* Body class depending on content type */}\n        {this.props.content && this.props.content['@type'] && (\n          <BodyClass\n            className={`contenttype-${this.props.content['@type']\n              .replace(' ', '-')\n              .toLowerCase()}`}\n          />\n        )}\n\n        {/* Body class depending on sections */}\n        <BodyClass\n          className={cx({\n            [trim(join(split(this.props.pathname, '/'), ' section-'))]:\n              this.props.pathname !== '/',\n            siteroot: this.props.pathname === '/',\n            'is-authenticated': !!this.props.token,\n            'is-anonymous': !this.props.token,\n            'cms-ui': isCmsUI,\n            'public-ui': !isCmsUI,\n          })}\n        />\n        <SkipLinks />\n        <Header pathname={path} />\n        <Breadcrumbs pathname={path} />\n        <MultilingualRedirector\n          pathname={this.props.pathname}\n          contentLanguage={this.props.content?.language?.token}\n        >\n          <Segment basic className=\"content-area\">\n            <main>\n              <OutdatedBrowser />\n              {this.props.connectionRefused ? (\n                <ConnectionRefusedView />\n              ) : this.state.hasError ? (\n                <Error\n                  message={this.state.error.message}\n                  stackTrace={this.state.errorInfo.componentStack}\n                />\n              ) : (\n                renderRoutes(this.props.route.routes, {\n                  staticContext: this.props.staticContext,\n                })\n              )}\n            </main>\n          </Segment>\n        </MultilingualRedirector>\n        <Footer />\n        <LockingToastsFactory\n          content={this.props.content}\n          user={this.props.userId}\n        />\n        <WorkingCopyToastsFactory content={this.props.content} />\n        <ToastContainer\n          position={toast.POSITION.BOTTOM_CENTER}\n          hideProgressBar\n          transition={Slide}\n          autoClose={5000}\n          closeButton={\n            <Icon\n              className=\"toast-dismiss-action\"\n              name={clearSVG}\n              size=\"18px\"\n            />\n          }\n        />\n        <AppExtras {...this.props} />\n      </PluggablesProvider>\n    );\n  }\n}\n\nexport const __test__ = connect(\n  (state, props) => ({\n    pathname: props.location.pathname,\n    token: state.userSession.token,\n    content: state.content.data,\n    apiError: state.apierror.error,\n    connectionRefused: state.apierror.connectionRefused,\n  }),\n  {},\n)(App);\n\nexport const fetchContent = async ({ store, location }) => {\n  const content = await store.dispatch(\n    getContent(getBaseUrl(location.pathname)),\n  );\n\n  const promises = [];\n  const { blocksConfig } = config.blocks;\n\n  const visitor = ([id, data]) => {\n    const blockType = data['@type'];\n    const { getAsyncData } = blocksConfig[blockType];\n    if (getAsyncData) {\n      const p = getAsyncData({\n        store,\n        dispatch: store.dispatch,\n        path: location.pathname,\n        location,\n        id,\n        data,\n      });\n      if (!p?.length) {\n        throw new Error(\n          'You should return a list of promises from getAsyncData',\n        );\n      }\n      promises.push(...p);\n    }\n  };\n\n  visitBlocks(content, visitor);\n\n  await Promise.allSettled(promises);\n\n  return content;\n};\n\nexport default compose(\n  asyncConnect([\n    {\n      key: 'breadcrumbs',\n      promise: ({ location, store: { dispatch } }) =>\n        __SERVER__ && dispatch(getBreadcrumbs(getBaseUrl(location.pathname))),\n    },\n    {\n      key: 'content',\n      promise: ({ location, store }) =>\n        __SERVER__ && fetchContent({ store, location }),\n    },\n    {\n      key: 'navigation',\n      promise: ({ location, store: { dispatch } }) =>\n        __SERVER__ &&\n        dispatch(\n          getNavigation(\n            getBaseUrl(location.pathname),\n            config.settings.navDepth,\n          ),\n        ),\n    },\n    {\n      key: 'types',\n      promise: ({ location, store: { dispatch } }) =>\n        __SERVER__ && dispatch(getTypes(getBaseUrl(location.pathname))),\n    },\n    {\n      key: 'workflow',\n      promise: ({ location, store: { dispatch } }) =>\n        __SERVER__ && dispatch(getWorkflow(getBaseUrl(location.pathname))),\n    },\n  ]),\n  injectIntl,\n  connect(\n    (state, props) => ({\n      pathname: props.location.pathname,\n      token: state.userSession.token,\n      userId: state.userSession.token\n        ? jwtDecode(state.userSession.token).sub\n        : '',\n      content: state.content.data,\n      apiError: state.apierror.error,\n      connectionRefused: state.apierror.connectionRefused,\n    }),\n    null,\n  ),\n)(App);\n","/**\n * Edit Hero block.\n * @module components/manage/Blocks/Image/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { Button, Dimmer, Loader, Message } from 'semantic-ui-react';\nimport { isEqual } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers';\nimport { createContent } from '@plone/volto/actions';\nimport { Icon, SidebarPortal, LinkMore } from '@plone/volto/components';\n\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport Data from './Data';\n\nconst messages = defineMessages({\n  title: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  description: {\n    id: 'Description',\n    defaultMessage: 'Description',\n  },\n  placeholder: {\n    id: 'Upload a new image',\n    defaultMessage: 'Upload a new image',\n  },\n  image: {\n    id: 'Image',\n    defaultMessage: 'Image',\n  },\n  browse: {\n    id: 'Browse',\n    defaultMessage: 'Browse',\n  },\n  uploading: {\n    id: 'Uploading image',\n    defaultMessage: 'Uploading image',\n  },\n});\n\n/**\n * Edit image block class.\n * @class Edit\n * @extends Component\n */\nclass EditComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    content: PropTypes.objectOf(PropTypes.any),\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onSelectBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    onFocusPreviousBlock: PropTypes.func.isRequired,\n    onFocusNextBlock: PropTypes.func.isRequired,\n    handleKeyDown: PropTypes.func.isRequired,\n    createContent: PropTypes.func.isRequired,\n    editable: PropTypes.bool,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    editable: true,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n\n    this.onUploadImage = this.onUploadImage.bind(this);\n    this.state = {\n      uploading: false,\n    };\n\n    const { Map } = this.props.immutableLib;\n\n    if (!__SERVER__) {\n      const { DefaultDraftBlockRenderMap, EditorState } = props.draftJs;\n      const { stateFromHTML } = props.draftJsImportHtml;\n\n      const blockTitleRenderMap = Map({\n        unstyled: {\n          element: 'h1',\n        },\n      });\n\n      const blockDescriptionRenderMap = Map({\n        unstyled: {\n          element: 'div',\n        },\n      });\n\n      this.extendedBlockRenderMap = DefaultDraftBlockRenderMap.merge(\n        blockTitleRenderMap,\n      );\n\n      this.extendedDescripBlockRenderMap = DefaultDraftBlockRenderMap.merge(\n        blockDescriptionRenderMap,\n      );\n\n      let titleEditorState;\n      let descriptionEditorState;\n      if (props.data && props.data.title) {\n        titleEditorState = EditorState.createWithContent(\n          stateFromHTML(props.data.title),\n        );\n      } else {\n        titleEditorState = EditorState.createEmpty();\n      }\n      if (props.data && props.data.description) {\n        descriptionEditorState = EditorState.createWithContent(\n          stateFromHTML(props.data.description),\n        );\n      } else {\n        descriptionEditorState = EditorState.createEmpty();\n      }\n      this.state = {\n        uploading: false,\n        titleEditorState,\n        descriptionEditorState,\n        currentFocused: 'title',\n      };\n    }\n\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.selected) {\n      this.titleEditor.focus();\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.request.loading &&\n      nextProps.request.loaded &&\n      this.state.uploading\n    ) {\n      this.setState({\n        uploading: false,\n      });\n      this.props.onChangeBlock(this.props.block, {\n        ...this.props.data,\n        url: nextProps.content['@id'],\n      });\n    }\n\n    const { EditorState } = this.props.draftJs;\n    const { stateFromHTML } = this.props.draftJsImportHtml;\n\n    if (\n      nextProps.data.title &&\n      this.props.data.title !== nextProps.data.title &&\n      !this.props.selected\n    ) {\n      const contentState = stateFromHTML(nextProps.data.title);\n      this.setState({\n        titleEditorState: nextProps.data.title\n          ? EditorState.createWithContent(contentState)\n          : EditorState.createEmpty(),\n      });\n    }\n\n    if (\n      nextProps.data.description &&\n      this.props.data.description !== nextProps.data.description &&\n      !this.props.selected\n    ) {\n      const contentState = stateFromHTML(nextProps.data.description);\n      this.setState({\n        descriptionEditorState: nextProps.data.description\n          ? EditorState.createWithContent(contentState)\n          : EditorState.createEmpty(),\n      });\n    }\n\n    if (nextProps.selected !== this.props.selected) {\n      if (this.state.currentFocused === 'title') {\n        this.titleEditor.focus();\n      } else {\n        this.descriptionEditor.focus();\n      }\n    }\n  }\n\n  /**\n   * @param {*} nextProps\n   * @param {*} nextState\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selected || !isEqual(this.props.data, nextProps.data);\n  }\n\n  /**\n   * Change Title handler\n   * @method onChangeTitle\n   * @param {object} titleEditorState Editor state.\n   * @returns {undefined}\n   */\n  onChangeTitle(titleEditorState) {\n    this.setState({ titleEditorState }, () => {\n      this.props.onChangeBlock(this.props.block, {\n        ...this.props.data,\n        title: titleEditorState.getCurrentContent().getPlainText(),\n      });\n    });\n  }\n\n  /**\n   * Change Description handler\n   * @method onChangeDescription\n   * @param {object} descriptionEditorState Editor state.\n   * @returns {undefined}\n   */\n  onChangeDescription(descriptionEditorState) {\n    this.setState({ descriptionEditorState }, () => {\n      this.props.onChangeBlock(this.props.block, {\n        ...this.props.data,\n        description: descriptionEditorState.getCurrentContent().getPlainText(),\n      });\n    });\n  }\n\n  /**\n   * Upload image handler\n   * @method onUploadImage\n   * @returns {undefined}\n   */\n  onUploadImage({ target }) {\n    const file = target.files[0];\n    this.setState({\n      uploading: true,\n    });\n    readAsDataURL(file).then((data) => {\n      const fields = data.match(/^data:(.*);(.*),(.*)$/);\n      this.props.createContent(\n        getBaseUrl(this.props.pathname),\n        {\n          '@type': 'Image',\n          image: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file.name,\n          },\n        },\n        this.props.block,\n      );\n    });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (__SERVER__) {\n      return <div />;\n    }\n    const { Editor } = this.props.draftJs;\n    const placeholder =\n      this.props.data.placeholder ||\n      this.props.intl.formatMessage(messages.placeholder);\n\n    return (\n      <div\n        className={cx('block hero', {\n          selected: this.props.selected,\n        })}\n      >\n        {this.props.selected && this.props.editable && !!this.props.data.url && (\n          <div className=\"toolbar\">\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={() =>\n                  this.props.onChangeBlock(this.props.block, {\n                    ...this.props.data,\n                    url: '',\n                  })\n                }\n              >\n                <Icon name={clearSVG} size=\"24px\" color=\"#e40166\" />\n              </Button>\n            </Button.Group>\n          </div>\n        )}\n        <div className=\"block-inner-wrapper\">\n          {this.props.data.url ? (\n            <img\n              className=\"hero-image\"\n              src={`${flattenToAppURL(this.props.data.url)}/@@images/image`}\n              alt=\"\"\n            />\n          ) : (\n            <div className=\"image-add\">\n              <Message className=\"image-message\">\n                {this.state.uploading && (\n                  <Dimmer active>\n                    <Loader indeterminate>\n                      {this.props.intl.formatMessage(messages.uploading)}\n                    </Loader>\n                  </Dimmer>\n                )}\n                <center>\n                  <h4>{this.props.intl.formatMessage(messages.image)}</h4>\n                  {this.props.editable && (\n                    <>\n                      <p>{placeholder}</p>\n                      <p>\n                        <label className=\"ui button file\">\n                          {this.props.intl.formatMessage(messages.browse)}\n                          <input\n                            type=\"file\"\n                            onChange={this.onUploadImage}\n                            style={{ display: 'none' }}\n                          />\n                        </label>\n                      </p>\n                    </>\n                  )}\n                </center>\n              </Message>\n            </div>\n          )}\n          <div className=\"hero-body\">\n            <div className=\"hero-text\">\n              <Editor\n                ref={(node) => {\n                  this.titleEditor = node;\n                }}\n                readOnly={!this.props.editable}\n                onChange={this.onChangeTitle}\n                editorState={this.state.titleEditorState}\n                blockRenderMap={this.extendedBlockRenderMap}\n                handleReturn={() => true}\n                placeholder={this.props.intl.formatMessage(messages.title)}\n                blockStyleFn={() => 'title-editor'}\n                onUpArrow={() => {\n                  const selectionState = this.state.titleEditorState.getSelection();\n                  const { titleEditorState } = this.state;\n                  if (\n                    titleEditorState\n                      .getCurrentContent()\n                      .getBlockMap()\n                      .first()\n                      .getKey() === selectionState.getFocusKey()\n                  ) {\n                    this.props.onFocusPreviousBlock(\n                      this.props.block,\n                      this.props.blockNode.current,\n                    );\n                  }\n                }}\n                onDownArrow={() => {\n                  const selectionState = this.state.titleEditorState.getSelection();\n                  const { titleEditorState } = this.state;\n                  if (\n                    titleEditorState\n                      .getCurrentContent()\n                      .getBlockMap()\n                      .last()\n                      .getKey() === selectionState.getFocusKey()\n                  ) {\n                    this.setState(() => ({ currentFocused: 'description' }));\n                    this.descriptionEditor.focus();\n                  }\n                }}\n              />\n              <Editor\n                ref={(node) => {\n                  this.descriptionEditor = node;\n                }}\n                readOnly={!this.props.editable}\n                onChange={this.onChangeDescription}\n                editorState={this.state.descriptionEditorState}\n                blockRenderMap={this.extendedDescripBlockRenderMap}\n                handleReturn={() => true}\n                placeholder={this.props.intl.formatMessage(\n                  messages.description,\n                )}\n                blockStyleFn={() => 'description-editor'}\n                onUpArrow={() => {\n                  const selectionState = this.state.descriptionEditorState.getSelection();\n                  const currentCursorPosition = selectionState.getStartOffset();\n\n                  if (currentCursorPosition === 0) {\n                    this.setState(() => ({ currentFocused: 'title' }));\n                    this.titleEditor.focus();\n                  }\n                }}\n                onDownArrow={() => {\n                  const selectionState = this.state.descriptionEditorState.getSelection();\n                  const { descriptionEditorState } = this.state;\n                  const currentCursorPosition = selectionState.getStartOffset();\n                  const blockLength = descriptionEditorState\n                    .getCurrentContent()\n                    .getFirstBlock()\n                    .getLength();\n\n                  if (currentCursorPosition === blockLength) {\n                    this.props.onFocusNextBlock(\n                      this.props.block,\n                      this.props.blockNode.current,\n                    );\n                  }\n                }}\n              />\n            </div>\n            <LinkMore data={this.props.data} isEditMode={true} />\n          </div>\n        </div>\n        <SidebarPortal selected={this.props.selected}>\n          <Data {...this.props} />\n        </SidebarPortal>\n      </div>\n    );\n  }\n}\n\nconst Edit = injectLazyLibs(['draftJs', 'immutableLib', 'draftJsImportHtml'])(\n  EditComponent,\n);\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, ownProps) => ({\n      request: state.content.subrequests[ownProps.block] || {},\n      content: state.content.subrequests[ownProps.block]?.data,\n    }),\n    { createContent },\n  ),\n)(Edit);\n","import React, { createRef } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Pagination, Dimmer, Loader } from 'semantic-ui-react';\nimport { Icon } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\nimport withQuerystringResults from './withQuerystringResults';\n\nimport paginationLeftSVG from '@plone/volto/icons/left-key.svg';\nimport paginationRightSVG from '@plone/volto/icons/right-key.svg';\n\nconst ListingBody = withQuerystringResults((props) => {\n  const {\n    data = {},\n    isEditMode,\n    listingItems,\n    totalPages,\n    onPaginationChange,\n    variation,\n    currentPage,\n    prevBatch,\n    nextBatch,\n    isFolderContentsListing,\n    hasLoaded,\n  } = props;\n\n  let ListingBodyTemplate;\n  // Legacy support if template is present\n  const variations = config.blocks?.blocksConfig['listing']?.variations || [];\n  const defaultVariation = variations.filter((item) => item.isDefault)?.[0];\n\n  if (data.template && !data.variation) {\n    const legacyTemplateConfig = variations.find(\n      (item) => item.id === data.template,\n    );\n    ListingBodyTemplate = legacyTemplateConfig.template;\n  } else {\n    ListingBodyTemplate =\n      variation?.template ?? defaultVariation?.template ?? null;\n  }\n\n  const listingRef = createRef();\n\n  return listingItems?.length > 0 ? (\n    <div ref={listingRef}>\n      <ListingBodyTemplate\n        items={listingItems}\n        isEditMode={isEditMode}\n        {...data}\n      />\n      {totalPages > 1 && (\n        <div className=\"pagination-wrapper\">\n          <Pagination\n            activePage={currentPage}\n            totalPages={totalPages}\n            onPageChange={(e, { activePage }) => {\n              !isEditMode &&\n                listingRef.current.scrollIntoView({ behavior: 'smooth' });\n              onPaginationChange(e, { activePage });\n            }}\n            firstItem={null}\n            lastItem={null}\n            prevItem={{\n              content: <Icon name={paginationLeftSVG} size=\"18px\" />,\n              icon: true,\n              'aria-disabled': !prevBatch,\n              className: !prevBatch ? 'disabled' : null,\n            }}\n            nextItem={{\n              content: <Icon name={paginationRightSVG} size=\"18px\" />,\n              icon: true,\n              'aria-disabled': !nextBatch,\n              className: !nextBatch ? 'disabled' : null,\n            }}\n          />\n        </div>\n      )}\n    </div>\n  ) : isEditMode ? (\n    <div className=\"listing message\" ref={listingRef}>\n      {isFolderContentsListing && (\n        <FormattedMessage\n          id=\"No items found in this container.\"\n          defaultMessage=\"No items found in this container.\"\n        />\n      )}\n      {hasLoaded && (\n        <FormattedMessage\n          id=\"No results found.\"\n          defaultMessage=\"No results found.\"\n        />\n      )}\n      <Dimmer active={!hasLoaded} inverted>\n        <Loader indeterminate size=\"small\">\n          <FormattedMessage id=\"loading\" defaultMessage=\"Loading\" />\n        </Loader>\n      </Dimmer>\n    </div>\n  ) : (\n    <div>\n      {hasLoaded && (\n        <FormattedMessage\n          id=\"No results found.\"\n          defaultMessage=\"No results found.\"\n        />\n      )}\n      <Dimmer active={!hasLoaded} inverted>\n        <Loader indeterminate size=\"small\">\n          <FormattedMessage id=\"loading\" defaultMessage=\"Loading\" />\n        </Loader>\n      </Dimmer>\n    </div>\n  );\n});\n\nexport default injectIntl(ListingBody);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\nimport { getContent, getQueryStringResults } from '@plone/volto/actions';\nimport { usePagination, getBaseUrl } from '@plone/volto/helpers';\n\nimport config from '@plone/volto/registry';\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nexport default function withQuerystringResults(WrappedComponent) {\n  function WithQuerystringResults(props) {\n    const { data = {}, properties: content, path, variation } = props;\n    const { settings } = config;\n    const querystring = data.querystring || data; // For backwards compat with data saved before Blocks schema. Note, this is also how the Search block passes data to ListingBody\n\n    const { block } = data;\n    const { b_size = settings.defaultPageSize } = querystring; // batchsize\n\n    // save the path so it won't trigger dispatch on eager router location change\n    const [initialPath] = React.useState(getBaseUrl(path));\n\n    const copyFields = ['limit', 'query', 'sort_on', 'sort_order', 'depth'];\n\n    const adaptedQuery = Object.assign(\n      variation?.fullobjects ? { fullobjects: 1 } : { metadata_fields: '_all' },\n      {\n        b_size: b_size,\n      },\n      ...copyFields.map((name) =>\n        Object.keys(querystring).includes(name)\n          ? { [name]: querystring[name] }\n          : {},\n      ),\n    );\n    const { currentPage, setCurrentPage } = usePagination(querystring, 1);\n    const querystringResults = useSelector(\n      (state) => state.querystringsearch.subrequests,\n    );\n    const dispatch = useDispatch();\n\n    const folderItems = content?.is_folderish ? content.items : [];\n    const hasQuery = querystring?.query?.length > 0;\n    const hasLoaded = hasQuery ? !querystringResults?.[block]?.loading : true;\n\n    const listingItems =\n      querystring?.query?.length > 0 && querystringResults?.[block]\n        ? querystringResults?.[block]?.items || []\n        : folderItems;\n\n    const showAsFolderListing = !hasQuery && content?.items_total > b_size;\n    const showAsQueryListing =\n      hasQuery && querystringResults?.[block]?.total > b_size;\n\n    const totalPages = showAsFolderListing\n      ? Math.ceil(content.items_total / b_size)\n      : showAsQueryListing\n      ? Math.ceil(querystringResults[block].total / b_size)\n      : 0;\n\n    const prevBatch = showAsFolderListing\n      ? content.batching?.prev\n      : showAsQueryListing\n      ? querystringResults[block].batching?.prev\n      : null;\n    const nextBatch = showAsFolderListing\n      ? content.batching?.next\n      : showAsQueryListing\n      ? querystringResults[block].batching?.next\n      : null;\n\n    const isImageGallery =\n      (!data.variation && data.template === 'imageGallery') ||\n      data.variation === 'imageGallery';\n\n    useDeepCompareEffect(() => {\n      if (hasQuery) {\n        dispatch(\n          getQueryStringResults(initialPath, adaptedQuery, block, currentPage),\n        );\n      } else if (isImageGallery && !hasQuery) {\n        // when used as image gallery, it doesn't need a query to list children\n        dispatch(\n          getQueryStringResults(\n            initialPath,\n            {\n              ...adaptedQuery,\n              query: [\n                {\n                  i: 'path',\n                  o: 'plone.app.querystring.operation.string.relativePath',\n                  v: '',\n                },\n              ],\n            },\n            block,\n          ),\n        );\n      } else {\n        dispatch(getContent(initialPath, null, null, currentPage));\n      }\n    }, [\n      block,\n      isImageGallery,\n      adaptedQuery,\n      hasQuery,\n      initialPath,\n      dispatch,\n      currentPage,\n    ]);\n\n    return (\n      <WrappedComponent\n        {...props}\n        onPaginationChange={(e, { activePage }) => setCurrentPage(activePage)}\n        total={querystringResults?.[block]?.total}\n        batch_size={b_size}\n        currentPage={currentPage}\n        totalPages={totalPages}\n        prevBatch={prevBatch}\n        nextBatch={nextBatch}\n        listingItems={listingItems}\n        hasLoaded={hasLoaded}\n        isFolderContentsListing={showAsFolderListing}\n      />\n    );\n  }\n\n  WithQuerystringResults.displayName = `WithQuerystringResults(${getDisplayName(\n    WrappedComponent,\n  )})`;\n\n  return hoistNonReactStatics(WithQuerystringResults, WrappedComponent);\n}\n","module.exports = require(\"react-side-effect\");","module.exports = require(\"lodash/uniq\");","/**\n * User session reducer.\n * @module reducers/userSession/userSession\n */\n\nimport { LOGIN, LOGIN_RENEW, LOGOUT } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  token: null,\n  login: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n};\n\n/**\n * User session reducer.\n * @function userSession\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function userSession(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${LOGIN}_PENDING`:\n      return {\n        ...state,\n        token: null,\n        login: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${LOGIN}_SUCCESS`:\n    case `${LOGIN_RENEW}_SUCCESS`:\n      return {\n        ...state,\n        token: action.result.token,\n        login: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LOGIN}_FAIL`:\n    case `${LOGIN_RENEW}_FAIL`:\n      return {\n        ...state,\n        token: null,\n        login: {\n          loading: false,\n          loaded: false,\n          error: action.error.response.error,\n        },\n      };\n    case `${LOGOUT}_FAIL`:\n    case `${LOGOUT}_SUCCESS`:\n      return {\n        ...state,\n        token: null,\n      };\n    default:\n      return state;\n  }\n}\n","module.exports = require(\"lodash/union\");","export * from './Loadable';\n","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M12.293 22.293L13.707 23.707 17 20.414 17 31 19 31 19 20.414 22.293 23.707 23.707 22.293 18 16.586z\\\"/><path d=\\\"M28.9707,15.6641 C28.9907,15.4401 28.9997,15.2191 28.9997,15.0001 C28.9997,10.5891 25.4107,7.0001 20.9997,7.0001 C17.9547,7.0001 15.2217,8.7151 13.8727,11.3711 C13.2807,11.1261 12.6477,11.0001 11.9997,11.0001 C9.3517,11.0001 7.1777,13.0691 7.0107,15.6761 C4.5837,16.8221 2.9997,19.2771 2.9997,22.0001 C2.9997,25.8591 6.1407,29.0001 9.9997,29.0001 L11.9997,29.0001 L11.9997,27.0001 L9.9997,27.0001 C7.2427,27.0001 4.9997,24.7571 4.9997,22.0001 C4.9997,19.8761 6.3517,17.9791 8.3627,17.2801 L9.0977,17.0251 L8.9997,16.0001 C8.9997,14.3461 10.3457,13.0001 11.9997,13.0001 C12.6307,13.0001 13.2427,13.2051 13.7697,13.5931 L14.8757,14.4071 L15.3107,13.1031 C16.1287,10.6491 18.4147,9.0001 20.9997,9.0001 C24.3087,9.0001 26.9997,11.6911 26.9997,15.0001 C26.9997,15.3601 26.9637,15.7361 26.8917,16.1161 L26.7287,16.9781 L27.5617,17.2531 C29.6177,17.9301 30.9997,19.8371 30.9997,22.0001 C30.9997,24.7571 28.7567,27.0001 25.9997,27.0001 L23.9997,27.0001 L23.9997,29.0001 L25.9997,29.0001 C29.8597,29.0001 32.9997,25.8591 32.9997,22.0001 C32.9997,19.2551 31.4107,16.8041 28.9707,15.6641\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M25 7L25 9 27.001 9 27.001 31 9.001 31 9.001 9 11.001 9 11.001 7 7 7 7 33 29.001 33 29.001 7z\\\"/><path d=\\\"M21,9 L15,9 L15,7 L17,7 L17,6 C17,5.448 17.448,5 18,5 C18.552,5 19,5.448 19,6 L19,7 L21,7 L21,9 Z M23,5 L20.829,5 C20.416,3.836 19.304,3 18,3 C16.696,3 15.584,3.836 15.171,5 L13,5 L13,11 L23,11 L23,5 Z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M15 13L31 13 31 11 15 11zM17 19L29 19 29 17 17 17zM19 25L27 25 27 23 19 23zM11 25.586L11 7 9 7 9 25.586 5.707 22.293 4.293 23.707 10 29.414 15.707 23.707 14.293 22.293z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M15 25L31 25 31 23 15 23zM17 19L29 19 29 17 17 17zM19 13L27 13 27 11 19 11zM15.707 12.293L10 6.586 4.293 12.293 5.707 13.707 9 10.414 9 29 11 29 11 10.414 14.293 13.707z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M6.9996,3.0003 L6.9996,33.0003 L29.0006,33.0003 L29.0006,11.5863 L20.4136,3.0003 L6.9996,3.0003 Z M9.0006,5.0003 L19.0006,5.0003 L19.0006,13.0003 L27.0006,13.0003 L27.0006,31.0003 L9.0006,31.0003 L9.0006,5.0003 Z M20.9996,6.4143 L25.5856,11.0003 L20.9996,11.0003 L20.9996,6.4143 Z\\\"/><path d=\\\"M19 16L17 16 17 20 13 20 13 22 17 22 17 26 19 26 19 22 23 22 23 20 19 20z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M6.9996,3.0003 L6.9996,33.0003 L29.0006,33.0003 L29.0006,11.5863 L20.4136,3.0003 L6.9996,3.0003 Z M9.0006,5.0003 L19.0006,5.0003 L19.0006,13.0003 L27.0006,13.0003 L27.0006,31.0003 L9.0006,31.0003 L9.0006,5.0003 Z M20.9996,6.4143 L25.5856,11.0003 L20.9996,11.0003 L20.9996,6.4143 Z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M11.9341,27 L9.0001,27 L9.0001,24.277 L19.9311,13.398 L22.7861,16.174 L11.9341,27 Z M26.3841,6.999 L29.2121,9.827 L24.2271,14.813 L21.3981,11.984 L26.3841,6.999 Z M28.9351,12.932 L30.6261,11.241 C31.4061,10.461 31.4061,9.193 30.6261,8.413 L27.7971,5.584 C27.0421,4.829 25.6721,4.828 24.9161,5.584 L7.0001,23.449 L7.0001,27.48 L5.2401,29.293 L6.6811,30.654 L8.3091,29 L12.7621,29 L27.5211,14.294 L29.0011,15.801 L24.4141,20.401 L25.8281,21.822 L30.4151,17.238 C30.7921,16.861 31.0001,16.361 31.0001,15.826 C31.0001,15.29 30.7921,14.789 30.4151,14.412 L28.9351,12.932 Z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill=\\\"#000\\\" fill-rule=\\\"evenodd\\\"><path d=\\\"M4.8774 28L23.1324 28C22.3064 26.614 20.0084 25.548 19.0924 25.232 15.4554 24.373 15.0454 22.379 15.0114 22.154L15.0004 22.003 15.0004 18.895 15.6304 18.645C16.8514 18.158 16.7644 17.393 16.7634 17.386L16.6384 16.607 17.3654 16.304C17.4044 16.268 17.5774 16.064 17.9134 15.315 17.8684 15.255 17.7984 15.185 17.7704 15.163L17.1894 14.725 17.8304 12.881C18.1344 11.639 18.0094 10.353 17.4614 9.651 17.1974 9.314 16.8544 9 16.5174 9L15.9664 9 15.6724 8.655C15.6704 8.653 15.0354 7.766 14.0284 7.766 13.5514 7.769 12.1334 7.916 11.3624 8.421 10.4574 9.013 9.5174 10.292 10.1784 12.953L10.7744 14.773 10.1364 15.196C10.0934 15.228 10.0314 15.292 9.9984 15.339 10.1754 15.816 10.5154 16.233 10.6504 16.308L11.4284 16.632 11.2414 17.388C11.2324 17.494 11.2244 18.188 12.3694 18.644L13.0004 18.894 12.9884 22.151C12.9554 22.376 12.5524 24.373 8.8194 25.259 7.9814 25.553 5.7004 26.615 4.8774 28L4.8774 28zM25.0004 30L3.0004 30 3.0004 29C3.0004 25.39 7.8954 23.539 8.4774 23.34 10.5884 22.834 10.8954 22.057 11.0004 21.847L11.0004 20.199C9.8114 19.515 9.3684 18.523 9.2664 17.76 8.7184 17.278 8.2894 16.536 8.0804 15.916 7.8304 15.176 8.0854 14.536 8.4414 14.083L8.2574 13.521C7.2064 9.3 9.3144 7.401 10.2674 6.777 11.6724 5.858 13.7894 5.827 14.0254 5.826 15.5324 5.826 16.5564 6.734 17.0414 7.29 17.8034 7.429 18.5104 7.867 19.0364 8.54 19.5834 9.239 20.4024 10.807 19.7454 13.45L19.5164 14.114C19.9054 14.644 20.0924 15.325 19.7984 15.997 19.5254 16.62 19.2044 17.289 18.7404 17.739 18.6424 18.505 18.2004 19.509 17.0004 20.199L17.0004 21.87C17.0754 22.01 17.3384 22.816 19.4304 23.313 20.1054 23.539 25.0004 25.389 25.0004 29L25.0004 30zM29 5L27 5 27 9 23 9 23 11 27 11 27 15 29 15 29 11 33 11 33 9 29 9z\\\"/></g>\"}","module.exports = require(\"lodash/split\");","module.exports = require(\"react-animate-height\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M19 9L17 9 17 17 9 17 9 19 17 19 17 27 19 27 19 19 27 19 27 17 19 17z\\\"/><path d=\\\"M18,31 C10.832,31 5,25.168 5,18 C5,10.832 10.832,5 18,5 C25.168,5 31,10.832 31,18 C31,25.168 25.168,31 18,31 M18,3 C9.729,3 3,9.729 3,18 C3,26.271 9.729,33 18,33 C26.271,33 33,26.271 33,18 C33,9.729 26.271,3 18,3\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M21.0107,16.8418 C20.2147,16.0458 19.2217,15.4488 18.1387,15.1148 C15.6417,14.3438 12.9477,15.0058 11.1107,16.8418 L10.0507,17.9028 L11.4647,19.3168 L12.5247,18.2558 C13.8347,16.9448 15.7587,16.4718 17.5497,17.0258 C18.3337,17.2678 19.0217,17.6808 19.5957,18.2558 C19.7777,18.4378 19.9527,18.6478 20.1307,18.8988 C20.8217,19.8728 21.1417,21.0678 21.0317,22.2608 C20.9237,23.4198 20.4137,24.5088 19.5957,25.3268 L15.3537,29.5698 C13.4047,31.5188 10.2317,31.5188 8.2817,29.5698 C7.3427,28.6298 6.8247,27.3738 6.8247,26.0338 C6.8247,24.6938 7.3427,23.4378 8.2817,22.4988 L6.8677,21.0848 C5.5507,22.4018 4.8247,24.1588 4.8247,26.0338 C4.8247,27.9088 5.5507,29.6668 6.8677,30.9838 C8.2327,32.3478 10.0257,33.0298 11.8177,33.0298 C13.6107,33.0298 15.4027,32.3478 16.7677,30.9838 L21.0107,26.7408 C22.1567,25.5938 22.8717,24.0688 23.0227,22.4458 C23.1777,20.7758 22.7297,19.1058 21.7617,17.7408 C21.5177,17.3978 21.2717,17.1038 21.0107,16.8418\\\"/><path d=\\\"M10.1343 22.0127C10.4893 22.2367 10.8293 22.4137 11.1733 22.5567 12.0123 22.9047 12.9223 23.0837 13.8363 23.0837 14.0523 23.0837 14.2703 23.0737 14.4863 23.0537 16.3673 22.8777 18.1243 21.9367 19.3063 20.4717L17.7493 19.2167C16.9053 20.2627 15.6473 20.9357 14.3003 21.0617 13.4823 21.1387 12.6873 21.0197 11.9393 20.7087 11.7003 20.6107 11.4583 20.4827 11.1983 20.3197 10.1863 19.6837 9.4343 18.7027 9.0803 17.5577 8.7363 16.4457 8.7893 15.2447 9.2323 14.1767L11.5283 8.6327C12.5833 6.0857 15.5133 4.8707 18.0613 5.9267L18.8263 4.0787C15.2603 2.6027 11.1583 4.3027 9.6803 7.8667L7.3843 13.4107C6.7633 14.9087 6.6873 16.5927 7.1693 18.1487 7.6653 19.7507 8.7183 21.1227 10.1343 22.0127M25 15.316L31 15.316 31 13.316 25 13.316zM24.949 3.633L23.052 3 21.052 9 22.949 9.633zM31.581 7.13L30.419 5.502 23.419 10.502 24.581 12.13zM24.553 18.211L28.553 20.211 29.448 18.422 25.448 16.422z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M18.0474,16.5 C17.2194,16.5 16.5474,17.172 16.5474,18 C16.5474,18.828 17.2194,19.5 18.0474,19.5 C18.8754,19.5 19.5474,18.828 19.5474,18 C19.5474,17.172 18.8754,16.5 18.0474,16.5\\\"/><path d=\\\"M18.0474,23 C15.2904,23 13.0474,20.757 13.0474,18 C13.0474,15.243 15.2904,13 18.0474,13 C20.8044,13 23.0474,15.243 23.0474,18 C23.0474,20.757 20.8044,23 18.0474,23 M18.0474,11 C14.1874,11 11.0474,14.141 11.0474,18 C11.0474,21.859 14.1874,25 18.0474,25 C21.9074,25 25.0474,21.859 25.0474,18 C25.0474,14.141 21.9074,11 18.0474,11\\\"/><path d=\\\"M18.0474,27 C12.1774,27 6.8994,23.314 5.0984,18 C6.8994,12.686 12.1774,9 18.0474,9 C23.9174,9 29.1954,12.686 30.9964,18 C29.1954,23.314 23.9174,27 18.0474,27 L18.0474,27 Z M33.0024,17.703 C31.0434,11.401 24.8934,7 18.0474,7 C11.2014,7 5.0514,11.401 3.0924,17.703 L3.0004,18 L3.0924,18.297 C5.0514,24.599 11.2014,29 18.0474,29 C24.8934,29 31.0434,24.599 33.0024,18.297 L33.0944,18 L33.0024,17.703 Z\\\"/></g>\"}","module.exports = __webpack_public_path__ + \"static/media/block-image.8a4a14d5.svg\";","import { defineMessages } from 'react-intl';\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  listing: {\n    id: 'Listing',\n    defaultMessage: 'Listing',\n  },\n  querystring: {\n    id: 'Query',\n    defaultMessage: 'Query',\n  },\n  more: {\n    id: 'Link more',\n    defaultMessage: 'Link more',\n  },\n  LinkTitle: {\n    id: 'Link title',\n    defaultMessage: 'Link Title',\n  },\n  LinkTo: {\n    id: 'Link to',\n    defaultMessage: 'Link to',\n  },\n});\n\nexport const schemaListing = (props) => {\n  const { intl } = props;\n\n  return {\n    title: intl.formatMessage(messages.listing),\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Default',\n        fields: ['querystring'],\n      },\n      ...(config.blocks.blocksConfig.listing.showLinkMore\n        ? [\n            {\n              id: 'linkmore',\n              title: intl.formatMessage(messages.more),\n              fields: ['linkTitle', 'linkHref'],\n            },\n          ]\n        : []),\n    ],\n\n    properties: {\n      querystring: {\n        title: intl.formatMessage(messages.querystring),\n        widget: 'querystring',\n      },\n      linkTitle: {\n        title: intl.formatMessage(messages.LinkTitle),\n      },\n      linkHref: {\n        title: intl.formatMessage(messages.LinkTo),\n        widget: 'object_browser',\n        mode: 'link',\n        selectedItemAttrs: ['Title', 'Description'],\n        allowExternals: true,\n      },\n    },\n    required: [],\n  };\n};\n\nexport default schemaListing;\n","/**\n * Body video block.\n * @module components/manage/Blocks/Video/Body\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { Embed, Message } from 'semantic-ui-react';\nimport cx from 'classnames';\nimport { isInternalURL, flattenToAppURL } from '@plone/volto/helpers';\n\n/**\n * Body video block class.\n * @class Body\n * @extends Component\n */\nconst Body = ({ data, isEditMode }) => {\n  let placeholder = data.preview_image\n    ? isInternalURL(data.preview_image)\n      ? `${flattenToAppURL(data.preview_image)}/@@images/image`\n      : data.preview_image\n    : null;\n\n  let videoID = null;\n  let listID = null;\n\n  if (!placeholder && data.url) {\n    if (data.url.match('youtu')) {\n      if (!placeholder) {\n        //load video preview image from youtube\n\n        if (data.url.match('list')) {\n          listID = data.url.match(/^.*\\?list=(.*)|^.*&list=(.*)$/)[1];\n        } else {\n          videoID = data.url.match(/.be\\//)\n            ? data.url.match(/^.*\\.be\\/(.*)/)[1]\n            : data.url.match(/^.*\\?v=(.*)$/)[1];\n        }\n\n        placeholder =\n          'https://img.youtube.com/vi/' + videoID + '/sddefault.jpg';\n      }\n    } else if (data.url.match('vimeo')) {\n      videoID = data.url.match(/^.*\\.com\\/(.*)/)[1];\n      placeholder = 'https://vumbnail.com/' + videoID + '.jpg';\n    }\n  }\n\n  const ref = React.createRef();\n  const onKeyDown = (e) => {\n    if (e.nativeEvent.keyCode === 13) {\n      ref.current.handleClick();\n    }\n  };\n\n  const embedSettings = {\n    placeholder: placeholder,\n    icon: 'play',\n    defaultActive: false,\n    autoplay: false,\n    aspectRatio: '16:9',\n    tabIndex: 0,\n    onKeyPress: onKeyDown,\n    ref: ref,\n  };\n\n  return (\n    <>\n      {data.url && (\n        <div\n          className={cx('video-inner', {\n            'full-width': data.align === 'full',\n          })}\n        >\n          {data.url.match('youtu') ? (\n            <>\n              {data.url.match('list') ? (\n                <Embed\n                  url={`https://www.youtube.com/embed/videoseries?list=${listID}`}\n                  {...embedSettings}\n                />\n              ) : (\n                <Embed id={videoID} source=\"youtube\" {...embedSettings} />\n              )}\n            </>\n          ) : (\n            <>\n              {data.url.match('vimeo') ? (\n                <Embed id={videoID} source=\"vimeo\" {...embedSettings} />\n              ) : (\n                <>\n                  {data.url.match('.mp4') ? (\n                    // eslint-disable-next-line jsx-a11y/media-has-caption\n                    <video\n                      src={\n                        isInternalURL(data.url)\n                          ? `${flattenToAppURL(data.url)}/@@download/file`\n                          : data.url\n                      }\n                      controls\n                      poster={placeholder}\n                      type=\"video/mp4\"\n                    />\n                  ) : isEditMode ? (\n                    <div>\n                      <Message>\n                        <center>\n                          <FormattedMessage\n                            id=\"Please enter a valid URL by deleting the block and adding a new video block.\"\n                            defaultMessage=\"Please enter a valid URL by deleting the block and adding a new video block.\"\n                          />\n                        </center>\n                      </Message>\n                    </div>\n                  ) : (\n                    <div className=\"invalidVideoFormat\" />\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nBody.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default Body;\n","import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  more: {\n    id: 'Link more',\n    defaultMessage: 'Link more',\n  },\n  LinkTitle: {\n    id: 'Link title',\n    defaultMessage: 'Link Title',\n  },\n  LinkTo: {\n    id: 'Link to',\n    defaultMessage: 'Link to',\n  },\n});\n\nconst schemaHero = ({ intl }) => {\n  return {\n    title: 'Block settings',\n    required: [],\n    fieldsets: [\n      {\n        id: 'default',\n        title: intl.formatMessage(messages.more),\n        fields: ['linkTitle', 'linkHref'],\n      },\n    ],\n    properties: {\n      linkTitle: {\n        title: intl.formatMessage(messages.LinkTitle),\n      },\n      linkHref: {\n        title: intl.formatMessage(messages.LinkTo),\n        widget: 'object_browser',\n        mode: 'link',\n        selectedItemAttrs: ['Title', 'Description'],\n        allowExternals: true,\n      },\n    },\n  };\n};\nexport default schemaHero;\n","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M25.9739,17 C25.9029,14.907 25.6159,12.946 25.1479,11.19 C26.0619,10.693 26.9229,10.092 27.7269,9.404 C29.5489,11.464 30.7269,14.097 30.9489,17 L25.9739,17 Z M25.1479,24.81 C25.6159,23.054 25.9029,21.093 25.9739,19 L30.9489,19 C30.7269,21.903 29.5489,24.536 27.7269,26.595 C26.9229,25.908 26.0619,25.307 25.1479,24.81 L25.1479,24.81 Z M24.5239,26.766 C25.1429,27.127 25.7399,27.531 26.2979,27.997 C25.2539,28.865 24.0689,29.565 22.7879,30.075 C23.4559,29.15 24.0419,28.037 24.5239,26.766 L24.5239,26.766 Z M11.4769,26.766 C11.9579,28.037 12.5439,29.15 13.2129,30.075 C11.9309,29.565 10.7459,28.865 9.7019,27.997 C10.2599,27.531 10.8569,27.127 11.4769,26.766 L11.4769,26.766 Z M10.0259,19 C10.0969,21.093 10.3839,23.054 10.8519,24.81 C9.9379,25.307 9.0769,25.908 8.2729,26.595 C6.4519,24.536 5.2729,21.903 5.0509,19 L10.0259,19 Z M10.8519,11.19 C10.3839,12.946 10.0969,14.907 10.0259,17 L5.0509,17 C5.2729,14.097 6.4509,11.464 8.2729,9.404 C9.0769,10.092 9.9379,10.693 10.8519,11.19 L10.8519,11.19 Z M11.4769,9.234 C10.8569,8.873 10.2599,8.468 9.7019,8.003 C10.7459,7.135 11.9309,6.435 13.2129,5.925 C12.5439,6.85 11.9579,7.963 11.4769,9.234 L11.4769,9.234 Z M22.7869,5.925 C24.0689,6.435 25.2539,7.135 26.2989,8.003 C25.7399,8.468 25.1429,8.873 24.5239,9.234 C24.0419,7.963 23.4559,6.85 22.7869,5.925 L22.7869,5.925 Z M18.9999,10.951 L18.9999,5.21 C20.4139,5.777 21.7809,7.513 22.7289,10.106 C21.5449,10.568 20.2919,10.853 18.9999,10.951 L18.9999,10.951 Z M18.9999,17 L18.9999,12.951 C20.4919,12.853 21.9389,12.539 23.3089,12.021 C23.6739,13.499 23.9109,15.17 23.9749,17 L18.9999,17 Z M18.9999,23.049 L18.9999,19 L23.9749,19 C23.9109,20.83 23.6739,22.501 23.3089,23.979 C21.9389,23.461 20.4919,23.147 18.9999,23.049 L18.9999,23.049 Z M18.9999,25.049 C20.2919,25.147 21.5449,25.432 22.7289,25.894 C21.7809,28.487 20.4139,30.223 18.9999,30.79 L18.9999,25.049 Z M16.9999,25.049 L16.9999,30.79 C15.5869,30.223 14.2189,28.487 13.2709,25.894 C14.4549,25.432 15.7079,25.147 16.9999,25.049 L16.9999,25.049 Z M16.9999,19 L16.9999,23.049 C15.5079,23.147 14.0619,23.461 12.6909,23.979 C12.3259,22.501 12.0889,20.83 12.0249,19 L16.9999,19 Z M16.9999,12.951 L16.9999,17 L12.0249,17 C12.0889,15.17 12.3259,13.499 12.6909,12.021 C14.0619,12.539 15.5079,12.853 16.9999,12.951 L16.9999,12.951 Z M16.9999,10.951 C15.7079,10.853 14.4549,10.568 13.2709,10.106 C14.2189,7.513 15.5869,5.777 16.9999,5.21 L16.9999,10.951 Z M17.9999,3 C9.7289,3 2.9999,9.729 2.9999,18 C2.9999,26.271 9.7289,33 17.9999,33 C26.2719,33 32.9999,26.271 32.9999,18 C32.9999,9.729 26.2719,3 17.9999,3 L17.9999,3 Z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path d=\\\"M3 27L23 27 23 9 3 9 3 27zM5 24.999L21 24.999 21 11 5 11 5 24.999zM24.9996 15.4644L24.9996 20.5354 32.9996 25.8684 32.9996 10.1314 24.9996 15.4644zM27.0006 19.4654L27.0006 16.5354 30.9996 13.8684 30.9996 22.1314 27.0006 19.4654z\\\" fill-rule=\\\"evenodd\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M19 5L17 5 9 5 9 9 11 9 11 7 17 7 17 29 15 29 15 31 17 31 19 31 21 31 21 29 19 29 19 7 25 7 25 9 27 9 27 5z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M17 9L11 9 11 13 13 13 13 11 17 11 17 29 15 29 15 31 17 31 19 31 21 31 21 29 19 29 19 11 23 11 23 13 25 13 25 9 19 9z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M31,25 L29,25 L29,24.18 L22.259,22.832 L13.196,21.02 L12.261,20.833 L7,19.78 L7,21 L5,21 L5,15 L7,15 L7,16.22 L29,11.82 L29,11 L31,11 L31,25 Z M20.502,25.868 C20.374,26.384 19.841,26.719 19.315,26.601 L14.221,25.469 C13.956,25.41 13.73,25.25 13.587,25.019 C13.445,24.787 13.402,24.514 13.468,24.25 L13.739,23.167 L20.823,24.584 L20.502,25.868 Z M27,9 L27,10.18 L9,13.78 L9,13 L3,13 L3,23 L9,23 L9,22.22 L11.776,22.775 L11.528,23.765 C11.33,24.557 11.457,25.375 11.886,26.07 C12.315,26.764 12.991,27.244 13.788,27.421 L18.881,28.553 C19.096,28.601 19.315,28.625 19.534,28.625 C20.912,28.625 22.108,27.691 22.443,26.353 L22.785,24.977 L27,25.82 L27,27 L33,27 L33,9 L27,9 Z\\\"/>\"}","module.exports = require(\"debug\");","module.exports = require(\"lodash/memoize\");","module.exports = require(\"fs\");","module.exports = require(\"locale\");","module.exports = require(\"path\");","module.exports = require(\"redux-localstorage-simple\");","module.exports = require(\"@sentry/node\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path d=\\\"M10 20C8.897 20 8 19.103 8 18 8 16.897 8.897 16 10 16 11.103 16 12 16.897 12 18 12 19.103 11.103 20 10 20M11 14.142L11 5 9 5 9 14.142C7.28 14.589 6 16.141 6 18 6 19.859 7.28 21.411 9 21.858L9 31 11 31 11 21.858C12.72 21.411 14 19.859 14 18 14 16.141 12.72 14.589 11 14.142M18 14C16.897 14 16 13.103 16 12 16 10.897 16.897 10 18 10 19.103 10 20 10.897 20 12 20 13.103 19.103 14 18 14M22 12C22 10.141 20.72 8.589 19 8.142L19 5 17 5 17 8.142C15.28 8.589 14 10.141 14 12 14 13.859 15.28 15.411 17 15.858L17 31 19 31 19 15.858C20.72 15.411 22 13.859 22 12M26 26C24.897 26 24 25.103 24 24 24 22.897 24.897 22 26 22 27.103 22 28 22.897 28 24 28 25.103 27.103 26 26 26M30 24C30 22.141 28.72 20.589 27 20.142L27 5 25 5 25 20.142C23.28 20.589 22 22.141 22 24 22 25.859 23.28 27.411 25 27.858L25 31 27 31 27 27.858C28.72 27.411 30 25.859 30 24\\\" fill-rule=\\\"evenodd\\\"/>\"}","// The Widgets are forced to be imported not from the index but from its own\n// full path due to circular import issues\n\nimport loadable from '@loadable/component';\n\nimport AlignWidget from '@plone/volto/components/manage/Widgets/AlignWidget';\nimport ArrayWidget from '@plone/volto/components/manage/Widgets/ArrayWidget';\nimport CheckboxWidget from '@plone/volto/components/manage/Widgets/CheckboxWidget';\nimport FileWidget from '@plone/volto/components/manage/Widgets/FileWidget';\nimport IdWidget from '@plone/volto/components/manage/Widgets/IdWidget';\nimport PasswordWidget from '@plone/volto/components/manage/Widgets/PasswordWidget';\nimport QueryWidget from '@plone/volto/components/manage/Widgets/QueryWidget';\nimport QuerySortOnWidget from '@plone/volto/components/manage/Widgets/QuerySortOnWidget';\nimport QuerystringWidget from '@plone/volto/components/manage/Widgets/QuerystringWidget';\nimport SchemaWidget from '@plone/volto/components/manage/Widgets/SchemaWidget';\nimport SelectWidget from '@plone/volto/components/manage/Widgets/SelectWidget';\nimport TextareaWidget from '@plone/volto/components/manage/Widgets/TextareaWidget';\nimport TextWidget from '@plone/volto/components/manage/Widgets/TextWidget';\nimport TokenWidget from '@plone/volto/components/manage/Widgets/TokenWidget';\nimport WysiwygWidget from '@plone/volto/components/manage/Widgets/WysiwygWidget';\nimport UrlWidget from '@plone/volto/components/manage/Widgets/UrlWidget';\nimport EmailWidget from '@plone/volto/components/manage/Widgets/EmailWidget';\nimport NumberWidget from '@plone/volto/components/manage/Widgets/NumberWidget';\nimport ImageSizeWidget from '@plone/volto/components/manage/Widgets/ImageSizeWidget';\n\nimport ReferenceWidget from '@plone/volto/components/manage/Widgets/ReferenceWidget';\nimport ObjectBrowserWidget from '@plone/volto/components/manage/Widgets/ObjectBrowserWidget';\n\nimport ObjectWidget from '@plone/volto/components/manage/Widgets/ObjectWidget';\nimport ObjectListWidget from '@plone/volto/components/manage/Widgets/ObjectListWidget';\nimport VocabularyTermsWidget from '@plone/volto/components/manage/Widgets/VocabularyTermsWidget';\nimport SelectMetadataWidget from '@plone/volto/components/manage/Blocks/Search/widgets/SelectMetadataField';\nimport SelectAutoComplete from '@plone/volto/components/manage/Widgets/SelectAutoComplete';\n\nexport const DatetimeWidget = loadable(() =>\n  import('@plone/volto/components/manage/Widgets/DatetimeWidget'),\n);\nexport const RecurrenceWidget = loadable(() =>\n  import(\n    '@plone/volto/components/manage/Widgets/RecurrenceWidget/RecurrenceWidget'\n  ),\n);\n\n// Widgets mapping\nexport const widgetMapping = {\n  id: {\n    schema: SchemaWidget,\n    subjects: TokenWidget,\n    query: QuerystringWidget,\n    recurrence: RecurrenceWidget,\n    remoteUrl: UrlWidget,\n    id: IdWidget,\n  },\n  widget: {\n    richtext: WysiwygWidget,\n    textarea: TextareaWidget,\n    datetime: DatetimeWidget,\n    date: DatetimeWidget,\n    password: PasswordWidget,\n    file: FileWidget,\n    align: AlignWidget,\n    url: UrlWidget,\n    email: EmailWidget,\n    array: ArrayWidget,\n    token: TokenWidget,\n    query: QueryWidget,\n    query_sort_on: QuerySortOnWidget,\n    querystring: QuerystringWidget,\n    object_browser: ObjectBrowserWidget,\n    object: ObjectWidget,\n    object_list: ObjectListWidget,\n    vocabularyterms: VocabularyTermsWidget,\n    image_size: ImageSizeWidget,\n    select_querystring_field: SelectMetadataWidget,\n    autocomplete: SelectAutoComplete,\n  },\n  vocabulary: {\n    'plone.app.vocabularies.Catalog': ObjectBrowserWidget,\n  },\n  factory: {\n    'Relation List': ObjectBrowserWidget,\n    'Relation Choice': ReferenceWidget,\n  },\n  choices: SelectWidget,\n  type: {\n    boolean: CheckboxWidget,\n    array: ArrayWidget,\n    object: FileWidget,\n    datetime: DatetimeWidget,\n    date: DatetimeWidget,\n    password: PasswordWidget,\n    number: NumberWidget,\n    integer: NumberWidget,\n    id: IdWidget,\n  },\n};\n\n// Default Widget\nexport const defaultWidget = TextWidget;\n","module.exports = require(\"serialize-javascript\");","module.exports = require(\"react-share\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M7.7502 11.0004L4.2502 23.0004 3.0002 23.0004 3.0002 24.9994 6.9992 24.9994 6.9992 23.0004 6.3332 23.0004 7.2082 20.0004 10.7912 20.0004 11.6672 23.0004 11.0002 23.0004 11.0002 24.9994 14.9992 24.9994 14.9992 23.0004 13.7502 23.0004 10.2502 11.0004 7.7502 11.0004zM9.0002 13.8574L10.2082 17.9994 7.7912 17.9994 9.0002 13.8574zM33 13L33 11 27 11 27 9 25 9 25 11 19 11 19 13 29.019 13C28.951 14.355 28.437 17.122 25.782 19.903 24.268 18.501 23.662 17.221 23.342 15.783L21.39 16.217C21.821 18.152 22.705 19.74 24.308 21.264 23.515 21.902 22.596 22.529 21.517 23.124L22.483 24.876C23.812 24.143 24.93 23.365 25.881 22.569 26.897 23.322 28.103 24.079 29.548 24.876L30.514 23.124C29.252 22.428 28.22 21.786 27.365 21.177 30.399 17.954 30.963 14.678 31.027 13L33 13zM12.051 6.316L20.051 30.316 21.948 29.683 13.948 5.683z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M31,18 C31,10.832 25.168,5 18,5 C10.832,5 5,10.832 5,18 C5,25.168 10.832,31 18,31 C25.168,31 31,25.168 31,18 M3,18 C3,9.729 9.729,3 18,3 C26.271,3 33,9.729 33,18 C33,26.271 26.271,33 18,33 C9.729,33 3,26.271 3,18\\\"/><path d=\\\"M11.293 16.707L12.707 15.293 18 20.586 23.293 15.293 24.707 16.707 18 23.414z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M24.707 19.293L23.293 20.707 18 15.414 12.707 20.707 11.293 19.293 18 12.586z\\\"/><path d=\\\"M18,5 C10.832,5 5,10.832 5,18 C5,25.168 10.832,31 18,31 C25.168,31 31,25.168 31,18 C31,10.832 25.168,5 18,5 M18,33 C9.729,33 3,26.271 3,18 C3,9.729 9.729,3 18,3 C26.271,3 33,9.729 33,18 C33,26.271 26.271,33 18,33\\\"/></g>\"}","module.exports = require(\"lodash/reverse\");","module.exports = require(\"lodash/sortBy\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M18,31 C14.775,31 11.827,29.813 9.553,27.861 L27.861,9.553 C29.813,11.827 31,14.775 31,18 C31,25.168 25.168,31 18,31 M18,5 C21.225,5 24.173,6.187 26.447,8.139 L8.139,26.447 C6.187,24.173 5,21.225 5,18 C5,10.832 10.832,5 18,5 M18,3 C9.729,3 3,9.729 3,18 C3,26.271 9.729,33 18,33 C26.271,33 33,26.271 33,18 C33,9.729 26.271,3 18,3\\\"/>\"}","module.exports = require(\"lodash/fromPairs\");","import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport ObjectWidget from '@plone/volto/components/manage/Widgets/ObjectWidget';\n\nconst messages = defineMessages({\n  Criteria: {\n    id: 'Criteria',\n    defaultMessage: 'Criteria',\n  },\n  depth: {\n    id: 'Depth',\n    defaultMessage: 'Depth',\n  },\n  SortOn: {\n    id: 'Sort on',\n    defaultMessage: 'Sort on',\n  },\n  reversedOrder: {\n    id: 'Reversed order',\n    defaultMessage: 'Reversed order',\n  },\n  limit: {\n    id: 'Results limit',\n    defaultMessage: 'Results limit',\n  },\n  itemBatchSize: {\n    id: 'Item batch size',\n    defaultMessage: 'Item batch size',\n  },\n  NoSelection: {\n    id: 'No selection',\n    defaultMessage: 'No selection',\n  },\n});\n\nexport const objectSchema = ({ intl, isDisabled, value }) => ({\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: [\n        'query',\n        ...(value?.query?.filter((q) => q.i === 'path').length > 0\n          ? ['depth']\n          : []),\n        'sort_on',\n        'sort_order_boolean',\n        'limit',\n        'b_size',\n      ],\n    },\n  ],\n  properties: {\n    query: {\n      title: intl.formatMessage(messages.Criteria),\n      widget: 'query',\n    },\n    depth: {\n      title: intl.formatMessage(messages.depth),\n      type: 'number',\n    },\n    sort_on: {\n      title: intl.formatMessage(messages.SortOn),\n      widget: 'query_sort_on',\n      isDisabled: isDisabled,\n    },\n    sort_order_boolean: {\n      title: intl.formatMessage(messages.reversedOrder),\n      type: 'boolean',\n      isDisabled: isDisabled,\n    },\n    limit: {\n      title: intl.formatMessage(messages.limit),\n      type: 'number',\n      isDisabled: isDisabled,\n    },\n    b_size: {\n      title: intl.formatMessage(messages.itemBatchSize),\n      type: 'number',\n      isDisabled: isDisabled,\n    },\n  },\n  required: [],\n});\n\nconst QuerystringWidget = (props) => {\n  const { block, onChange, schemaEnhancer } = props;\n  const isDisabled = props.value?.query?.length ? false : true;\n\n  const intl = useIntl();\n  let schema = objectSchema({ ...props, intl, isDisabled });\n  schema = schemaEnhancer ? schemaEnhancer({ ...props, intl, schema }) : schema;\n\n  return (\n    <div className=\"querystring-widget\">\n      <ObjectWidget\n        {...props}\n        block={block}\n        schema={schema}\n        onChange={(id, value) => {\n          const adaptedValue = {\n            ...value,\n            sort_order: value.sort_order_boolean ? 'descending' : 'ascending',\n          };\n          onChange(id, adaptedValue);\n        }}\n      />\n    </div>\n  );\n};\nexport default QuerystringWidget;\n","/**\n * TokenWidget component.\n * @module components/manage/Widgets/TokenWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport {\n  getVocabFromHint,\n  getVocabFromField,\n  getVocabFromItems,\n} from '@plone/volto/helpers';\nimport { getVocabulary } from '@plone/volto/actions';\n\nimport {\n  Option,\n  DropdownIndicator,\n  ClearIndicator,\n  selectTheme,\n  customSelectStyles,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\n\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nconst messages = defineMessages({\n  select: {\n    id: 'Select…',\n    defaultMessage: 'Select…',\n  },\n  no_options: {\n    id: 'No options',\n    defaultMessage: 'No options',\n  },\n});\n\n/**\n * TokenWidget component class.\n *\n * Because new terms are created through the web by using the widget, the token\n * widget conflates the meaning of token, label and value and assumes they can\n * be used interchangeably.\n *\n * @class TokenWidget\n * @extends Component\n */\nclass TokenWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    getVocabulary: PropTypes.func.isRequired,\n    choices: PropTypes.arrayOf(PropTypes.object),\n    vocabLoading: PropTypes.bool,\n    vocabLoaded: PropTypes.bool,\n    items: PropTypes.shape({\n      vocabulary: PropTypes.object,\n    }),\n    widgetOptions: PropTypes.shape({\n      vocabulary: PropTypes.object,\n    }),\n    value: PropTypes.arrayOf(PropTypes.string),\n    onChange: PropTypes.func.isRequired,\n    wrapped: PropTypes.bool,\n    placeholder: PropTypes.string,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    items: {\n      vocabulary: null,\n    },\n    widgetOptions: {\n      vocabulary: null,\n    },\n    error: [],\n    choices: [],\n    value: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Actions\n   */\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (!this.props.choices?.length) {\n      this.props.getVocabulary({\n        vocabNameOrURL: this.props.vocabBaseUrl,\n        size: -1,\n        subrequest: this.props.lang,\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if (\n      !this.props.choices?.length &&\n      this.props.vocabLoading === undefined &&\n      !this.props.vocabLoaded\n    ) {\n      this.props.getVocabulary({\n        vocabNameOrURL: this.props.vocabBaseUrl,\n        size: -1,\n        subrequest: this.props.lang,\n      });\n    }\n  }\n\n  /**\n   * Handle the field change, store it in the local state and back to simple\n   * array of tokens for correct serialization\n   * @method handleChange\n   * @param {array} selectedOption The selected options (already aggregated).\n   * @returns {undefined}\n   */\n  handleChange(selectedOption) {\n    this.props.onChange(\n      this.props.id,\n      selectedOption ? selectedOption.map((item) => item.label) : null,\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const selectedOption = this.props.value\n      ? this.props.value.map((item) => ({ label: item, value: item }))\n      : [];\n\n    const defaultOptions = (this.props.choices || [])\n      .filter(\n        (item) => !selectedOption.find(({ label }) => label === item.label),\n      )\n      .map((item) => ({\n        label: item.label || item.value,\n        value: item.value,\n      }));\n    const CreatableSelect = this.props.reactSelectCreateable.default;\n\n    return (\n      <FormFieldWrapper {...this.props}>\n        <CreatableSelect\n          id={`field-${this.props.id}`}\n          key={this.props.id}\n          isDisabled={this.props.isDisabled}\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          defaultOptions={defaultOptions}\n          options={defaultOptions}\n          styles={customSelectStyles}\n          theme={selectTheme}\n          components={{ ClearIndicator, DropdownIndicator, Option }}\n          isMulti\n          value={selectedOption || []}\n          onChange={this.handleChange}\n          placeholder={\n            this.props.placeholder ??\n            this.props.intl.formatMessage(messages.select)\n          }\n          noOptionsMessage={() =>\n            this.props.intl.formatMessage(messages.no_options)\n          }\n        />\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs(['reactSelectCreateable']),\n  connect(\n    (state, props) => {\n      const vocabBaseUrl =\n        getVocabFromHint(props) ||\n        getVocabFromField(props) ||\n        getVocabFromItems(props);\n\n      const vocabState =\n        state.vocabularies?.[vocabBaseUrl]?.subrequests?.[state.intl.locale];\n\n      if (vocabState) {\n        return {\n          choices: vocabState.items\n            ? vocabState.items.map((item) => ({\n                label: item.label || item.value,\n                value: item.value,\n              }))\n            : [],\n          vocabLoading: vocabState.loading,\n          vocabLoaded: vocabState.loaded,\n          vocabBaseUrl,\n          lang: state.intl.locale,\n        };\n      }\n      return { vocabBaseUrl, lang: state.intl.locale };\n    },\n    { getVocabulary },\n  ),\n)(TokenWidget);\n","/**\n * UrlWidget component.\n * @module components/manage/Widgets/UrlWidget\n */\n\nimport React, { useState } from 'react';\nimport { compose } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Input, Button } from 'semantic-ui-react';\nimport { FormFieldWrapper, Icon } from '@plone/volto/components';\nimport {\n  addAppURL,\n  isInternalURL,\n  flattenToAppURL,\n  URLUtils,\n} from '@plone/volto/helpers';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\n\n/** Widget to edit urls\n *\n * This is the default widget used for the `remoteUrl` field. You can also use\n * it by declaring a field like:\n *\n * ```jsx\n * {\n *  title: \"URL\",\n *  widget: 'url',\n * }\n * ```\n */\nexport const UrlWidget = (props) => {\n  const {\n    id,\n    onChange,\n    onBlur,\n    onClick,\n    minLength,\n    maxLength,\n    placeholder,\n    isDisabled,\n  } = props;\n  const inputId = `field-${id}`;\n\n  const [value, setValue] = useState(flattenToAppURL(props.value));\n  const [isInvalid, setIsInvalid] = useState(false);\n  /**\n   * Clear handler\n   * @method clear\n   * @param {Object} value Value\n   * @returns {undefined}\n   */\n  const clear = () => {\n    setValue('');\n    onChange(id, undefined);\n  };\n\n  const onChangeValue = (_value) => {\n    let newValue = _value;\n    if (newValue?.length > 0) {\n      if (isInvalid && URLUtils.isUrl(URLUtils.normalizeUrl(newValue))) {\n        setIsInvalid(false);\n      }\n\n      if (isInternalURL(newValue)) {\n        newValue = flattenToAppURL(newValue);\n      }\n    }\n\n    setValue(newValue);\n\n    newValue = isInternalURL(newValue) ? addAppURL(newValue) : newValue;\n\n    if (!isInternalURL(newValue) && newValue.length > 0) {\n      const checkedURL = URLUtils.checkAndNormalizeUrl(newValue);\n      newValue = checkedURL.url;\n      if (!checkedURL.isValid) {\n        setIsInvalid(true);\n      }\n    }\n\n    onChange(id, newValue === '' ? undefined : newValue);\n  };\n\n  return (\n    <FormFieldWrapper {...props} className=\"url wide\">\n      <div className=\"wrapper\">\n        <Input\n          id={inputId}\n          name={id}\n          type=\"url\"\n          value={value || ''}\n          disabled={isDisabled}\n          placeholder={placeholder}\n          onChange={({ target }) => onChangeValue(target.value)}\n          onBlur={({ target }) =>\n            onBlur(id, target.value === '' ? undefined : target.value)\n          }\n          onClick={() => onClick()}\n          minLength={minLength || null}\n          maxLength={maxLength || null}\n          error={isInvalid}\n        />\n        {value?.length > 0 ? (\n          <Button.Group>\n            <Button\n              basic\n              className=\"cancel\"\n              aria-label=\"clearUrlBrowser\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                clear();\n              }}\n            >\n              <Icon name={clearSVG} size=\"30px\" />\n            </Button>\n          </Button.Group>\n        ) : (\n          <Button.Group>\n            <Button\n              basic\n              icon\n              aria-label=\"openUrlBrowser\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                props.openObjectBrowser({\n                  mode: 'link',\n                  overlay: true,\n                  onSelectItem: (url) => {\n                    onChangeValue(url);\n                  },\n                });\n              }}\n            >\n              <Icon name={navTreeSVG} size=\"24px\" />\n            </Button>\n          </Button.Group>\n        )}\n      </div>\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types\n * @property {Object} propTypes Property types.\n * @static\n */\nUrlWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  openObjectBrowser: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nUrlWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  minLength: null,\n  maxLength: null,\n};\n\nexport default compose(withObjectBrowser)(UrlWidget);\n","/**\n * NumberWidget component.\n * @module components/manage/Widgets/PassswordWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { injectIntl } from 'react-intl';\n\n/**\n * NumberWidget component class.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Number\",\n *  type: 'number',\n * }\n * ```\n */\nconst NumberWidget = (props) => {\n  const {\n    id,\n    value,\n    onChange,\n    onBlur,\n    onClick,\n    defaultValue,\n    isDisabled,\n    maximum,\n    minimum,\n    placeholder,\n  } = props;\n\n  return (\n    <FormFieldWrapper {...props}>\n      <Input\n        id={`field-${id}`}\n        name={id}\n        type=\"number\"\n        disabled={isDisabled}\n        min={minimum || null}\n        max={maximum || null}\n        value={value || defaultValue}\n        placeholder={placeholder}\n        onChange={({ target }) =>\n          onChange(id, target.value === '' ? undefined : target.value)\n        }\n        onBlur={({ target }) =>\n          onBlur(id, target.value === '' ? undefined : target.value)\n        }\n        onClick={() => onClick()}\n      />\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nNumberWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func.isRequired,\n  wrapped: PropTypes.bool,\n  maximum: PropTypes.number,\n  minimum: PropTypes.number,\n  placeholder: PropTypes.string,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nNumberWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n};\n\nexport default injectIntl(NumberWidget);\n","module.exports = require(\"decorate-component-with-props\");","module.exports = require(\"http-proxy-middleware\");","module.exports = require(\"@loadable/server\");","import React from 'react';\nimport { matchPath } from 'react-router';\nimport config from '@plone/volto/registry';\n\nconst AppExtras = (props) => {\n  const { settings } = config;\n  const { appExtras = [] } = settings;\n  const { pathname } = props;\n  const active = appExtras\n    .map((reg) => {\n      const match = matchPath(pathname, reg.match);\n      return match ? { reg, match } : null;\n    })\n    .filter((reg) => reg);\n\n  return active.map(({ reg: { component, props: extraProps }, match }, i) => {\n    const Insert = component;\n    return (\n      <Insert key={`appextra-${i}`} match={match} {...props} {...extraProps} />\n    );\n  });\n};\n\nexport default AppExtras;\n","/**\n * Header component.\n * @module components/theme/Header/Header\n */\n\nimport React, { Component } from 'react';\nimport { Container, Segment } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n  Anontools,\n  LanguageSelector,\n  Logo,\n  Navigation,\n  SearchWidget,\n} from '@plone/volto/components';\n\n/**\n * Header component class.\n * @class Header\n * @extends Component\n */\nclass Header extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    token: PropTypes.string,\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    token: null,\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Segment basic className=\"header-wrapper\" role=\"banner\">\n        <Container>\n          <div className=\"header\">\n            <div className=\"logo-nav-wrapper\">\n              <div className=\"logo\">\n                <a className=\"logo-written\" href=\"/\">ZEEUWS MUSEUM</a>\n              </div>\n              <Navigation pathname={this.props.pathname} />\n            </div>\n            {/* <div className=\"tools-search-wrapper\">\n              <LanguageSelector />\n              {!this.props.token && (\n                <div className=\"tools\">\n                  <Anontools />\n                </div>\n              )}\n              <div className=\"search\">\n                <SearchWidget />\n              </div>\n            </div> */}\n          </div>\n        </Container>\n      </Segment>\n    );\n  }\n}\n\nexport default connect((state) => ({\n  token: state.userSession.token,\n}))(Header);\n","/**\n * Logo component.\n * @module components/theme/Logo/Logo\n */\n\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Image } from 'semantic-ui-react';\nimport { useSelector } from 'react-redux';\nimport config from '@plone/volto/registry';\nimport { UniversalLink } from '@plone/volto/components';\nimport LogoImage from '@plone/volto/components/theme/Logo/Logo.svg';\n\nconst messages = defineMessages({\n  site: {\n    id: 'Site',\n    defaultMessage: 'Site',\n  },\n  plonesite: {\n    id: 'Plone Site',\n    defaultMessage: 'Plone Site',\n  },\n});\n\n/**\n * Logo component class.\n * @function Logo\n * @param {Object} intl Intl object\n * @returns {string} Markup of the component.\n */\nconst Logo = () => {\n  const { settings } = config;\n  const lang = useSelector((state) => state.intl.locale);\n  const intl = useIntl();\n\n  return (\n    <UniversalLink\n      href={settings.isMultilingual ? `/${lang}` : '/'}\n      title={intl.formatMessage(messages.site)}\n    >\n      <Image\n        src={LogoImage}\n        alt={intl.formatMessage(messages.plonesite)}\n        title={intl.formatMessage(messages.plonesite)}\n      />\n    </UniversalLink>\n  );\n};\n\nexport default Logo;\n","/**\n * Anontools component.\n * @module components/theme/Anontools/Anontools\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Menu } from 'semantic-ui-react';\nimport { FormattedMessage } from 'react-intl';\nimport config from '@plone/volto/registry';\n\n/**\n * Anontools container class.\n */\nexport class Anontools extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    token: PropTypes.string,\n    content: PropTypes.shape({\n      '@id': PropTypes.string,\n    }),\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    token: null,\n    content: {\n      '@id': null,\n    },\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { settings } = config;\n    return (\n      !this.props.token && (\n        <Menu pointing secondary floated=\"right\">\n          <Menu.Item>\n            <Link\n              aria-label=\"login\"\n              to={`/login${\n                this.props.content?.['@id']\n                  ? `?return_url=${this.props.content['@id'].replace(\n                      settings.apiPath,\n                      '',\n                    )}`\n                  : ''\n              }`}\n            >\n              <FormattedMessage id=\"Log in\" defaultMessage=\"Log in\" />\n            </Link>\n          </Menu.Item>\n          {settings.showSelfRegistration && (\n            <Menu.Item>\n              <Link aria-label=\"register\" to=\"/register\">\n                <FormattedMessage id=\"Register\" defaultMessage=\"Register\" />\n              </Link>\n            </Menu.Item>\n          )}\n        </Menu>\n      )\n    );\n  }\n}\n\nexport default connect((state) => ({\n  token: state.userSession.token,\n  content: state.content.data,\n}))(Anontools);\n","/**\n * Breadcrumbs components.\n * @module components/theme/Breadcrumbs/Breadcrumbs\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, Container, Segment } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Icon } from '@plone/volto/components';\nimport { getBreadcrumbs } from '@plone/volto/actions';\nimport { getBaseUrl, hasApiExpander } from '@plone/volto/helpers';\n\nimport homeSVG from '@plone/volto/icons/home.svg';\n\nconst messages = defineMessages({\n  home: {\n    id: 'Home',\n    defaultMessage: 'Home',\n  },\n  breadcrumbs: {\n    id: 'Breadcrumbs',\n    defaultMessage: 'Breadcrumbs',\n  },\n});\n\n/**\n * Breadcrumbs container class.\n */\nexport class BreadcrumbsComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getBreadcrumbs: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    root: PropTypes.string,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        url: PropTypes.string,\n      }),\n    ).isRequired,\n  };\n\n  componentDidMount() {\n    if (!hasApiExpander('breadcrumbs', getBaseUrl(this.props.pathname))) {\n      this.props.getBreadcrumbs(getBaseUrl(this.props.pathname));\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      if (!hasApiExpander('breadcrumbs', getBaseUrl(this.props.pathname))) {\n        this.props.getBreadcrumbs(getBaseUrl(nextProps.pathname));\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Segment\n        role=\"navigation\"\n        aria-label={this.props.intl.formatMessage(messages.breadcrumbs)}\n        className=\"breadcrumbs\"\n        secondary\n        vertical\n      >\n        <Container>\n          {/* <Breadcrumb>\n            <Link\n              to={this.props.root || '/'}\n              className=\"section\"\n              title={this.props.intl.formatMessage(messages.home)}\n            >\n              <Icon name={homeSVG} size=\"18px\" />\n            </Link>\n            {this.props.items.map((item, index, items) => [\n              <Breadcrumb.Divider key={`divider-${item.url}`} />,\n              index < items.length - 1 ? (\n                <Link key={item.url} to={item.url} className=\"section\">\n                  {item.title}\n                </Link>\n              ) : (\n                <Breadcrumb.Section key={item.url} active>\n                  {item.title}\n                </Breadcrumb.Section>\n              ),\n            ])}\n          </Breadcrumb> */}\n        </Container>\n      </Segment>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      items: state.breadcrumbs.items,\n      root: state.breadcrumbs.root,\n    }),\n    { getBreadcrumbs },\n  ),\n)(BreadcrumbsComponent);\n","/**\n * Search widget component.\n * @module components/theme/SearchWidget/SearchWidget\n */\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Form, Input } from 'semantic-ui-react';\nimport { compose } from 'redux';\nimport { PropTypes } from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Icon } from '@plone/volto/components';\nimport zoomSVG from '@plone/volto/icons/zoom.svg';\n\nconst messages = defineMessages({\n  search: {\n    id: 'Search',\n    defaultMessage: 'Search',\n  },\n  searchSite: {\n    id: 'Search Site',\n    defaultMessage: 'Search Site',\n  },\n});\n\n/**\n * SearchWidget component class.\n * @class SearchWidget\n * @extends Component\n */\nclass SearchWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    pathname: PropTypes.string,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      text: '',\n    };\n  }\n\n  /**\n   * On change text\n   * @method onChangeText\n   * @param {object} event Event object.\n   * @param {string} value Text value.\n   * @returns {undefined}\n   */\n  onChangeText(event, { value }) {\n    this.setState({\n      text: value,\n    });\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {event} event Event object.\n   * @returns {undefined}\n   */\n  onSubmit(event) {\n    const path =\n      this.props.pathname?.length > 0\n        ? `&path=${encodeURIComponent(this.props.pathname)}`\n        : '';\n    this.props.history.push(\n      `/search?SearchableText=${encodeURIComponent(this.state.text)}${path}`,\n    );\n    event.preventDefault();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Form action=\"/search\" onSubmit={this.onSubmit}>\n        <Form.Field className=\"searchbox\">\n          <Input\n            aria-label={this.props.intl.formatMessage(messages.search)}\n            onChange={this.onChangeText}\n            name=\"SearchableText\"\n            value={this.state.text}\n            transparent\n            autoComplete=\"off\"\n            placeholder={this.props.intl.formatMessage(messages.searchSite)}\n            title={this.props.intl.formatMessage(messages.search)}\n          />\n          <button aria-label={this.props.intl.formatMessage(messages.search)}>\n            <Icon name={zoomSVG} size=\"18px\" />\n          </button>\n        </Form.Field>\n      </Form>\n    );\n  }\n}\n\nexport default compose(withRouter, injectIntl)(SearchWidget);\n","/**\n * Footer component.\n * @module components/theme/Footer/Footer\n */\n\nimport React from 'react';\nimport { Container, List, Segment } from 'semantic-ui-react';\nimport { Logo } from '@plone/volto/components';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { UniversalLink } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  copyright: {\n    id: 'Copyright',\n    defaultMessage: 'Copyright',\n  },\n});\n\n/**\n * Component to display the footer.\n * @function Footer\n * @param {Object} intl Intl object\n * @returns {string} Markup of the component\n */\nconst Footer = ({ intl }) => {\n  const { settings } = config;\n  const lang = useSelector((state) => state.intl.locale);\n  return (\n    <container id=\"footer\">\n      <div id=\"top-footer\">\n        <div className=\"footerInfoBox\">\n          <a href=\"#\">BEZOKADRES</a>\n          <p>Abdij (Plein)</p>\n          <p>4331 BK, Middleburg</p>\n        </div>\n        <div className=\"footerInfoBox\">\n          <a href=\"#\">CONTACT ALGEMEEN</a>\n          <p>+31 (0) 118 653000</p>\n          <a href=\"info@zeeuwsmuseum.nl\">info@zeeuwsmuseum.nl</a>\n        </div>\n        <div id='footermail' className=\"footerInfoBox\">\n          <a href=\"#\">NIEUWSBRIEF</a>\n          <p> Schrijf je in voor onze nieuwsbrief en blijf op de hoogte. </p>\n        </div>\n      </div>\n      <div id='bottom-footer'>\n        <div id=\"footerdown\">\n          <Logo id=\"footerLogo\" />\n        </div>\n      </div>\n    </container>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nFooter.propTypes = {\n  /**\n   * i18n object\n   */\n};\n\nexport default injectIntl(Footer);\n","/**\n * Title component.\n * @module components/theme/Title/Title\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Component to display a title.\n * @function Field\n * @param {Object} props Component properties.\n * @param {string} props.title Title.\n * @returns {string} Markup of the component.\n */\nconst Title = ({ title }) => <h1 className=\"documentFirstHeading\">{title}</h1>;\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nTitle.propTypes = {\n  /**\n   * The title\n   */\n  title: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","/**\n * Pagination component.\n * @module components/theme/Pagination/Pagination\n */\n\nimport React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { Icon } from '@plone/volto/components';\nimport PropTypes from 'prop-types';\nimport { map } from 'lodash';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport leftChevron from '@plone/volto/icons/left-key.svg';\nimport rightChevron from '@plone/volto/icons/right-key.svg';\n\n/**\n * Component to display pagination.\n * @function Pagination\n * @param {number} current Current page\n * @param {number} total Total amount of pages\n * @param {number} pageSize Current page size\n * @param {Array} pageSizes Available page sizes\n * @param {function} onChangePage On page change handler\n * @param {function} onChangePageSize On page size change handler\n * @returns {string} Markup of the component.\n */\nconst Pagination = ({\n  current,\n  total,\n  pageSize,\n  pageSizes,\n  onChangePage,\n  onChangePageSize,\n}) => (\n  <Menu secondary attached>\n    <Menu.Menu>\n      {current > 0 && (\n        <Menu.Item\n          value={current - 1}\n          icon={<Icon name={leftChevron} size=\"23px\" />}\n          className=\"chevron-left-icon\"\n          onClick={onChangePage}\n        />\n      )}\n      {current > 2 && (\n        <Menu.Item value={0} onClick={onChangePage}>\n          1\n        </Menu.Item>\n      )}\n      {current > 3 && <Menu.Item disabled>...</Menu.Item>}\n      {current > 1 && (\n        <Menu.Item value={current - 2} onClick={onChangePage}>\n          {current - 1}\n        </Menu.Item>\n      )}\n      {current > 0 && (\n        <Menu.Item value={current - 1} onClick={onChangePage}>\n          {current}\n        </Menu.Item>\n      )}\n      {total > 1 && (\n        <Menu.Item value={current} active onClick={onChangePage}>\n          {current + 1}\n        </Menu.Item>\n      )}\n      {total > current + 1 && (\n        <Menu.Item value={current + 1} onClick={onChangePage}>\n          {current + 2}\n        </Menu.Item>\n      )}\n      {total > current + 2 && (\n        <Menu.Item value={current + 2} onClick={onChangePage}>\n          {current + 3}\n        </Menu.Item>\n      )}\n      {total > current + 4 && <Menu.Item disabled>...</Menu.Item>}\n      {total > current + 3 && (\n        <Menu.Item value={total - 1} onClick={onChangePage}>\n          {total}\n        </Menu.Item>\n      )}\n      {current < total - 1 && (\n        <Menu.Item\n          value={current + 1}\n          icon={<Icon name={rightChevron} size=\"23px\" />}\n          className=\"chevron-right-icon\"\n          onClick={onChangePage}\n        />\n      )}\n    </Menu.Menu>\n    {pageSize && (\n      <Menu.Menu position=\"right\">\n        <Menu.Item>\n          <FormattedMessage id=\"Show\" defaultMessage=\"Show\" />:\n        </Menu.Item>\n        {map(pageSizes, (size) => (\n          <Menu.Item\n            key={size}\n            value={size}\n            active={size === pageSize}\n            onClick={onChangePageSize}\n          >\n            {size}\n          </Menu.Item>\n        ))}\n      </Menu.Menu>\n    )}\n  </Menu>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nPagination.propTypes = {\n  /**\n   * Current page\n   */\n  current: PropTypes.number.isRequired,\n  /**\n   * Total number of pages\n   */\n  total: PropTypes.number.isRequired,\n  /**\n   * Number of items per page\n   */\n  pageSize: PropTypes.number,\n  /**\n   * Page sizes to choose from\n   */\n  pageSizes: PropTypes.arrayOf(PropTypes.number),\n  /**\n   * Handler called when changing the page\n   */\n  onChangePage: PropTypes.func.isRequired,\n  /**\n   * Handler called when changing the pagesize\n   */\n  onChangePageSize: PropTypes.func,\n};\n\n/**\n * Default props.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nPagination.defaultProps = {\n  pageSize: null,\n  pageSizes: [],\n  onChangePageSize: null,\n};\n\nexport default injectIntl(Pagination);\n","/**\n * Tags component.\n * @module components/theme/Tags/Tags\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Container } from 'semantic-ui-react';\n\n/**\n * Tags component class.\n * @function Tags\n * @param {array} tags Array of tags.\n * @returns {string} Markup of the component.\n */\nconst Tags = ({ tags }) =>\n  tags && tags.length > 0 ? (\n    <Container className=\"tags\">\n      {tags.map((tag) => (\n        <Link className=\"ui label\" to={`/search?Subject=${tag}`} key={tag}>\n          {tag}\n        </Link>\n      ))}\n    </Container>\n  ) : (\n    <span />\n  );\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nTags.propTypes = {\n  tags: PropTypes.arrayOf(PropTypes.string),\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nTags.defaultProps = {\n  tags: null,\n};\n\nexport default Tags;\n","import React from 'react';\nimport { Message, Container } from 'semantic-ui-react';\nimport { FormattedMessage } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport config from '@plone/volto/registry';\n\nconst OutdatedBrowser = () => {\n  const { settings } = config;\n  const browserdetect = useSelector((state) => state.browserdetect);\n  return (\n    settings.notSupportedBrowsers.includes(browserdetect?.name) && (\n      <Container style={{ marginBottom: '20px' }}>\n        <Message negative>\n          <Message.Header>\n            <FormattedMessage\n              id=\"You are using an outdated browser\"\n              defaultMessage=\"You are using an outdated browser\"\n            />\n          </Message.Header>\n          <p>\n            <FormattedMessage\n              id=\"deprecated_browser_notice_message\"\n              defaultMessage=\"You are using {browsername} {browserversion} which is deprecated by its vendor. That means that it does not get security updates and it is not ready for current modern web features, which deteriorates the user experience. Please upgrade to a modern browser.\"\n              values={{\n                browsername: browserdetect.name,\n                browserversion: browserdetect.version,\n              }}\n            />\n          </p>\n        </Message>\n      </Container>\n    )\n  );\n};\n\nexport default OutdatedBrowser;\n","/**\n * Language selector component.\n * @module components/LanguageSelector/LanguageSelector\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { useSelector } from 'react-redux';\nimport cx from 'classnames';\nimport { find, map } from 'lodash';\n\nimport { Helmet, langmap, flattenToAppURL } from '@plone/volto/helpers';\n\nimport config from '@plone/volto/registry';\n\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  switchLanguageTo: {\n    id: 'Switch to',\n    defaultMessage: 'Switch to',\n  },\n});\n\nconst LanguageSelector = (props) => {\n  const intl = useIntl();\n  const currentLang = useSelector((state) => state.intl.locale);\n  const translations = useSelector(\n    (state) => state.content.data?.['@components']?.translations?.items,\n  );\n\n  const { settings } = config;\n\n  return settings.isMultilingual ? (\n    <div className=\"language-selector\">\n      {map(settings.supportedLanguages, (lang) => {\n        const translation = find(translations, { language: lang });\n        return (\n          <Link\n            aria-label={`${intl.formatMessage(\n              messages.switchLanguageTo,\n            )} ${langmap[lang].nativeName.toLowerCase()}`}\n            className={cx({ selected: lang === currentLang })}\n            to={translation ? flattenToAppURL(translation['@id']) : `/${lang}`}\n            title={langmap[lang].nativeName}\n            onClick={() => {\n              props.onClickAction();\n            }}\n            key={`language-selector-${lang}`}\n          >\n            {langmap[lang].nativeName}\n          </Link>\n        );\n      })}\n    </div>\n  ) : (\n    <Helmet>\n      <html lang={settings.defaultLanguage} />\n    </Helmet>\n  );\n};\n\nLanguageSelector.propTypes = {\n  onClickAction: PropTypes.func,\n};\n\nLanguageSelector.defaultProps = {\n  onClickAction: () => {},\n};\n\nexport default LanguageSelector;\n","import React from 'react';\nimport { useIntl, defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  mainView: {\n    id: 'skiplink-main-content',\n    defaultMessage: 'Skip to main content',\n  },\n  navigation: {\n    id: 'skiplink-navigation',\n    defaultMessage: 'Skip to navigation',\n  },\n  footer: {\n    id: 'skiplink-footer',\n    defaultMessage: 'Skip to footer',\n  },\n});\n\nconst SkipLinks = () => {\n  const intl = useIntl();\n\n  return (\n    <div\n      className=\"skiplinks-wrapper\"\n      role=\"complementary\"\n      aria-label=\"skiplinks\"\n    >\n      <a className=\"skiplink\" href=\"#view\">\n        {intl.formatMessage(messages.mainView)}\n      </a>\n      <a className=\"skiplink\" href=\"#navigation\">\n        {intl.formatMessage(messages.navigation)}\n      </a>\n      <a className=\"skiplink\" href=\"#footer\">\n        {intl.formatMessage(messages.footer)}\n      </a>\n    </div>\n  );\n};\n\nexport default SkipLinks;\n","/**\n * @module components/theme/Error/Error\n */\n\nimport React from 'react';\nimport config from '@plone/volto/registry';\n\n/**\n * Error function.\n * @function Error\n * @returns {string} Markup of the error page.\n */\nconst Error = (props) => {\n  const { views } = config;\n  const { error } = props;\n  let FoundView;\n  if (error.status === undefined) {\n    // For some reason, while development and if CORS is in place and the\n    // requested resource is 404, it returns undefined as status, then the\n    // next statement will fail\n    FoundView = views.errorViews.corsError;\n  } else {\n    FoundView = views.errorViews[error.status.toString()];\n  }\n  if (!FoundView) {\n    FoundView = views.errorViews['404']; // default to 404\n  }\n  return (\n    <div id=\"view\">\n      <FoundView {...props} />\n    </div>\n  );\n};\n\nexport default Error;\n","/**\n * Avatar component.\n * @module components/theme/Avatar/Avatar\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getInitials } from '@plone/volto/helpers';\n\nconst defaultSize = 30;\nconst defaultColor = 'Teal';\nconst defaultClassName = 'avatar circular';\n\nconst Avatar = ({ src, title, text, size, color, className }) => {\n  const radius = Math.round(size / 2);\n  return (\n    <div className={className} title={title}>\n      {src ? (\n        <img src={src} alt={title}></img>\n      ) : (\n        <svg width={size} height={size}>\n          <circle cx={radius} cy={radius} r={radius} fill={color} />\n          <text\n            x=\"50%\"\n            y=\"50%\"\n            textAnchor=\"middle\"\n            fill=\"white\"\n            fontSize={`${radius}px`}\n            fontFamily=\"Arial\"\n            dy=\".3em\"\n          >\n            {text || getInitials(title, 1)}\n          </text>\n        </svg>\n      )}\n    </div>\n  );\n};\n\nAvatar.propTypes = {\n  src: PropTypes.string,\n  title: PropTypes.string,\n  text: PropTypes.string,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  className: PropTypes.string,\n};\n\nAvatar.defaultProps = {\n  src: null,\n  title: null,\n  text: null,\n  size: defaultSize,\n  color: defaultColor,\n  className: defaultClassName,\n};\n\nexport default Avatar;\n","import React from 'react';\nimport { UniversalLink } from '@plone/volto/components';\nimport PropTypes from 'prop-types';\n\nconst ConditionalLink = ({ condition, to, item, ...props }) => {\n  if (condition) {\n    return (\n      <UniversalLink href={to} item={item} {...props}>\n        {props.children}\n      </UniversalLink>\n    );\n  } else {\n    return props.children;\n  }\n};\n\nConditionalLink.propTypes = {\n  condition: PropTypes.bool,\n  to: PropTypes.string,\n  item: PropTypes.shape({\n    '@id': PropTypes.string,\n    remoteUrl: PropTypes.string, //of plone @type 'Link'\n  }),\n  children: PropTypes.node,\n};\n\nexport default ConditionalLink;\n","/**\n * LinkMore component\n * @module components/manage/LinkMore/LinkMore\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport { isInternalURL } from '@plone/volto/helpers/Url/Url';\nimport { ConditionalLink, UniversalLink } from '@plone/volto/components';\n\n/**\n * LinkMore component.\n * @class LinkMore\n * @extends Component\n */\nconst LinkMore = ({ data, isEditMode }) => {\n  let href = data.linkHref?.[0]?.['@id'] || '';\n  let link = null;\n  if (isInternalURL(href)) {\n    link = (\n      <ConditionalLink to={flattenToAppURL(href)} condition={!isEditMode}>\n        {data.linkTitle || href}\n      </ConditionalLink>\n    );\n  } else if (href) {\n    link = <UniversalLink href={href}>{data.linkTitle || href}</UniversalLink>;\n  }\n\n  return link ? <div className=\"link-more\">{link}</div> : null;\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nLinkMore.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default LinkMore;\n","/**\n * Contact Form container.\n * @module components/theme/ContactForm/ContactForm\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Portal } from 'react-portal';\nimport { Container, Message, Icon } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Link, withRouter } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { Form, Toolbar, Toast } from '@plone/volto/components';\nimport { emailNotification } from '@plone/volto/actions';\nimport { getBaseUrl } from '@plone/volto/helpers';\n\nconst messages = defineMessages({\n  send: {\n    id: 'Send',\n    defaultMessage: 'Send',\n  },\n  contactForm: {\n    id: 'Contact form',\n    defaultMessage: 'Contact form',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  name: {\n    id: 'Name',\n    defaultMessage: 'Name',\n  },\n  from: {\n    id: 'From',\n    defaultMessage: 'From',\n  },\n  subject: {\n    id: 'Subject',\n    defaultMessage: 'Subject',\n  },\n  message: {\n    id: 'Message',\n    defaultMessage: 'Message',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  messageSent: {\n    id: 'Email sent',\n    defaultMessage: 'Email sent',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n});\n\n/**\n * ContactForm class.\n * @class ContactForm\n * @extends Component\n */\nexport class ContactFormComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    emailNotification: PropTypes.func.isRequired,\n    error: PropTypes.shape({\n      message: PropTypes.string,\n    }),\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool,\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    error: null,\n    loading: null,\n    loaded: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.loading && nextProps.loaded) {\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.messageSent)}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * On submit handler\n   * @method onSubmit\n   * @param {Object} data Data object.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.emailNotification(\n      data.from,\n      data.message,\n      data.name,\n      data.subject,\n    );\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.goBack();\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <div id=\"contact-form\">\n        <Container id=\"view\">\n          <Helmet title={this.props.intl.formatMessage(messages.contactForm)} />\n          {this.props.error && (\n            <Message\n              icon=\"warning\"\n              negative\n              attached\n              header={this.props.intl.formatMessage(messages.error)}\n              content={this.props.error.message}\n            />\n          )}\n          <Form\n            onSubmit={this.onSubmit}\n            onCancel={this.onCancel}\n            formData={{ blocksLayoutFieldname: {} }}\n            submitLabel={this.props.intl.formatMessage(messages.send)}\n            resetAfterSubmit\n            title={this.props.intl.formatMessage(messages.contactForm)}\n            loading={this.props.loading}\n            schema={{\n              fieldsets: [\n                {\n                  fields: ['name', 'from', 'subject', 'message'],\n                  id: 'default',\n                  title: this.props.intl.formatMessage(messages.default),\n                },\n              ],\n              properties: {\n                name: {\n                  title: this.props.intl.formatMessage(messages.name),\n                  type: 'string',\n                },\n                from: {\n                  title: this.props.intl.formatMessage(messages.from),\n                  type: 'email',\n                },\n                subject: {\n                  title: this.props.intl.formatMessage(messages.subject),\n                  type: 'string',\n                },\n                message: {\n                  title: this.props.intl.formatMessage(messages.message),\n                  type: 'string',\n                  widget: 'textarea',\n                },\n              },\n              required: ['from', 'message'],\n            }}\n          />\n          {this.state.isClient && (\n            <Portal node={document.getElementById('toolbar')}>\n              <Toolbar\n                pathname={this.props.pathname}\n                hideDefaultViewButtons\n                inner={\n                  <Link\n                    to={`${getBaseUrl(this.props.pathname)}`}\n                    className=\"item\"\n                  >\n                    <Icon\n                      name=\"arrow left\"\n                      size=\"big\"\n                      color=\"blue\"\n                      title={this.props.intl.formatMessage(messages.back)}\n                    />\n                  </Link>\n                }\n              />\n            </Portal>\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      loading: state.emailNotification.loading,\n      loaded: state.emailNotification.loaded,\n      error: state.emailNotification.error,\n      pathname: props.location.pathname,\n    }),\n    { emailNotification },\n  ),\n)(ContactFormComponent);\n","/**\n * Login container.\n * @module components/theme/Login/Login\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Container,\n  Button,\n  Form,\n  Input,\n  Segment,\n  Grid,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\nimport { withRouter } from 'react-router-dom';\n\nimport { Icon } from '@plone/volto/components';\nimport { login } from '@plone/volto/actions';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\n\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  login: {\n    id: 'Log in',\n    defaultMessage: 'Log in',\n  },\n  loginName: {\n    id: 'Login Name',\n    defaultMessage: 'Login Name',\n  },\n  Login: {\n    id: 'Login',\n    defaultMessage: 'Login',\n  },\n  password: {\n    id: 'Password',\n    defaultMessage: 'Password',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  loginFailed: {\n    id: 'Login Failed',\n    defaultMessage: 'Login Failed',\n  },\n  loginFailedContent: {\n    id:\n      'Both email address and password are case sensitive, check that caps lock is not enabled.',\n    defaultMessage:\n      'Both email address and password are case sensitive, check that caps lock is not enabled.',\n  },\n  register: {\n    id: 'Register',\n    defaultMessage: 'Register',\n  },\n  forgotPassword: {\n    id: 'box_forgot_password_option',\n    defaultMessage: 'Forgot your password?',\n  },\n});\n\n/**\n * Login class.\n * @class Login\n * @extends Component\n */\nclass Login extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    login: PropTypes.func.isRequired,\n    error: PropTypes.shape({\n      message: PropTypes.string,\n    }),\n    loading: PropTypes.bool,\n    token: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n    returnUrl: PropTypes.string,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    error: null,\n    loading: null,\n    token: null,\n    returnUrl: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onLogin = this.onLogin.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.token) {\n      this.props.history.push(this.props.returnUrl || '/');\n      if (toast.isActive('loginFailed')) {\n        toast.dismiss('loginFailed');\n      }\n    }\n    if (nextProps.error) {\n      if (!toast.isActive('loginFailed')) {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.loginFailed)}\n            content={this.props.intl.formatMessage(messages.loginFailedContent)}\n          />,\n          { autoClose: false, toastId: 'loginFailed' },\n        );\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (toast.isActive('loginFailed')) {\n      toast.dismiss('loginFailed');\n    }\n  }\n\n  /**\n   * On login handler\n   * @method onLogin\n   * @param {Object} event Event object.\n   * @returns {undefined}\n   */\n  onLogin(event) {\n    this.props.login(\n      document.getElementsByName('login')[0].value,\n      document.getElementsByName('password')[0].value,\n    );\n    event.preventDefault();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <div id=\"page-login\">\n        <Helmet title={this.props.intl.formatMessage(messages.Login)} />\n        <Container text>\n          <Form method=\"post\" onSubmit={this.onLogin}>\n            <Segment.Group raised>\n              <Segment className=\"primary\">\n                <FormattedMessage id=\"Log In\" defaultMessage=\"Login\" />\n              </Segment>\n              <Segment secondary>\n                <FormattedMessage\n                  id=\"Sign in to start session\"\n                  defaultMessage=\"Sign in to start session\"\n                />\n              </Segment>\n              <Segment className=\"form\">\n                <Form.Field inline className=\"help\">\n                  <Grid>\n                    <Grid.Row stretched>\n                      <Grid.Column width=\"4\">\n                        <div className=\"wrapper\">\n                          <label htmlFor=\"login\">\n                            <FormattedMessage\n                              id=\"Login Name\"\n                              defaultMessage=\"Login Name\"\n                            />\n                          </label>\n                        </div>\n                      </Grid.Column>\n                      <Grid.Column width=\"8\">\n                        {/* eslint-disable jsx-a11y/no-autofocus */}\n                        <Input\n                          id=\"login\"\n                          name=\"login\"\n                          placeholder={this.props.intl.formatMessage(\n                            messages.loginName,\n                          )}\n                          autoFocus\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form.Field>\n                <Form.Field inline className=\"help\">\n                  <Grid>\n                    <Grid.Row stretched>\n                      <Grid.Column stretched width=\"4\">\n                        <div className=\"wrapper\">\n                          <label htmlFor=\"password\">\n                            <FormattedMessage\n                              id=\"Password\"\n                              defaultMessage=\"Password\"\n                            />\n                          </label>\n                        </div>\n                      </Grid.Column>\n                      <Grid.Column stretched width=\"8\">\n                        <Input\n                          type=\"password\"\n                          id=\"password\"\n                          name=\"password\"\n                          placeholder={this.props.intl.formatMessage(\n                            messages.password,\n                          )}\n                          tabIndex={0}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form.Field>\n                <Form.Field inline className=\"help\">\n                  <Grid>\n                    <Grid.Row stretched>\n                      {config.settings.showSelfRegistration && (\n                        <Grid.Column stretched width=\"12\">\n                          <p className=\"help\">\n                            <Link to=\"/register\">\n                              {this.props.intl.formatMessage(messages.register)}\n                            </Link>\n                          </p>\n                        </Grid.Column>\n                      )}\n                      <Grid.Column stretched width=\"12\">\n                        <p className=\"help\">\n                          <Link to=\"/password-reset\">\n                            {this.props.intl.formatMessage(\n                              messages.forgotPassword,\n                            )}\n                          </Link>\n                        </p>\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form.Field>\n              </Segment>\n              <Segment className=\"actions\" clearing>\n                <Button\n                  basic\n                  primary\n                  icon\n                  floated=\"right\"\n                  type=\"submit\"\n                  id=\"login-form-submit\"\n                  aria-label={this.props.intl.formatMessage(messages.login)}\n                  title={this.props.intl.formatMessage(messages.login)}\n                  loading={this.props.loading}\n                >\n                  <Icon className=\"circled\" name={aheadSVG} size=\"30px\" />\n                </Button>\n\n                <Button\n                  basic\n                  secondary\n                  icon\n                  floated=\"right\"\n                  id=\"login-form-cancel\"\n                  as={Link}\n                  to=\"/\"\n                  aria-label={this.props.intl.formatMessage(messages.cancel)}\n                  title={this.props.intl.formatMessage(messages.cancel)}\n                >\n                  <Icon className=\"circled\" name={clearSVG} size=\"30px\" />\n                </Button>\n              </Segment>\n            </Segment.Group>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      error: state.userSession.login.error,\n      loading: state.userSession.login.loading,\n      token: state.userSession.token,\n      returnUrl:\n        qs.parse(props.location.search).return_url ||\n        props.location.pathname\n          .replace(/\\/login$/, '')\n          .replace(/\\/logout$/, '') ||\n        '/',\n    }),\n    { login },\n  ),\n)(Login);\n","/**\n * Login container.\n * @module components/theme/Logout/Logout\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport qs from 'query-string';\n\nimport { Login } from '@plone/volto/components';\nimport { logout, purgeMessages } from '@plone/volto/actions';\n\n/**\n * Logout class.\n * @class Logout\n * @extends Component\n */\nclass Logout extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    logout: PropTypes.func.isRequired,\n    purgeMessages: PropTypes.func.isRequired,\n    query: PropTypes.shape({\n      return_url: PropTypes.string,\n    }),\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    query: null,\n  };\n\n  componentDidMount() {\n    this.props.logout();\n    this.props.purgeMessages();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return <Login location={{ query: this.props.location.query }} />;\n  }\n}\n\nexport default connect(\n  (state, props) => ({\n    query: qs.parse(props.location.search),\n  }),\n  { logout, purgeMessages },\n)(Logout);\n","/**\n * Login container.\n * @module components/theme/Sitemap/Sitemap\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { asyncConnect } from '@plone/volto/helpers';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Container } from 'semantic-ui-react';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Link } from 'react-router-dom';\nimport config from '@plone/volto/registry';\n\nimport { getNavigation } from '@plone/volto/actions';\n\nconst messages = defineMessages({\n  Sitemap: {\n    id: 'Sitemap',\n    defaultMessage: 'Sitemap',\n  },\n});\n/**\n * Sitemap class.\n * @class Sitemap\n * @extends Component\n */\nclass Sitemap extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getNavigation: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    const { settings } = config;\n    if (settings.isMultilingual) {\n      this.props.getNavigation(`${this.props.lang}`, 4);\n    } else {\n      this.props.getNavigation('', 4);\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n  renderItems = (items) => {\n    return (\n      <ul>\n        {items.map((item) => (\n          <li\n            key={item.url}\n            className={item.items?.length > 0 ? 'with-children' : ''}\n          >\n            <Link to={item.url}>{item.title}</Link>\n            {item.items && this.renderItems(item.items)}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n  render() {\n    const { items } = this.props;\n    return (\n      <div id=\"page-sitemap\">\n        <Helmet title={this.props.intl.formatMessage(messages.Sitemap)} />\n        <Container className=\"view-wrapper\">\n          <h1>{this.props.intl.formatMessage(messages.Sitemap)} </h1>\n          {items && this.renderItems(items)}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport const __test__ = compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      items: state.navigation.items,\n      lang: state.intl.locale,\n    }),\n    { getNavigation },\n  ),\n)(Sitemap);\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      items: state.navigation.items,\n      lang: state.intl.locale,\n    }),\n    { getNavigation },\n  ),\n  asyncConnect([\n    {\n      key: 'navigation',\n      promise: ({ location, store: { dispatch, getState } }) => {\n        const { settings } = config;\n        const lang = getState().intl.locale;\n        if (settings.isMultilingual) {\n          return __SERVER__ && dispatch(getNavigation(`${lang}`, 4));\n        } else {\n          return __SERVER__ && dispatch(getNavigation('', 4));\n        }\n      },\n    },\n  ]),\n)(Sitemap);\n","/**\n * Search component.\n * @module components/theme/Search/Search\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { UniversalLink } from '@plone/volto/components';\nimport { asyncConnect } from '@plone/volto/helpers';\nimport { FormattedMessage } from 'react-intl';\nimport { Portal } from 'react-portal';\nimport { Container, Pagination, Button, Header } from 'semantic-ui-react';\nimport qs from 'query-string';\nimport classNames from 'classnames';\n\nimport config from '@plone/volto/registry';\nimport { Helmet } from '@plone/volto/helpers';\nimport { searchContent } from '@plone/volto/actions';\nimport { SearchTags, Toolbar, Icon } from '@plone/volto/components';\n\nimport paginationLeftSVG from '@plone/volto/icons/left-key.svg';\nimport paginationRightSVG from '@plone/volto/icons/right-key.svg';\n\n/**\n * Search class.\n * @class SearchComponent\n * @extends Component\n */\nclass Search extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    searchContent: PropTypes.func.isRequired,\n    searchableText: PropTypes.string,\n    subject: PropTypes.string,\n    path: PropTypes.string,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        '@type': PropTypes.string,\n        title: PropTypes.string,\n        description: PropTypes.string,\n      }),\n    ),\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    items: [],\n    searchableText: null,\n    subject: null,\n    path: null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { currentPage: 1, isClient: false, active: 'relevance' };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.doSearch();\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps = (nextProps) => {\n    if (this.props.location.search !== nextProps.location.search) {\n      this.doSearch();\n    }\n  };\n\n  /**\n   * Search based on the given searchableText, subject and path.\n   * @method doSearch\n   * @param {string} searchableText The searchable text string\n   * @param {string} subject The subject (tag)\n   * @param {string} path The path to restrict the search to\n   * @returns {undefined}\n   */\n\n  doSearch = () => {\n    const options = qs.parse(this.props.history.location.search);\n    this.setState({ currentPage: 1 });\n    options['use_site_search_settings'] = 1;\n    this.props.searchContent('', options);\n  };\n\n  handleQueryPaginationChange = (e, { activePage }) => {\n    const { settings } = config;\n    window.scrollTo(0, 0);\n    let options = qs.parse(this.props.history.location.search);\n    options['use_site_search_settings'] = 1;\n\n    this.setState({ currentPage: activePage }, () => {\n      this.props.searchContent('', {\n        ...options,\n        b_start: (this.state.currentPage - 1) * settings.defaultPageSize,\n      });\n    });\n  };\n\n  onSortChange = (event, sort_order) => {\n    let options = qs.parse(this.props.history.location.search);\n    options.sort_on = event.target.name;\n    options.sort_order = sort_order || 'ascending';\n    if (event.target.name === 'relevance') {\n      delete options.sort_on;\n      delete options.sort_order;\n    }\n    let searchParams = qs.stringify(options);\n    this.setState({ currentPage: 1, active: event.target.name }, () => {\n      // eslint-disable-next-line no-restricted-globals\n      this.props.history.replace({\n        search: searchParams,\n      });\n    });\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { settings } = config;\n    return (\n      <Container id=\"page-search\">\n        <Helmet title=\"Search\" />\n        <div className=\"container\">\n          <article id=\"content\">\n            <header>\n              <h1 className=\"documentFirstHeading\">\n                {this.props.searchableText ? (\n                  <FormattedMessage\n                    id=\"Search results for {term}\"\n                    defaultMessage=\"Search results for {term}\"\n                    values={{\n                      term: <q>{this.props.searchableText}</q>,\n                    }}\n                  />\n                ) : (\n                  <FormattedMessage\n                    id=\"Search results\"\n                    defaultMessage=\"Search results\"\n                  />\n                )}\n              </h1>\n\n              <SearchTags />\n\n              {this.props.search?.items_total > 0 ? (\n                <div className=\"items_total\">\n                  {this.props.search.items_total}{' '}\n                  <FormattedMessage\n                    id=\"results found\"\n                    defaultMessage=\"results\"\n                  />\n                  <Header>\n                    <Header.Content className=\"header-content\">\n                      <div className=\"sort-by\">\n                        <FormattedMessage\n                          id=\"Sort By:\"\n                          defaultMessage=\"Sort by:\"\n                        />\n                      </div>\n                      <Button\n                        onClick={(event) => {\n                          this.onSortChange(event);\n                        }}\n                        name=\"relevance\"\n                        size=\"tiny\"\n                        className={classNames('button-sort', {\n                          'button-active': this.state.active === 'relevance',\n                        })}\n                      >\n                        <FormattedMessage\n                          id=\"Relevance\"\n                          defaultMessage=\"Relevance\"\n                        />\n                      </Button>\n                      <Button\n                        onClick={(event) => {\n                          this.onSortChange(event);\n                        }}\n                        name=\"sortable_title\"\n                        size=\"tiny\"\n                        className={classNames('button-sort', {\n                          'button-active':\n                            this.state.active === 'sortable_title',\n                        })}\n                      >\n                        <FormattedMessage\n                          id=\"Alphabetically\"\n                          defaultMessage=\"Alphabetically\"\n                        />\n                      </Button>\n                      <Button\n                        onClick={(event) => {\n                          this.onSortChange(event, 'reverse');\n                        }}\n                        name=\"effective\"\n                        size=\"tiny\"\n                        className={classNames('button-sort', {\n                          'button-active': this.state.active === 'effective',\n                        })}\n                      >\n                        <FormattedMessage\n                          id=\"Date (newest first)\"\n                          defaultMessage=\"Date (newest first)\"\n                        />\n                      </Button>\n                    </Header.Content>\n                  </Header>\n                </div>\n              ) : (\n                <div>\n                  <FormattedMessage\n                    id=\"No results found\"\n                    defaultMessage=\"No results found\"\n                  />\n                </div>\n              )}\n            </header>\n            <section id=\"content-core\">\n              {this.props.items.map((item) => (\n                <article className=\"tileItem\" key={item['@id']}>\n                  <h2 className=\"tileHeadline\">\n                    <UniversalLink\n                      item={item}\n                      className=\"summary url\"\n                      title={item['@type']}\n                    >\n                      {item.title}\n                    </UniversalLink>\n                  </h2>\n                  {item.description && (\n                    <div className=\"tileBody\">\n                      <span className=\"description\">{item.description}</span>\n                    </div>\n                  )}\n                  <div className=\"tileFooter\">\n                    <UniversalLink item={item}>\n                      <FormattedMessage\n                        id=\"Read More…\"\n                        defaultMessage=\"Read More…\"\n                      />\n                    </UniversalLink>\n                  </div>\n                  <div className=\"visualClear\" />\n                </article>\n              ))}\n\n              {this.props.search?.batching && (\n                <div className=\"search-footer\">\n                  <Pagination\n                    activePage={this.state.currentPage}\n                    totalPages={Math.ceil(\n                      this.props.search.items_total / settings.defaultPageSize,\n                    )}\n                    onPageChange={this.handleQueryPaginationChange}\n                    firstItem={null}\n                    lastItem={null}\n                    prevItem={{\n                      content: <Icon name={paginationLeftSVG} size=\"18px\" />,\n                      icon: true,\n                      'aria-disabled': !this.props.search.batching.prev,\n                      className: !this.props.search.batching.prev\n                        ? 'disabled'\n                        : null,\n                    }}\n                    nextItem={{\n                      content: <Icon name={paginationRightSVG} size=\"18px\" />,\n                      icon: true,\n                      'aria-disabled': !this.props.search.batching.next,\n                      className: !this.props.search.batching.next\n                        ? 'disabled'\n                        : null,\n                    }}\n                  />\n                </div>\n              )}\n            </section>\n          </article>\n        </div>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={<span />}\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport const __test__ = connect(\n  (state, props) => ({\n    items: state.search.items,\n    searchableText: qs.parse(props.history.location.search).SearchableText,\n    pathname: props.history.location.pathname,\n  }),\n  { searchContent },\n)(Search);\n\nexport default compose(\n  connect(\n    (state, props) => ({\n      items: state.search.items,\n      searchableText: qs.parse(props.history.location.search).SearchableText,\n      pathname: props.location.pathname,\n    }),\n    { searchContent },\n  ),\n  asyncConnect([\n    {\n      key: 'search',\n      promise: ({ location, store: { dispatch } }) =>\n        dispatch(\n          searchContent('', {\n            ...qs.parse(location.search),\n            use_site_search_settings: 1,\n          }),\n        ),\n    },\n  ]),\n)(Search);\n","/**\n * Comments components.\n * @module components/theme/Comments/Comments\n */\n\nimport {\n  addComment,\n  deleteComment,\n  listComments,\n  listMoreComments,\n} from '@plone/volto/actions';\nimport { Avatar, CommentEditModal, Form } from '@plone/volto/components';\nimport { flattenToAppURL, getBaseUrl, getColor } from '@plone/volto/helpers';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { Portal } from 'react-portal';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Button, Comment, Container, Icon } from 'semantic-ui-react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n// import { Button, Grid, Segment, Container } from 'semantic-ui-react';\n\nconst messages = defineMessages({\n  comment: {\n    id: 'Comment',\n    defaultMessage: 'Comment',\n  },\n  comments: {\n    id: 'Comments',\n    defaultMessage: 'Comments',\n  },\n  commentDescription: {\n    id:\n      'You can add a comment by filling out the form below. Plain text formatting.',\n    defaultMessage:\n      'You can add a comment by filling out the form below. Plain text formatting.',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  delete: {\n    id: 'Delete',\n    defaultMessage: 'Delete',\n  },\n  edit: {\n    id: 'Edit',\n    defaultMessage: 'Edit',\n  },\n  reply: {\n    id: 'Reply',\n    defaultMessage: 'Reply',\n  },\n  hideReplies: {\n    id: 'Hide Replies',\n    defaultMessage: 'Hide Replies',\n  },\n  showReplies: {\n    id: 'Show Replies',\n    defaultMessage: 'Show Replies',\n  },\n  loadMoreComments: {\n    id: 'Load more',\n    defaultMessage: 'Load more...',\n  },\n});\n/**\n * Schema for the Form components to show an input field with it's label\n * @param {Object} intl\n */\nconst makeFormSchema = (intl) => ({\n  fieldsets: [\n    {\n      fields: ['comment'],\n      id: 'default',\n      title: intl.formatMessage(messages.default),\n    },\n  ],\n  properties: {\n    comment: {\n      title: intl.formatMessage(messages.comment),\n      type: 'string',\n      widget: 'textarea',\n    },\n  },\n  required: ['comment1'],\n});\n\n/**\n * Comments container class.\n * @class Comments\n * @extends Component\n */\nclass Comments extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    addComment: PropTypes.func.isRequired,\n    deleteComment: PropTypes.func.isRequired,\n    listComments: PropTypes.func.isRequired,\n    listMoreComments: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        author_name: PropTypes.string,\n        creation_date: PropTypes.string,\n        text: PropTypes.shape({\n          data: PropTypes.string,\n          'mime-type': PropTypes.string,\n        }),\n        is_deletable: PropTypes.bool,\n        is_editable: PropTypes.bool,\n      }),\n    ).isRequired,\n    addRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    deleteRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Comments\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onEditOk = this.onEditOk.bind(this);\n    this.onEditCancel = this.onEditCancel.bind(this);\n    this.setReplyTo = this.setReplyTo.bind(this);\n    this.loadMoreComments = this.loadMoreComments.bind(this);\n    this.state = {\n      showEdit: false,\n      editId: null,\n      editText: null,\n      replyTo: null,\n      collapsedComments: {},\n    };\n  }\n\n  componentDidMount() {\n    this.props.listComments(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.pathname !== this.props.pathname ||\n      (this.props.addRequest.loading && nextProps.addRequest.loaded) ||\n      (this.props.deleteRequest.loading && nextProps.deleteRequest.loaded)\n    ) {\n      this.props.listComments(getBaseUrl(nextProps.pathname));\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} formData Form data.\n   * @returns {undefined}\n   */\n  onSubmit(formData) {\n    this.props.addComment(\n      getBaseUrl(this.props.pathname),\n      formData.comment,\n      this.state.replyTo,\n    );\n    this.setState({ replyTo: null });\n  }\n\n  /**\n   * The id of the comment that will receive a reply\n   * @param {string} commentId\n   */\n  setReplyTo(commentId) {\n    this.setState({ replyTo: commentId });\n  }\n\n  /**\n   * Calls the action listMoreComments passing the received url for next array of comments\n   */\n  loadMoreComments() {\n    this.props.listMoreComments(this.props.next);\n  }\n\n  /**\n   * Delete handler\n   * @method onDelete\n   * @param {Object} event Event object.\n   * @param {string} value Delete value.\n   * @returns {undefined}\n   */\n  onDelete(value) {\n    this.props.deleteComment(value);\n  }\n\n  /**\n   * Will hide all replies to the specific comment\n   * including replies to any of the replies\n   * @param {string} commentId\n   */\n  hideReply(commentId) {\n    this.setState((prevState) => {\n      const hasComment = prevState.collapsedComments[commentId];\n      const { collapsedComments } = prevState;\n\n      return {\n        collapsedComments: {\n          ...collapsedComments,\n          [commentId]: !hasComment,\n        },\n      };\n    });\n  }\n\n  /**\n   * Edit handler\n   * @method onEdit\n   * @param {Object} event Event object.\n   * @param {string} value Delete value.\n   * @returns {undefined}\n   */\n  onEdit(value) {\n    this.setState({\n      showEdit: true,\n      editId: value.id,\n      editText: value.text,\n    });\n  }\n\n  /**\n   * On edit ok\n   * @method onEditOk\n   * @returns {undefined}\n   */\n  onEditOk() {\n    this.setState({\n      showEdit: false,\n      editId: null,\n      editText: null,\n    });\n    this.props.listComments(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * On edit cancel\n   * @method onEditCancel\n   * @returns {undefined}\n   */\n  onEditCancel(ev) {\n    this.setState({\n      showEdit: false,\n      editId: null,\n      editText: null,\n      replyTo: null,\n    });\n  }\n\n  addRepliesAsChildrenToComments(items) {\n    let initialValue = {};\n    const allCommentsWithCildren = items.reduce((accumulator, item) => {\n      return {\n        [item.comment_id]: { comment: item, children: [] },\n        ...accumulator,\n      };\n    }, initialValue);\n\n    items.forEach((comment) => {\n      if (comment.in_reply_to) {\n        allCommentsWithCildren[comment.in_reply_to].children.push(comment);\n      }\n    });\n    return allCommentsWithCildren;\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { items } = this.props;\n    const moment = this.props.moment.default;\n    const { collapsedComments } = this.state;\n    // object with comment ids, to easily verify if any comment has children\n    const allCommentsWithCildren = this.addRepliesAsChildrenToComments(items);\n    // all comments that are not a reply will be shown in the first iteration\n    const allPrimaryComments = items.filter((comment) => !comment.in_reply_to);\n\n    // recursively makes comments with their replies nested\n    // each iteration will show replies to the specific comment using allCommentsWithCildren\n    const commentElement = (comment) => (\n      <Comment key={comment.comment_id}>\n        <Avatar\n          src={comment.author_image}\n          title={comment.author_name || 'Anonymous'}\n          color={getColor(comment.author_username)}\n        />\n        <Comment.Content>\n          <Comment.Author>{comment.author_name}</Comment.Author>\n          <Comment.Metadata>\n            <span>\n              {' '}\n              <span title={moment(comment.creation_date).format('LLLL')}>\n                {moment(comment.creation_date).fromNow()}\n              </span>\n            </span>\n          </Comment.Metadata>\n          <Comment.Text>\n            {' '}\n            {comment.text['mime-type'] === 'text/html' ? (\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: comment.text.data,\n                }}\n              />\n            ) : (\n              comment.text.data\n            )}\n          </Comment.Text>\n          <Comment.Actions>\n            <Comment.Action\n              as=\"a\"\n              aria-label={this.props.intl.formatMessage(messages.reply)}\n              onClick={() => this.setReplyTo(comment.comment_id)}\n            >\n              <FormattedMessage id=\"Reply\" defaultMessage=\"Reply\" />\n            </Comment.Action>\n            {comment.is_editable && (\n              <Comment.Action\n                onClick={() =>\n                  this.onEdit({\n                    id: flattenToAppURL(comment['@id']),\n                    text: comment.text.data,\n                  })\n                }\n                aria-label={this.props.intl.formatMessage(messages.edit)}\n                value={{\n                  id: flattenToAppURL(comment['@id']),\n                  text: comment.text.data,\n                }}\n              >\n                <FormattedMessage id=\"Edit\" defaultMessage=\"Edit\" />\n              </Comment.Action>\n            )}\n            {comment.is_deletable && (\n              <Comment.Action\n                aria-label={this.props.intl.formatMessage(messages.delete)}\n                onClick={() => this.onDelete(flattenToAppURL(comment['@id']))}\n                color=\"red\"\n              >\n                <Icon name=\"delete\" color=\"red\" />\n                <FormattedMessage\n                  id=\"Delete\"\n                  defaultMessage=\"Delete\"\n                  color=\"red\"\n                />\n              </Comment.Action>\n            )}\n            <Comment.Action\n              as=\"a\"\n              onClick={() => this.hideReply(comment.comment_id)}\n            >\n              {allCommentsWithCildren[comment.comment_id].children.length >\n              0 ? (\n                this.state.collapsedComments[comment.comment_id] ? (\n                  <>\n                    <Icon name=\"eye\" color=\"blue\" />\n                    <FormattedMessage\n                      id=\"Show Replies\"\n                      defaultMessage=\"Show Replies\"\n                    />\n                  </>\n                ) : (\n                  <>\n                    <Icon name=\"minus\" color=\"blue\" />\n                    <FormattedMessage\n                      id=\"Hide Replies\"\n                      defaultMessage=\"Hide Replies\"\n                    />\n                  </>\n                )\n              ) : null}\n            </Comment.Action>\n          </Comment.Actions>\n          <div id={`reply-place-${comment.comment_id}`}></div>\n        </Comment.Content>\n\n        {allCommentsWithCildren[comment.comment_id].children.length > 0\n          ? allCommentsWithCildren[comment.comment_id].children.map(\n              (child, index) => (\n                <Comment.Group\n                  collapsed={collapsedComments[comment.comment_id]}\n                  key={`group-${index}-${comment.comment_id}`}\n                >\n                  {commentElement(child)}\n                </Comment.Group>\n              ),\n            )\n          : null}\n      </Comment>\n    );\n\n    return (\n      <Container className=\"comments\">\n        <CommentEditModal\n          open={this.state.showEdit}\n          onCancel={this.onEditCancel}\n          onOk={this.onEditOk}\n          id={this.state.editId}\n          text={this.state.editText}\n        />\n        <div id=\"comment-add-id\">\n          <Form\n            onSubmit={this.onSubmit}\n            onCancel={this.onEditCancel}\n            submitLabel={this.props.intl.formatMessage(messages.comment)}\n            resetAfterSubmit\n            schema={makeFormSchema(this.props.intl)}\n          />\n        </div>\n\n        {/* all comments  */}\n        <Comment.Group threaded>\n          {allPrimaryComments.map((item) => commentElement(item))}\n        </Comment.Group>\n\n        {/* load more button */}\n        {this.props.items_total > this.props.items.length && (\n          <Button fluid basic color=\"blue\" onClick={this.loadMoreComments}>\n            <FormattedMessage id=\"Load more\" defaultMessage=\"Load more...\" />\n          </Button>\n        )}\n\n        {this.state.replyTo && (\n          <Portal\n            node={\n              document &&\n              document.getElementById(`reply-place-${this.state.replyTo}`)\n            }\n          >\n            <Form\n              onSubmit={this.onSubmit}\n              onCancel={this.onEditCancel}\n              submitLabel={this.props.intl.formatMessage(messages.comment)}\n              resetAfterSubmit\n              schema={makeFormSchema(this.props.intl)}\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs(['moment']),\n  connect(\n    (state) => ({\n      items: state.comments.items,\n      next: state.comments.next,\n      items_total: state.comments.items_total,\n      addRequest: state.comments.add,\n      deleteRequest: state.comments.delete,\n    }),\n    { addComment, deleteComment, listComments, listMoreComments },\n  ),\n)(Comments);\n","/**\n * Social sharing component.\n * @module components/theme/SocialSharing/SocialSharing\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Container } from 'semantic-ui-react';\nimport { FacebookShareButton, TwitterShareButton } from 'react-share';\n\n/**\n * Social sharing component class.\n * @function SocialSharing\n * @param {string} url Url to share.\n * @param {string} title Title of the content.\n * @param {string} description Description of the content.\n * @returns {string} Markup of the component.\n */\nconst SocialSharing = ({ url, title, description }) => (\n  <Container style={{ clear: 'both' }}>\n    <br />\n    <FacebookShareButton url={url} quote={title}>\n      <Button color=\"facebook\" size=\"mini\">\n        Facebook\n      </Button>\n    </FacebookShareButton>\n    <TwitterShareButton url={url} title={title} description={description}>\n      <Button color=\"twitter\" size=\"mini\">\n        Twitter\n      </Button>\n    </TwitterShareButton>\n    <br />\n    <br />\n  </Container>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nSocialSharing.propTypes = {\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nexport default SocialSharing;\n","/**\n * Register container.\n * @module components/theme/Register/Register\n */\n\nimport React, { Component } from 'react';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { Form, Toast } from '@plone/volto/components';\nimport { createUser } from '@plone/volto/actions';\n\nconst messages = defineMessages({\n  title: {\n    id: 'Registration form',\n    defaultMessage: 'Registration form',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  fullnameTitle: {\n    id: 'Full Name',\n    defaultMessage: 'Full Name',\n  },\n  fullnameDescription: {\n    id: 'Enter full name, e.g. John Smith.',\n    defaultMessage: 'Enter full name, e.g. John Smith.',\n  },\n  emailTitle: {\n    id: 'E-mail',\n    defaultMessage: 'E-mail',\n  },\n  emailDescription: {\n    id:\n      'Enter an email address. This will be your login name. We respect your privacy, and will not give the address away to any third parties or expose it anywhere.',\n    defaultMessage:\n      'Enter an email address. This will be your login name. We respect your privacy, and will not give the address away to any third parties or expose it anywhere.',\n  },\n  successRegisterCompletedTitle: {\n    id: 'Account Registration Completed',\n    defaultMessage: 'Account Registration Completed',\n  },\n  successRegisterCompletedBody: {\n    id:\n      'The registration process has been successful. Please check your e-mail inbox for information on how activate your account.',\n    defaultMessage:\n      'The registration process has been successful. Please check your e-mail inbox for information on how activate your account.',\n  },\n  register: {\n    id: 'Register',\n    defaultMessage: 'Register',\n  },\n});\n\n/**\n * Register class.\n * @class Register\n * @extends Component\n */\nclass Register extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    createUser: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    loaded: PropTypes.bool.isRequired,\n    error: PropTypes.shape({\n      message: PropTypes.string,\n    }),\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    error: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      error: null,\n    };\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.loading && nextProps.loaded) {\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(\n            messages.successRegisterCompletedTitle,\n          )}\n          content={this.props.intl.formatMessage(\n            messages.successRegisterCompletedBody,\n          )}\n        />,\n      );\n      this.props.history.push('/login');\n    }\n  }\n\n  /**\n   * On submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.createUser({\n      fullname: data.fullname,\n      email: data.email,\n      password: data.password,\n    });\n    this.setState({\n      error: null,\n    });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <div id=\"page-register\">\n        <Helmet title={this.props.intl.formatMessage(messages.register)} />\n        <Form\n          onSubmit={this.onSubmit}\n          title={this.props.intl.formatMessage(messages.title)}\n          error={this.state.error || this.props.error}\n          loading={this.props.loading}\n          submitLabel={this.props.intl.formatMessage(messages.register)}\n          schema={{\n            fieldsets: [\n              {\n                id: 'default',\n                title: this.props.intl.formatMessage(messages.default),\n                fields: ['fullname', 'email'],\n              },\n            ],\n            properties: {\n              fullname: {\n                type: 'string',\n                title: this.props.intl.formatMessage(messages.fullnameTitle),\n                description: this.props.intl.formatMessage(\n                  messages.fullnameDescription,\n                ),\n              },\n              email: {\n                type: 'string',\n                title: this.props.intl.formatMessage(messages.emailTitle),\n                description: this.props.intl.formatMessage(\n                  messages.emailDescription,\n                ),\n              },\n            },\n            required: ['fullname', 'email'],\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state) => ({\n      loading: state.users.create.loading,\n      loaded: state.users.create.loaded,\n      error: state.users.create.error,\n    }),\n    { createUser },\n  ),\n)(Register);\n","/**\n * PasswordReset component.\n * @module components/theme/PasswordReset/PasswordReset\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Container } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { Form } from '@plone/volto/components';\nimport { setInitialPassword } from '@plone/volto/actions';\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  title: {\n    id: 'Set your password',\n    defaultMessage: 'Set your password',\n  },\n  description: {\n    id: 'Please fill out the form below to set your password.',\n    defaultMessage: 'Please fill out the form below to set your password.',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  usernameTitle: {\n    id: 'My username is',\n    defaultMessage: 'My username is',\n  },\n  emailTitle: {\n    id: 'My email is',\n    defaultMessage: 'My email is',\n  },\n  usernameDescription: {\n    id: 'Enter your username for verification.',\n    defaultMessage: 'Enter your username for verification.',\n  },\n  emailDescription: {\n    id: 'Enter your email for verification.',\n    defaultMessage: 'Enter your email for verification.',\n  },\n  passwordTitle: {\n    id: 'New password',\n    defaultMessage: 'New password',\n  },\n  passwordDescription: {\n    id: 'Enter your new password. Minimum 5 characters.',\n    defaultMessage: 'Enter your new password. Minimum 5 characters.',\n  },\n  passwordRepeatTitle: {\n    id: 'Confirm password',\n    defaultMessage: 'Confirm password',\n  },\n  passwordsDoNotMatch: {\n    id: 'Passwords do not match.',\n    defaultMessage: 'Passwords do not match.',\n  },\n  mailDoNotMatch: {\n    id: 'E-mail addresses do not match.',\n    defaultMessage: 'E-mail addresses do not match.',\n  },\n  passwordRepeatDescription: {\n    id: 'Re-enter the password. Make sure the passwords are identical.',\n    defaultMessage:\n      'Re-enter the password. Make sure the passwords are identical.',\n  },\n  setMyPassword: {\n    id: 'Set my password',\n    defaultMessage: 'Set my password',\n  },\n  successRedirectToLoginTitle: {\n    id: 'Account activation completed',\n    defaultMessage: 'Account activation completed',\n  },\n  successRedirectToLoginBody: {\n    id:\n      'Your password has been set successfully. You may now {link} with your new password.',\n    defaultMessage:\n      'Your password has been set successfully. You may now {link} with your new password.',\n  },\n  passwordReset: {\n    id: 'Password reset',\n    defaultMessage: 'Password reset',\n  },\n});\n\n/**\n * PasswordReset class.\n * @class PasswordReset\n * @extends Component\n */\nclass PasswordReset extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    loading: PropTypes.bool.isRequired,\n    loaded: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    token: PropTypes.string.isRequired,\n    setInitialPassword: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    error: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Controlpanel\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      error: null,\n      isSuccessful: false,\n    };\n\n    this.identifierField = config.settings.useEmailAsLogin\n      ? 'email'\n      : 'username';\n\n    this.identifierTitle =\n      this.identifierField === 'email'\n        ? this.props.intl.formatMessage(messages.emailTitle)\n        : this.props.intl.formatMessage(messages.usernameTitle);\n\n    this.identifierDescription =\n      this.identifierField === 'email'\n        ? this.props.intl.formatMessage(messages.emailDescription)\n        : this.props.intl.formatMessage(messages.usernameDescription);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.loading && nextProps.loaded) {\n      this.setState({ isSuccessful: true });\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @param {object} event Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    if (data.password === data.passwordRepeat) {\n      this.props.setInitialPassword(\n        data[this.identifierField],\n        this.props.token,\n        data.password,\n      );\n      this.setState({\n        error: null,\n      });\n    } else {\n      this.setState({\n        error: {\n          message: this.props.intl.formatMessage(messages.passwordsDoNotMatch),\n        },\n      });\n    }\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.goBack();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.state.isSuccessful) {\n      return (\n        <Container>\n          <h1 className=\"documentFirstHeading\">\n            <FormattedMessage\n              id=\"Account activation completed\"\n              defaultMessage=\"Account activation completed\"\n            />\n          </h1>\n          <p className=\"description\">\n            <FormattedMessage\n              id=\"Your password has been set successfully. You may now {link} with your new password.\"\n              defaultMessage=\"Your password has been set successfully. You may now {link} with your new password.\"\n              values={{\n                link: (\n                  <Link to=\"/login\">\n                    {this.props.intl.formatMessage({ id: 'Log In' })}\n                  </Link>\n                ),\n              }}\n            />\n          </p>\n        </Container>\n      );\n    }\n    if (this.props.token) {\n      return (\n        <div id=\"page-password-reset\">\n          <Helmet\n            title={this.props.intl.formatMessage(messages.passwordReset)}\n          />\n          <Container>\n            <Form\n              title={this.props.intl.formatMessage(messages.title)}\n              description={this.props.intl.formatMessage(messages.description)}\n              onSubmit={this.onSubmit}\n              onCancel={this.onCancel}\n              error={this.state.error || this.props.error}\n              schema={{\n                fieldsets: [\n                  {\n                    id: 'default',\n                    title: this.props.intl.formatMessage(messages.default),\n                    fields: [\n                      this.identifierField,\n                      'password',\n                      'passwordRepeat',\n                    ],\n                  },\n                ],\n                properties: {\n                  [this.identifierField]: {\n                    type: 'string',\n                    title: this.identifierTitle,\n                    description: this.identifierDescription,\n                  },\n                  password: {\n                    description: this.props.intl.formatMessage(\n                      messages.passwordDescription,\n                    ),\n                    title: this.props.intl.formatMessage(\n                      messages.passwordTitle,\n                    ),\n                    type: 'string',\n                    widget: 'password',\n                  },\n                  passwordRepeat: {\n                    description: this.props.intl.formatMessage(\n                      messages.passwordRepeatDescription,\n                    ),\n                    title: this.props.intl.formatMessage(\n                      messages.passwordRepeatTitle,\n                    ),\n                    type: 'string',\n                    widget: 'password',\n                  },\n                },\n                submitLabel: this.props.intl.formatMessage(\n                  messages.setMyPassword,\n                ),\n                required: [this.identifierField, 'password', 'passwordRepeat'],\n              }}\n            />\n          </Container>\n        </div>\n      );\n    }\n    return <div />;\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      loading: state.users.initial.loading,\n      loaded: state.users.initial.loaded,\n      error: state.users.initial.error,\n      token: props.match.params.token,\n    }),\n    { setInitialPassword },\n  ),\n)(PasswordReset);\n","/**\n * RequestPasswordReset component.\n * @module components/theme/RequestPasswordReset/RequestPasswordReset\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Container } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { Form } from '@plone/volto/components';\nimport { resetPassword } from '@plone/volto/actions';\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  title: {\n    id: 'box_forgot_password_option',\n    defaultMessage: 'Forgot your password?',\n  },\n  description: {\n    id: 'description_lost_password',\n    defaultMessage:\n      'For security reasons, we store your password encrypted, and cannot mail it to you. If you would like to reset your password, fill out the form below and we will send you an email at the address you gave when you registered to start the process of resetting your password.',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  usernameTitle: {\n    id: 'label_my_username_is',\n    defaultMessage: 'My username is',\n  },\n  emailTitle: {\n    id: 'label_my_email_is',\n    defaultMessage: 'My email is',\n  },\n  sendEmail: {\n    id: 'Start password reset',\n    defaultMessage: 'Start password reset',\n  },\n  usernameRequired: {\n    id: 'Your usernaame is required for reset your password.',\n    defaultMessage: 'Your username is required for reset your password.',\n  },\n  emailRequired: {\n    id: 'Your email is required for reset your password.',\n    defaultMessage: 'Your email is required for reset your password.',\n  },\n  passwordReset: {\n    id: 'Password reset',\n    defaultMessage: 'Password reset',\n  },\n});\n\n/**\n * RequestPasswordReset class.\n * @class RequestPasswordReset\n * @extends Component\n */\nclass RequestPasswordReset extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    loading: PropTypes.bool.isRequired,\n    loaded: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    resetPassword: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    error: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Controlpanel\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.identifierField = config.settings.useEmailAsLogin\n      ? 'email'\n      : 'username';\n\n    if (this.identifierField === 'email') {\n      this.identifierTitle = this.props.intl.formatMessage(messages.emailTitle);\n      this.identifierRequiredMessage = this.props.intl.formatMessage(\n        messages.emailRequired,\n      );\n    } else {\n      this.identifierTitle = this.props.intl.formatMessage(\n        messages.usernameTitle,\n      );\n      this.identifierRequiredMessage = this.props.intl.formatMessage(\n        messages.usernameRequired,\n      );\n    }\n\n    this.state = {\n      error: null,\n      isSuccessful: false,\n    };\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.loading && nextProps.loaded) {\n      this.setState({ isSuccessful: true });\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @param {object} event Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    if (data[this.identifierField]) {\n      this.props.resetPassword(data[this.identifierField]);\n      this.setState({\n        error: null,\n      });\n    } else {\n      this.setState({\n        error: {\n          message: this.identifierRequiredMessage,\n        },\n      });\n    }\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.goBack();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.state.isSuccessful) {\n      return (\n        <Container>\n          <h1 className=\"documentFirstHeading\">\n            <FormattedMessage\n              id=\"heading_sent_password\"\n              defaultMessage=\"Password reset confirmation sent\"\n            />\n          </h1>\n          <p className=\"description\">\n            <FormattedMessage\n              id=\"description_sent_password\"\n              defaultMessage=\"Your password reset request has been mailed. It should arrive in your mailbox shortly. When you receive the message, visit the address it contains to reset your password.\"\n            />\n          </p>\n        </Container>\n      );\n    }\n\n    return (\n      <div id=\"page-password-reset\">\n        <Helmet title={this.props.intl.formatMessage(messages.passwordReset)} />\n        <Container>\n          <Form\n            title={this.props.intl.formatMessage(messages.title)}\n            description={this.props.intl.formatMessage(messages.description)}\n            onSubmit={this.onSubmit}\n            onCancel={this.onCancel}\n            error={this.state.error || this.props.error}\n            schema={{\n              fieldsets: [\n                {\n                  id: 'default',\n                  title: this.props.intl.formatMessage(messages.default),\n                  fields: [this.identifierField],\n                },\n              ],\n              properties: {\n                [this.identifierField]: {\n                  type: 'string',\n                  title: this.identifierTitle,\n                },\n              },\n              submitLabel: this.props.intl.formatMessage(messages.sendEmail),\n              required: [this.identifierField],\n            }}\n          />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state) => ({\n      loading: state.users.reset.loading,\n      loaded: state.users.reset.loaded,\n      error: state.users.reset.error,\n    }),\n    { resetPassword },\n  ),\n)(RequestPasswordReset);\n","/**\n * Change password component.\n * @module components/manage/Preferences/ChangePassword\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Container } from 'semantic-ui-react';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\n\nimport { Form, Icon, Toast, Toolbar } from '@plone/volto/components';\nimport { updatePassword } from '@plone/volto/actions';\nimport { getBaseUrl } from '@plone/volto/helpers';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  changePassword: {\n    id: 'Change Password',\n    defaultMessage: 'Change Password',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  oldPasswordTitle: {\n    id: 'Current password',\n    defaultMessage: 'Current password',\n  },\n  oldPasswordDescription: {\n    id: 'Enter your current password.',\n    defaultMessage: 'Enter your current password.',\n  },\n  newPasswordTitle: {\n    id: 'New password',\n    defaultMessage: 'New password',\n  },\n  newPasswordDescription: {\n    id: 'Enter your new password. Minimum 5 characters.',\n    defaultMessage: 'Enter your new password. Minimum 5 characters.',\n  },\n  newPasswordRepeatTitle: {\n    id: 'Confirm password',\n    defaultMessage: 'Confirm password',\n  },\n  newPasswordRepeatDescription: {\n    id: 'Re-enter the password. Make sure the passwords are identical.',\n    defaultMessage:\n      'Re-enter the password. Make sure the passwords are identical.',\n  },\n  saved: {\n    id: 'Changes saved',\n    defaultMessage: 'Changes saved',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n});\n\n/**\n * ChangePassword class.\n * @class ChangePassword\n * @extends Component\n */\nclass ChangePassword extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    userId: PropTypes.string.isRequired,\n    loading: PropTypes.bool.isRequired,\n    updatePassword: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ChangePassword\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    if (data.newPassword === data.newPasswordRepeat) {\n      this.props.updatePassword(\n        this.props.userId,\n        data.oldPassword,\n        data.newPassword,\n      );\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.saved)}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.goBack();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Container id=\"page-change-password\">\n        <Helmet\n          title={this.props.intl.formatMessage(messages.changePassword)}\n        />\n        <Form\n          schema={{\n            fieldsets: [\n              {\n                id: 'default',\n                title: this.props.intl.formatMessage(messages.default),\n                fields: ['oldPassword', 'newPassword', 'newPasswordRepeat'],\n              },\n            ],\n            properties: {\n              oldPassword: {\n                description: this.props.intl.formatMessage(\n                  messages.oldPasswordDescription,\n                ),\n                title: this.props.intl.formatMessage(messages.oldPasswordTitle),\n                type: 'string',\n                widget: 'password',\n              },\n              newPassword: {\n                description: this.props.intl.formatMessage(\n                  messages.newPasswordDescription,\n                ),\n                title: this.props.intl.formatMessage(messages.newPasswordTitle),\n                type: 'string',\n                widget: 'password',\n              },\n              newPasswordRepeat: {\n                description: this.props.intl.formatMessage(\n                  messages.newPasswordRepeatDescription,\n                ),\n                title: this.props.intl.formatMessage(\n                  messages.newPasswordRepeatTitle,\n                ),\n                type: 'string',\n                widget: 'password',\n              },\n            },\n            required: ['oldPassword', 'newPassword', 'newPasswordRepeat'],\n          }}\n          onSubmit={this.onSubmit}\n          onCancel={this.onCancel}\n          loading={this.props.loading}\n        />\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link\n                  to={`${getBaseUrl(this.props.pathname)}`}\n                  className=\"item\"\n                >\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      userId: state.userSession.token\n        ? jwtDecode(state.userSession.token).sub\n        : '',\n      loading: state.users.update_password.loading,\n      pathname: props.location.pathname,\n    }),\n    { updatePassword },\n  ),\n)(ChangePassword);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  changeLanguage,\n  getTranslationLocator,\n  getContent,\n} from '@plone/volto/actions';\nimport { flattenToAppURL, normalizeLanguageName } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nconst CreateTranslation = (props) => {\n  const dispatch = useDispatch();\n  const { language, translationOf } = props.location.state;\n  const [translationLocation, setTranslationLocation] = React.useState(null);\n  const [translationObject, setTranslationObject] = React.useState(null);\n  const languageFrom = useSelector((state) => state.intl.locale);\n\n  React.useEffect(() => {\n    // Only on mount, we dispatch the locator query\n    dispatch(getTranslationLocator(translationOf, language)).then((resp) => {\n      setTranslationLocation(resp['@id']);\n    });\n\n    //and we load the translationObject\n    dispatch(getContent(translationOf, null, 'translationObject')).then(\n      (resp) => {\n        setTranslationObject(resp);\n      },\n    );\n\n    // On unmount we dispatch the language change\n    return () => {\n      // We change the interface language\n      if (config.settings.supportedLanguages.includes(language)) {\n        const langFileName = normalizeLanguageName(language);\n        import('@root/../locales/' + langFileName + '.json').then((locale) => {\n          dispatch(changeLanguage(language, locale.default));\n        });\n      }\n    };\n    // On mount only\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, []);\n\n  return (\n    translationLocation &&\n    translationObject && (\n      <Redirect\n        to={{\n          pathname: `${flattenToAppURL(translationLocation)}/add`,\n          search: `?type=${props.location.state.type}`,\n          state: {\n            translationOf: props.location.state.translationOf,\n            language: props.location.state.language,\n            translationObject: translationObject,\n            languageFrom,\n          },\n        }}\n      />\n    )\n  );\n};\n\nexport default CreateTranslation;\n","/**\n * Add container.\n * @module components/manage/Add/Add\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { map } from 'lodash';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Form as UiForm, Menu, Segment } from 'semantic-ui-react';\nimport { Provider } from 'react-intl-redux';\nimport { Form, Field } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\nimport configureStore from '@plone/volto/store';\nimport {\n  Api,\n  flattenToAppURL,\n  langmap,\n  normalizeLanguageName,\n} from '@plone/volto/helpers';\nimport { createBrowserHistory } from 'history';\nconst messages = defineMessages({\n  document: {\n    id: 'Document',\n    defaultMessage: 'Document',\n  },\n});\n\n/**\n * TranslationObject class.\n * @class TranslationObject\n * @extends Component\n */\nconst TranslationObject = ({\n  translationObject,\n  schema,\n  pathname,\n  visual,\n  isFormSelected,\n  onSelectForm,\n}) => {\n  const intl = useIntl();\n\n  const [locales, setLocales] = useState({});\n  const [loadingLocale, setLoadingLocale] = useState(false);\n  const [activeMenu, setActiveMenu] = useState('language');\n  const handleMenuClick = (e, { name }) => {\n    setActiveMenu(name);\n  };\n\n  useEffect(() => {\n    if (\n      !loadingLocale &&\n      Object.keys(locales).length < config.settings.supportedLanguages.length\n    ) {\n      setLoadingLocale(true);\n      let lang =\n        config.settings.supportedLanguages[Object.keys(locales).length];\n      const langFileName = normalizeLanguageName(lang);\n      import('@root/../locales/' + langFileName + '.json').then((locale) => {\n        setLocales({ ...locales, [lang]: locale.default });\n        setLoadingLocale(false);\n      });\n    }\n  }, [loadingLocale, locales]);\n\n  const api = new Api();\n  const history = createBrowserHistory();\n  const store = configureStore(\n    {\n      ...window.__data,\n      intl: {\n        defaultLocale: config.settings.defaultLanguage,\n        locale: translationObject.language.token,\n        messages: locales[translationObject.language.token],\n      },\n    },\n    history,\n    api,\n  );\n\n  const lang = translationObject.language.token;\n\n  return translationObject && Object.keys(locales).length > 0 ? (\n    <Provider store={store}>\n      <>\n        <Menu pointing secondary attached tabular>\n          <Menu.Item\n            name=\"language\"\n            active={activeMenu === 'language'}\n            onClick={handleMenuClick}\n          >\n            {langmap[lang].nativeName}\n          </Menu.Item>\n          {visual && (\n            <Menu.Item\n              name=\"properties\"\n              active={activeMenu === 'properties'}\n              onClick={handleMenuClick}\n            >\n              {intl.formatMessage(messages.document)}\n            </Menu.Item>\n          )}\n        </Menu>\n        {activeMenu === 'language' && (\n          <Form\n            key=\"translation-object-form\"\n            schema={schema}\n            formData={translationObject}\n            type={translationObject['@type']}\n            onSubmit={() => {\n              /*do nothing*/\n            }}\n            hideActions\n            pathname={flattenToAppURL(translationObject['@id'])}\n            visual={visual}\n            title={langmap[lang].nativeName}\n            loading={false}\n            isFormSelected={isFormSelected}\n            onSelectForm={onSelectForm}\n            editable={false}\n            onChange={() => {}}\n          />\n        )}\n        {activeMenu === 'properties' && (\n          <UiForm method=\"post\" onSubmit={() => {}}>\n            <fieldset className=\"invisible\" disabled={true}>\n              {schema &&\n                map(schema.fieldsets, (item) => [\n                  <Segment secondary attached key={item.title}>\n                    {item.title}\n                  </Segment>,\n                  <Segment attached key={`fieldset-contents-${item.title}`}>\n                    {map(item.fields, (field, index) => (\n                      <Field\n                        {...schema.properties[field]}\n                        id={field}\n                        formData={translationObject}\n                        focus={false}\n                        value={translationObject[field]}\n                        required={schema.required.indexOf(field) !== -1}\n                        key={field}\n                        onChange={() => {}}\n                      />\n                    ))}\n                  </Segment>,\n                ])}\n            </fieldset>\n          </UiForm>\n        )}\n      </>\n    </Provider>\n  ) : null;\n};\n\nexport default TranslationObject;\n","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport { CALL_HISTORY_METHOD } from './actions';\n/**\n * This middleware captures CALL_HISTORY_METHOD actions to redirect to the\n * provided history object. This will prevent these actions from reaching your\n * reducer or any middleware that comes after this one.\n */\n\nvar routerMiddleware = function routerMiddleware(history) {\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        // eslint-disable-line no-unused-vars\n        if (action.type !== CALL_HISTORY_METHOD) {\n          return next(action);\n        }\n\n        var _action$payload = action.payload,\n            method = _action$payload.method,\n            args = _action$payload.args;\n        history[method].apply(history, _toConsumableArray(args));\n      };\n    };\n  };\n};\n\nexport default routerMiddleware;","import React, { useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\nimport { langmap, useDetectClickOutside } from '@plone/volto/helpers';\n\nimport { Icon } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport translateSVG from '@plone/volto/icons/translate.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  compare_to: {\n    id: 'compare_to',\n    defaultMessage: 'Compare to language',\n  },\n  stop_compare: {\n    id: 'Stop compare',\n    defaultMessage: 'Stop compare',\n  },\n});\n\nconst CompareLanguagesMenu = ({\n  theToolbar,\n  translations,\n  comparingLanguage,\n  setComparingLanguage,\n  closeMenu,\n}) => {\n  const intl = useIntl();\n\n  const ClickOutsideListener = () => {\n    closeMenu();\n  };\n\n  const ref = useDetectClickOutside({\n    onTriggered: ClickOutsideListener,\n    triggerKeys: ['Escape'],\n  });\n\n  return (\n    <div\n      className=\"toolbar-content show compare-languages\"\n      ref={ref}\n      style={{\n        flex: theToolbar.current\n          ? `0 0 ${theToolbar.current.getBoundingClientRect().width}px`\n          : null,\n      }}\n    >\n      <div className=\"pastanaga-menu\">\n        <header>{intl.formatMessage(messages.compare_to)}</header>\n        <div className=\"pastanaga-menu-list\">\n          <ul>\n            {translations.map((t) => (\n              <li key={t['@id']}>\n                {comparingLanguage === t.language ? (\n                  <button\n                    aria-label={`${intl.formatMessage(messages.stop_compare)} ${\n                      langmap[t.language].nativeName\n                    }`}\n                    title={`${intl.formatMessage(messages.stop_compare)} ${\n                      langmap[t.language].nativeName\n                    }`}\n                    onClick={() => {\n                      setComparingLanguage(null);\n                      closeMenu();\n                    }}\n                  >\n                    {langmap[t.language].nativeName}\n                    <Icon name={clearSVG} size=\"30px\" />\n                  </button>\n                ) : (\n                  <button\n                    aria-label={`${intl.formatMessage(\n                      messages.compare_to,\n                    )} ${langmap[t.language].nativeName.toLowerCase()}`}\n                    title={`${intl.formatMessage(\n                      messages.compare_to,\n                    )} ${langmap[t.language].nativeName.toLowerCase()}`}\n                    onClick={() => {\n                      setComparingLanguage(t.language);\n                      closeMenu();\n                    }}\n                  >\n                    {langmap[t.language].nativeName}\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst CompareLanguages = React.forwardRef((props, ref) => {\n  const {\n    content,\n    comparingLanguage,\n    setComparingLanguage,\n    pathname,\n    toolbarRef,\n  } = props;\n\n  const intl = useIntl();\n  const [viewMenu, setViewMenu] = useState(false);\n  const translations = config.settings.isMultilingual\n    ? content?.['@components']?.translations?.items || []\n    : [];\n\n  const translationsObject = {};\n  translations.forEach((t) => {\n    translationsObject[t.language] = t['@id'];\n  });\n\n  if (config.settings.isMultilingual && translations.length > 0) {\n    return (\n      <div className=\"toolbar-compare-translations-wrapper\">\n        <div className=\"toolbar-button-spacer\" />\n\n        <Button\n          aria-label={intl.formatMessage(messages.compare_to)}\n          title={intl.formatMessage(messages.compare_to)}\n          onClick={() => {\n            setViewMenu(!viewMenu);\n          }}\n          id=\"toolbar-compare-translations\"\n          className=\"toolbar-button-compare-translations\"\n        >\n          <Icon className=\"mobile hidden\" name={translateSVG} size=\"30px\" />\n          {viewMenu ? (\n            <Icon className=\"mobile only\" name={clearSVG} size=\"30px\" />\n          ) : (\n            <Icon className=\"mobile only\" name={translateSVG} size=\"30px\" />\n          )}\n        </Button>\n\n        {viewMenu && (\n          <CompareLanguagesMenu\n            pathname={pathname}\n            theToolbar={toolbarRef}\n            key={`compareLanguagesComponent`}\n            closeMenu={() => setViewMenu(false)}\n            translations={translations}\n            setComparingLanguage={(value) => {\n              setComparingLanguage(value, translationsObject[value]);\n            }}\n            comparingLanguage={comparingLanguage}\n          />\n        )}\n      </div>\n    );\n  } else {\n    return null;\n  }\n});\n\nexport default CompareLanguages;\n","/**\n * Actions component.\n * @module components/manage/Actions/Actions\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Dropdown, Icon } from 'semantic-ui-react';\nimport { toast } from 'react-toastify';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { cut, copy, copyContent, moveContent } from '@plone/volto/actions';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport { ContentsRenameModal, Toast } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  cut: {\n    id: 'Cut',\n    defaultMessage: 'Cut',\n  },\n  copy: {\n    id: 'Copy',\n    defaultMessage: 'Copy',\n  },\n  paste: {\n    id: 'Paste',\n    defaultMessage: 'Paste',\n  },\n  rename: {\n    id: 'Rename',\n    defaultMessage: 'Rename',\n  },\n  messageCopied: {\n    id: '{title} copied.',\n    defaultMessage: '{title} copied.',\n  },\n  messageCut: {\n    id: '{title} cut.',\n    defaultMessage: '{title} cut.',\n  },\n  messageDeleted: {\n    id: '{title} has been deleted.',\n    defaultMessage: '{title} has been deleted.',\n  },\n  messagePasted: {\n    id: 'Item(s) pasted.',\n    defaultMessage: 'Item(s) pasted.',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n});\n\n/**\n * Actions container class.\n * @class Actions\n * @extends Component\n */\nclass Actions extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    actions: PropTypes.shape({\n      object: PropTypes.arrayOf(PropTypes.object),\n      object_buttons: PropTypes.arrayOf(PropTypes.object),\n      user: PropTypes.arrayOf(PropTypes.object),\n    }),\n    pathname: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    action: PropTypes.string,\n    source: PropTypes.arrayOf(PropTypes.string),\n    cut: PropTypes.func.isRequired,\n    copy: PropTypes.func.isRequired,\n    copyContent: PropTypes.func.isRequired,\n    moveContent: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    action: null,\n    actions: null,\n    source: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Actions\n   */\n  constructor(props) {\n    super(props);\n    this.cut = this.cut.bind(this);\n    this.copy = this.copy.bind(this);\n    this.paste = this.paste.bind(this);\n    this.rename = this.rename.bind(this);\n    this.onRenameOk = this.onRenameOk.bind(this);\n    this.onRenameCancel = this.onRenameCancel.bind(this);\n    this.state = {\n      showRename: false,\n    };\n  }\n\n  /**\n   * On rename ok\n   * @method onRenameOk\n   * @returns {undefined}\n   */\n  onRenameOk() {\n    this.setState({\n      showRename: false,\n    });\n  }\n\n  /**\n   * On rename cancel\n   * @method onRenameCancel\n   * @returns {undefined}\n   */\n  onRenameCancel() {\n    this.setState({\n      showRename: false,\n    });\n  }\n\n  /**\n   * Cut handler\n   * @method cut\n   * @returns {undefined}\n   */\n  cut() {\n    this.props.cut([getBaseUrl(this.props.pathname)]);\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.messageCut, {\n          title: this.props.title,\n        })}\n      />,\n    );\n  }\n\n  /**\n   * Copy handler\n   * @method copy\n   * @returns {undefined}\n   */\n  copy() {\n    this.props.copy([getBaseUrl(this.props.pathname)]);\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.messageCopied, {\n          title: this.props.title,\n        })}\n      />,\n    );\n  }\n\n  /**\n   * Paste handler\n   * @method paste\n   * @returns {undefined}\n   */\n  paste() {\n    if (this.props.action === 'copy') {\n      this.props.copyContent(\n        this.props.source,\n        getBaseUrl(this.props.pathname),\n      );\n    }\n    if (this.props.action === 'cut') {\n      this.props.moveContent(\n        this.props.source,\n        getBaseUrl(this.props.pathname),\n      );\n    }\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.messagePasted)}\n      />,\n    );\n  }\n\n  /**\n   * Rename handler\n   * @method rename\n   * @returns {undefined}\n   */\n  rename() {\n    this.setState({\n      showRename: true,\n    });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Dropdown\n        item\n        id=\"toolbar-actions\"\n        trigger={\n          <span>\n            <Icon name=\"lightning\" size=\"big\" />{' '}\n            <FormattedMessage id=\"Actions\" defaultMessage=\"Actions\" />\n          </span>\n        }\n      >\n        <Dropdown.Menu>\n          {this.props.actions.object_buttons &&\n            this.props.actions.object_buttons.map((item) => {\n              switch (item.id) {\n                case 'cut':\n                  return (\n                    <Dropdown.Item\n                      key={item.id}\n                      icon=\"cut\"\n                      text={item.title}\n                      onClick={this.cut}\n                    />\n                  );\n                case 'copy':\n                  return (\n                    <Dropdown.Item\n                      key={item.id}\n                      icon=\"copy\"\n                      text={item.title}\n                      onClick={this.copy}\n                    />\n                  );\n                case 'paste':\n                  return (\n                    <Dropdown.Item\n                      key={item.id}\n                      icon=\"paste\"\n                      text={item.title}\n                      onClick={this.paste}\n                      disabled={this.props.action === null}\n                    />\n                  );\n                case 'delete':\n                  return (\n                    <Link\n                      key={item.id}\n                      to={`${this.props.pathname}/delete`}\n                      className=\"item\"\n                    >\n                      <Icon name=\"trash\" />\n                      {item.title}\n                    </Link>\n                  );\n                case 'rename':\n                  return (\n                    <Dropdown.Item\n                      key={item.id}\n                      icon=\"text cursor\"\n                      text={item.title}\n                      onClick={this.rename}\n                    />\n                  );\n                default:\n                  return null;\n              }\n            })}\n\n          <ContentsRenameModal\n            open={this.state.showRename}\n            onCancel={this.onRenameCancel}\n            onOk={this.onRenameOk}\n            items={[\n              {\n                url: this.props.pathname,\n                title: this.props.title,\n                id: this.props.id,\n              },\n            ]}\n          />\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      actions: state.actions.actions,\n      action: state.clipboard.action,\n      source: state.clipboard.source,\n      id: state.content.data ? state.content.data.id : '',\n      title: state.content.data ? state.content.data.title : '',\n    }),\n    {\n      cut,\n      copy,\n      copyContent,\n      moveContent,\n    },\n  ),\n)(Actions);\n","/**\n * Add container.\n * @module components/manage/Add/Add\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BodyClass, Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { keys, isEmpty } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Button, Grid, Menu } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport { v4 as uuid } from 'uuid';\nimport qs from 'query-string';\nimport { toast } from 'react-toastify';\n\nimport { createContent, getSchema, changeLanguage } from '@plone/volto/actions';\nimport {\n  Form,\n  Icon,\n  Toolbar,\n  Sidebar,\n  Toast,\n  TranslationObject,\n} from '@plone/volto/components';\nimport {\n  getBaseUrl,\n  hasBlocksData,\n  flattenToAppURL,\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  getLanguageIndependentFields,\n  langmap,\n  normalizeLanguageName,\n} from '@plone/volto/helpers';\n\nimport { preloadLazyLibs } from '@plone/volto/helpers/Loadable';\n\nimport config from '@plone/volto/registry';\n\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  add: {\n    id: 'Add {type}',\n    defaultMessage: 'Add {type}',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  translateTo: {\n    id: 'Translate to {lang}',\n    defaultMessage: 'Translate to {lang}',\n  },\n});\n\n/**\n * Add class.\n * @class Add\n * @extends Component\n */\nclass Add extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    createContent: PropTypes.func.isRequired,\n    getSchema: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    schema: PropTypes.objectOf(PropTypes.any),\n    content: PropTypes.shape({\n      // eslint-disable-line react/no-unused-prop-types\n      '@id': PropTypes.string,\n      '@type': PropTypes.string,\n    }),\n    returnUrl: PropTypes.string,\n    createRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    schemaRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    type: PropTypes.string,\n    location: PropTypes.objectOf(PropTypes.any),\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    schema: null,\n    content: null,\n    returnUrl: null,\n    type: 'Default',\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    if (config.blocks?.initialBlocks[props.type]) {\n      this.initialBlocksLayout = config.blocks.initialBlocks[\n        props.type\n      ].map((item) => uuid());\n      this.initialBlocks = this.initialBlocksLayout.reduce(\n        (acc, value, index) => ({\n          ...acc,\n          [value]: { '@type': config.blocks.initialBlocks[props.type][index] },\n        }),\n        {},\n      );\n    }\n    this.state = {\n      isClient: false,\n      error: null,\n      formSelected: 'addForm',\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSchema(this.props.type, getBaseUrl(this.props.pathname));\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.createRequest.loading &&\n      nextProps.createRequest.loaded &&\n      nextProps.content['@type'] === this.props.type\n    ) {\n      this.props.history.push(\n        this.props.returnUrl || flattenToAppURL(nextProps.content['@id']),\n      );\n    }\n\n    if (this.props.createRequest.loading && nextProps.createRequest.error) {\n      const message =\n        nextProps.createRequest.error.response?.body?.message ||\n        nextProps.createRequest.error.response?.text;\n\n      const error =\n        new DOMParser().parseFromString(message, 'text/html')?.all[0]\n          ?.textContent || message;\n\n      this.setState({ error: error });\n\n      toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.error)}\n          content={`${nextProps.createRequest.error.status}:  ${error}`}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.createContent(getBaseUrl(this.props.pathname), {\n      ...data,\n      '@static_behaviors': this.props.schema.definitions\n        ? keys(this.props.schema.definitions)\n        : null,\n      '@type': this.props.type,\n      ...(config.settings.isMultilingual &&\n        this.props.location?.state?.translationOf && {\n          translation_of: this.props.location.state.translationOf,\n          language: this.props.location.state.language,\n        }),\n    });\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    if (this.props.location?.state?.translationOf) {\n      const language = this.props.location.state.languageFrom;\n      const langFileName = normalizeLanguageName(language);\n      import('@root/../locales/' + langFileName + '.json').then((locale) => {\n        this.props.changeLanguage(language, locale.default);\n      });\n      this.props.history.push(this.props.location?.state?.translationOf);\n    } else {\n      this.props.history.push(getBaseUrl(this.props.pathname));\n    }\n  }\n\n  form = React.createRef();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.props.schemaRequest.loaded) {\n      const visual = hasBlocksData(this.props.schema.properties);\n      const blocksFieldname = getBlocksFieldname(this.props.schema.properties);\n      const blocksLayoutFieldname = getBlocksLayoutFieldname(\n        this.props.schema.properties,\n      );\n      const translationObject = this.props.location?.state?.translationObject;\n\n      const translateTo = translationObject\n        ? langmap?.[this.props.location?.state?.language]?.nativeName\n        : null;\n\n      // Lookup initialBlocks and initialBlocksLayout within schema\n      const schemaBlocks = this.props.schema.properties[blocksFieldname]\n        ?.default;\n      const schemaBlocksLayout = this.props.schema.properties[\n        blocksLayoutFieldname\n      ]?.default?.items;\n      let initialBlocks = this.initialBlocks;\n      let initialBlocksLayout = this.initialBlocksLayout;\n\n      if (!isEmpty(schemaBlocksLayout) && !isEmpty(schemaBlocks)) {\n        initialBlocks = {};\n        initialBlocksLayout = [];\n        schemaBlocksLayout.forEach((value) => {\n          if (!isEmpty(schemaBlocks[value])) {\n            let newUid = uuid();\n            initialBlocksLayout.push(newUid);\n            initialBlocks[newUid] = schemaBlocks[value];\n            initialBlocks[newUid].block = newUid;\n\n            // Layout ID - keep a reference to the original block id within layout\n            initialBlocks[newUid]['@layout'] = value;\n          }\n        });\n      }\n      //copy blocks from translationObject\n      if (translationObject && blocksFieldname && blocksLayoutFieldname) {\n        initialBlocks = {};\n        initialBlocksLayout = [];\n        const originalBlocks = JSON.parse(\n          JSON.stringify(translationObject[blocksFieldname]),\n        );\n        const originalBlocksLayout =\n          translationObject[blocksLayoutFieldname].items;\n\n        originalBlocksLayout.forEach((value) => {\n          if (!isEmpty(originalBlocks[value])) {\n            let newUid = uuid();\n            initialBlocksLayout.push(newUid);\n            initialBlocks[newUid] = originalBlocks[value];\n            initialBlocks[newUid].block = newUid;\n\n            // Layout ID - keep a reference to the original block id within layout\n            initialBlocks[newUid]['@canonical'] = value;\n          }\n        });\n      }\n\n      const lifData = () => {\n        const data = {};\n        if (translationObject) {\n          getLanguageIndependentFields(this.props.schema).forEach(\n            (lif) => (data[lif] = translationObject[lif]),\n          );\n        }\n        return data;\n      };\n\n      const pageAdd = (\n        <div id=\"page-add\">\n          <Helmet\n            title={this.props.intl.formatMessage(messages.add, {\n              type: this.props.type,\n            })}\n          />\n          <Form\n            ref={this.form}\n            key=\"translated-or-new-content-form\"\n            schema={this.props.schema}\n            type={this.props.type}\n            formData={{\n              ...(blocksFieldname && {\n                [blocksFieldname]:\n                  initialBlocks ||\n                  this.props.schema.properties[blocksFieldname]?.default,\n              }),\n              ...(blocksLayoutFieldname && {\n                [blocksLayoutFieldname]: {\n                  items:\n                    initialBlocksLayout ||\n                    this.props.schema.properties[blocksLayoutFieldname]?.default\n                      ?.items,\n                },\n              }),\n              // Copy the Language Independent Fields values from the to-be translated content\n              // into the default values of the translated content Add form.\n              ...lifData(),\n            }}\n            requestError={this.state.error}\n            onSubmit={this.onSubmit}\n            hideActions\n            pathname={this.props.pathname}\n            visual={visual}\n            title={\n              this.props?.schema?.title\n                ? this.props.intl.formatMessage(messages.add, {\n                    type: this.props.schema.title,\n                  })\n                : null\n            }\n            loading={this.props.createRequest.loading}\n            isFormSelected={this.state.formSelected === 'addForm'}\n            onSelectForm={() => {\n              this.setState({ formSelected: 'addForm' });\n            }}\n          />\n          {this.state.isClient && (\n            <Portal node={document.getElementById('toolbar')}>\n              <Toolbar\n                pathname={this.props.pathname}\n                hideDefaultViewButtons\n                inner={\n                  <>\n                    <Button\n                      id=\"toolbar-save\"\n                      className=\"save\"\n                      aria-label={this.props.intl.formatMessage(messages.save)}\n                      onClick={() => this.form.current.onSubmit()}\n                      loading={this.props.createRequest.loading}\n                    >\n                      <Icon\n                        name={saveSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.save)}\n                      />\n                    </Button>\n                    <Button className=\"cancel\" onClick={() => this.onCancel()}>\n                      <Icon\n                        name={clearSVG}\n                        className=\"circled\"\n                        aria-label={this.props.intl.formatMessage(\n                          messages.cancel,\n                        )}\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.cancel)}\n                      />\n                    </Button>\n                  </>\n                }\n              />\n            </Portal>\n          )}\n          {visual && this.state.isClient && (\n            <Portal node={document.getElementById('sidebar')}>\n              <Sidebar />\n            </Portal>\n          )}\n        </div>\n      );\n\n      return translationObject ? (\n        <>\n          <BodyClass className=\"babel-view\" />\n          <Grid\n            celled=\"internally\"\n            stackable\n            columns={2}\n            id=\"page-add-translation\"\n          >\n            <Grid.Column className=\"source-object\">\n              <TranslationObject\n                translationObject={translationObject}\n                schema={this.props.schema}\n                pathname={this.props.pathname}\n                visual={visual}\n                isFormSelected={\n                  this.state.formSelected === 'translationObjectForm'\n                }\n                onSelectForm={() => {\n                  this.setState({\n                    formSelected: 'translationObjectForm',\n                  });\n                }}\n              />\n            </Grid.Column>\n            <Grid.Column>\n              <div className=\"new-translation\">\n                <Menu pointing secondary attached tabular>\n                  <Menu.Item name={translateTo.toUpperCase()} active={true}>\n                    {`${this.props.intl.formatMessage(messages.translateTo, {\n                      lang: translateTo,\n                    })}`}\n                  </Menu.Item>\n                </Menu>\n                {pageAdd}\n              </div>\n            </Grid.Column>\n          </Grid>\n        </>\n      ) : (\n        pageAdd\n      );\n    }\n    return <div />;\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      createRequest: state.content.create,\n      schemaRequest: state.schema,\n      content: state.content.data,\n      schema: state.schema.schema,\n      pathname: props.location.pathname,\n      returnUrl: qs.parse(props.location.search).return_url,\n      type: qs.parse(props.location.search).type,\n    }),\n    { createContent, getSchema, changeLanguage },\n  ),\n  preloadLazyLibs('cms'),\n)(Add);\n","/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/AddonsControlpanel\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport {\n  Accordion,\n  Button,\n  Container,\n  Divider,\n  Header,\n  Label,\n  Message,\n  Segment,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport {\n  installAddon,\n  listAddons,\n  uninstallAddon,\n  upgradeAddon,\n} from '@plone/volto/actions';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport circleBottomSVG from '@plone/volto/icons/circle-bottom.svg';\nimport circleTopSVG from '@plone/volto/icons/circle-top.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  activateAndDeactivate: {\n    id: 'Activate and deactivate',\n    defaultMessage: 'Activate and deactivate add-ons in the lists below.',\n  },\n  addAddons: {\n    id: 'Add Addons',\n    defaultMessage:\n      'To make new add-ons show up here, add them to your buildout configuration, run buildout, and restart the server process. For detailed instructions see',\n  },\n  addonsSettings: {\n    id: 'Add-ons Settings',\n    defaultMessage: 'Add-ons Settings',\n  },\n  available: {\n    id: 'Available',\n    defaultMessage: 'Available',\n  },\n  availableVersion: {\n    id: 'Latest version',\n    defaultMessage: 'Latest version',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  installed: {\n    id: 'Installed',\n    defaultMessage: 'Installed',\n  },\n  installedVersion: {\n    id: 'Installed version',\n    defaultMessage: 'Installed version',\n  },\n  noUninstallProfile: {\n    id: 'No uninstall profile',\n    defaultMessage: 'This addon does not provide an uninstall profile.',\n  },\n  update: {\n    id: 'Update',\n    defaultMessage: 'Update',\n  },\n  updatesAvailable: {\n    id: 'Updates available',\n    defaultMessage: 'Updates available',\n  },\n  updateInstalledAddons: {\n    id: 'Update installed addons:',\n    defaultMessage: 'Update installed addons:',\n  },\n  uninstall: {\n    id: 'Uninstall',\n    defaultMessage: 'Uninstall',\n  },\n});\n\n/**\n * AddonsControlpanel class.\n * @class AddonsControlpanel\n * @extends Component\n */\nclass AddonsControlpanel extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    listAddons: PropTypes.func.isRequired,\n    installAddon: PropTypes.func.isRequired,\n    uninstallAddon: PropTypes.func.isRequired,\n    installedAddons: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        id: PropTypes.string,\n        title: PropTypes.string,\n        version: PropTypes.string,\n        description: PropTypes.string,\n        uninstall_profile_id: PropTypes.string,\n        upgrade_info: PropTypes.shape({\n          available: PropTypes.boolean,\n        }),\n      }),\n    ).isRequired,\n    availableAddons: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        id: PropTypes.string,\n        title: PropTypes.string,\n        version: PropTypes.string,\n        description: PropTypes.string,\n        uninstall_profile_id: PropTypes.string,\n        upgrade_info: PropTypes.shape({\n          available: PropTypes.boolean,\n        }),\n      }),\n    ).isRequired,\n    upgradableAddons: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        id: PropTypes.string,\n        title: PropTypes.string,\n        version: PropTypes.string,\n        description: PropTypes.string,\n        uninstall_profile_id: PropTypes.string,\n        upgrade_info: PropTypes.shape({\n          available: PropTypes.boolean,\n        }),\n      }),\n    ).isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onAccordionClick = this.onAccordionClick.bind(this);\n    this.onInstall = this.onInstall.bind(this);\n    this.onUninstall = this.onUninstall.bind(this);\n    this.onUpgrade = this.onUpgrade.bind(this);\n    this.state = {\n      activeIndex: -1,\n      installedAddons: [],\n      availableAddons: [],\n      upgradableAddons: [],\n      isClient: false,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.listAddons();\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Install handler\n   * @method onInstall\n   * @param {Object} event Event object.\n   * @param {string} value Id of package to install.\n   * @returns {undefined}\n   */\n  onInstall(event, { value }) {\n    event.preventDefault();\n    this.props.installAddon(value).then(() => this.props.listAddons());\n  }\n\n  /**\n   * Uninstall handler\n   * @method onUninstall\n   * @param {Object} event Event object.\n   * @param {string} value Id of package to uninstall.\n   * @returns {undefined}\n   */\n  onUninstall(event, { value }) {\n    event.preventDefault();\n    this.props.uninstallAddon(value).then(() => this.props.listAddons());\n  }\n\n  /**\n   * Unpgrade handler\n   * @method onUpgrade\n   * @param {Object} event Event object.\n   * @param {string} value Id of package to update.\n   * @returns {undefined}\n   */\n  onUpgrade(event, { value }) {\n    event.preventDefault();\n    this.props.upgradeAddon(value).then(() => this.props.listAddons());\n  }\n\n  /**\n   * On accordion click handler\n   * @method onAccordionClick\n   * @param {object} event Event object.\n   * @param {object} index Index of the accordion element being clicked\n   * @returns {undefined}\n   */\n  onAccordionClick(event, item) {\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === item.index ? -1 : item.index;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Container id=\"page-addons\" className=\"controlpanel-addons\">\n        <Helmet title=\"Addons\" />\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage\n              id=\"Add-ons Settings\"\n              defaultMessage=\"Add-ons Settings\"\n            />\n          </Segment>\n          {this.props.upgradableAddons.length > 0 && (\n            <Message attached>\n              <Message.Header>\n                <FormattedMessage\n                  id=\"Updates available\"\n                  defaultMessage=\"Updates available\"\n                />\n              </Message.Header>\n              <FormattedMessage\n                id=\"Update installed addons\"\n                defaultMessage=\"Update installed addons\"\n              />\n            </Message>\n          )}\n\n          <Segment>\n            <Header as=\"h3\">\n              <FormattedMessage\n                id=\"Activate and deactivate\"\n                defaultMessage=\"Activate and deactivate add-ons in the lists below.\"\n              />\n            </Header>\n            <FormattedMessage\n              id=\"Add Addons\"\n              defaultMessage=\"To make new add-ons show up here, add them to your buildout configuration, run buildout, and restart the server process. For detailed instructions see\"\n            />\n            &nbsp;\n            <a\n              href=\"http://docs.plone.org/manage/installing/installing_addons.html\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Installing a third party add-on\n            </a>\n            .\n          </Segment>\n\n          <Segment key=\"header-installed\" secondary>\n            <FormattedMessage id=\"Installed\" defaultMessage=\"Installed\" />:\n            <Label circular>{this.props.installedAddons.length}</Label>\n          </Segment>\n\n          <Segment key=\"body-installed\" attached>\n            <Accordion>\n              <Divider />\n              {this.props.installedAddons.map((item) => (\n                <div key={item.id}>\n                  <Accordion.Title\n                    active={this.state.activeIndex === item.id}\n                    index={item.id}\n                    onClick={this.onAccordionClick}\n                    className={\n                      item.upgrade_info.available ? 'updateAvailable' : ''\n                    }\n                  >\n                    {item.title}\n                    {item.upgrade_info.available && (\n                      <span className=\"updateText\">\n                        <FormattedMessage id=\"Update\" defaultMessage=\"Update\" />\n                      </span>\n                    )}\n                    <Icon\n                      name={\n                        this.state.activeIndex === item.id\n                          ? circleTopSVG\n                          : circleBottomSVG\n                      }\n                      size=\"24px\"\n                      className={`accordionToggle ${item.title}`}\n                      color=\"#878f93\"\n                    />\n                  </Accordion.Title>\n                  <Accordion.Content\n                    active={this.state.activeIndex === item.id}\n                  >\n                    <div className=\"description\">{item.description}</div>\n                    <Button.Group floated=\"right\">\n                      {item.upgrade_info.available && (\n                        <Button\n                          primary\n                          basic\n                          onClick={this.onUpgrade}\n                          value={item.id}\n                        >\n                          <FormattedMessage\n                            id=\"Update\"\n                            defaultMessage=\"Update\"\n                          />\n                        </Button>\n                      )}\n                      {item.uninstall_profile_id && (\n                        <Button\n                          negative\n                          basic\n                          onClick={this.onUninstall}\n                          value={item.id}\n                          className=\"uninstallAction\"\n                        >\n                          <FormattedMessage\n                            id=\"Uninstall\"\n                            defaultMessage=\"Uninstall\"\n                            className=\"button-label\"\n                          />\n                        </Button>\n                      )}\n                    </Button.Group>\n                    <div className=\"version\">\n                      <FormattedMessage\n                        id=\"Installed version\"\n                        defaultMessage=\"Installed version\"\n                      />\n                      : &nbsp; {item.version}\n                    </div>\n                  </Accordion.Content>\n                  <Divider />\n                </div>\n              ))}\n            </Accordion>\n          </Segment>\n\n          <Segment key=\"header-available\" secondary>\n            <FormattedMessage id=\"Available\" defaultMessage=\"Available\" />:\n            <Label circular>{this.props.availableAddons.length}</Label>\n          </Segment>\n\n          <Segment key=\"body-available\" attached>\n            <Accordion>\n              <Divider />\n              {this.props.availableAddons.map((item) => (\n                <div key={item.id}>\n                  <Accordion.Title\n                    active={this.state.activeIndex === item.id}\n                    index={item.id}\n                    onClick={this.onAccordionClick}\n                  >\n                    {item.title}\n                    <Icon\n                      name={\n                        this.state.activeIndex === item.id\n                          ? circleTopSVG\n                          : circleBottomSVG\n                      }\n                      size=\"23px\"\n                      className={`accordionToggle ${item.title}`}\n                    />\n                  </Accordion.Title>\n                  <Accordion.Content\n                    active={this.state.activeIndex === item.id}\n                  >\n                    <div className=\"description\">{item.description}</div>\n                    {item.uninstall_profile_id === '' && (\n                      <div>\n                        <Message icon=\"warning\" warning>\n                          <FormattedMessage\n                            id=\"No uninstall profile\"\n                            defaultMessage=\"This addon does not provide an uninstall profile.\"\n                          />\n                        </Message>\n                      </div>\n                    )}\n                    <Button.Group floated=\"right\">\n                      <Button\n                        primary\n                        basic\n                        onClick={this.onInstall}\n                        value={item.id}\n                        className=\"installAction\"\n                      >\n                        <FormattedMessage\n                          id=\"Install\"\n                          defaultMessage=\"Install\"\n                          className=\"button-label\"\n                        />\n                      </Button>\n                    </Button.Group>\n                    <div className=\"version\">\n                      <FormattedMessage\n                        id=\"Latest version\"\n                        defaultMessage=\"Latest version\"\n                      />\n                      : &nbsp;\n                      {item.version}\n                    </div>\n                  </Accordion.Content>\n                  <Divider />\n                </div>\n              ))}\n            </Accordion>\n          </Segment>\n        </Segment.Group>\n\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Link to=\"/controlpanel\" className=\"item\">\n                    <Icon\n                      name={backSVG}\n                      aria-label={this.props.intl.formatMessage(messages.back)}\n                      className=\"contents circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.back)}\n                    />\n                  </Link>\n                </>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      installedAddons: state.addons.installedAddons,\n      availableAddons: state.addons.availableAddons,\n      upgradableAddons: state.addons.upgradableAddons,\n      pathname: props.location.pathname,\n    }),\n    { installAddon, listAddons, uninstallAddon, upgradeAddon },\n  ),\n)(AddonsControlpanel);\n","import React from 'react';\nconst Circle = ({ color }) => (\n  <svg height=\"10\" width=\"10\" style={{ marginRight: 5 }}>\n    <circle cx=\"5\" cy=\"5\" r=\"4\" fill={color || '#51aa55'} />\n  </svg>\n);\n\nexport default Circle;\n","/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/DatabaseInformation\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { Container, Divider, Message, Segment, Table } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { getDatabaseInformation } from '@plone/volto/actions';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n});\n\n/**\n * DatabaseInformation class.\n * @class DatabaseInformation\n * @extends Component\n */\nclass DatabaseInformation extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getDatabaseInformation: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs DiffComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getDatabaseInformation();\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return this.props.databaseInformation ? (\n      <Container id=\"database-page\" className=\"controlpanel-database\">\n        <Helmet title=\"DatabaseInformation\" />\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage\n              id=\"Database Information\"\n              defaultMessage=\"Database Information\"\n            />\n          </Segment>\n          <Segment>\n            <Message>\n              <FormattedMessage\n                id=\"The Database Manager allow you to view database status information\"\n                defaultMessage=\"The Database Manager allow you to view database status information\"\n              />\n            </Message>\n          </Segment>\n          <Segment>\n            <Message>\n              <Message.Header>\n                <FormattedMessage\n                  id=\"Database main\"\n                  defaultMessage=\"Database main\"\n                />\n              </Message.Header>\n            </Message>\n            <Table celled padded columns=\"2\">\n              <Table.Body>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Database Location\"\n                      defaultMessage=\"Database Location\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.db_name}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Database Size\"\n                      defaultMessage=\"Database Size\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.database_size}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Total number of objects in the database\"\n                      defaultMessage=\"Total number of objects in the database\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.db_size}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Total number of objects in memory from all caches\"\n                      defaultMessage=\"Total number of objects in memory from all caches\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.cache_size}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Target number of objects in memory per cache\"\n                      defaultMessage=\"Target number of objects in memory per cache\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.cache_length}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Target memory size per cache in bytes\"\n                      defaultMessage=\"Target memory size per cache in bytes\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.cache_length_bytes}\n                  </Table.Cell>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n          </Segment>\n          <Segment>\n            <Divider />\n\n            <Message>\n              <Message.Header>\n                <FormattedMessage\n                  id=\"Total number of objects in each cache\"\n                  defaultMessage=\"Total number of objects in each cache\"\n                />\n              </Message.Header>\n            </Message>\n            <Table celled padded>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>\n                    <FormattedMessage\n                      id=\"Cache Name\"\n                      defaultMessage=\"Cache Name\"\n                    />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <FormattedMessage\n                      id=\"Number of active objects\"\n                      defaultMessage=\"Number of active objects\"\n                    />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <FormattedMessage\n                      id=\"Total active and non-active objects\"\n                      defaultMessage=\"Total active and non-active objects\"\n                    />\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              {this.props.databaseInformation.cache_detail_length.map(\n                (item) => (\n                  <Table.Row>\n                    <Table.Cell>{item.connection}</Table.Cell>\n                    <Table.Cell>{item.ngsize}</Table.Cell>\n                    <Table.Cell>{item.size}</Table.Cell>\n                  </Table.Row>\n                ),\n              )}\n            </Table>\n          </Segment>\n        </Segment.Group>\n\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Link to=\"/controlpanel\" className=\"item\">\n                    <Icon\n                      name={backSVG}\n                      aria-label={this.props.intl.formatMessage(messages.back)}\n                      className=\"contents circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.back)}\n                    />\n                  </Link>\n                </>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    ) : null;\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      databaseInformation: state.controlpanels.databaseinformation,\n      pathname: props.location.pathname,\n    }),\n    { getDatabaseInformation },\n  ),\n)(DatabaseInformation);\n","/**\n * Controlpanel component.\n * @module components/manage/Controlpanels/Controlpanel\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Button, Container } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\n\nimport { Form, Icon, Toolbar, Toast } from '@plone/volto/components';\nimport { updateControlpanel, getControlpanel } from '@plone/volto/actions';\n\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  changesSaved: {\n    id: 'Changes saved.',\n    defaultMessage: 'Changes saved.',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  info: {\n    id: 'Info',\n    defaultMessage: 'Info',\n  },\n});\n\n/**\n * Controlpanel class.\n * @class Controlpanel\n * @extends Component\n */\nclass Controlpanel extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateControlpanel: PropTypes.func.isRequired,\n    getControlpanel: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    updateRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    controlpanel: PropTypes.shape({\n      '@id': PropTypes.string,\n      data: PropTypes.object,\n      schema: PropTypes.object,\n      title: PropTypes.string,\n    }),\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    controlpanel: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Controlpanel\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlpanel(this.props.id);\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      toast.info(\n        <Toast\n          info\n          title={this.props.intl.formatMessage(messages.info)}\n          content={this.props.intl.formatMessage(messages.changesSaved)}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.updateControlpanel(this.props.controlpanel['@id'], data);\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.goBack();\n  }\n  form = React.createRef();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.props.controlpanel) {\n      return (\n        <div id=\"page-controlpanel\">\n          <Helmet title={this.props.controlpanel.title} />\n          <Container>\n            <Form\n              ref={this.form}\n              title={this.props.controlpanel.title}\n              schema={this.props.controlpanel.schema}\n              formData={this.props.controlpanel.data}\n              onSubmit={this.onSubmit}\n              onCancel={this.onCancel}\n              hideActions\n              loading={this.props.updateRequest.loading}\n            />\n          </Container>\n          {this.state.isClient && (\n            <Portal node={document.getElementById('toolbar')}>\n              <Toolbar\n                pathname={this.props.pathname}\n                hideDefaultViewButtons\n                inner={\n                  <>\n                    <Button\n                      id=\"toolbar-save\"\n                      className=\"save\"\n                      aria-label={this.props.intl.formatMessage(messages.save)}\n                      onClick={() => this.form.current.onSubmit()}\n                      disabled={this.props.updateRequest.loading}\n                      loading={this.props.updateRequest.loading}\n                    >\n                      <Icon\n                        name={saveSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.save)}\n                      />\n                    </Button>\n                    <Button\n                      className=\"cancel\"\n                      aria-label={this.props.intl.formatMessage(\n                        messages.cancel,\n                      )}\n                      onClick={() => this.onCancel()}\n                    >\n                      <Icon\n                        name={clearSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.cancel)}\n                      />\n                    </Button>\n                  </>\n                }\n              />\n            </Portal>\n          )}\n        </div>\n      );\n    }\n    return <div />;\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      controlpanel: state.controlpanels.controlpanel,\n      updateRequest: state.controlpanels.update,\n      id: props.match.params.id,\n      pathname: props.location.pathname,\n    }),\n    { updateControlpanel, getControlpanel },\n  ),\n  withRouter,\n)(Controlpanel);\n","/**\n * Controlpanels component.\n * @module components/manage/Controlpanels/Controlpanels\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { concat, filter, last, map, uniqBy } from 'lodash';\nimport { Portal } from 'react-portal';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Container, Grid, Header, Segment } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { listControlpanels, getSystemInformation } from '@plone/volto/actions';\nimport { Error, Icon, Toolbar, VersionOverview } from '@plone/volto/components';\n\nimport config from '@plone/volto/registry';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  sitesetup: {\n    id: 'Site Setup',\n    defaultMessage: 'Site Setup',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  versionoverview: {\n    id: 'Version Overview',\n    defaultMessage: 'Version Overview',\n  },\n  moderatecomments: {\n    id: 'Moderate Comments',\n    defaultMessage: 'Moderate Comments',\n  },\n  usersandgroups: {\n    id: 'Users and Groups',\n    defaultMessage: 'Users and Groups',\n  },\n  users: {\n    id: 'Users',\n    defaultMessage: 'Users',\n  },\n  groups: {\n    id: 'Groups',\n    defaultMessage: 'Groups',\n  },\n  usergroupmemberbership: {\n    id: 'User Group Membership',\n    defaultMessage: 'User Group Membership',\n  },\n});\n\n/**\n * Controlpanels container class.\n * @class Controlpanels\n * @extends Component\n */\nclass Controlpanels extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    listControlpanels: PropTypes.func.isRequired,\n    controlpanels: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        group: PropTypes.string,\n        title: PropTypes.string,\n      }),\n    ).isRequired,\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs EditComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isClient: false,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.listControlpanels();\n    this.props.getSystemInformation();\n    this.setState({ isClient: true });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // Error\n    if (\n      this.props.controlpanelsRequest.loading &&\n      nextProps.controlpanelsRequest.error\n    ) {\n      this.setState({\n        error: nextProps.controlpanelsRequest.error,\n      });\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    // Error\n    if (this.state.error) {\n      return <Error error={this.state.error} />;\n    }\n\n    const controlpanels = map(\n      concat(this.props.controlpanels, [\n        {\n          '@id': '/addons',\n          group: 'General',\n          title: 'Add-Ons',\n        },\n        {\n          '@id': '/database',\n          group: 'General',\n          title: 'Database',\n        },\n        {\n          '@id': '/moderate-comments',\n          group: 'Content',\n          title: this.props.intl.formatMessage(messages.moderatecomments),\n        },\n        {\n          '@id': '/users',\n          group: 'Users and Groups',\n          title: this.props.intl.formatMessage(messages.users),\n        },\n        {\n          '@id': '/usergroupmembership',\n          group: this.props.intl.formatMessage(messages.usersandgroups),\n          title: this.props.intl.formatMessage(messages.usergroupmemberbership),\n        },\n        {\n          '@id': '/groups',\n          group: 'Users and Groups',\n          title: this.props.intl.formatMessage(messages.groups),\n        },\n      ]),\n      (controlpanel) => ({\n        ...controlpanel,\n        id: last(controlpanel['@id'].split('/')),\n      }),\n    );\n    const groups = map(uniqBy(controlpanels, 'group'), 'group');\n    const { controlPanelsIcons: icons } = config.settings;\n\n    return (\n      <div className=\"view-wrapper\">\n        <Helmet title={this.props.intl.formatMessage(messages.sitesetup)} />\n        <Container className=\"controlpanel\">\n          <Segment.Group raised>\n            <Segment className=\"primary\">\n              <FormattedMessage id=\"Site Setup\" defaultMessage=\"Site Setup\" />\n            </Segment>\n            {map(groups, (group) => [\n              <Segment key={`header-${group}`} secondary>\n                {group}\n              </Segment>,\n              <Segment key={`body-${group}`} attached>\n                <Grid columns={6}>\n                  <Grid.Row>\n                    {map(filter(controlpanels, { group }), (controlpanel) => (\n                      <Grid.Column key={controlpanel.id}>\n                        <Link to={`/controlpanel/${controlpanel.id}`}>\n                          <Header as=\"h3\" icon textAlign=\"center\">\n                            <Icon\n                              name={icons?.[controlpanel.id] || icons.default}\n                              size=\"48px\"\n                            />\n                            <Header.Content>\n                              {controlpanel.title}\n                            </Header.Content>\n                          </Header>\n                        </Link>\n                      </Grid.Column>\n                    ))}\n                  </Grid.Row>\n                </Grid>\n              </Segment>,\n            ])}\n          </Segment.Group>\n          <Segment.Group raised>\n            <Segment className=\"primary\">\n              <FormattedMessage\n                id=\"Version Overview\"\n                defaultMessage=\"Version Overview\"\n              />\n            </Segment>\n            <Segment attached>\n              {this.props.systemInformation ? (\n                <VersionOverview {...this.props.systemInformation} />\n              ) : null}\n            </Segment>\n          </Segment.Group>\n        </Container>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link to=\"/\" className=\"item\">\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      controlpanels: state.controlpanels.controlpanels,\n      controlpanelsRequest: state.controlpanels.list,\n      pathname: props.location.pathname,\n      systemInformation: state.controlpanels.systeminformation,\n    }),\n    { listControlpanels, getSystemInformation },\n  ),\n)(Controlpanels);\n","/**\n * Content Types component.\n * @module components/manage/Controlpanels/ContentTypes\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getParentUrl } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { last } from 'lodash';\nimport { Confirm, Container, Table, Button, Header } from 'semantic-ui-react';\nimport { toast } from 'react-toastify';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport {\n  Error,\n  Icon,\n  ModalForm,\n  Toolbar,\n  Toast,\n  ContentTypesActions,\n} from '@plone/volto/components';\nimport {\n  getControlpanel,\n  postControlpanel,\n  deleteControlpanel,\n} from '@plone/volto/actions';\nimport { getId } from '@plone/volto/helpers';\n\nimport addSVG from '@plone/volto/icons/add-document.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  add: {\n    id: 'Add',\n    defaultMessage: 'Add',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  yes: {\n    id: 'Yes',\n    defaultMessage: 'Yes',\n  },\n  no: {\n    id: 'No',\n    defaultMessage: 'No',\n  },\n  addTypeFormTitle: {\n    id: 'Add new content type',\n    defaultMessage: 'Add new content type',\n  },\n  addTypeButtonTitle: {\n    id: 'Add new content type',\n    defaultMessage: 'Add new content type',\n  },\n  addTypeFormTitleTitle: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  addTypeFormDescriptionTitle: {\n    id: 'Description',\n    defaultMessage: 'Description',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  typeCreated: {\n    id: 'Content type created',\n    defaultMessage: 'Content type created',\n  },\n  deleteConfirmTitle: {\n    id: 'Delete Type',\n    defaultMessage: 'Delete Type',\n  },\n  typeDeleted: {\n    id: 'Content type deleted',\n    defaultMessage: 'Content type deleted',\n  },\n});\n\n/**\n * ContentTypes class.\n * @class ContentTypes\n * @extends Component\n */\nclass ContentTypes extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    getControlpanel: PropTypes.func.isRequired,\n    postControlpanel: PropTypes.func.isRequired,\n    deleteControlpanel: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    cpanelRequest: PropTypes.objectOf(PropTypes.any).isRequired,\n    controlpanel: PropTypes.shape({\n      '@id': PropTypes.string,\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          '@id': PropTypes.string,\n          title: PropTypes.string,\n          description: PropTypes.string,\n          count: PropTypes.integer,\n        }),\n      ),\n    }),\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Types\n   */\n  constructor(props) {\n    super(props);\n    this.onAddTypeSubmit = this.onAddTypeSubmit.bind(this);\n    this.onAddTypeError = this.onAddTypeError.bind(this);\n    this.onAddTypeSuccess = this.onAddTypeSuccess.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onLayout = this.onLayout.bind(this);\n    this.onSchema = this.onSchema.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onDeleteCancel = this.onDeleteCancel.bind(this);\n    this.onDeleteOk = this.onDeleteOk.bind(this);\n    this.onDeleteTypeSuccess = this.onDeleteTypeSuccess.bind(this);\n\n    this.state = {\n      showAddType: false,\n      addTypeError: '',\n      showDelete: false,\n      typeToDelete: undefined,\n      error: null,\n      isClient: false,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlpanel(this.props.id);\n    this.setState({ isClient: true });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // Get\n    if (\n      this.props.cpanelRequest.get.loading &&\n      nextProps.cpanelRequest.get.error\n    ) {\n      this.setState({\n        error: nextProps.cpanelRequest.get.error,\n      });\n    }\n\n    // Create\n    if (\n      this.props.cpanelRequest.post.loading &&\n      nextProps.cpanelRequest.post.loaded\n    ) {\n      this.props.getControlpanel(this.props.id);\n      this.onAddTypeSuccess();\n    }\n    if (\n      this.props.cpanelRequest.post.loading &&\n      nextProps.cpanelRequest.post.error\n    ) {\n      this.onAddTypeError(nextProps.cpanelRequest.post.error);\n    }\n\n    // Delete\n    if (\n      this.props.cpanelRequest.delete.loading &&\n      nextProps.cpanelRequest.delete.loaded\n    ) {\n      this.props.getControlpanel(this.props.id);\n      this.onDeleteTypeSuccess();\n    }\n  }\n\n  /** Add  */\n\n  /**\n   * @param {object} data Form data from the ModalForm.\n   * @param {func} callback to set new form data in the ModalForm\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onAddTypeSubmit(data, callback) {\n    this.props.postControlpanel(this.props.id, data);\n    this.setState({\n      addTypeSetFormDataCallback: callback,\n    });\n  }\n\n  /**\n   * Handle Errors after postControlpanel()\n   *\n   * @param {*} error object. Requires the property .message\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onAddTypeError(error) {\n    this.setState({\n      addTypeError: error.message,\n    });\n  }\n\n  /**\n   * Handle Success after postControlpanel()\n   *\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onAddTypeSuccess() {\n    this.state.addTypeSetFormDataCallback({});\n    this.setState({\n      showAddType: false,\n      addTypeError: undefined,\n      addTypeSetFormDataCallback: undefined,\n    });\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.typeCreated)}\n      />,\n    );\n  }\n\n  /** Edit  */\n  /**\n   * @param {*} event Event object.\n   * @param {*} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onEdit(event, { value }) {\n    this.props.history.push(value);\n  }\n\n  /**\n   * Layout button click\n   * @param {*} event\n   * @param {string} value\n   * @returns {undefined}\n   */\n  onLayout(event, { value }) {\n    this.props.history.push(value);\n  }\n\n  /** Delete */\n  /**\n   * @param {*} event Event object.\n   * @param {*} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDelete(event, { value }) {\n    if (value) {\n      this.setState({\n        showDelete: true,\n        typeToDelete: value,\n      });\n    }\n  }\n\n  /** Folder\n   * @param {Object} event Event object.\n   * @param {string} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onSchema(event, { value }) {\n    if (value) {\n      this.props.history.push(`${this.props.pathname}/${value}/schema`);\n    }\n  }\n\n  /**\n   * On delete ok\n   * @method onDeleteOk\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDeleteOk() {\n    const item = getId(this.state.typeToDelete);\n    this.props.deleteControlpanel(this.props.id, item);\n    this.setState({\n      showDelete: false,\n      typeToDelete: undefined,\n    });\n  }\n\n  /**\n   * On delete cancel\n   * @method onDeleteCancel\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDeleteCancel() {\n    this.setState({\n      showDelete: false,\n      typeToDelete: undefined,\n    });\n  }\n\n  /**\n   * Handle Success after deleteControlpanel()\n   *\n   * @method onDeleteTypeSuccess\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDeleteTypeSuccess() {\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.typeDeleted)}\n      />,\n    );\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    // Error\n    if (this.state.error) {\n      return <Error error={this.state.error} />;\n    }\n\n    if (!this.props.controlpanel) {\n      return <div />;\n    }\n    return (\n      <Container className=\"types-control-panel\">\n        <div className=\"container\">\n          <Confirm\n            open={this.state.showDelete}\n            header={this.props.intl.formatMessage(messages.deleteConfirmTitle)}\n            cancelButton={this.props.intl.formatMessage(messages.no)}\n            confirmButton={this.props.intl.formatMessage(messages.yes)}\n            content={\n              <div className=\"content\">\n                <ul className=\"content\">\n                  <FormattedMessage\n                    id=\"Do you really want to delete the type {typename}?\"\n                    defaultMessage=\"Do you really want to delete type {typename}?\"\n                    values={{\n                      typename: <b>{getId(this.state.typeToDelete || '')}</b>,\n                    }}\n                  />\n                </ul>\n              </div>\n            }\n            onCancel={this.onDeleteCancel}\n            onConfirm={this.onDeleteOk}\n          />\n          <ModalForm\n            open={this.state.showAddType}\n            className=\"modal\"\n            onSubmit={this.onAddTypeSubmit}\n            submitError={this.state.addTypeError}\n            onCancel={() => this.setState({ showAddType: false })}\n            title={this.props.intl.formatMessage(messages.addTypeFormTitle)}\n            loading={this.props.cpanelRequest.post.loading}\n            schema={{\n              fieldsets: [\n                {\n                  id: 'default',\n                  title: 'Content type',\n                  fields: ['title', 'description'],\n                },\n              ],\n              properties: {\n                title: {\n                  title: this.props.intl.formatMessage(\n                    messages.addTypeFormTitleTitle,\n                  ),\n                  type: 'string',\n                  description: '',\n                },\n                description: {\n                  title: this.props.intl.formatMessage(\n                    messages.addTypeFormDescriptionTitle,\n                  ),\n                  type: 'string',\n                  description: '',\n                },\n              },\n              required: ['title'],\n            }}\n          />\n        </div>\n        <Container>\n          <article id=\"content\">\n            <Header disabled>{this.props.controlpanel.title}</Header>\n            <section id=\"content-core\">\n              <Table compact singleLine striped>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Type\" defaultMessage=\"Type\" />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell>\n                      <FormattedMessage\n                        id=\"Description\"\n                        defaultMessage=\"Description\"\n                      />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Items\" defaultMessage=\"Items\" />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell textAlign=\"right\">\n                      <FormattedMessage id=\"Actions\" defaultMessage=\"Actions\" />\n                    </Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {this.props.controlpanel.items.map((item) => (\n                    <Table.Row key={item['@id']}>\n                      <Table.Cell>\n                        <Link to={`${this.props.pathname}/${item['id']}`}>\n                          {item.title}\n                        </Link>\n                      </Table.Cell>\n                      <Table.Cell>{item.description}</Table.Cell>\n                      <Table.Cell>{item.count}</Table.Cell>\n                      <Table.Cell textAlign=\"right\">\n                        <ContentTypesActions\n                          item={item}\n                          path={this.props.pathname}\n                          onEdit={this.onEdit}\n                          onDelete={this.onDelete}\n                          onSchema={this.onSchema}\n                          onLayout={this.onLayout}\n                        />\n                      </Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </section>\n          </article>\n        </Container>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Link to={getParentUrl(this.props.pathname)} className=\"item\">\n                    <Icon\n                      name={backSVG}\n                      size=\"30px\"\n                      className=\"contents circled\"\n                      title={this.props.intl.formatMessage(messages.back)}\n                    />\n                  </Link>\n                  <Button\n                    className=\"add\"\n                    aria-label={this.props.intl.formatMessage(messages.add)}\n                    tabIndex={0}\n                    id=\"toolbar-add\"\n                    onClick={() => {\n                      this.setState({ showAddType: true });\n                    }}\n                  >\n                    <Icon\n                      name={addSVG}\n                      title={this.props.intl.formatMessage(\n                        messages.addTypeButtonTitle,\n                      )}\n                    />\n                  </Button>\n                </>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      controlpanel: state.controlpanels.controlpanel,\n      cpanelRequest: state.controlpanels,\n      pathname: props.location.pathname,\n      id: last(props.location.pathname.split('/')),\n    }),\n    {\n      getControlpanel,\n      postControlpanel,\n      deleteControlpanel,\n    },\n  ),\n)(ContentTypes);\n","/**\n * Content Type component.\n * @module components/manage/Controlpanels/ContentType\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getParentUrl } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Button, Header } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { last, nth, join } from 'lodash';\nimport { Error, Form, Icon, Toolbar, Toast } from '@plone/volto/components';\nimport { getControlpanel, updateControlpanel } from '@plone/volto/actions';\n\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  title: {\n    id: '{id} Content Type',\n    defaultMessage: '{id} Content Type',\n  },\n  changesSaved: {\n    id: 'Changes saved.',\n    defaultMessage: 'Changes saved.',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  info: {\n    id: 'Info',\n    defaultMessage: 'Info',\n  },\n});\n\n/**\n * ContentType class.\n * @class ContentType\n * @extends Component\n */\nclass ContentType extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateControlpanel: PropTypes.func.isRequired,\n    getControlpanel: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    parent: PropTypes.string.isRequired,\n    cpanelRequest: PropTypes.objectOf(PropTypes.any).isRequired,\n    controlpanel: PropTypes.shape({\n      '@id': PropTypes.string,\n      data: PropTypes.object,\n      schema: PropTypes.object,\n      title: PropTypes.string,\n    }),\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    controlpanel: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentType\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visual: false,\n      error: null,\n      isClient: false,\n    };\n\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.form = React.createRef();\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlpanel(join([this.props.parent, this.props.id], '/'));\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // Control Panel GET\n    if (\n      this.props.cpanelRequest.get.loading &&\n      nextProps.cpanelRequest.get.error\n    ) {\n      this.setState({\n        error: nextProps.cpanelRequest.get.error,\n      });\n    }\n\n    // Control Panel PATCH\n    if (\n      this.props.cpanelRequest.update.loading &&\n      nextProps.cpanelRequest.update.loaded\n    ) {\n      toast.info(\n        <Toast\n          info\n          title={this.props.intl.formatMessage(messages.info)}\n          content={this.props.intl.formatMessage(messages.changesSaved)}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.updateControlpanel(this.props.controlpanel['@id'], data);\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    // Error\n    if (this.state.error) {\n      return <Error error={this.state.error} />;\n    }\n\n    if (this.props.controlpanel) {\n      let controlpanel = this.props.controlpanel;\n      if (controlpanel?.data?.filter_content_types === false) {\n        controlpanel.data.filter_content_types = { title: 'all', token: 'all' };\n      }\n      if (controlpanel?.data?.filter_content_types === true) {\n        if ((controlpanel?.data?.allowed_content_types || []).length) {\n          controlpanel.data.filter_content_types = {\n            title: 'some',\n            token: 'some',\n          };\n        } else {\n          controlpanel.data.filter_content_types = {\n            title: 'none',\n            token: 'none',\n          };\n        }\n      }\n      return (\n        <div id=\"page-controlpanel\" className=\"ui container\">\n          <Header disabled>\n            {this.props.intl.formatMessage(messages.title, {\n              id: controlpanel.title,\n            })}\n          </Header>\n          <Form\n            isEditForm\n            ref={this.form}\n            schema={controlpanel.schema}\n            formData={controlpanel.data}\n            onSubmit={this.onSubmit}\n            onCancel={this.onCancel}\n            pathname={this.props.pathname}\n            visual={this.state.visual}\n            hideActions\n            loading={this.props.cpanelRequest.update.loading}\n          />\n          {this.state.isClient && (\n            <Portal node={document.getElementById('toolbar')}>\n              <Toolbar\n                pathname={this.props.pathname}\n                hideDefaultViewButtons\n                inner={\n                  <>\n                    <Button\n                      id=\"toolbar-save\"\n                      className=\"save\"\n                      aria-label={this.props.intl.formatMessage(messages.save)}\n                      onClick={() => this.form.current.onSubmit()}\n                      disabled={this.props.cpanelRequest.update.loading}\n                      loading={this.props.cpanelRequest.update.loading}\n                    >\n                      <Icon\n                        name={saveSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.save)}\n                      />\n                    </Button>\n                    <Button\n                      className=\"cancel\"\n                      aria-label={this.props.intl.formatMessage(\n                        messages.cancel,\n                      )}\n                      onClick={() => this.onCancel()}\n                    >\n                      <Icon\n                        name={clearSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.cancel)}\n                      />\n                    </Button>\n                  </>\n                }\n              />\n            </Portal>\n          )}\n        </div>\n      );\n    }\n    return <div />;\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      controlpanel: state.controlpanels.controlpanel,\n      cpanelRequest: state.controlpanels,\n      pathname: props.location.pathname,\n      id: last(props.location.pathname.split('/')),\n      parent: nth(props.location.pathname.split('/'), -2),\n    }),\n    { getControlpanel, updateControlpanel },\n  ),\n)(ContentType);\n","/**\n * Content Type component.\n * @module components/manage/Controlpanels/ContentTypeLayout\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport {\n  getParentUrl,\n  hasBlocksData,\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n} from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Button, Segment } from 'semantic-ui-react';\nimport { toast } from 'react-toastify';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport { nth, join } from 'lodash';\nimport {\n  Error,\n  Form,\n  Icon,\n  Toolbar,\n  Sidebar,\n  Toast,\n} from '@plone/volto/components';\nimport {\n  getSchema,\n  updateSchema,\n  getControlpanel,\n  updateControlpanel,\n} from '@plone/volto/actions';\n\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  changesSaved: {\n    id: 'Changes saved.',\n    defaultMessage: 'Changes saved.',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  info: {\n    id: 'Info',\n    defaultMessage: 'Info',\n  },\n  enable: {\n    id: 'Enable editable Blocks',\n    defaultMessage: 'Enable editable Blocks',\n  },\n});\n\n/**\n * ContentTypeLayout class.\n * @class ContentTypeLayout\n * @extends Component\n */\nclass ContentTypeLayout extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateControlpanel: PropTypes.func.isRequired,\n    getControlpanel: PropTypes.func.isRequired,\n    getSchema: PropTypes.func.isRequired,\n    updateSchema: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    parent: PropTypes.string.isRequired,\n    pathname: PropTypes.string.isRequired,\n    schemaRequest: PropTypes.objectOf(PropTypes.any).isRequired,\n    cpanelRequest: PropTypes.objectOf(PropTypes.any).isRequired,\n    schema: PropTypes.objectOf(PropTypes.any),\n    controlpanel: PropTypes.shape({\n      '@id': PropTypes.string,\n      data: PropTypes.object,\n      schema: PropTypes.object,\n      title: PropTypes.string,\n    }),\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    schema: {},\n    controlpanel: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentTypeLayout\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visual: false,\n      content: null,\n      readOnlyBehavior: null,\n      error: null,\n      isClient: false,\n    };\n\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onEnableBlocks = this.onEnableBlocks.bind(this);\n    this.onDisableBlocksBehavior = this.onDisableBlocksBehavior.bind(this);\n    this.form = React.createRef();\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlpanel(join([this.props.parent, this.props.id], '/'));\n    this.props.getSchema(this.props.id);\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // Control Panel GET\n    if (\n      this.props.cpanelRequest.get.loading &&\n      nextProps.cpanelRequest.get.error\n    ) {\n      this.setState({\n        error: nextProps.cpanelRequest.get.error,\n      });\n    }\n\n    // Schema GET\n    if (this.props.schemaRequest.loading && nextProps.schemaRequest.loaded) {\n      const properties = nextProps.schema?.properties || {};\n      const content = {};\n      for (const key in properties) {\n        const value = properties[key].default;\n        if (value) {\n          content[key] = value;\n        }\n      }\n\n      if (hasBlocksData(properties)) {\n        this.setState({\n          visual: true,\n        });\n\n        const blocksFieldName = getBlocksFieldname(properties);\n        const blocksLayoutFieldname = getBlocksLayoutFieldname(properties);\n        content[blocksFieldName] = properties[blocksFieldName]?.default || {};\n        content[blocksLayoutFieldname] = properties[blocksLayoutFieldname]\n          ?.default || { items: [] };\n\n        const blocksBehavior = properties[blocksFieldName]?.behavior || '';\n        this.setState({\n          readOnlyBehavior: !blocksBehavior.includes('generated')\n            ? blocksBehavior\n            : '',\n        });\n      } else {\n        this.setState({\n          visual: false,\n          readOnlyBehavior: '',\n        });\n      }\n\n      this.setState({\n        content: content,\n      });\n    }\n\n    // Schema updated\n    if (\n      this.props.schemaRequest.update.loading &&\n      nextProps.schemaRequest.update.loaded\n    ) {\n      this.props.getSchema(this.props.id);\n      toast.info(\n        <Toast\n          info\n          title={this.props.intl.formatMessage(messages.info)}\n          content={this.props.intl.formatMessage(messages.changesSaved)}\n        />,\n      );\n    }\n\n    // Blocks behavior disabled\n    if (\n      this.props.cpanelRequest.update.loading &&\n      nextProps.cpanelRequest.update.loaded\n    ) {\n      this.onEnableBlocks();\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    const schema = { properties: {} };\n    Object.keys(data)\n      .filter((k) => data[k])\n      .forEach((k) => (schema.properties[k] = { default: data[k] }));\n    this.props.updateSchema(this.props.id, schema);\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    const url = getParentUrl(this.props.pathname);\n    this.props.history.push(getParentUrl(url));\n  }\n\n  /**\n   * Enable blocks handler\n   * @method onEnableBlocks\n   * @returns {undefined}\n   */\n  onEnableBlocks() {\n    const { properties = {} } = this.props.schema;\n    const blocksFieldName = getBlocksFieldname(properties);\n    const blocksLayoutFieldname = getBlocksLayoutFieldname(properties);\n    const schema = {\n      fieldsets: [\n        {\n          id: 'layout',\n          title: 'Layout',\n          fields: ['blocks', 'blocks_layout'],\n        },\n      ],\n      properties: {\n        blocks: {\n          title: 'Blocks',\n          type: 'dict',\n          widget: 'json',\n          factory: 'JSONField',\n          default: properties[blocksFieldName]?.default || {},\n        },\n        blocks_layout: {\n          title: 'Blocks Layout',\n          type: 'dict',\n          widget: 'json',\n          factory: 'JSONField',\n          default: properties[blocksLayoutFieldname]?.default || { items: [] },\n        },\n      },\n    };\n    this.props.updateSchema(this.props.id, schema);\n  }\n\n  /**\n   * Disable Blocks behavior handler\n   * @method onDisableBlocksBehavior\n   * @returns {undefined}\n   */\n  onDisableBlocksBehavior() {\n    this.props.updateControlpanel(this.props.controlpanel['@id'], {\n      [this.state.readOnlyBehavior]: false,\n    });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    // Error\n    if (this.state.error) {\n      return <Error error={this.state.error} />;\n    }\n\n    if (!this.state.visual) {\n      // Still loading\n      if (!this.state.content) {\n        return <div />;\n      }\n\n      // Blocks are not enabled\n      return (\n        <>\n          <Segment\n            placeholder\n            id=\"page-controlpanel-layout\"\n            className=\"ui container center aligned\"\n          >\n            <div>\n              <FormattedMessage\n                id=\"Can not edit Layout for <strong>{type}</strong> content-type as it doesn't have support for <strong>Volto Blocks</strong> enabled\"\n                defaultMessage=\"Can not edit Layout for <strong>{type}</strong> content-type as it doesn't have support for <strong>Volto Blocks</strong> enabled\"\n                values={{\n                  strong: (...chunks) => <strong>{chunks}</strong>,\n                  type: this.props?.controlpanel?.title || this.props.id,\n                }}\n              />\n            </div>\n            <div className=\"ui divider\"></div>\n            <Button\n              primary\n              onClick={this.onEnableBlocks}\n              content={this.props.intl.formatMessage(messages.enable)}\n            />\n          </Segment>\n          <Portal\n            node={this.state.isClient && document.getElementById('toolbar')}\n          >\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Link className=\"item\" to=\"#\" onClick={() => this.onCancel()}>\n                    <Icon\n                      name={backSVG}\n                      size=\"30px\"\n                      className=\"contents circled\"\n                      title={this.props.intl.formatMessage(messages.back)}\n                    />\n                  </Link>\n                </>\n              }\n            />\n          </Portal>\n        </>\n      );\n    }\n\n    if (this.state.readOnlyBehavior) {\n      return (\n        <>\n          <Segment\n            placeholder\n            id=\"page-controlpanel-layout\"\n            className=\"ui container center aligned\"\n          >\n            <div>\n              <FormattedMessage\n                id=\"Can not edit Layout for <strong>{type}</strong> content-type as the <strong>Blocks behavior</strong> is enabled and <strong>read-only</strong>\"\n                defaultMessage=\"Can not edit Layout for <strong>{type}</strong> content-type as the <strong>Blocks behavior</strong> is enabled and <strong>read-only</strong>\"\n                values={{\n                  strong: (...chunks) => <strong>{chunks}</strong>,\n                  type: this.props?.controlpanel?.title || this.props.id,\n                }}\n              />\n            </div>\n            <div className=\"ui divider\"></div>\n            <Button\n              primary\n              onClick={this.onDisableBlocksBehavior}\n              content={this.props.intl.formatMessage(messages.enable)}\n            />\n          </Segment>\n          <Portal\n            node={this.state.isClient && document.getElementById('toolbar')}\n          >\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Link className=\"item\" to=\"#\" onClick={() => this.onCancel()}>\n                    <Icon\n                      name={backSVG}\n                      size=\"30px\"\n                      className=\"contents circled\"\n                      title={this.props.intl.formatMessage(messages.back)}\n                    />\n                  </Link>\n                </>\n              }\n            />\n          </Portal>\n        </>\n      );\n    }\n\n    // Render layout editor\n    const blocksFieldName = getBlocksFieldname(\n      this.props.schema?.properties || {},\n    );\n    const blocksLayoutFieldname = getBlocksLayoutFieldname(\n      this.props.schema?.properties || {},\n    );\n    return (\n      <div id=\"page-controlpanel-layout\">\n        <Form\n          isAdminForm\n          ref={this.form}\n          schema={{\n            fieldsets: [\n              {\n                id: 'layout',\n                title: 'Layout',\n                fields: [blocksFieldName, blocksLayoutFieldname],\n              },\n            ],\n            properties: {\n              ...this.props.schema.properties[blocksFieldName],\n              ...this.props.schema.properties[blocksLayoutFieldname],\n            },\n            required: [],\n          }}\n          formData={this.state.content}\n          onSubmit={this.onSubmit}\n          onCancel={this.onCancel}\n          pathname={this.props.pathname}\n          visual={this.state.visual}\n          hideActions\n        />\n        <Portal\n          node={this.state.isClient && document.getElementById('sidebar')}\n        >\n          <Sidebar settingsTab={true} documentTab={false} />\n        </Portal>\n        <Portal\n          node={this.state.isClient && document.getElementById('toolbar')}\n        >\n          <Toolbar\n            pathname={this.props.pathname}\n            hideDefaultViewButtons\n            inner={\n              <>\n                <Button\n                  id=\"toolbar-save\"\n                  className=\"save\"\n                  aria-label={this.props.intl.formatMessage(messages.save)}\n                  onClick={() => this.form.current.onSubmit()}\n                  disabled={this.props.schemaRequest.update.loading}\n                  loading={this.props.schemaRequest.update.loading}\n                >\n                  <Icon\n                    name={saveSVG}\n                    className=\"circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.save)}\n                  />\n                </Button>\n                <Button\n                  className=\"cancel\"\n                  aria-label={this.props.intl.formatMessage(messages.cancel)}\n                  onClick={() => this.onCancel()}\n                >\n                  <Icon\n                    name={clearSVG}\n                    className=\"circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.cancel)}\n                  />\n                </Button>\n              </>\n            }\n          />\n        </Portal>\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      schema: state.schema.schema,\n      schemaRequest: state.schema,\n      cpanelRequest: state.controlpanels,\n      controlpanel: state.controlpanels.controlpanel,\n      pathname: props.location.pathname,\n      id: nth(props.location.pathname.split('/'), -2),\n      parent: nth(props.location.pathname.split('/'), -3),\n    }),\n    { getSchema, updateSchema, getControlpanel, updateControlpanel },\n  ),\n)(ContentTypeLayout);\n","/**\n * Content type schema.\n * @module components/manage/Controlpanels/ContentTypeSchema\n */\n\nimport { getSchema, putSchema } from '@plone/volto/actions';\nimport { getParentUrl } from '@plone/volto/helpers';\nimport { nth } from 'lodash';\nimport { Error, Form, Icon, Toast, Toolbar } from '@plone/volto/components';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Portal } from 'react-portal';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { compose } from 'redux';\nimport { Button, Header } from 'semantic-ui-react';\n\nconst messages = defineMessages({\n  title: {\n    id: '{id} Schema',\n    defaultMessage: '{id} Schema',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  typeCreated: {\n    id: 'Schema updates',\n    defaultMessage: 'Schema updates',\n  },\n  info: {\n    id: 'Info',\n    defaultMessage: 'Info',\n  },\n  changesSaved: {\n    id: 'Changes saved.',\n    defaultMessage: 'Changes saved.',\n  },\n});\n\n/**\n * ContentTypeSchema class.\n * @class ContentTypeSchema\n * @extends Component\n */\nclass ContentTypeSchema extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getSchema: PropTypes.func.isRequired,\n    putSchema: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {};\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      schema: null,\n      content: null,\n      isClient: false,\n    };\n\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.form = React.createRef();\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSchema(this.props.id);\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // Schema error\n    if (this.props.schemaRequest.loading && nextProps.schemaRequest.error) {\n      this.setState({\n        error: nextProps.schemaRequest.error,\n      });\n    }\n\n    // Schema GET\n    if (this.props.schemaRequest.loading && nextProps.schemaRequest.loaded) {\n      let properties = nextProps.schema?.properties || {};\n      let content = {};\n      let value, key;\n      for (key in properties) {\n        value = properties[key].default;\n        if (value) {\n          content[key] = value;\n        }\n      }\n\n      this.setState({\n        schema: nextProps.schema,\n        content: content,\n      });\n    }\n\n    // Schema updated\n    if (\n      this.props.schemaRequest.put.loading &&\n      nextProps.schemaRequest.put.loaded\n    ) {\n      // this.props.getSchema(this.props.id);\n      toast.info(\n        <Toast\n          info\n          title={this.props.intl.formatMessage(messages.info)}\n          content={this.props.intl.formatMessage(messages.changesSaved)}\n        />,\n      );\n    }\n\n    // Schema update error\n    if (\n      this.props.schemaRequest.put.loading &&\n      nextProps.schemaRequest.put.error\n    ) {\n      toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.error)}\n          content={JSON.stringify(\n            nextProps.schemaRequest.put.error.response.body ||\n              nextProps.schemaRequest.put.error.response.text,\n          )}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.putSchema(this.props.id, data.schema);\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    let url = getParentUrl(this.props.pathname);\n    this.props.history.push(getParentUrl(url));\n  }\n\n  form = React.createRef();\n\n  makeSchemaList = (schema) => {\n    const result = {\n      title: 'Schema',\n      type: 'object',\n      fieldsets: [\n        {\n          fields: ['schema'],\n          id: 'default',\n          title: 'Default',\n        },\n      ],\n      properties: {\n        schema: {\n          description: 'Form schema',\n          title: 'Form schema',\n          type: 'schema',\n          id: 'schema',\n        },\n      },\n      required: [],\n      layouts: null,\n    };\n    result.layouts = schema.layouts.slice();\n\n    return result;\n  };\n\n  isEditable = (field) =>\n    !field.behavior || field.behavior.includes('generated');\n\n  makeSchemaData = (schema, contentType) => {\n    const fieldsets = schema.fieldsets.map((fieldset) => {\n      const readOnlyFields = fieldset.fields.filter(\n        (fieldId) =>\n          !this.isEditable(schema.properties[fieldId]) &&\n          fieldId !== 'changeNote',\n      );\n      const userCreatedFields = fieldset.fields.filter((fieldId) =>\n        this.isEditable(schema.properties[fieldId]),\n      );\n      const changeNote = fieldset.fields.filter(\n        (fieldId) => fieldId === 'changeNote',\n      );\n      return {\n        ...fieldset,\n        fields: [...readOnlyFields, ...userCreatedFields, ...changeNote],\n      };\n    });\n    const result = {\n      ...schema,\n      fieldsets,\n      contentType,\n    };\n\n    return { schema: JSON.stringify(result) };\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    // Error\n    if (this.state.error) {\n      return <Error error={this.state.error} />;\n    }\n\n    if (this.state.schema) {\n      const contentTypeSchema = this.makeSchemaList(this.state.schema);\n      const schemaData = this.makeSchemaData(this.state.schema, this.props.id);\n\n      return (\n        <div id=\"page-controlpanel-schema\" className=\"ui container\">\n          <Header disabled>\n            {this.props.intl.formatMessage(messages.title, {\n              id: this.props?.schema?.title || this.props.id,\n            })}\n          </Header>\n          <Form\n            ref={this.form}\n            schema={contentTypeSchema}\n            formData={schemaData}\n            pathname={this.props.pathname}\n            onSubmit={this.onSubmit}\n            onCancel={this.onCancel}\n            hideActions\n          />\n          {this.state.isClient && (\n            <Portal node={document.getElementById('toolbar')}>\n              <Toolbar\n                pathname={this.props.pathname}\n                hideDefaultViewButtons\n                inner={\n                  <>\n                    <Button\n                      id=\"toolbar-save\"\n                      className=\"save\"\n                      aria-label={this.props.intl.formatMessage(messages.save)}\n                      onClick={() => this.form.current.onSubmit()}\n                      disabled={this.props.schemaRequest.put.loading}\n                      loading={this.props.schemaRequest.put.loading}\n                    >\n                      <Icon\n                        name={saveSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.save)}\n                      />\n                    </Button>\n                    <Button\n                      className=\"cancel\"\n                      aria-label={this.props.intl.formatMessage(\n                        messages.cancel,\n                      )}\n                      onClick={() => this.onCancel()}\n                    >\n                      <Icon\n                        name={clearSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.cancel)}\n                      />\n                    </Button>\n                  </>\n                }\n              />\n            </Portal>\n          )}\n        </div>\n      );\n    }\n\n    return <div />;\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      schema: state.schema.schema,\n      schemaRequest: state.schema,\n      pathname: props.location.pathname,\n      id: nth(props.location.pathname.split('/'), -2),\n    }),\n    {\n      getSchema,\n      putSchema,\n    },\n  ),\n)(ContentTypeSchema);\n","/**\n * Content Types component.\n * @module components/manage/Controlpanels/ContentTypesActions\n */\n\nimport React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nimport layoutSVG from '@plone/volto/icons/file.svg';\nimport folderSVG from '@plone/volto/icons/folder.svg';\nimport editSVG from '@plone/volto/icons/pen.svg';\n/**\n * ContentTypesActions class.\n * @class ContentTypesActions\n * @extends Component\n */\nconst ContentTypesActions = ({\n  item,\n  path,\n  onEdit,\n  onDelete,\n  onLayout,\n  onSchema,\n}) => {\n  return (\n    <Dropdown icon=\"ellipsis horizontal\" className={`actions-${item.id}`}>\n      <Dropdown.Menu className=\"left\">\n        <Dropdown.Item\n          onClick={onEdit}\n          value={`${path}/${item.id}`}\n          className={`edit-${item.id}`}\n        >\n          <Icon name={editSVG} size=\"15px\" />\n          <FormattedMessage id=\"Edit\" defaultMessage=\"Edit\" />\n        </Dropdown.Item>\n        <Dropdown.Item onClick={onSchema} value={item.id}>\n          <Icon name={folderSVG} size=\"15px\" />\n          <FormattedMessage id=\"Schema\" defaultMessage=\"Schema\" />\n        </Dropdown.Item>\n        <Dropdown.Item\n          onClick={onLayout}\n          value={`${path}/${item.id}/layout`}\n          className={`layout-${item.id}`}\n        >\n          <Icon name={layoutSVG} size=\"15px\" />\n          <FormattedMessage id=\"Layout\" defaultMessage=\"Layout\" />\n        </Dropdown.Item>\n        <Dropdown.Item\n          onClick={onDelete}\n          value={item['@id']}\n          className={`delete-${item.id}`}\n        >\n          <Icon name={trashSVG} size=\"15px\" />\n          <FormattedMessage id=\"Delete\" defaultMessage=\"Delete\" />\n        </Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default injectIntl(ContentTypesActions);\n","/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/UsersControlpanel\n */\nimport {\n  createUser,\n  deleteUser,\n  listRoles,\n  listGroups,\n  listUsers,\n  updateUser,\n  updateGroup,\n} from '@plone/volto/actions';\nimport {\n  Icon,\n  ModalForm,\n  Toast,\n  Toolbar,\n  RenderUsers,\n  Pagination,\n  Error,\n} from '@plone/volto/components';\nimport { Link } from 'react-router-dom';\nimport { Helmet, messages } from '@plone/volto/helpers';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport addUserSvg from '@plone/volto/icons/add-user.svg';\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\nimport { find, map, pull, difference } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Portal } from 'react-portal';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { bindActionCreators, compose } from 'redux';\nimport {\n  Confirm,\n  Container,\n  Form,\n  Input,\n  Button,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\n\n/**\n * UsersControlpanel class.\n * @class UsersControlpanel\n * @extends Component\n */\nclass UsersControlpanel extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    listRoles: PropTypes.func.isRequired,\n    listUsers: PropTypes.func.isRequired,\n    updateUser: PropTypes.func,\n    listGroups: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    roles: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        '@type': PropTypes.string,\n        id: PropTypes.string,\n      }),\n    ).isRequired,\n    users: PropTypes.arrayOf(\n      PropTypes.shape({\n        username: PropTypes.string,\n        fullname: PropTypes.string,\n        roles: PropTypes.arrayOf(PropTypes.string),\n      }),\n    ).isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.delete = this.delete.bind(this);\n\n    this.onDeleteOk = this.onDeleteOk.bind(this);\n    this.onDeleteCancel = this.onDeleteCancel.bind(this);\n    this.onAddUserSubmit = this.onAddUserSubmit.bind(this);\n    this.onAddUserError = this.onAddUserError.bind(this);\n    this.onAddUserSuccess = this.onAddUserSuccess.bind(this);\n    this.updateUserRole = this.updateUserRole.bind(this);\n    this.state = {\n      search: '',\n      showAddUser: false,\n      showAddUserErrorConfirm: false,\n      addUserError: '',\n      showDelete: false,\n      userToDelete: undefined,\n      entries: [],\n      isClient: false,\n      currentPage: 0,\n      pageSize: 10,\n    };\n  }\n\n  fetchData = async () => {\n    await this.props.listRoles();\n    this.props.listGroups();\n    await this.props.listUsers();\n    this.setState({\n      entries: this.props.users,\n    });\n  };\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.setState({\n      isClient: true,\n    });\n    this.fetchData();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      (this.props.deleteRequest.loading && nextProps.deleteRequest.loaded) ||\n      (this.props.createRequest.loading && nextProps.createRequest.loaded)\n    ) {\n      this.props.listUsers({\n        query: this.state.search,\n      });\n    }\n    if (this.props.createRequest.loading && nextProps.createRequest.loaded) {\n      this.onAddUserSuccess();\n    }\n    if (this.props.createRequest.loading && nextProps.createRequest.error) {\n      this.onAddUserError(nextProps.createRequest.error);\n    }\n    if (\n      this.props.loadRolesRequest.loading &&\n      nextProps.loadRolesRequest.error\n    ) {\n      this.setState({\n        error: nextProps.loadRolesRequest.error,\n      });\n    }\n  }\n\n  getUserFromProps(value) {\n    return find(this.props.users, ['@id', value]);\n  }\n\n  /**\n   * Search handler\n   * @method onSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onSearch(event) {\n    event.preventDefault();\n    this.props.listUsers({\n      query: this.state.search,\n    });\n  }\n\n  /**\n   * On change search handler\n   * @method onChangeSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onChangeSearch(event) {\n    this.setState({\n      search: event.target.value,\n    });\n  }\n\n  /**\n   * Delete a user\n   * @method delete\n   * @param {object} event Event object.\n   * @param {string} value username.\n   * @returns {undefined}\n   */\n  delete(event, { value }) {\n    if (value) {\n      this.setState({\n        showDelete: true,\n        userToDelete: this.getUserFromProps(value),\n      });\n    }\n  }\n\n  /**\n   * On delete ok\n   * @method onDeleteOk\n   * @returns {undefined}\n   */\n  onDeleteOk() {\n    if (this.state.userToDelete) {\n      this.props.deleteUser(this.state.userToDelete.id);\n      this.setState({\n        showDelete: false,\n        userToDelete: undefined,\n      });\n    }\n  }\n\n  /**\n   * On delete cancel\n   * @method onDeleteCancel\n   * @returns {undefined}\n   */\n  onDeleteCancel() {\n    this.setState({\n      showDelete: false,\n      itemsToDelete: [],\n    });\n  }\n\n  /**\n   *@param {object} user\n   *@returns {undefined}\n   *@memberof UsersControlpanel\n   */\n  addUserToGroup = (user) => {\n    const { groups, username } = user;\n    groups.forEach((group) => {\n      this.props.updateGroup(group, {\n        users: {\n          [username]: true,\n        },\n      });\n    });\n  };\n\n  /**\n   * Callback to be called by the ModalForm when the form is submitted.\n   *\n   * @param {object} data Form data from the ModalForm.\n   * @param {func} callback to set new form data in the ModalForm\n   * @returns {undefined}\n   */\n  onAddUserSubmit(data, callback) {\n    const { groups } = data;\n    if (groups && groups.length > 0) this.addUserToGroup(data);\n    this.props.createUser(data);\n    this.setState({\n      addUserSetFormDataCallback: callback,\n    });\n  }\n\n  /**\n   * Handle Success after createUser()\n   *\n   * @returns {undefined}\n   */\n  onAddUserSuccess() {\n    this.state.addUserSetFormDataCallback({});\n    this.setState({\n      showAddUser: false,\n      addUserError: undefined,\n      addUserSetFormDataCallback: undefined,\n    });\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.userCreated)}\n      />,\n    );\n  }\n\n  /**\n   *\n   *\n   * @param {*} data\n   * @param {*} callback\n   * @memberof UsersControlpanel\n   */\n  updateUserRole(name, value) {\n    this.setState({\n      entries: map(this.state.entries, (entry) => ({\n        ...entry,\n        roles:\n          entry.id === name && !entry.roles.includes(value)\n            ? [...entry.roles, value]\n            : entry.id !== name\n            ? entry.roles\n            : pull(entry.roles, value),\n      })),\n    });\n  }\n  /**\n   *\n   * @param {*} event\n   * @memberof UsersControlpanel\n   */\n  updateUserRoleSubmit = (e) => {\n    e.stopPropagation();\n\n    const roles = this.props.roles.map((item) => item.id);\n    this.state.entries.forEach((item) => {\n      const userData = { roles: {} };\n      const removedRoles = difference(roles, item.roles);\n\n      removedRoles.forEach((role) => {\n        userData.roles[role] = false;\n      });\n      item.roles.forEach((role) => {\n        userData.roles[role] = true;\n      });\n      this.props.updateUser(item.id, userData);\n    });\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.updateRoles)}\n      />,\n    );\n  };\n\n  /**\n   * Handle Errors after createUser()\n   *\n   * @param {object} error object. Requires the property .message\n   * @returns {undefined}\n   */\n  onAddUserError(error) {\n    this.setState({\n      addUserError: error.response.body.error.message,\n    });\n  }\n\n  /**\n   * On change page\n   * @method onChangePage\n   * @param {object} event Event object.\n   * @param {string} value Page value.\n   * @returns {undefined}\n   */\n  onChangePage = (event, { value }) => {\n    this.setState({\n      currentPage: value,\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.users !== prevProps.users) {\n      this.setState({\n        entries: this.props.users,\n      });\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.state.error) {\n      return <Error error={this.state.error} />;\n    }\n    /*let fullnameToDelete = this.state.userToDelete\n        ? this.state.userToDelete.fullname\n        : '';*/\n    let usernameToDelete = this.state.userToDelete\n      ? this.state.userToDelete.username\n      : '';\n    return (\n      <Container className=\"users-control-panel\">\n        <Helmet title={this.props.intl.formatMessage(messages.users)} />\n        <div className=\"container\">\n          <Confirm\n            open={this.state.showDelete}\n            header={this.props.intl.formatMessage(\n              messages.deleteUserConfirmTitle,\n            )}\n            content={\n              <div className=\"content\">\n                <ul className=\"content\">\n                  <FormattedMessage\n                    id=\"Do you really want to delete the user {username}?\"\n                    defaultMessage=\"Do you really want to delete the user {username}?\"\n                    values={{\n                      username: <b>{usernameToDelete}</b>,\n                    }}\n                  />\n                </ul>\n              </div>\n            }\n            onCancel={this.onDeleteCancel}\n            onConfirm={this.onDeleteOk}\n            size={null}\n          />\n          {this.state.showAddUser ? (\n            <ModalForm\n              open={this.state.showAddUser}\n              className=\"modal\"\n              onSubmit={this.onAddUserSubmit}\n              submitError={this.state.addUserError}\n              onCancel={() => this.setState({ showAddUser: false })}\n              title={this.props.intl.formatMessage(messages.addUserFormTitle)}\n              loading={this.props.createRequest.loading}\n              schema={{\n                fieldsets: [\n                  {\n                    id: 'default',\n                    title: 'FIXME: User Data',\n                    fields: [\n                      'username',\n                      'fullname',\n                      'email',\n                      'password',\n                      'roles',\n                      'groups',\n                    ],\n                  },\n                ],\n                properties: {\n                  username: {\n                    title: this.props.intl.formatMessage(\n                      messages.addUserFormUsernameTitle,\n                    ),\n                    type: 'string',\n                    description:\n                      'Enter a user name, usually something like \"jsmith\". No spaces or special characters. Usernames and passwords are case sensitive, make sure the caps lock key is not enabled. This is the name used to log in.',\n                  },\n                  fullname: {\n                    title: this.props.intl.formatMessage(\n                      messages.addUserFormFullnameTitle,\n                    ),\n                    type: 'string',\n                    description: 'Enter full name, e.g. John Smith.',\n                  },\n                  email: {\n                    title: this.props.intl.formatMessage(\n                      messages.addUserFormEmailTitle,\n                    ),\n                    type: 'string',\n                    description:\n                      'Enter an email address. This is necessary in case the password is lost. We respect your privacy, and will not give the address away to any third parties or expose it anywhere.',\n                    widget: 'email',\n                  },\n                  password: {\n                    title: this.props.intl.formatMessage(\n                      messages.addUserFormPasswordTitle,\n                    ),\n                    type: 'password',\n                    description:\n                      'Enter your new password. Minimum 5 characters.',\n                    widget: 'password',\n                  },\n                  roles: {\n                    title: this.props.intl.formatMessage(\n                      messages.addUserFormRolesTitle,\n                    ),\n                    type: 'array',\n                    choices: this.props.roles.map((role) => [role.id, role.id]),\n                    noValueOption: false,\n                    description: '',\n                  },\n                  groups: {\n                    title: this.props.intl.formatMessage(\n                      messages.addUserGroupNameTitle,\n                    ),\n                    type: 'array',\n                    choices: this.props.groups.map((group) => [\n                      group.id,\n                      group.id,\n                    ]),\n                    noValueOption: false,\n                    description: '',\n                  },\n                },\n                required: ['username', 'fullname', 'email', 'password'],\n              }}\n            />\n          ) : null}\n        </div>\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage id=\"Users\" defaultMessage=\"Users\" />\n          </Segment>\n          <Segment secondary>\n            <FormattedMessage\n              id=\"Note that roles set here apply directly to a user. The symbol{plone_svg}indicates a role inherited from membership in a group.\"\n              defaultMessage=\"Note that roles set here apply directly to a user. The symbol{plone_svg}indicates a role inherited from membership in a group.\"\n              values={{\n                plone_svg: (\n                  <Icon\n                    name={ploneSVG}\n                    size=\"20px\"\n                    color=\"#007EB1\"\n                    title={'plone-svg'}\n                  />\n                ),\n              }}\n            />\n          </Segment>\n          <Segment>\n            <Form onSubmit={this.onSearch}>\n              <Form.Field>\n                <Input\n                  name=\"SearchableText\"\n                  action={{ icon: 'search' }}\n                  placeholder={this.props.intl.formatMessage(\n                    messages.searchUsers,\n                  )}\n                  onChange={this.onChangeSearch}\n                  id=\"user-search-input\"\n                />\n              </Form.Field>\n            </Form>\n          </Segment>\n          <Form>\n            <div className=\"table\">\n              <Table padded striped attached unstackable>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>\n                      <FormattedMessage\n                        id=\"User name\"\n                        defaultMessage=\"User name\"\n                      />\n                    </Table.HeaderCell>\n                    {this.props.roles.map((role) => (\n                      <Table.HeaderCell key={role.id}>\n                        {role.id}\n                      </Table.HeaderCell>\n                    ))}\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Actions\" defaultMessage=\"Actions\" />\n                    </Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body data-user=\"users\">\n                  {this.state.entries\n                    .slice(\n                      this.state.currentPage * 10,\n                      this.state.pageSize * (this.state.currentPage + 1),\n                    )\n                    .map((user) => (\n                      <RenderUsers\n                        key={user.id}\n                        onDelete={this.delete}\n                        roles={this.props.roles}\n                        user={user}\n                        updateUser={this.updateUserRole}\n                        inheritedRole={this.props.inheritedRole}\n                      />\n                    ))}\n                </Table.Body>\n              </Table>\n            </div>\n            <div className=\"contents-pagination\">\n              <Pagination\n                current={this.state.currentPage}\n                total={Math.ceil(\n                  this.state.entries?.length / this.state.pageSize,\n                )}\n                onChangePage={this.onChangePage}\n              />\n            </div>\n          </Form>\n        </Segment.Group>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Button\n                    id=\"toolbar-save\"\n                    className=\"save\"\n                    aria-label={this.props.intl.formatMessage(messages.save)}\n                    onClick={this.updateUserRoleSubmit}\n                    loading={this.props.createRequest.loading}\n                  >\n                    <Icon\n                      name={saveSVG}\n                      className=\"circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.save)}\n                    />\n                  </Button>\n                  <Link to=\"/controlpanel\" className=\"cancel\">\n                    <Icon\n                      name={clearSVG}\n                      className=\"circled\"\n                      aria-label={this.props.intl.formatMessage(\n                        messages.cancel,\n                      )}\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.cancel)}\n                    />\n                  </Link>\n                  <Button\n                    id=\"toolbar-add\"\n                    aria-label={this.props.intl.formatMessage(\n                      messages.addUserButtonTitle,\n                    )}\n                    onClick={() => {\n                      this.setState({ showAddUser: true });\n                    }}\n                    loading={this.props.createRequest.loading}\n                  >\n                    <Icon\n                      name={addUserSvg}\n                      size=\"45px\"\n                      color=\"#826A6A\"\n                      title={this.props.intl.formatMessage(\n                        messages.addUserButtonTitle,\n                      )}\n                    />\n                  </Button>\n                </>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      roles: state.roles.roles,\n      users: state.users.users,\n      groups: state.groups.groups,\n      description: state.description,\n      pathname: props.location.pathname,\n      deleteRequest: state.users.delete,\n      createRequest: state.users.create,\n      loadRolesRequest: state.roles,\n      inheritedRole: state.authRole.authenticatedRole,\n    }),\n    (dispatch) =>\n      bindActionCreators(\n        {\n          listRoles,\n          listUsers,\n          listGroups,\n          deleteUser,\n          createUser,\n          updateUser,\n          updateGroup,\n        },\n        dispatch,\n      ),\n  ),\n)(UsersControlpanel);\n","/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/UsersControlpanel\n */\nimport {\n  createGroup,\n  deleteGroup,\n  listGroups,\n  listRoles,\n  updateGroup,\n  authenticatedRole,\n} from '@plone/volto/actions';\nimport {\n  Icon,\n  ModalForm,\n  Toast,\n  Toolbar,\n  RenderGroups,\n  Pagination,\n  Error,\n} from '@plone/volto/components';\nimport { Link } from 'react-router-dom';\nimport { Helmet, messages } from '@plone/volto/helpers';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport addUserSvg from '@plone/volto/icons/add-user.svg';\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\nimport { find, map, pull } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Portal } from 'react-portal';\nimport { connect } from 'react-redux';\n\nimport { toast } from 'react-toastify';\nimport { bindActionCreators, compose } from 'redux';\nimport {\n  Confirm,\n  Container,\n  Button,\n  Form,\n  Input,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\n\n/**\n * GroupsControlpanel class.\n * @class GroupsControlpanel\n * @extends Component\n */\nclass GroupsControlpanel extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    listRoles: PropTypes.func.isRequired,\n    listGroups: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    roles: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        '@type': PropTypes.string,\n        id: PropTypes.string,\n      }),\n    ).isRequired,\n    groups: PropTypes.arrayOf(\n      PropTypes.shape({\n        Title: PropTypes.string,\n        Description: PropTypes.string,\n        roles: PropTypes.arrayOf(PropTypes.string),\n        groupname: PropTypes.string,\n      }),\n    ).isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.onSearchGroups = this.onSearchGroups.bind(this);\n    this.deleteGroup = this.deleteGroup.bind(this);\n    this.onDeleteOk = this.onDeleteOk.bind(this);\n    this.onDeleteCancel = this.onDeleteCancel.bind(this);\n    this.onAddGroupSubmit = this.onAddGroupSubmit.bind(this);\n    this.onAddGroupError = this.onAddGroupError.bind(this);\n    this.onAddGroupSuccess = this.onAddGroupSuccess.bind(this);\n    this.updateGroupRole = this.updateGroupRole.bind(this);\n    this.state = {\n      search: '',\n      addGroupError: '',\n      showDelete: false,\n      groupToDelete: undefined,\n      showAddGroup: false,\n      groupEntries: [],\n      isClient: false,\n      authenticatedRole: props.inheritedRole || [],\n      currentPage: 0,\n      pageSize: 10,\n    };\n  }\n\n  fetchData = async () => {\n    await this.props.listRoles();\n    await this.props.listGroups();\n    this.setState({\n      groupEntries: this.props.groups,\n    });\n  };\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.setState({\n      isClient: true,\n    });\n    this.fetchData();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      (this.props.deleteGroupRequest.loading &&\n        nextProps.deleteGroupRequest.loaded) ||\n      (this.props.createGroupRequest.loading &&\n        nextProps.createGroupRequest.loaded)\n    ) {\n      this.props.listGroups(this.state.search);\n    }\n    if (\n      this.props.createGroupRequest.loading &&\n      nextProps.createGroupRequest.loaded\n    ) {\n      this.onAddGroupSuccess();\n    }\n    if (\n      this.props.createGroupRequest.loading &&\n      nextProps.createGroupRequest.error\n    ) {\n      this.onAddGroupError(nextProps.createGroupRequest.error);\n    }\n    if (\n      this.props.loadRolesRequest.loading &&\n      nextProps.loadRolesRequest.error\n    ) {\n      this.setState({\n        error: nextProps.loadRolesRequest.error,\n      });\n    }\n  }\n\n  getGroupFromProps(value) {\n    return find(this.props.groups, ['@id', value]);\n  }\n\n  /**\n   *\n   *\n   * @param {*} event Event object\n   * @memberof GroupsControlpanel\n   * @returns {undefined}\n   */\n  onSearchGroups(event) {\n    event.preventDefault();\n    this.props.listGroups(this.state.search);\n  }\n\n  /**\n   * On change search handler\n   * @method onChangeSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onChangeSearch(event) {\n    this.setState({\n      search: event.target.value,\n    });\n  }\n\n  /**\n   *\n   *\n   * @param {*} event Event object.\n   * @param {*} { value } id (groupname)\n   * @memberof GroupsControlpanel\n   * @returns {undefined}\n   */\n  deleteGroup(event, { value }) {\n    if (value) {\n      this.setState({\n        showDelete: true,\n        groupToDelete: this.getGroupFromProps(value),\n      });\n    }\n  }\n\n  /**\n   * On delete ok\n   * @method onDeleteOk\n   * @returns {undefined}\n   */\n  onDeleteOk() {\n    if (this.state.groupToDelete) {\n      this.props.deleteGroup(this.state.groupToDelete.id);\n      this.setState({\n        showDelete: false,\n        groupToDelete: undefined,\n      });\n    }\n  }\n\n  /**\n   * On delete cancel\n   * @method onDeleteCancel\n   * @returns {undefined}\n   */\n  onDeleteCancel() {\n    this.setState({\n      showDelete: false,\n      itemsToDelete: [],\n    });\n  }\n\n  /**\n   *\n   * @param {*} name\n   * @param {*} value\n   * @memberof GroupsControlpanel\n   */\n  updateGroupRole(name, value) {\n    this.setState((prevState) => ({\n      groupEntries: map(this.state.groupEntries, (entry) => ({\n        ...entry,\n        roles:\n          entry.id === name && !entry.roles.includes(value)\n            ? [...entry.roles, value]\n            : entry.id !== name\n            ? entry.roles\n            : pull(entry.roles, value),\n      })),\n      authenticatedRole:\n        name === 'AuthenticatedUsers' &&\n        !prevState.authenticatedRole.includes(value)\n          ? [...prevState.authenticatedRole, value]\n          : name !== 'AuthenticatedUsers'\n          ? prevState.authenticatedRole\n          : pull(prevState.authenticatedRole, value),\n    }));\n  }\n  /**\n   * @param {*} event\n   * @memberof GroupsControlpanel\n   */\n  updateGroupRoleSubmit = (e) => {\n    e.stopPropagation();\n    this.state.groupEntries.forEach((item) => {\n      this.props.updateGroup(item.id, item);\n    });\n    this.props.authenticatedRole(this.state.authenticatedRole);\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.updateGroups)}\n      />,\n    );\n  };\n  /**\n   *\n   *\n   * @param {object} data Form data from the ModalForm.\n   * @param {func} callback to set new form data in the ModalForm\n   * @memberof GroupsControlpanel\n   * @returns {undefined}\n   */\n  onAddGroupSubmit(data, callback) {\n    this.props.createGroup(data);\n    this.setState({\n      addGroupSetFormDataCallback: callback,\n    });\n  }\n\n  /**\n   * Handle Errors after createGroup()\n   *\n   * @param {*} error object. Requires the property .message\n   * @memberof GroupsControlpanel\n   * @returns {undefined}\n   */\n  onAddGroupError(error) {\n    this.setState({\n      addGroupError: error.response.body.message,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.groups !== prevProps.groups) {\n      this.setState({\n        groupEntries: this.props.groups,\n      });\n    }\n  }\n\n  /**\n   * Handle Success after createGroup()\n   *\n   * @memberof GroupsControlpanel\n   * @returns {undefined}\n   */\n  onAddGroupSuccess() {\n    this.state.addGroupSetFormDataCallback({});\n    this.setState({\n      showAddGroup: false,\n      addGroupError: undefined,\n      addGroupSetFormDataCallback: undefined,\n    });\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.groupCreated)}\n      />,\n    );\n  }\n\n  /**\n   * On change page\n   * @method onChangePage\n   * @param {object} event Event object.\n   * @param {string} value Page value.\n   * @returns {undefined}\n   */\n  onChangePage = (event, { value }) => {\n    this.setState({\n      currentPage: value,\n    });\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.state.error) {\n      return <Error error={this.state.error} />;\n    }\n    /*let fullnameToDelete = this.state.groupToDelete\n        ? this.state.groupToDelete.fullname\n        : '';*/\n    let groupNameToDelete = this.state.groupToDelete\n      ? this.state.groupToDelete.id\n      : '';\n\n    return (\n      <Container className=\"users-control-panel\">\n        <Helmet title={this.props.intl.formatMessage(messages.groups)} />\n        <div className=\"container\">\n          <Confirm\n            open={this.state.showDelete}\n            header={this.props.intl.formatMessage(\n              messages.deleteGroupConfirmTitle,\n            )}\n            content={\n              <div className=\"content\">\n                <ul className=\"content\">\n                  <FormattedMessage\n                    id=\"Do you really want to delete the group {groupname}?\"\n                    defaultMessage=\"Do you really want to delete the group {groupname}?\"\n                    values={{\n                      groupname: <b>{groupNameToDelete}</b>,\n                    }}\n                  />\n                </ul>\n              </div>\n            }\n            onCancel={this.onDeleteCancel}\n            onConfirm={this.onDeleteOk}\n            size={null}\n          />\n          {this.state.showAddGroup ? (\n            <ModalForm\n              open={this.state.showAddGroup}\n              className=\"modal\"\n              onSubmit={this.onAddGroupSubmit}\n              submitError={this.state.addGroupError}\n              onCancel={() => this.setState({ showAddGroup: false })}\n              title={this.props.intl.formatMessage(messages.addGroupsFormTitle)}\n              loading={this.props.createGroupRequest.loading}\n              schema={{\n                fieldsets: [\n                  {\n                    id: 'default',\n                    title: 'FIXME: Group Data',\n                    fields: [\n                      'title',\n                      'description',\n                      'groupname',\n                      'email',\n                      'roles',\n                    ],\n                  },\n                ],\n                properties: {\n                  title: {\n                    title: this.props.intl.formatMessage(\n                      messages.addGroupsFormTitleTitle,\n                    ),\n                    type: 'string',\n                    description: '',\n                  },\n                  description: {\n                    title: this.props.intl.formatMessage(\n                      messages.addGroupsFormDescriptionTitle,\n                    ),\n                    type: 'string',\n                    description: '',\n                  },\n                  groupname: {\n                    title: this.props.intl.formatMessage(\n                      messages.addGroupsFormGroupNameTitle,\n                    ),\n                    type: 'string',\n                    description:\n                      'A unique identifier for the group. Can not be changed after creation.',\n                  },\n                  email: {\n                    title: this.props.intl.formatMessage(\n                      messages.addGroupsFormEmailTitle,\n                    ),\n                    type: 'string',\n                    description: '',\n                    widget: 'email',\n                  },\n                  roles: {\n                    title: this.props.intl.formatMessage(\n                      messages.addGroupsFormRolesTitle,\n                    ),\n                    type: 'array',\n                    choices: this.props.roles.map((role) => [role.id, role.id]),\n                    noValueOption: false,\n                    description: '',\n                  },\n                },\n                required: ['groupname'],\n              }}\n            />\n          ) : null}\n        </div>\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage id=\"Groups\" defaultMessage=\"Groups\" />\n          </Segment>\n          <Segment secondary>\n            <FormattedMessage\n              id=\"Groups are logical collections of users, such as departments and business units. Groups are not directly related to permissions on a global level, you normally use Roles for that - and let certain Groups have a particular role. The symbol{plone_svg}indicates a role inherited from membership in another group.\"\n              defaultMessage=\"Groups are logical collections of users, such as departments and business units. Groups are not directly related to permissions on a global level, you normally use Roles for that - and let certain Groups have a particular role. The symbol{plone_svg}indicates a role inherited from membership in another group.\"\n              values={{\n                plone_svg: (\n                  <Icon\n                    name={ploneSVG}\n                    size=\"20px\"\n                    color=\"#007EB1\"\n                    title={'plone-svg'}\n                  />\n                ),\n              }}\n            />\n          </Segment>\n          <Segment>\n            <Form onSubmit={this.onSearchGroups}>\n              <Form.Field>\n                <Input\n                  name=\"SearchableText\"\n                  action={{ icon: 'search' }}\n                  placeholder={this.props.intl.formatMessage(\n                    messages.searchGroups,\n                  )}\n                  onChange={this.onChangeSearch}\n                  id=\"group-search-input\"\n                />\n              </Form.Field>\n            </Form>\n          </Segment>\n          <Form>\n            <div className=\"table\">\n              <Table padded striped attached unstackable>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>\n                      <FormattedMessage\n                        id=\"Groupname\"\n                        defaultMessage=\"Groupname\"\n                      />\n                    </Table.HeaderCell>\n                    {this.props.roles.map((role) => (\n                      <Table.HeaderCell key={role.id}>\n                        {role.id}\n                      </Table.HeaderCell>\n                    ))}\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Actions\" defaultMessage=\"Actions\" />\n                    </Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body data-group=\"groups\">\n                  {this.state.groupEntries\n                    .slice(\n                      this.state.currentPage * 10,\n                      this.state.pageSize * (this.state.currentPage + 1),\n                    )\n                    .map((group) => (\n                      <RenderGroups\n                        key={group.id}\n                        onDelete={this.deleteGroup}\n                        roles={this.props.roles}\n                        group={group}\n                        updateGroups={this.updateGroupRole}\n                        inheritedRole={this.state.authenticatedRole}\n                      />\n                    ))}\n                </Table.Body>\n              </Table>\n            </div>\n            <div className=\"contents-pagination\">\n              <Pagination\n                current={this.state.currentPage}\n                total={Math.ceil(\n                  this.state.groupEntries?.length / this.state.pageSize,\n                )}\n                onChangePage={this.onChangePage}\n              />\n            </div>\n          </Form>\n        </Segment.Group>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Button\n                    id=\"toolbar-save\"\n                    className=\"save\"\n                    aria-label={this.props.intl.formatMessage(messages.save)}\n                    onClick={this.updateGroupRoleSubmit}\n                    loading={this.props.createGroupRequest.loading}\n                  >\n                    <Icon\n                      name={saveSVG}\n                      className=\"circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.save)}\n                    />\n                  </Button>\n                  <Link to=\"/controlpanel\" className=\"cancel\">\n                    <Icon\n                      name={clearSVG}\n                      className=\"circled\"\n                      aria-label={this.props.intl.formatMessage(\n                        messages.cancel,\n                      )}\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.cancel)}\n                    />\n                  </Link>\n                  <Button\n                    id=\"toolbar-add\"\n                    aria-label={this.props.intl.formatMessage(\n                      messages.addGroupsButtonTitle,\n                    )}\n                    onClick={() => {\n                      this.setState({ showAddGroup: true });\n                    }}\n                    loading={this.props.createGroupRequest.loading}\n                  >\n                    <Icon\n                      name={addUserSvg}\n                      size=\"45px\"\n                      color=\"#826A6A\"\n                      title={this.props.intl.formatMessage(\n                        messages.addGroupsButtonTitle,\n                      )}\n                    />\n                  </Button>\n                </>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      roles: state.roles.roles,\n      groups: state.groups.groups,\n      description: state.description,\n      pathname: props.location.pathname,\n      deleteGroupRequest: state.groups.delete,\n      createGroupRequest: state.groups.create,\n      loadRolesRequest: state.roles,\n      inheritedRole: state.authRole.authenticatedRole,\n    }),\n    (dispatch) =>\n      bindActionCreators(\n        {\n          listRoles,\n          listGroups,\n          deleteGroup,\n          createGroup,\n          updateGroup,\n          authenticatedRole,\n        },\n        dispatch,\n      ),\n  ),\n)(GroupsControlpanel);\n","/**\n * Moderate comments component.\n * @module components/manage/Controlpanels/ModerateComments\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getParentUrl, Helmet } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Container, Button, Table } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { deleteComment, searchContent } from '@plone/volto/actions';\nimport {\n  CommentEditModal,\n  FormattedRelativeDate,\n  Icon,\n  Toolbar,\n} from '@plone/volto/components';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  ModerateComments: {\n    id: 'Moderate comments',\n    defaultMessage: 'Moderate comments',\n  },\n});\n\n/**\n * ModerateCommentsComponent class.\n * @class ModerateComments\n * @extends Component\n */\nclass ModerateComments extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    searchContent: PropTypes.func.isRequired,\n    deleteComment: PropTypes.func.isRequired,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        author_name: PropTypes.string,\n        creation_date: PropTypes.string,\n        text: PropTypes.shape({\n          data: PropTypes.string,\n        }),\n        is_deletable: PropTypes.bool,\n        is_editable: PropTypes.bool,\n      }),\n    ).isRequired,\n    deleteRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Comments\n   */\n  constructor(props) {\n    super(props);\n    this.onDelete = this.onDelete.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onEditOk = this.onEditOk.bind(this);\n    this.onEditCancel = this.onEditCancel.bind(this);\n    this.state = {\n      showEdit: false,\n      editId: null,\n      editText: null,\n      isClient: false,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.searchContent('', {\n      portal_type: 'Discussion Item',\n      fullobjects: true,\n    });\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.deleteRequest.loading && nextProps.deleteRequest.loaded) {\n      this.props.searchContent('', {\n        portal_type: 'Discussion Item',\n        fullobjects: true,\n      });\n    }\n  }\n\n  /**\n   * Delete handler\n   * @method onDelete\n   * @param {Object} event Event object.\n   * @param {string} value Delete value.\n   * @returns {undefined}\n   */\n  onDelete(event, { value }) {\n    this.props.deleteComment(value);\n  }\n\n  /**\n   * Edit handler\n   * @method onEdit\n   * @param {Object} event Event object.\n   * @param {string} value Delete value.\n   * @returns {undefined}\n   */\n  onEdit(event, { value }) {\n    this.setState({\n      showEdit: true,\n      editId: value.id,\n      editText: value.text,\n    });\n  }\n\n  /**\n   * On edit ok\n   * @method onEditOk\n   * @returns {undefined}\n   */\n  onEditOk() {\n    this.setState({\n      showEdit: false,\n      editId: null,\n      editText: null,\n    });\n    this.props.searchContent('', {\n      portal_type: 'Discussion Item',\n      fullobjects: true,\n    });\n  }\n\n  /**\n   * On edit cancel\n   * @method onEditCancel\n   * @returns {undefined}\n   */\n  onEditCancel() {\n    this.setState({\n      showEdit: false,\n      editId: null,\n      editText: null,\n    });\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <div id=\"page-moderate-comments\">\n        <CommentEditModal\n          open={this.state.showEdit}\n          onCancel={this.onEditCancel}\n          onOk={this.onEditOk}\n          id={this.state.editId}\n          text={this.state.editText}\n        />\n        <Helmet\n          title={this.props.intl.formatMessage(messages.ModerateComments)}\n        />\n        <Container>\n          <article id=\"content\">\n            <header>\n              <h1 className=\"documentFirstHeading\">\n                <FormattedMessage\n                  id=\"Moderate comments\"\n                  defaultMessage=\"Moderate comments\"\n                />\n              </h1>\n            </header>\n            <section id=\"content-core\">\n              <Table compact singleLine striped>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>\n                      <FormattedMessage\n                        id=\"Commenter\"\n                        defaultMessage=\"Commenter\"\n                      />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Date\" defaultMessage=\"Date\" />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Comment\" defaultMessage=\"Comment\" />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Action\" defaultMessage=\"Action\" />\n                    </Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {this.props.items.map((item) => (\n                    <Table.Row key={item['@id']}>\n                      <Table.Cell>{item.author_name}</Table.Cell>\n                      <Table.Cell>\n                        <FormattedRelativeDate date={item.creation_date} />\n                      </Table.Cell>\n                      <Table.Cell>{item.text.data}</Table.Cell>\n                      <Table.Cell>\n                        {item.is_editable && (\n                          <Button\n                            onClick={this.onEdit}\n                            value={{ id: item['@id'], text: item.text.data }}\n                            primary\n                          >\n                            <FormattedMessage id=\"Edit\" defaultMessage=\"Edit\" />\n                          </Button>\n                        )}\n                        {item.is_deletable && (\n                          <Button\n                            onClick={this.onDelete}\n                            value={item['@id']}\n                            color=\"red\"\n                          >\n                            <FormattedMessage\n                              id=\"Delete\"\n                              defaultMessage=\"Delete\"\n                            />\n                          </Button>\n                        )}\n                      </Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </section>\n          </article>\n        </Container>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link className=\"item\" to=\"#\" onClick={() => this.onCancel()}>\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      items: state.search.items,\n      deleteRequest: state.comments.delete,\n      pathname: props.location.pathname,\n    }),\n    { deleteComment, searchContent },\n  ),\n)(ModerateComments);\n","/**\n * Version Overview component.\n * @module components/manage/Controlpanels/VersionOverview\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { isEmpty } from 'lodash';\n\nimport { version as voltoVersion } from '../../../../package.json';\n\nimport { defineMessages, useIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  no_addons: {\n    id: 'No addons found',\n    defaultMessage: 'No addons found',\n  },\n});\n\nconst VersionOverview = ({\n  cmf_version,\n  debug_mode,\n  pil_version,\n  plone_version,\n  plone_restapi_version,\n  python_version,\n  zope_version,\n}) => {\n  const intl = useIntl();\n  const { addonsInfo } = config.settings;\n\n  return (\n    <>\n      <ul\n        style={{\n          fontSize: '16px',\n          fontFamily: 'Monospace',\n          paddingLeft: '1rem',\n        }}\n      >\n        {voltoVersion && <li>Volto {voltoVersion}</li>}\n        <li>Plone {plone_version}</li>\n        <li>plone.restapi {plone_restapi_version}</li>\n        <li>CMF {cmf_version}</li>\n        <li>Zope {zope_version}</li>\n        <li>Python {python_version}</li>\n        <li>PIL {pil_version}</li>\n      </ul>\n      <h3>Add-ons</h3>\n      {isEmpty(addonsInfo) ? (\n        <p>{intl.formatMessage(messages.no_addons)}</p>\n      ) : (\n        <ul style={{ fontSize: '16px', fontFamily: 'Monospace' }}>\n          {addonsInfo.map((addon) => (\n            <li>{`${addon.name} ${addon.version || ''}`}</li>\n          ))}\n        </ul>\n      )}\n      {debug_mode !== 'No' && (\n        <p>\n          <FormattedMessage\n            id=\"Warning Regarding debug mode\"\n            defaultMessage=\"You are running in 'debug mode'. This mode is intended for sites that are under development. This allows many configuration changes to be immediately visible, but will make your site run more slowly. To turn off debug mode, stop the server, set 'debug-mode=off' in your buildout.cfg, re-run bin/buildout and then restart the server process.\"\n          />\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default VersionOverview;\n","/**\n * Delete container.\n * @module components/manage/Delete/Delete\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { Button, Container, List, Segment } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\n\nimport { deleteContent, getContent } from '@plone/volto/actions';\nimport { Toolbar } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  delete: {\n    id: 'Delete',\n    defaultMessage: 'Delete',\n  },\n  ok: {\n    id: 'Ok',\n    defaultMessage: 'Ok',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n});\n\n/**\n * Delete container class.\n * @class Delete\n * @extends Component\n */\nclass Delete extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    deleteContent: PropTypes.func.isRequired,\n    getContent: PropTypes.func.isRequired,\n    deleteRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    content: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n    returnUrl: PropTypes.string,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    content: null,\n    returnUrl: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.deleteRequest.loading && nextProps.deleteRequest.loaded) {\n      this.props.history.push(\n        this.props.returnUrl ||\n          this.props.pathname.replace('/delete', '').replace(/\\/[^/]*$/, ''),\n      );\n    }\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getContent(this.props.pathname.split('/delete')[0]);\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @returns {undefined}\n   */\n  onSubmit() {\n    this.props.deleteContent(this.props.pathname.replace('/delete', ''));\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(this.props.pathname.replace('/delete', ''));\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.props.content) {\n      return (\n        <div id=\"page-delete\">\n          <Helmet title={this.props.intl.formatMessage(messages.delete)} />\n          <Container>\n            <Segment.Group raised>\n              <Segment className=\"primary\">\n                <FormattedMessage\n                  id=\"Do you really want to delete this item?\"\n                  defaultMessage=\"Do you really want to delete this item?\"\n                />\n              </Segment>\n              <Segment attached>\n                <List bulleted>\n                  <List.Item>{this.props.content.title}</List.Item>\n                </List>\n              </Segment>\n              <Segment className=\"actions\" clearing>\n                <Button\n                  basic\n                  circular\n                  primary\n                  floated=\"right\"\n                  icon=\"arrow right\"\n                  aria-label={this.props.intl.formatMessage(messages.ok)}\n                  title={this.props.intl.formatMessage(messages.ok)}\n                  size=\"big\"\n                  onClick={this.onSubmit}\n                />\n                <Button\n                  basic\n                  circular\n                  secondary\n                  icon=\"remove\"\n                  aria-label={this.props.intl.formatMessage(messages.cancel)}\n                  title={this.props.intl.formatMessage(messages.cancel)}\n                  floated=\"right\"\n                  size=\"big\"\n                  onClick={this.onCancel}\n                />\n              </Segment>\n            </Segment.Group>\n          </Container>\n          {this.state.isClient && (\n            <Portal node={document.getElementById('toolbar')}>\n              <Toolbar\n                pathname={this.props.pathname}\n                hideDefaultViewButtons\n                inner={<span />}\n              />\n            </Portal>\n          )}\n        </div>\n      );\n    }\n    return <div />;\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      content: state.content.data,\n      deleteRequest: state.content.delete,\n      pathname: props.location.pathname,\n      returnUrl: qs.parse(props.location.search).return_url,\n    }),\n    { deleteContent, getContent },\n  ),\n)(Delete);\n","/**\n * Diff component.\n * @module components/manage/Diff/Diff\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { filter, isEqual, map } from 'lodash';\nimport { Container, Button, Dropdown, Grid, Table } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\n\nimport { getDiff, getSchema, getHistory } from '@plone/volto/actions';\nimport {\n  getBaseUrl,\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  hasBlocksData,\n} from '@plone/volto/helpers';\nimport {\n  DiffField,\n  FormattedDate,\n  Icon,\n  Toolbar,\n} from '@plone/volto/components';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  diff: {\n    id: 'Diff',\n    defaultMessage: 'Diff',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  split: {\n    id: 'Split',\n    defaultMessage: 'Split',\n  },\n  unified: {\n    id: 'Unified',\n    defaultMessage: 'Unified',\n  },\n});\n\n/**\n * Diff class.\n * @class Diff\n * @extends Component\n */\nclass Diff extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getDiff: PropTypes.func.isRequired,\n    getSchema: PropTypes.func.isRequired,\n    getHistory: PropTypes.func.isRequired,\n    schema: PropTypes.objectOf(PropTypes.any),\n    pathname: PropTypes.string.isRequired,\n    one: PropTypes.string.isRequired,\n    two: PropTypes.string.isRequired,\n    view: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n      }),\n    ).isRequired,\n    historyEntries: PropTypes.arrayOf(\n      PropTypes.shape({\n        version: PropTypes.number,\n        time: PropTypes.string,\n        actor: PropTypes.shape({ fullname: PropTypes.string }),\n      }),\n    ).isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    schema: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs DiffComponent\n   */\n  constructor(props) {\n    super(props);\n    this.onChangeOne = this.onChangeOne.bind(this);\n    this.onChangeTwo = this.onChangeTwo.bind(this);\n    this.onSelectView = this.onSelectView.bind(this);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSchema(this.props.type);\n    this.props.getHistory(getBaseUrl(this.props.pathname));\n    this.props.getDiff(\n      getBaseUrl(this.props.pathname),\n      this.props.one,\n      this.props.two,\n    );\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.pathname !== nextProps.pathname ||\n      this.props.one !== nextProps.one ||\n      this.props.two !== nextProps.two\n    ) {\n      this.props.getDiff(\n        getBaseUrl(nextProps.pathname),\n        nextProps.one,\n        nextProps.two,\n      );\n    }\n  }\n\n  /**\n   * On select view handler\n   * @method onSelectView\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onSelectView(event, { value }) {\n    this.props.history.push(\n      `${this.props.pathname}?one=${this.props.one}&two=${this.props.two}&view=${value}`,\n    );\n  }\n\n  /**\n   * On change one handler\n   * @method onChangeOne\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onChangeOne(event, { value }) {\n    this.props.history.push(\n      `${this.props.pathname}?one=${value}&two=${this.props.two}&view=${this.props.view}`,\n    );\n  }\n\n  /**\n   * On change two handler\n   * @method onChangeTwo\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onChangeTwo(event, { value }) {\n    this.props.history.push(\n      `${this.props.pathname}?one=${this.props.one}&two=${value}&view=${this.props.view}`,\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const versions = map(\n      filter(this.props.historyEntries, (entry) => 'version' in entry),\n      (entry, index) => ({\n        text: (\n          <>\n            {index === 0 ? 'Current' : entry.version}&nbsp;(\n            <FormattedDate date={entry.time} long className=\"text\" />, &nbsp;\n            {entry.actor.fullname})\n          </>\n        ),\n        value: `${entry.version}`,\n        key: `${entry.version}`,\n      }),\n    );\n\n    return (\n      <Container id=\"page-diff\">\n        <Helmet title={this.props.intl.formatMessage(messages.diff)} />\n        <h1>\n          <FormattedMessage\n            id=\"Difference between revision {one} and {two} of {title}\"\n            defaultMessage=\"Difference between revision {one} and {two} of {title}\"\n            values={{\n              one: this.props.one,\n              two: this.props.two,\n              title: this.props.title,\n            }}\n          />\n        </h1>\n        <Grid>\n          <Grid.Column width={9}>\n            <p className=\"description\">\n              <FormattedMessage\n                id=\"You can view the difference of the revisions below.\"\n                defaultMessage=\"You can view the difference of the revisions below.\"\n              />\n            </p>\n          </Grid.Column>\n          <Grid.Column width={3} textAlign=\"right\">\n            <Button.Group>\n              {map(\n                [\n                  {\n                    id: 'split',\n                    label: this.props.intl.formatMessage(messages.split),\n                  },\n                  {\n                    id: 'unified',\n                    label: this.props.intl.formatMessage(messages.unified),\n                  },\n                ],\n                (view) => (\n                  <Button\n                    key={view.id}\n                    value={view.id}\n                    active={this.props.view === view.id}\n                    onClick={this.onSelectView}\n                  >\n                    {view.label}\n                  </Button>\n                ),\n              )}\n            </Button.Group>\n          </Grid.Column>\n        </Grid>\n        {this.props.historyEntries.length > 0 && (\n          <Table basic=\"very\">\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell width={6}>\n                  <FormattedMessage id=\"Base\" defaultMessage=\"Base\" />\n                  <Dropdown\n                    onChange={this.onChangeOne}\n                    value={this.props.one}\n                    selection\n                    fluid\n                    options={versions}\n                  />\n                </Table.HeaderCell>\n                <Table.HeaderCell width={6}>\n                  <FormattedMessage id=\"Compare\" defaultMessage=\"Compare\" />\n                  <Dropdown\n                    onChange={this.onChangeTwo}\n                    value={this.props.two}\n                    selection\n                    fluid\n                    options={versions}\n                  />\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n          </Table>\n        )}\n        {this.props.schema &&\n          this.props.data.length > 0 &&\n          map(this.props.schema.fieldsets, (fieldset) =>\n            map(\n              fieldset.fields,\n              (field) =>\n                !isEqual(\n                  this.props.data[0][field],\n                  this.props.data[1][field],\n                ) &&\n                field !== getBlocksFieldname(this.props.data[0]) &&\n                field !== getBlocksLayoutFieldname(this.props.data[0]) && (\n                  <DiffField\n                    key={field}\n                    one={this.props.data[0][field]}\n                    two={this.props.data[1][field]}\n                    schema={this.props.schema.properties[field]}\n                    view={this.props.view}\n                  />\n                ),\n            ),\n          )}\n        {this.props.schema &&\n          this.props.data.length > 0 &&\n          hasBlocksData(this.props.data[0]) &&\n          (!isEqual(\n            this.props.data[0][getBlocksFieldname(this.props.data[0])],\n            this.props.data[1][getBlocksFieldname(this.props.data[1])],\n          ) ||\n            !isEqual(\n              this.props.data[0][getBlocksLayoutFieldname(this.props.data[0])],\n              this.props.data[1][getBlocksLayoutFieldname(this.props.data[1])],\n            )) && (\n            <DiffField\n              one={this.props.data[0][getBlocksFieldname(this.props.data[0])]}\n              two={this.props.data[1][getBlocksFieldname(this.props.data[1])]}\n              contentOne={this.props.data[0]}\n              contentTwo={this.props.data[1]}\n              schema={\n                this.props.schema.properties[\n                  getBlocksFieldname(this.props.data[0])\n                ]\n              }\n              view={this.props.view}\n            />\n          )}\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link\n                  to={`${getBaseUrl(this.props.pathname)}/history`}\n                  className=\"item\"\n                >\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      data: state.diff.data,\n      historyEntries: state.history.entries,\n      schema: state.schema.schema,\n      pathname: props.location.pathname,\n      one: qs.parse(props.location.search).one,\n      two: qs.parse(props.location.search).two,\n      view: qs.parse(props.location.search).view || 'split',\n      title: state.content.data.title,\n      type: state.content.data['@type'],\n    }),\n    { getDiff, getSchema, getHistory },\n  ),\n)(Diff);\n","/**\n * Edit container.\n * @module components/manage/Edit/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { asyncConnect } from '@plone/volto/helpers';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Button, Grid, Menu } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport qs from 'query-string';\nimport { find } from 'lodash';\nimport { toast } from 'react-toastify';\n\nimport {\n  Forbidden,\n  Form,\n  Icon,\n  Sidebar,\n  Toast,\n  Toolbar,\n  Unauthorized,\n  CompareLanguages,\n  TranslationObject,\n} from '@plone/volto/components';\nimport {\n  updateContent,\n  getContent,\n  lockContent,\n  unlockContent,\n  getSchema,\n  listActions,\n} from '@plone/volto/actions';\nimport { getBaseUrl, hasBlocksData } from '@plone/volto/helpers';\nimport { preloadLazyLibs } from '@plone/volto/helpers/Loadable';\n\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  edit: {\n    id: 'Edit {title}',\n    defaultMessage: 'Edit {title}',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n});\n\n/**\n * Edit class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateContent: PropTypes.func.isRequired,\n    getContent: PropTypes.func.isRequired,\n    getSchema: PropTypes.func.isRequired,\n    lockContent: PropTypes.func.isRequired,\n    unlockContent: PropTypes.func.isRequired,\n    updateRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    schemaRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    getRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    returnUrl: PropTypes.string,\n    content: PropTypes.shape({\n      '@type': PropTypes.string,\n    }),\n    schema: PropTypes.objectOf(PropTypes.any),\n    objectActions: PropTypes.array,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    schema: null,\n    content: null,\n    returnUrl: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs EditComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      visual: true,\n      isClient: false,\n      error: null,\n      formSelected: 'editForm',\n    };\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.getRequest.loaded && this.props.content?.['@type']) {\n      this.props.getSchema(\n        this.props.content['@type'],\n        getBaseUrl(this.props.pathname),\n      );\n    }\n    this.setState({\n      isClient: true,\n      comparingLanguage: null,\n    });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.schemaRequest.loading && nextProps.schemaRequest.loaded) {\n      if (!hasBlocksData(nextProps.schema.properties)) {\n        this.setState({\n          visual: false,\n        });\n      }\n    }\n    // Hack for make the Plone site editable by Volto Editor without checkings\n    if (this.props?.content?.['@type'] === 'Plone Site') {\n      this.setState({\n        visual: true,\n      });\n    }\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.history.push(\n        this.props.returnUrl || getBaseUrl(this.props.pathname),\n      );\n    }\n\n    if (this.props.updateRequest.loading && nextProps.updateRequest.error) {\n      const message =\n        nextProps.updateRequest.error?.response?.body?.error?.message ||\n        nextProps.updateRequest.error?.response?.body?.message ||\n        nextProps.updateRequest.error?.response?.text ||\n        '';\n\n      const error =\n        new DOMParser().parseFromString(message, 'text/html')?.all[0]\n          ?.textContent || message;\n\n      this.setState({ error: error });\n\n      toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.error)}\n          content={`${nextProps.updateRequest.error.status} ${error}`}\n        />,\n      );\n    }\n\n    if (\n      nextProps.compare_to &&\n      ((this.state.compareTo &&\n        nextProps.compare_to['@id'] !== this.state.compareTo['@id']) ||\n        !this.state.compareTo)\n    ) {\n      this.setState({ compareTo: nextProps.compare_to });\n    }\n  }\n\n  /**\n   * Component will unmount\n   * @method componentWillUnmount\n   * @returns {undefined}\n   */\n  componentWillUnmount() {\n    if (this.props.content?.lock?.locked) {\n      this.props.unlockContent(getBaseUrl(this.props.pathname));\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    const lock_token = this.props.content?.lock?.token;\n    const headers = lock_token ? { 'Lock-Token': lock_token } : {};\n    this.props.updateContent(getBaseUrl(this.props.pathname), data, headers);\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(\n      this.props.returnUrl || getBaseUrl(this.props.pathname),\n    );\n  }\n\n  setComparingLanguage(lang, content_id) {\n    this.setState({ comparingLanguage: lang });\n    this.props.getContent(content_id, null, 'compare_to', null);\n  }\n\n  form = React.createRef();\n  toolbarRef = React.createRef;\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const editPermission = find(this.props.objectActions, { id: 'edit' });\n\n    const pageEdit = (\n      <Form\n        isEditForm\n        ref={this.form}\n        schema={this.props.schema}\n        type={this.props.content?.['@type']}\n        formData={this.props.content}\n        requestError={this.state.error}\n        onSubmit={this.onSubmit}\n        hideActions\n        pathname={this.props.pathname}\n        visual={this.state.visual}\n        title={\n          this.props?.schema?.title\n            ? this.props.intl.formatMessage(messages.edit, {\n                title: this.props.schema.title,\n              })\n            : null\n        }\n        loading={this.props.updateRequest.loading}\n        isFormSelected={this.state.formSelected === 'editForm'}\n        onSelectForm={() => {\n          this.setState({ formSelected: 'editForm' });\n        }}\n      />\n    );\n\n    return (\n      <div id=\"page-edit\">\n        {this.props.objectActions?.length > 0 && (\n          <>\n            {editPermission && (\n              <>\n                <Helmet\n                  title={\n                    this.props?.schema?.title\n                      ? this.props.intl.formatMessage(messages.edit, {\n                          title: this.props.schema.title,\n                        })\n                      : null\n                  }\n                >\n                  {this.props.content?.language && (\n                    <html lang={this.props.content.language.token} />\n                  )}\n                </Helmet>\n\n                {this.state.comparingLanguage && this.state.compareTo ? (\n                  <Grid\n                    celled=\"internally\"\n                    stackable\n                    columns={2}\n                    id=\"page-compare-translation\"\n                  >\n                    <Grid.Column className=\"source-object\">\n                      <TranslationObject\n                        translationObject={this.state.compareTo}\n                        schema={this.props.schema}\n                        pathname={this.props.pathname}\n                        visual={this.state.visual}\n                        isFormSelected={\n                          this.state.formSelected === 'translationObjectForm'\n                        }\n                        onSelectForm={() => {\n                          this.setState({\n                            formSelected: 'translationObjectForm',\n                          });\n                        }}\n                      />\n                    </Grid.Column>\n                    <Grid.Column>\n                      <div className=\"new-translation\">\n                        <Menu pointing secondary attached tabular>\n                          <Menu.Item\n                            name={this.props.content.language?.token.toUpperCase()}\n                            active={true}\n                          >\n                            {this.props.content.language?.token.toUpperCase()}\n                          </Menu.Item>\n                        </Menu>\n\n                        {pageEdit}\n                      </div>\n                    </Grid.Column>\n                  </Grid>\n                ) : (\n                  pageEdit\n                )}\n              </>\n            )}\n\n            {editPermission && this.state.visual && this.state.isClient && (\n              <Portal node={document.getElementById('sidebar')}>\n                <Sidebar />\n              </Portal>\n            )}\n          </>\n        )}\n        {!editPermission && (\n          <>\n            {this.props.token ? (\n              <Forbidden\n                pathname={this.props.pathname}\n                staticContext={this.props.staticContext}\n              />\n            ) : (\n              <Unauthorized\n                pathname={this.props.pathname}\n                staticContext={this.props.staticContext}\n              />\n            )}\n          </>\n        )}\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Button\n                    id=\"toolbar-save\"\n                    className=\"save\"\n                    aria-label={this.props.intl.formatMessage(messages.save)}\n                    onClick={() => this.form.current.onSubmit()}\n                    disabled={this.props.updateRequest.loading}\n                    loading={this.props.updateRequest.loading}\n                  >\n                    <Icon\n                      name={saveSVG}\n                      className=\"circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.save)}\n                    />\n                  </Button>\n                  <Button\n                    className=\"cancel\"\n                    aria-label={this.props.intl.formatMessage(messages.cancel)}\n                    onClick={() => this.onCancel()}\n                  >\n                    <Icon\n                      name={clearSVG}\n                      className=\"circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.cancel)}\n                    />\n                  </Button>\n\n                  {config.settings.isMultilingual && (\n                    <CompareLanguages\n                      content={this.props.content}\n                      visual={this.state.visual}\n                      setComparingLanguage={(lang, id) => {\n                        this.setComparingLanguage(lang, id);\n                      }}\n                      comparingLanguage={this.state.comparingLanguage}\n                      pathname={this.props.location.pathname}\n                      toolbarRef={this.toolbarRef}\n                    />\n                  )}\n                </>\n              }\n            />\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport const __test__ = compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      objectActions: state.actions.actions.object,\n      token: state.userSession.token,\n      content: state.content.data,\n      compare_to: state.content.subrequests?.compare_to?.data,\n      schema: state.schema.schema,\n      getRequest: state.content.get,\n      schemaRequest: state.schema,\n      updateRequest: state.content.update,\n      createRequest: state.content.create,\n      pathname: props.location.pathname,\n      returnUrl: qs.parse(props.location.search).return_url,\n    }),\n    {\n      updateContent,\n      getContent,\n      getSchema,\n      lockContent,\n      unlockContent,\n    },\n  ),\n)(Edit);\n\nexport default compose(\n  injectIntl,\n  asyncConnect([\n    {\n      key: 'actions',\n      promise: async ({ location, store: { dispatch } }) => {\n        await dispatch(listActions(getBaseUrl(location.pathname)));\n      },\n    },\n    {\n      key: 'content',\n      promise: async ({ location, store: { dispatch } }) => {\n        const content = await dispatch(\n          getContent(getBaseUrl(location.pathname)),\n        );\n        if (content?.lock !== undefined) {\n          await dispatch(lockContent(getBaseUrl(location.pathname)));\n        }\n        return content;\n      },\n    },\n  ]),\n  connect(\n    (state, props) => ({\n      objectActions: state.actions.actions.object,\n      token: state.userSession.token,\n      content: state.content.data,\n      compare_to: state.content.subrequests?.compare_to?.data,\n      schema: state.schema.schema,\n      getRequest: state.content.get,\n      schemaRequest: state.schema,\n      updateRequest: state.content.update,\n      pathname: props.location.pathname,\n      returnUrl: qs.parse(props.location.search).return_url,\n    }),\n    {\n      updateContent,\n      getContent,\n      getSchema,\n      lockContent,\n      unlockContent,\n    },\n  ),\n  preloadLazyLibs('cms'),\n)(Edit);\n","/**\n * Modal form component.\n * @module components/manage/Form/ModalForm\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { keys, map } from 'lodash';\nimport {\n  Button,\n  Form as UiForm,\n  Header,\n  Menu,\n  Message,\n  Modal,\n  Dimmer,\n  Loader,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { FormValidation } from '@plone/volto/helpers';\nimport { Field, Icon } from '@plone/volto/components';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  required: {\n    id: 'Required input is missing.',\n    defaultMessage: 'Required input is missing.',\n  },\n  minLength: {\n    id: 'Minimum length is {len}.',\n    defaultMessage: 'Minimum length is {len}.',\n  },\n  uniqueItems: {\n    id: 'Items must be unique.',\n    defaultMessage: 'Items must be unique.',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n});\n\n/**\n * Modal form container class.\n * @class ModalForm\n * @extends Component\n */\nclass ModalForm extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    schema: PropTypes.shape({\n      fieldsets: PropTypes.arrayOf(\n        PropTypes.shape({\n          fields: PropTypes.arrayOf(PropTypes.string),\n          id: PropTypes.string,\n          title: PropTypes.string,\n        }),\n      ),\n      properties: PropTypes.objectOf(PropTypes.any),\n      required: PropTypes.arrayOf(PropTypes.string),\n    }).isRequired,\n    title: PropTypes.string.isRequired,\n    formData: PropTypes.objectOf(PropTypes.any),\n    submitError: PropTypes.string,\n    onSubmit: PropTypes.func.isRequired,\n    onCancel: PropTypes.func,\n    open: PropTypes.bool,\n    submitLabel: PropTypes.string,\n    loading: PropTypes.bool,\n    loadingMessage: PropTypes.string,\n    className: PropTypes.string,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    submitLabel: null,\n    onCancel: null,\n    formData: {},\n    open: true,\n    loading: null,\n    loadingMessage: null,\n    submitError: null,\n    className: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ModalForm\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTab: 0,\n      errors: {},\n      isFormPristine: true,\n      formData: props.formData,\n    };\n    this.selectTab = this.selectTab.bind(this);\n    this.onChangeField = this.onChangeField.bind(this);\n    this.onBlurField = this.onBlurField.bind(this);\n    this.onClickInput = this.onClickInput.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Change field handler\n   * @method onChangeField\n   * @param {string} id Id of the field\n   * @param {*} value Value of the field\n   * @returns {undefined}\n   */\n  onChangeField(id, value) {\n    this.setState({\n      formData: {\n        ...this.state.formData,\n        [id]: value,\n      },\n    });\n  }\n\n  /**\n   * If user clicks on input, the form will be not considered pristine\n   * this will avoid onBlur effects without interraction with the form\n   * @param {Object} e event\n   */\n  onClickInput(e) {\n    this.setState({ isFormPristine: false });\n  }\n\n  /**\n   * Validate fields on blur\n   * @method onBlurField\n   * @param {string} id Id of the field\n   * @param {*} value Value of the field\n   * @returns {undefined}\n   */\n  onBlurField(id, value) {\n    if (!this.state.isFormPristine) {\n      const errors = FormValidation.validateFieldsPerFieldset({\n        schema: this.props.schema,\n        formData: this.state.formData,\n        formatMessage: this.props.intl.formatMessage,\n        touchedField: { [id]: value },\n      });\n\n      this.setState({\n        errors,\n      });\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} event Event object.\n   * @returns {undefined}\n   */\n  onSubmit(event) {\n    event.preventDefault();\n    const errors = FormValidation.validateFieldsPerFieldset({\n      schema: this.props.schema,\n      formData: this.state.formData,\n      formatMessage: this.props.intl.formatMessage,\n    });\n\n    if (keys(errors).length > 0) {\n      this.setState({\n        errors,\n      });\n    } else {\n      let setFormDataCallback = (formData) => {\n        this.setState({ formData: formData, errors: {} });\n      };\n      this.props.onSubmit(this.state.formData, setFormDataCallback);\n    }\n  }\n\n  /**\n   * Select tab handler\n   * @method selectTab\n   * @param {Object} event Event object.\n   * @param {number} index Selected tab index.\n   * @returns {undefined}\n   */\n  selectTab(event, { index }) {\n    this.setState({\n      currentTab: index,\n    });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { schema, onCancel } = this.props;\n    const currentFieldset = schema.fieldsets[this.state.currentTab];\n\n    const fields = map(currentFieldset.fields, (field) => ({\n      ...schema.properties[field],\n      id: field,\n      value: this.state.formData[field],\n      required: schema.required.indexOf(field) !== -1,\n      onChange: this.onChangeField,\n      onBlur: this.onBlurField,\n      onClick: this.onClickInput,\n    }));\n\n    const state_errors = keys(this.state.errors).length > 0;\n    return (\n      <Modal open={this.props.open} className={this.props.className}>\n        <Header>{this.props.title}</Header>\n        <Dimmer active={this.props.loading}>\n          <Loader>\n            {this.props.loadingMessage || (\n              <FormattedMessage id=\"Loading\" defaultMessage=\"Loading.\" />\n            )}\n          </Loader>\n        </Dimmer>\n        <Modal.Content scrolling>\n          <UiForm\n            method=\"post\"\n            onSubmit={this.onSubmit}\n            error={state_errors || Boolean(this.props.submitError)}\n          >\n            <Message error>\n              {state_errors ? (\n                <FormattedMessage\n                  id=\"There were some errors.\"\n                  defaultMessage=\"There were some errors.\"\n                />\n              ) : (\n                ''\n              )}\n              <div>{this.props.submitError}</div>\n            </Message>\n            {schema.fieldsets.length > 1 && (\n              <Menu tabular stackable>\n                {map(schema.fieldsets, (item, index) => (\n                  <Menu.Item\n                    name={item.id}\n                    index={index}\n                    key={item.id}\n                    active={this.state.currentTab === index}\n                    onClick={this.selectTab}\n                  >\n                    {item.title}\n                  </Menu.Item>\n                ))}\n              </Menu>\n            )}\n            {fields.map((field) => (\n              <Field\n                {...field}\n                key={field.id}\n                onBlur={this.onBlurField}\n                onClick={this.onClickInput}\n                error={this.state.errors[field.id]}\n              />\n            ))}\n          </UiForm>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            basic\n            circular\n            primary\n            floated=\"right\"\n            aria-label={\n              this.props.submitLabel\n                ? this.props.submitLabel\n                : this.props.intl.formatMessage(messages.save)\n            }\n            title={\n              this.props.submitLabel\n                ? this.props.submitLabel\n                : this.props.intl.formatMessage(messages.save)\n            }\n            onClick={this.onSubmit}\n            loading={this.props.loading}\n          >\n            <Icon name={aheadSVG} className=\"contents circled\" size=\"30px\" />\n          </Button>\n          {onCancel && (\n            <Button\n              basic\n              circular\n              secondary\n              aria-label={this.props.intl.formatMessage(messages.cancel)}\n              title={this.props.intl.formatMessage(messages.cancel)}\n              floated=\"right\"\n              onClick={onCancel}\n            >\n              <Icon name={clearSVG} className=\"circled\" size=\"30px\" />\n            </Button>\n          )}\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default injectIntl(ModalForm);\n","/**\n * History component.\n * @module components/manage/History/History\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Container, Dropdown, Icon, Segment, Table } from 'semantic-ui-react';\nimport { concat, map, reverse } from 'lodash';\nimport { Portal } from 'react-portal';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport {\n  FormattedRelativeDate,\n  Icon as IconNext,\n  Toolbar,\n} from '@plone/volto/components';\nimport { getHistory, revertHistory } from '@plone/volto/actions';\nimport { getBaseUrl } from '@plone/volto/helpers';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  history: {\n    id: 'History',\n    defaultMessage: 'History',\n  },\n});\n\n/**\n * History class.\n * @class History\n * @extends Component\n */\nclass History extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getHistory: PropTypes.func.isRequired,\n    revertHistory: PropTypes.func.isRequired,\n    revertRequest: PropTypes.shape({\n      loaded: PropTypes.bool,\n      loading: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    entries: PropTypes.arrayOf(\n      PropTypes.shape({\n        transition_title: PropTypes.string,\n        type: PropTypes.string,\n        action: PropTypes.string,\n        state_title: PropTypes.string,\n        time: PropTypes.string,\n        comments: PropTypes.string,\n        actor: PropTypes.shape({ fullname: PropTypes.string }),\n      }),\n    ).isRequired,\n    title: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Workflow\n   */\n  constructor(props) {\n    super(props);\n    this.onRevert = this.onRevert.bind(this);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getHistory(getBaseUrl(this.props.pathname));\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.revertRequest.loading && nextProps.revertRequest.loaded) {\n      this.props.getHistory(getBaseUrl(this.props.pathname));\n    }\n  }\n\n  /**\n   * On revert\n   * @method onRevert\n   * @param {object} event Event object\n   * @param {number} value Value\n   * @returns {undefined}\n   */\n  onRevert(event, { value }) {\n    this.props.revertHistory(getBaseUrl(this.props.pathname), value);\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const entries = reverse(concat(this.props.entries));\n    let title = entries.length > 0 ? entries[0].state_title : '';\n    for (let x = 1; x < entries.length; x += 1) {\n      entries[x].prev_state_title = title;\n      title = entries[x].state_title || title;\n    }\n    reverse(entries);\n    return (\n      <Container id=\"page-history\">\n        <Helmet title={this.props.intl.formatMessage(messages.history)} />\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage\n              id=\"History of {title}\"\n              defaultMessage=\"History of {title}\"\n              values={{\n                title: <q>{this.props.title}</q>,\n              }}\n            />\n          </Segment>\n          <Segment secondary>\n            <FormattedMessage\n              id=\"You can view the history of your item below.\"\n              defaultMessage=\"You can view the history of your item below.\"\n            />\n          </Segment>\n          <Table selectable compact singleLine attached>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell width={1}>\n                  <FormattedMessage\n                    id=\"History Version Number\"\n                    defaultMessage=\"#\"\n                  />\n                </Table.HeaderCell>\n                <Table.HeaderCell width={4}>\n                  <FormattedMessage id=\"What\" defaultMessage=\"What\" />\n                </Table.HeaderCell>\n                <Table.HeaderCell width={4}>\n                  <FormattedMessage id=\"Who\" defaultMessage=\"Who\" />\n                </Table.HeaderCell>\n                <Table.HeaderCell width={4}>\n                  <FormattedMessage id=\"When\" defaultMessage=\"When\" />\n                </Table.HeaderCell>\n                <Table.HeaderCell width={4}>\n                  <FormattedMessage\n                    id=\"Change Note\"\n                    defaultMessage=\"Change Note\"\n                  />\n                </Table.HeaderCell>\n                <Table.HeaderCell />\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {map(entries, (entry) => (\n                <Table.Row key={entry.time}>\n                  <Table.Cell>\n                    {('version' in entry && entry.version > 0 && (\n                      <Link\n                        className=\"item\"\n                        to={`${getBaseUrl(this.props.pathname)}/diff?one=${\n                          entry.version - 1\n                        }&two=${entry.version}`}\n                      >\n                        {entry.version}\n                      </Link>\n                    )) || <span>{entry.version}</span>}\n                  </Table.Cell>\n                  <Table.Cell>\n                    {('version' in entry && entry.version > 0 && (\n                      <Link\n                        className=\"item\"\n                        to={`${getBaseUrl(this.props.pathname)}/diff?one=${\n                          entry.version - 1\n                        }&two=${entry.version}`}\n                      >\n                        {entry.transition_title}\n                      </Link>\n                    )) || (\n                      <span>\n                        {entry.transition_title}\n                        {entry.type === 'workflow' &&\n                          ` (${\n                            entry.action ? `${entry.prev_state_title} → ` : ''\n                          }${entry.state_title})`}\n                      </span>\n                    )}\n                  </Table.Cell>\n                  <Table.Cell>{entry.actor.fullname}</Table.Cell>\n                  <Table.Cell>\n                    <FormattedRelativeDate date={entry.time} />\n                  </Table.Cell>\n                  <Table.Cell>{entry.comments}</Table.Cell>\n                  <Table.Cell>\n                    {entry.type === 'versioning' && (\n                      <Dropdown icon=\"ellipsis horizontal\">\n                        <Dropdown.Menu className=\"left\">\n                          {'version' in entry && entry.version > 0 && (\n                            <Link\n                              className=\"item\"\n                              to={`${getBaseUrl(\n                                this.props.pathname,\n                              )}/diff?one=${entry.version - 1}&two=${\n                                entry.version\n                              }`}\n                            >\n                              <Icon name=\"copy\" />{' '}\n                              <FormattedMessage\n                                id=\"View changes\"\n                                defaultMessage=\"View changes\"\n                              />\n                            </Link>\n                          )}\n                          {'version' in entry && (\n                            <Link\n                              className=\"item\"\n                              to={`${getBaseUrl(this.props.pathname)}?version=${\n                                entry.version\n                              }`}\n                            >\n                              <Icon name=\"eye\" />{' '}\n                              <FormattedMessage\n                                id=\"View this revision\"\n                                defaultMessage=\"View this revision\"\n                              />\n                            </Link>\n                          )}\n                          {'version' in entry && (\n                            <Dropdown.Item\n                              value={entry.version}\n                              onClick={this.onRevert}\n                            >\n                              <Icon name=\"undo\" />{' '}\n                              <FormattedMessage\n                                id=\"Revert to this revision\"\n                                defaultMessage=\"Revert to this revision\"\n                              />\n                            </Dropdown.Item>\n                          )}\n                        </Dropdown.Menu>\n                      </Dropdown>\n                    )}\n                  </Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        </Segment.Group>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link\n                  to={`${getBaseUrl(this.props.pathname)}`}\n                  className=\"item\"\n                >\n                  <IconNext\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      entries: state.history.entries,\n      pathname: props.location.pathname,\n      title: state.content.data.title,\n      revertRequest: state.history.revert,\n    }),\n    { getHistory, revertHistory },\n  ),\n)(History);\n","/**\n * Sharing container.\n * @module components/manage/Sharing/Sharing\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { find, isEqual, map } from 'lodash';\nimport { Portal } from 'react-portal';\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Form,\n  Icon as IconOld,\n  Input,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\nimport jwtDecode from 'jwt-decode';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { updateSharing, getSharing } from '@plone/volto/actions';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport { Icon, Toolbar, Toast } from '@plone/volto/components';\nimport { toast } from 'react-toastify';\n\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  searchForUserOrGroup: {\n    id: 'Search for user or group',\n    defaultMessage: 'Search for user or group',\n  },\n  inherit: {\n    id: 'Inherit permissions from higher levels',\n    defaultMessage: 'Inherit permissions from higher levels',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  sharing: {\n    id: 'Sharing',\n    defaultMessage: 'Sharing',\n  },\n  user: {\n    id: 'User',\n    defaultMessage: 'User',\n  },\n  group: {\n    id: 'Group',\n    defaultMessage: 'Group',\n  },\n  globalRole: {\n    id: 'Global role',\n    defaultMessage: 'Global role',\n  },\n  inheritedValue: {\n    id: 'Inherited value',\n    defaultMessage: 'Inherited value',\n  },\n  permissionsUpdated: {\n    id: 'Permissions updated',\n    defaultMessage: 'Permissions updated',\n  },\n  permissionsUpdatedSuccessfully: {\n    id: 'Permissions have been updated successfully',\n    defaultMessage: 'Permissions have been updated successfully',\n  },\n});\n\n/**\n * SharingComponent class.\n * @class SharingComponent\n * @extends Component\n */\nclass SharingComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateSharing: PropTypes.func.isRequired,\n    getSharing: PropTypes.func.isRequired,\n    updateRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    entries: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        login: PropTypes.string,\n        roles: PropTypes.object,\n        title: PropTypes.string,\n        type: PropTypes.string,\n      }),\n    ).isRequired,\n    available_roles: PropTypes.arrayOf(PropTypes.object).isRequired,\n    inherit: PropTypes.bool,\n    title: PropTypes.string.isRequired,\n    login: PropTypes.string,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    inherit: null,\n    login: '',\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onToggleInherit = this.onToggleInherit.bind(this);\n    this.state = {\n      search: '',\n      inherit: props.inherit,\n      entries: props.entries,\n      isClient: false,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.permissionsUpdated)}\n          content={this.props.intl.formatMessage(\n            messages.permissionsUpdatedSuccessfully,\n          )}\n        />,\n      );\n    }\n    this.setState({\n      inherit:\n        this.props.inherit === null ? nextProps.inherit : this.state.inherit,\n      entries: map(nextProps.entries, (entry) => {\n        const values = find(this.state.entries, { id: entry.id });\n        return {\n          ...entry,\n          roles: values ? values.roles : entry.roles,\n        };\n      }),\n    });\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onSubmit(event) {\n    const data = { entries: [] };\n    event.preventDefault();\n    if (this.props.inherit !== this.state.inherit) {\n      data.inherit = this.state.inherit;\n    }\n    for (let i = 0; i < this.props.entries.length; i += 1) {\n      if (!isEqual(this.props.entries[i].roles, this.state.entries[i].roles)) {\n        data.entries.push({\n          id: this.state.entries[i].id,\n          type: this.state.entries[i].type,\n          roles: this.state.entries[i].roles,\n        });\n      }\n    }\n    this.props.updateSharing(getBaseUrl(this.props.pathname), data);\n  }\n\n  /**\n   * Search handler\n   * @method onSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onSearch(event) {\n    event.preventDefault();\n    this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n  }\n\n  /**\n   * On change search handler\n   * @method onChangeSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onChangeSearch(event) {\n    this.setState({\n      search: event.target.value,\n    });\n  }\n\n  /**\n   * On toggle inherit handler\n   * @method onToggleInherit\n   * @returns {undefined}\n   */\n  onToggleInherit() {\n    this.setState({\n      inherit: !this.state.inherit,\n    });\n  }\n\n  /**\n   * On change handler\n   * @method onChange\n   * @param {object} event Event object\n   * @param {string} value Entry value\n   * @returns {undefined}\n   */\n  onChange(event, { value }) {\n    const [principal, role] = value.split(':');\n    this.setState({\n      entries: map(this.state.entries, (entry) => ({\n        ...entry,\n        roles:\n          entry.id === principal\n            ? {\n                ...entry.roles,\n                [role]: !entry.roles[role],\n              }\n            : entry.roles,\n      })),\n    });\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Container id=\"page-sharing\">\n        <Helmet title={this.props.intl.formatMessage(messages.sharing)} />\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage\n              id=\"Sharing for {title}\"\n              defaultMessage=\"Sharing for {title}\"\n              values={{ title: <q>{this.props.title}</q> }}\n            />\n          </Segment>\n          <Segment secondary>\n            <FormattedMessage\n              id=\"You can control who can view and edit your item using the list below.\"\n              defaultMessage=\"You can control who can view and edit your item using the list below.\"\n            />\n          </Segment>\n          <Segment>\n            <Form onSubmit={this.onSearch}>\n              <Form.Field>\n                <Input\n                  name=\"SearchableText\"\n                  action={{ icon: 'search' }}\n                  placeholder={this.props.intl.formatMessage(\n                    messages.searchForUserOrGroup,\n                  )}\n                  onChange={this.onChangeSearch}\n                />\n              </Form.Field>\n            </Form>\n          </Segment>\n          <Form onSubmit={this.onSubmit}>\n            <Table celled padded striped attached>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>\n                    <FormattedMessage id=\"Name\" defaultMessage=\"Name\" />\n                  </Table.HeaderCell>\n                  {this.props.available_roles?.map((role) => (\n                    <Table.HeaderCell key={role.id}>\n                      {role.title}\n                    </Table.HeaderCell>\n                  ))}\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {this.state.entries?.map((entry) => (\n                  <Table.Row key={entry.id}>\n                    <Table.Cell>\n                      <IconOld\n                        name={entry.type === 'user' ? 'user' : 'users'}\n                        title={\n                          entry.type === 'user'\n                            ? this.props.intl.formatMessage(messages.user)\n                            : this.props.intl.formatMessage(messages.group)\n                        }\n                      />{' '}\n                      {entry.title}\n                      {entry.login && ` (${entry.login})`}\n                    </Table.Cell>\n                    {this.props.available_roles?.map((role) => (\n                      <Table.Cell key={role.id}>\n                        {entry.roles[role.id] === 'global' && (\n                          <IconOld\n                            name=\"check circle outline\"\n                            title={this.props.intl.formatMessage(\n                              messages.globalRole,\n                            )}\n                            color=\"blue\"\n                          />\n                        )}\n                        {entry.roles[role.id] === 'acquired' && (\n                          <IconOld\n                            name=\"check circle outline\"\n                            color=\"green\"\n                            title={this.props.intl.formatMessage(\n                              messages.inheritedValue,\n                            )}\n                          />\n                        )}\n                        {typeof entry.roles[role.id] === 'boolean' && (\n                          <Checkbox\n                            onChange={this.onChange}\n                            value={`${entry.id}:${role.id}`}\n                            checked={entry.roles[role.id]}\n                            disabled={entry.login === this.props.login}\n                          />\n                        )}\n                      </Table.Cell>\n                    ))}\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n            <Segment attached>\n              <Form.Field>\n                <Checkbox\n                  checked={this.state.inherit}\n                  onChange={this.onToggleInherit}\n                  label={this.props.intl.formatMessage(messages.inherit)}\n                />\n              </Form.Field>\n              <p className=\"help\">\n                <FormattedMessage\n                  id=\"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator.\"\n                  defaultMessage=\"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator.\"\n                  values={{\n                    inherited: (\n                      <IconOld name=\"check circle outline\" color=\"green\" />\n                    ),\n                    global: (\n                      <IconOld name=\"check circle outline\" color=\"blue\" />\n                    ),\n                  }}\n                />\n              </p>\n            </Segment>\n            <Segment className=\"actions\" attached clearing>\n              <Button\n                basic\n                primary\n                floated=\"right\"\n                type=\"submit\"\n                aria-label={this.props.intl.formatMessage(messages.save)}\n                title={this.props.intl.formatMessage(messages.save)}\n                loading={this.props.updateRequest.loading}\n                onClick={this.onSubmit}\n              >\n                <Icon className=\"circled\" name={aheadSVG} size=\"30px\" />\n              </Button>\n              <Button\n                basic\n                secondary\n                aria-label={this.props.intl.formatMessage(messages.cancel)}\n                title={this.props.intl.formatMessage(messages.cancel)}\n                floated=\"right\"\n                onClick={this.onCancel}\n              >\n                <Icon className=\"circled\" name={clearSVG} size=\"30px\" />\n              </Button>\n            </Segment>\n          </Form>\n        </Segment.Group>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link\n                  to={`${getBaseUrl(this.props.pathname)}`}\n                  className=\"item\"\n                >\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      entries: state.sharing.data.entries,\n      inherit: state.sharing.data.inherit,\n      available_roles: state.sharing.data.available_roles,\n      updateRequest: state.sharing.update,\n      pathname: props.location.pathname,\n      title: state.content.data.title,\n      login: state.userSession.token\n        ? jwtDecode(state.userSession.token).sub\n        : '',\n    }),\n    { updateSharing, getSharing },\n  ),\n)(SharingComponent);\n","/**\n * Messages component.\n * @module components/manage/Messages/Messages\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Message, Container } from 'semantic-ui-react';\nimport { map } from 'lodash';\n\nimport { removeMessage } from '@plone/volto/actions';\n\n/**\n * Messages container class.\n * @class Messages\n * @extends Component\n */\nclass Messages extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    removeMessage: PropTypes.func.isRequired,\n    messages: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        body: PropTypes.string,\n        level: PropTypes.string,\n      }),\n    ).isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Messages\n   */\n  constructor(props) {\n    super(props);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  // /**\n  //  * Component will receive props\n  //  * @method componentWillReceiveProps\n  //  * @param {Object} nextProps Next properties\n  //  * @returns {undefined}\n  //  */\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.messages.length > this.props.messages.length) {\n  //     window.setTimeout(() => {\n  //       if (this.props.messages.length > 0) {\n  //         this.props.removeMessage(-1);\n  //       }\n  //     }, 6000);\n  //   }\n  // }\n\n  /**\n   * On dismiss\n   * @method onDismiss\n   * @param {Object} event Event object\n   * @param {number} value Index of message\n   * @returns {undefined}\n   */\n  onDismiss(event, { value }) {\n    this.props.removeMessage(value);\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      this.props.messages && (\n        <Container className=\"messages\">\n          {map(this.props.messages, (message, index) => (\n            <Message\n              key={message.id}\n              value={index}\n              onDismiss={this.onDismiss}\n              error={message.level === 'error'}\n              success={message.level === 'success'}\n              warning={message.level === 'warning'}\n              info={message.level === 'info'}\n              header={message.title}\n              content={message.body}\n            />\n          ))}\n        </Container>\n      )\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    messages: state.messages.messages,\n  }),\n  { removeMessage },\n)(Messages);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { filter, map, groupBy, isEmpty } from 'lodash';\nimport { Accordion, Button } from 'semantic-ui-react';\nimport { useIntl, defineMessages } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport AnimateHeight from 'react-animate-height';\nimport config from '@plone/volto/registry';\n\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\n\nconst messages = defineMessages({\n  fold: {\n    id: 'Fold',\n    defaultMessage: 'Fold',\n  },\n  unfold: {\n    id: 'Unfold',\n    defaultMessage: 'Unfold',\n  },\n});\n\nconst BlockChooser = ({\n  currentBlock,\n  onInsertBlock,\n  onMutateBlock,\n  allowedBlocks,\n  showRestricted,\n  blocksConfig = config.blocks.blocksConfig,\n  blockChooserRef,\n  properties = {},\n}) => {\n  const intl = useIntl();\n  const useAllowedBlocks = !isEmpty(allowedBlocks);\n\n  const filteredBlocksConfig = filter(blocksConfig, (item) => {\n    if (showRestricted) {\n      if (useAllowedBlocks) {\n        return allowedBlocks.includes(item.id);\n      } else {\n        return true;\n      }\n    } else {\n      if (useAllowedBlocks) {\n        return allowedBlocks.includes(item.id);\n      } else {\n        // Overload restricted as a function, so we can decide the availability of a block\n        // depending on this function, given properties (current present blocks) and the\n        // block being evaluated\n        return typeof item.restricted === 'function'\n          ? !item.restricted({ properties, block: item })\n          : !item.restricted;\n      }\n    }\n  });\n\n  let blocksAvailable = {};\n  const mostUsedBlocks = filter(filteredBlocksConfig, (item) => item.mostUsed);\n  if (mostUsedBlocks) {\n    blocksAvailable.mostUsed = mostUsedBlocks;\n  }\n  const groupedBlocks = groupBy(filteredBlocksConfig, (item) => item.group);\n  blocksAvailable = {\n    ...blocksAvailable,\n    ...groupedBlocks,\n  };\n\n  const groupBlocksOrder = filter(config.blocks.groupBlocksOrder, (item) =>\n    Object.keys(blocksAvailable).includes(item.id),\n  );\n  const [activeIndex, setActiveIndex] = React.useState(0);\n\n  function handleClick(e, titleProps) {\n    const { index } = titleProps;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    setActiveIndex(newIndex);\n  }\n\n  return (\n    <div className=\"blocks-chooser\" ref={blockChooserRef}>\n      <Accordion fluid styled className=\"form\">\n        {map(groupBlocksOrder, (groupName, index) => (\n          <React.Fragment key={groupName.id}>\n            <Accordion.Title\n              aria-label={\n                activeIndex === index\n                  ? `${intl.formatMessage(messages.fold)} ${\n                      groupName.title\n                    } blocks`\n                  : `${intl.formatMessage(messages.unfold)} ${\n                      groupName.title\n                    } blocks`\n              }\n              active={activeIndex === index}\n              index={index}\n              onClick={handleClick}\n            >\n              {intl.formatMessage({\n                id: groupName.id,\n                defaultMessage: groupName.title,\n              })}\n              <div className=\"accordion-tools\">\n                {activeIndex === 0 ? (\n                  <Icon name={upSVG} size=\"20px\" />\n                ) : (\n                  <Icon name={downSVG} size=\"20px\" />\n                )}\n              </div>\n            </Accordion.Title>\n            <Accordion.Content\n              className={groupName.id}\n              active={activeIndex === index}\n            >\n              <AnimateHeight\n                animateOpacity\n                duration={500}\n                height={activeIndex === index ? 'auto' : 0}\n              >\n                {map(blocksAvailable[groupName.id], (block) => (\n                  <Button.Group key={block.id}>\n                    <Button\n                      icon\n                      basic\n                      className={block.id}\n                      onClick={(e) => {\n                        onInsertBlock\n                          ? onInsertBlock(currentBlock, { '@type': block.id })\n                          : onMutateBlock(currentBlock, { '@type': block.id });\n                        e.stopPropagation();\n                      }}\n                    >\n                      <Icon name={block.icon} size=\"36px\" />\n                      {intl.formatMessage({\n                        id: block.title,\n                        defaultMessage: block.title,\n                      })}\n                    </Button>\n                  </Button.Group>\n                ))}\n              </AnimateHeight>\n            </Accordion.Content>\n          </React.Fragment>\n        ))}\n      </Accordion>\n    </div>\n  );\n};\n\nBlockChooser.propTypes = {\n  currentBlock: PropTypes.string.isRequired,\n  onMutateBlock: PropTypes.func,\n  onInsertBlock: PropTypes.func,\n  allowedBlocks: PropTypes.arrayOf(PropTypes.string),\n  blocksConfig: PropTypes.objectOf(PropTypes.any),\n};\n\nexport default React.forwardRef((props, ref) => (\n  <BlockChooser {...props} blockChooserRef={ref} />\n));\n","import React from 'react';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nimport addSVG from '@plone/volto/icons/circle-plus.svg';\nimport { blockHasValue } from '@plone/volto/helpers';\nimport { Icon, BlockChooser } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  addBlock: {\n    id: 'Add block',\n    defaultMessage: 'Add block',\n  },\n});\n\nexport const ButtonComponent = (props) => {\n  const intl = useIntl();\n  const {\n    className = 'block-add-button',\n    size = '19px',\n    onShowBlockChooser,\n  } = props;\n\n  return (\n    <Button\n      icon\n      basic\n      title={intl.formatMessage(messages.addBlock)}\n      onClick={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onShowBlockChooser();\n      }}\n      className={className}\n    >\n      <Icon name={addSVG} className={className} size={size} />\n    </Button>\n  );\n};\n\nconst BlockChooserButton = (props) => {\n  const {\n    block,\n    allowedBlocks,\n    showRestricted,\n    data,\n    onMutateBlock,\n    onInsertBlock,\n    blocksConfig,\n    buttonComponent,\n    properties,\n  } = props;\n  const { disableNewBlocks } = data;\n  const [addNewBlockOpened, setAddNewBlockOpened] = React.useState(false);\n\n  const blockChooserRef = React.useRef();\n\n  const handleClickOutside = React.useCallback((e) => {\n    if (\n      blockChooserRef.current &&\n      doesNodeContainClick(blockChooserRef.current, e)\n    )\n      return;\n    setAddNewBlockOpened(false);\n  }, []);\n\n  const Component = buttonComponent || ButtonComponent;\n\n  React.useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside, false);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside, false);\n    };\n  }, [handleClickOutside]);\n\n  return (\n    <>\n      {!disableNewBlocks && !blockHasValue(data) && (\n        <Component\n          {...props}\n          onShowBlockChooser={() => setAddNewBlockOpened(true)}\n        />\n      )}\n      {addNewBlockOpened && (\n        <BlockChooser\n          onMutateBlock={\n            onMutateBlock\n              ? (id, value) => {\n                  setAddNewBlockOpened(false);\n                  onMutateBlock(id, value);\n                }\n              : null\n          }\n          onInsertBlock={\n            onInsertBlock\n              ? (id, value) => {\n                  setAddNewBlockOpened(false);\n                  onInsertBlock(id, value);\n                }\n              : null\n          }\n          currentBlock={block}\n          allowedBlocks={allowedBlocks}\n          blocksConfig={blocksConfig}\n          properties={properties}\n          showRestricted={showRestricted}\n          ref={blockChooserRef}\n        />\n      )}\n    </>\n  );\n};\n\nexport default BlockChooserButton;\n","/**\n * Sidebar component.\n * @module components/manage/Sidebar/Sidebar\n */\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tab } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withCookies } from 'react-cookie';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { BodyClass, getCookieOptions } from '@plone/volto/helpers';\nimport { Icon } from '@plone/volto/components';\nimport forbiddenSVG from '@plone/volto/icons/forbidden.svg';\nimport { setSidebarTab } from '@plone/volto/actions';\nimport expandSVG from '@plone/volto/icons/left-key.svg';\nimport collapseSVG from '@plone/volto/icons/right-key.svg';\n\nconst messages = defineMessages({\n  document: {\n    id: 'Document',\n    defaultMessage: 'Document',\n  },\n  block: {\n    id: 'Block',\n    defaultMessage: 'Block',\n  },\n  settings: {\n    id: 'Settings',\n    defaultMessage: 'Settings',\n  },\n  shrinkSidebar: {\n    id: 'Shrink sidebar',\n    defaultMessage: 'Shrink sidebar',\n  },\n  expandSidebar: {\n    id: 'Expand sidebar',\n    defaultMessage: 'Expand sidebar',\n  },\n});\n\n/**\n * Sidebar container class.\n * @class Sidebar\n * @extends Component\n */\nclass Sidebar extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    documentTab: PropTypes.bool,\n    blockTab: PropTypes.bool,\n    settingsTab: PropTypes.bool,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    documentTab: true,\n    blockTab: true,\n    settingsTab: false,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sidebar\n   */\n  constructor(props) {\n    super(props);\n    const { cookies } = props;\n    this.onToggleExpanded = this.onToggleExpanded.bind(this);\n    this.onToggleFullSize = this.onToggleFullSize.bind(this);\n    this.onTabChange = this.onTabChange.bind(this);\n    this.state = {\n      expanded: cookies.get('sidebar_expanded') !== 'false',\n      size: 0,\n      showFull: true,\n      showFullToolbarExpanded: true,\n    };\n  }\n\n  /**\n   * On toggle expanded handler\n   * also reset sidebar since this has mimized it\n   * @method onToggleExpanded\n   * @returns {undefined}\n   */\n  onToggleExpanded() {\n    const { cookies } = this.props;\n    cookies.set('sidebar_expanded', !this.state.expanded, getCookieOptions());\n    this.setState({\n      expanded: !this.state.expanded,\n    });\n    this.resetFullSizeSidebar();\n  }\n\n  /**\n   * Remove fullsize classes\n   * Reset state\n   */\n  resetFullSizeSidebar() {\n    if (!this.state.expanded) {\n      const currentResizer = document.querySelector('#sidebar');\n      const sidebarContainer = currentResizer.getElementsByClassName(\n        'sidebar-container',\n      )[0];\n      sidebarContainer.classList.remove('full-size');\n      sidebarContainer.classList.remove('no-toolbar');\n\n      this.setState({\n        showFull: true,\n      });\n    }\n  }\n\n  /**\n   * Set width of sibar to 100% minus the width of the toolbar or reset to\n   * initial size, by adding css classes\n   */\n  onToggleFullSize() {\n    const currentResizer = document.querySelector('#sidebar');\n    const sidebarContainer = currentResizer.getElementsByClassName(\n      'sidebar-container',\n    )[0];\n\n    if (this.state.showFull) {\n      sidebarContainer.classList.add('full-size');\n      if (!this.props.toolbarExpanded) {\n        sidebarContainer.classList.add('no-toolbar');\n      } else {\n        sidebarContainer.classList.remove('no-toolbar');\n      }\n    } else {\n      sidebarContainer.classList.remove('full-size');\n      sidebarContainer.classList.remove('no-toolbar');\n    }\n\n    this.setState((prevState) => ({\n      showFull: !prevState.showFull,\n    }));\n  }\n\n  /**\n   * On tab change\n   * @method onTabChange\n   * @param {Object} event Event object\n   * @param {Object} data Data object\n   * @returns {undefined}\n   */\n  onTabChange(event, data) {\n    event.nativeEvent.stopImmediatePropagation();\n    this.props.setSidebarTab(data.activeIndex);\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { expanded } = this.state;\n\n    return (\n      <Fragment>\n        <BodyClass\n          className={expanded ? 'has-sidebar' : 'has-sidebar-collapsed'}\n        />\n        <div\n          className={cx('sidebar-container', { collapsed: !expanded })}\n          style={this.state.size > 0 ? { width: this.state.size } : null}\n        >\n          <Button\n            aria-label={\n              expanded\n                ? this.props.intl.formatMessage(messages.shrinkSidebar)\n                : this.props.intl.formatMessage(messages.expandSidebar)\n            }\n            className={\n              this.props.content && this.props.content.review_state\n                ? `${this.props.content.review_state} trigger`\n                : 'trigger'\n            }\n            onClick={this.onToggleExpanded}\n          />\n          <Button\n            className=\"full-size-sidenav-btn\"\n            onClick={this.onToggleFullSize}\n            aria-label=\"full-screen-sidenav\"\n          >\n            <Icon\n              className=\"full-size-icon\"\n              name={this.state.showFull ? expandSVG : collapseSVG}\n            />\n          </Button>\n          <Tab\n            menu={{\n              secondary: true,\n              pointing: true,\n              attached: true,\n              tabular: true,\n              className: 'formtabs',\n            }}\n            className=\"tabs-wrapper\"\n            renderActiveOnly={false}\n            activeIndex={this.props.tab}\n            onTabChange={this.onTabChange}\n            panes={[\n              !!this.props.documentTab && {\n                menuItem: this.props.intl.formatMessage(messages.document),\n                pane: (\n                  <Tab.Pane\n                    key=\"metadata\"\n                    className=\"tab-wrapper\"\n                    id=\"sidebar-metadata\"\n                  />\n                ),\n              },\n              !!this.props.blockTab && {\n                menuItem: this.props.intl.formatMessage(messages.block),\n                pane: (\n                  <Tab.Pane\n                    key=\"properties\"\n                    className=\"tab-wrapper\"\n                    id=\"sidebar-properties\"\n                  >\n                    <Icon\n                      className=\"tab-forbidden\"\n                      name={forbiddenSVG}\n                      size=\"48px\"\n                    />\n                  </Tab.Pane>\n                ),\n              },\n              !!this.props.settingsTab && {\n                menuItem: this.props.intl.formatMessage(messages.settings),\n                pane: (\n                  <Tab.Pane\n                    key=\"settings\"\n                    className=\"tab-wrapper\"\n                    id=\"sidebar-settings\"\n                  >\n                    <Icon\n                      className=\"tab-forbidden\"\n                      name={forbiddenSVG}\n                      size=\"48px\"\n                    />\n                  </Tab.Pane>\n                ),\n              },\n            ].filter((tab) => tab)}\n          />\n        </div>\n        <div className={this.state.expanded ? 'pusher expanded' : 'pusher'} />\n      </Fragment>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  withCookies,\n  connect(\n    (state) => ({\n      tab: state.sidebar.tab,\n      toolbarExpanded: state.toolbar.expanded,\n    }),\n    { setSidebarTab },\n  ),\n)(Sidebar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Portal } from 'react-portal';\n\n/**\n * Portal that wraps Sidebar components\n * @param {Array} children Sidebar content\n * @param {bool} selected Sidebar needs to know when the related block is selected\n * @param {string} tab Element id where to insert sidebar content, default: sidebar-properties\n * @returns {string} Rendered sidebar\n */\nconst SidebarPortal = ({ children, selected, tab = 'sidebar-properties' }) => {\n  const [isClient, setIsClient] = React.useState(null);\n\n  React.useEffect(() => setIsClient(true), []);\n\n  return (\n    <>\n      {selected && (\n        <Portal node={isClient && document.getElementById(tab)}>\n          <div role=\"form\" style={{ height: '100%' }}>\n            <div\n              style={{ height: '100%' }}\n              role=\"presentation\"\n              onClick={(e) => {\n                e.stopPropagation();\n              }}\n              onKeyDown={(e) => {\n                e.stopPropagation();\n              }}\n            >\n              {children}\n            </div>\n          </div>\n        </Portal>\n      )}\n    </>\n  );\n};\n\nSidebarPortal.propTypes = {\n  children: PropTypes.any,\n  selected: PropTypes.bool.isRequired,\n};\n\nexport default SidebarPortal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@plone/volto/components';\n\nimport successSVG from '@plone/volto/icons/ready.svg';\nimport infoSVG from '@plone/volto/icons/info.svg';\nimport errorSVG from '@plone/volto/icons/error.svg';\nimport warningSVG from '@plone/volto/icons/warning.svg';\n\nconst Toast = (props) => {\n  function getIcon(props) {\n    if (props.info) {\n      return infoSVG;\n    } else if (props.success) {\n      return successSVG;\n    } else if (props.error) {\n      return errorSVG;\n    } else if (props.error) {\n      return warningSVG;\n    } else {\n      return successSVG;\n    }\n  }\n\n  const { title, content } = props;\n\n  return (\n    <>\n      <Icon name={getIcon(props)} size=\"18px\" />\n      <div className=\"toast-inner-content\">\n        {title && <h4>{title}</h4>}\n        <p>{content}</p>\n      </div>\n    </>\n  );\n};\n\nToast.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  content: PropTypes.string.isRequired,\n  info: PropTypes.bool,\n  success: PropTypes.bool,\n  error: PropTypes.bool,\n  warning: PropTypes.bool,\n};\n\nexport default Toast;\n","import React from 'react';\nimport { Button, Container, Segment, Table } from 'semantic-ui-react';\nimport { Helmet } from '@plone/volto/helpers';\nimport { flattenToAppURL, getBaseUrl, langmap } from '@plone/volto/helpers';\nimport { reduce } from 'lodash';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Icon, Toast, Toolbar } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\n\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport {\n  deleteLinkTranslation,\n  getContent,\n  linkTranslation,\n} from '@plone/volto/actions';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Portal } from 'react-portal';\nimport { toast } from 'react-toastify';\n\nimport addSVG from '@plone/volto/icons/add.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport unlinkSVG from '@plone/volto/icons/unlink.svg';\n\nconst messages = defineMessages({\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  linked: {\n    id: 'Translation linked',\n    defaultMessage: 'Translation linked',\n  },\n  unlinked: {\n    id: 'Translation linking removed',\n    defaultMessage: 'Translation linking removed',\n  },\n  link: {\n    id: 'Link translation for',\n    defaultMessage: 'Link translation for',\n  },\n  unlink: {\n    id: 'Unlink translation for',\n    defaultMessage: 'Unlink translation for',\n  },\n  ManageTranslations: {\n    id: 'Manage Translations',\n    defaultMessage: 'Manage Translations',\n  },\n  ManageTranslationsTitle: {\n    id: 'Manage translations for {title}',\n    defaultMessage: 'Manage translations for {title}',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n});\n\nconst ManageTranslations = (props) => {\n  const intl = useIntl();\n  const pathname = useLocation().pathname;\n  const content = useSelector((state) => state.content.data);\n  const dispatch = useDispatch();\n\n  const { isObjectBrowserOpen, openObjectBrowser } = props;\n\n  const currentSelectedItem = React.useRef(null);\n\n  React.useEffect(() => {\n    if (!content) {\n      dispatch(getContent(getBaseUrl(pathname)));\n    }\n  }, [dispatch, content, pathname]);\n\n  React.useEffect(() => {\n    // Only execute the link API call on the final item selected, once the ObjectBrowser\n    // is closed\n    if (!isObjectBrowserOpen && currentSelectedItem.current) {\n      dispatch(\n        linkTranslation(\n          flattenToAppURL(content['@id']),\n          currentSelectedItem.current,\n        ),\n      )\n        .then((resp) => {\n          toast.success(\n            <Toast\n              success\n              title={intl.formatMessage(messages.success)}\n              content={intl.formatMessage(messages.linked)}\n            />,\n          );\n          dispatch(getContent(getBaseUrl(pathname)));\n        })\n        .catch((error) => {\n          // TODO: The true error sent by the API is shadowed by the superagent one\n          // Update this when this issue is fixed.\n          const shadowedError = JSON.parse(error.response.text);\n          toast.error(\n            <Toast\n              error\n              title={shadowedError.error.type}\n              content={shadowedError.error.message}\n            />,\n            { toastId: 'linkFailed' },\n          );\n        });\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [isObjectBrowserOpen]);\n\n  const translations = content &&\n    content['@components'].translations.items && {\n      [content.language.token]: {\n        url: content['@id'],\n      },\n      ...reduce(\n        content['@components'].translations.items,\n        (acc, value) => {\n          return { ...acc, [value.language]: { url: value['@id'] } };\n        },\n        {},\n      ),\n    };\n\n  function onSelectTarget(target) {\n    // We store the selection temporarily on the component, because we don't want it to\n    // execute it right away, since that will lead into duplicate link requests and we\n    // only want the last to get through\n    currentSelectedItem.current = target;\n  }\n\n  function onDeleteTranslation(lang) {\n    dispatch(deleteLinkTranslation(flattenToAppURL(content['@id']), lang))\n      .then((resp) => {\n        toast.success(\n          <Toast\n            success\n            title={intl.formatMessage(messages.success)}\n            content={intl.formatMessage(messages.unlinked)}\n          />,\n        );\n        dispatch(getContent(getBaseUrl(pathname)));\n      })\n      .catch((error) => {\n        // TODO: The true error sent by the API is shadowed by the superagent one\n        // Update this when this issue is fixed.\n        const shadowedError = JSON.parse(error.response.text);\n        toast.error(\n          <Toast\n            error\n            title={shadowedError.error.type}\n            content={shadowedError.error.message}\n          />,\n          { toastId: 'linkFailed' },\n        );\n      });\n  }\n\n  return (\n    <Container id=\"page-manage-translations\">\n      <Helmet title={intl.formatMessage(messages.ManageTranslations)} />\n      <Segment.Group raised>\n        <Segment className=\"primary\">\n          <FormattedMessage\n            id=\"Manage translations for {title}\"\n            defaultMessage=\"Manage translations for {title}\"\n            values={{ title: <q>{content.title}</q> }}\n          />\n        </Segment>\n        {content && (\n          <Table selectable compact singleLine attached>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Language</Table.HeaderCell>\n                <Table.HeaderCell>Path</Table.HeaderCell>\n                <Table.HeaderCell textAlign=\"right\">Tools</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {config.settings.supportedLanguages.map((lang) => (\n                <Table.Row key={lang}>\n                  <Table.Cell collapsing>\n                    {lang === content.language.token ? (\n                      <strong>{langmap[lang].nativeName}</strong>\n                    ) : (\n                      langmap[lang].nativeName\n                    )}\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Link to={flattenToAppURL(translations[lang]?.url || '')}>\n                      {flattenToAppURL(translations[lang]?.url || '')}\n                    </Link>\n                  </Table.Cell>\n                  <Table.Cell\n                    textAlign=\"right\"\n                    className=\"manage-multilingual-tools\"\n                  >\n                    <Button.Group>\n                      <Button\n                        basic\n                        icon\n                        disabled={\n                          lang === content.language.token ||\n                          translations?.[lang]\n                        }\n                        as={Link}\n                        to={{\n                          pathname: `${pathname}/create-translation`,\n                          state: {\n                            type: content['@type'],\n                            translationOf: flattenToAppURL(content['@id']),\n                            language: lang,\n                          },\n                        }}\n                      >\n                        <Icon name={addSVG} size=\"24px\" />\n                      </Button>\n                    </Button.Group>\n                    {translations?.[lang] ? (\n                      <Button.Group>\n                        <Button\n                          aria-label={`${intl.formatMessage(\n                            messages.unlink,\n                          )} ${langmap[lang].nativeName.toLowerCase()}`}\n                          basic\n                          icon\n                          disabled={lang === content.language.token}\n                          onClick={() => onDeleteTranslation(lang)}\n                        >\n                          <Icon\n                            name={\n                              lang === content.language.token\n                                ? linkSVG\n                                : unlinkSVG\n                            }\n                            size=\"24px\"\n                          />\n                        </Button>\n                      </Button.Group>\n                    ) : (\n                      <Button.Group>\n                        <Button\n                          aria-label={`${intl.formatMessage(\n                            messages.link,\n                          )} ${langmap[lang].nativeName.toLowerCase()}`}\n                          basic\n                          icon\n                          disabled={lang === content.language.token}\n                          onClick={() =>\n                            openObjectBrowser({\n                              mode: 'link',\n                              overlay: true,\n                              onSelectItem: (url) => {\n                                onSelectTarget(url, isObjectBrowserOpen);\n                              },\n                            })\n                          }\n                        >\n                          <Icon name={linkSVG} size=\"24px\" />\n                        </Button>\n                      </Button.Group>\n                    )}\n                  </Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        )}\n        {__CLIENT__ && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link to={`${getBaseUrl(pathname)}`} className=\"item\">\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </Segment.Group>\n    </Container>\n  );\n};\n\nexport default withObjectBrowser(ManageTranslations);\n","/**\n * Form component.\n * @module components/manage/Form/Form\n */\n\nimport { BlocksForm, Field, Icon, Toast } from '@plone/volto/components';\nimport {\n  difference,\n  FormValidation,\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  messages,\n} from '@plone/volto/helpers';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport {\n  findIndex,\n  isEmpty,\n  keys,\n  map,\n  mapValues,\n  pickBy,\n  without,\n  cloneDeep,\n} from 'lodash';\nimport isBoolean from 'lodash/isBoolean';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Portal } from 'react-portal';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  Container,\n  Form as UiForm,\n  Message,\n  Segment,\n  Tab,\n} from 'semantic-ui-react';\nimport { v4 as uuid } from 'uuid';\nimport { toast } from 'react-toastify';\nimport { BlocksToolbar, UndoToolbar } from '@plone/volto/components';\nimport { setSidebarTab } from '@plone/volto/actions';\nimport { compose } from 'redux';\nimport config from '@plone/volto/registry';\n\n/**\n * Form container class.\n * @class Form\n * @extends Component\n */\nclass Form extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    schema: PropTypes.shape({\n      fieldsets: PropTypes.arrayOf(\n        PropTypes.shape({\n          fields: PropTypes.arrayOf(PropTypes.string),\n          id: PropTypes.string,\n          title: PropTypes.string,\n        }),\n      ),\n      properties: PropTypes.objectOf(PropTypes.any),\n      definitions: PropTypes.objectOf(PropTypes.any),\n      required: PropTypes.arrayOf(PropTypes.string),\n    }),\n    formData: PropTypes.objectOf(PropTypes.any),\n    pathname: PropTypes.string,\n    onSubmit: PropTypes.func,\n    onCancel: PropTypes.func,\n    submitLabel: PropTypes.string,\n    resetAfterSubmit: PropTypes.bool,\n    isEditForm: PropTypes.bool,\n    isAdminForm: PropTypes.bool,\n    title: PropTypes.string,\n    error: PropTypes.shape({\n      message: PropTypes.string,\n    }),\n    loading: PropTypes.bool,\n    hideActions: PropTypes.bool,\n    description: PropTypes.string,\n    visual: PropTypes.bool,\n    blocks: PropTypes.arrayOf(PropTypes.object),\n    isFormSelected: PropTypes.bool,\n    onSelectForm: PropTypes.func,\n    editable: PropTypes.bool,\n    onChangeFormData: PropTypes.func,\n    requestError: PropTypes.string,\n    allowedBlocks: PropTypes.arrayOf(PropTypes.string),\n    showRestricted: PropTypes.bool,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    formData: null,\n    onSubmit: null,\n    onCancel: null,\n    submitLabel: null,\n    resetAfterSubmit: false,\n    isEditForm: false,\n    isAdminForm: false,\n    title: null,\n    description: null,\n    error: null,\n    loading: null,\n    hideActions: false,\n    visual: false,\n    blocks: [],\n    pathname: '',\n    schema: {},\n    isFormSelected: true,\n    onSelectForm: null,\n    editable: true,\n    requestError: null,\n    allowedBlocks: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Form\n   */\n  constructor(props) {\n    super(props);\n    const ids = {\n      title: uuid(),\n      text: uuid(),\n    };\n    let { formData } = props;\n    const blocksFieldname = getBlocksFieldname(formData);\n    const blocksLayoutFieldname = getBlocksLayoutFieldname(formData);\n\n    if (!props.isEditForm) {\n      // It's a normal (add form), get defaults from schema\n      formData = {\n        ...mapValues(props.schema.properties, 'default'),\n        ...formData,\n      };\n    }\n    // defaults for block editor; should be moved to schema on server side\n    // Adding fallback in case the fields are empty, so we are sure that the edit form\n    // shows at least the default blocks\n    if (\n      formData.hasOwnProperty(blocksFieldname) &&\n      formData.hasOwnProperty(blocksLayoutFieldname)\n    ) {\n      if (\n        !formData[blocksLayoutFieldname] ||\n        isEmpty(formData[blocksLayoutFieldname].items)\n      ) {\n        formData[blocksLayoutFieldname] = {\n          items: [ids.title, ids.text],\n        };\n      }\n      if (!formData[blocksFieldname] || isEmpty(formData[blocksFieldname])) {\n        formData[blocksFieldname] = {\n          [ids.title]: {\n            '@type': 'title',\n          },\n          [ids.text]: {\n            '@type': config.settings.defaultBlockType,\n          },\n        };\n      }\n    }\n\n    let selectedBlock = null;\n    if (\n      formData.hasOwnProperty(blocksLayoutFieldname) &&\n      formData[blocksLayoutFieldname].items.length > 0\n    ) {\n      selectedBlock = formData[blocksLayoutFieldname].items[0];\n\n      if (config.blocks?.initialBlocksFocus?.[this.props.type]) {\n        //Default selected is not the first block, but the one from config.\n        Object.keys(formData[blocksFieldname]).forEach((b_key) => {\n          if (\n            formData[blocksFieldname][b_key]['@type'] ===\n            config.blocks?.initialBlocksFocus?.[this.props.type]\n          ) {\n            selectedBlock = b_key;\n          }\n        });\n      }\n    }\n    this.state = {\n      formData,\n      initialFormData: cloneDeep(formData),\n      errors: {},\n      selected: selectedBlock,\n      multiSelected: [],\n      isClient: false,\n    };\n    this.onChangeField = this.onChangeField.bind(this);\n    this.onSelectBlock = this.onSelectBlock.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.onTabChange = this.onTabChange.bind(this);\n    this.onBlurField = this.onBlurField.bind(this);\n    this.onClickInput = this.onClickInput.bind(this);\n  }\n\n  /**\n   * On updates caused by props change\n   * if errors from Backend come, these will be shown to their corresponding Fields\n   * also the first Tab to have any errors will be selected\n   * @param {Object} prevProps\n   */\n  async componentDidUpdate(prevProps, prevState) {\n    let { requestError } = this.props;\n    let errors = {};\n    let activeIndex = 0;\n\n    if (requestError && prevProps.requestError !== requestError) {\n      errors = FormValidation.giveServerErrorsToCorrespondingFields(\n        requestError,\n      );\n      activeIndex = FormValidation.showFirstTabWithErrors({\n        errors,\n        schema: this.props.schema,\n      });\n\n      this.setState({\n        errors,\n        activeIndex,\n      });\n    }\n\n    if (this.props.onChangeFormData) {\n      if (\n        // TODO: use fast-deep-equal\n        JSON.stringify(prevState?.formData) !==\n        JSON.stringify(this.state.formData)\n      ) {\n        this.props.onChangeFormData(this.state.formData);\n      }\n    }\n  }\n\n  /**\n   * Tab selection is done only by setting activeIndex in state\n   */\n  onTabChange(e, { activeIndex }) {\n    this.setState({ activeIndex });\n  }\n\n  /**\n   * If user clicks on input, the form will be not considered pristine\n   * this will avoid onBlur effects without interraction with the form\n   * @param {Object} e event\n   */\n  onClickInput(e) {\n    this.setState({ isFormPristine: false });\n  }\n\n  /**\n   * Validate fields on blur\n   * @method onBlurField\n   * @param {string} id Id of the field\n   * @param {*} value Value of the field\n   * @returns {undefined}\n   */\n  onBlurField(id, value) {\n    if (!this.state.isFormPristine) {\n      const errors = FormValidation.validateFieldsPerFieldset({\n        schema: this.props.schema,\n        formData: this.state.formData,\n        formatMessage: this.props.intl.formatMessage,\n        touchedField: { [id]: value },\n      });\n\n      this.setState({\n        errors,\n      });\n    }\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.setState({ isClient: true });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let newState = { ...state };\n    if (!props.isFormSelected) {\n      newState.selected = null;\n    }\n\n    return newState;\n  }\n\n  /**\n   * Change field handler\n   * Remove errors for changed field\n   * @method onChangeField\n   * @param {string} id Id of the field\n   * @param {*} value Value of the field\n   * @returns {undefined}\n   */\n  onChangeField(id, value) {\n    this.setState((prevState) => {\n      const { errors, formData } = prevState;\n      delete errors[id];\n      return {\n        errors,\n        formData: {\n          ...formData,\n          // We need to catch also when the value equals false this fixes #888\n          [id]:\n            value || (value !== undefined && isBoolean(value)) ? value : null,\n        },\n      };\n    });\n  }\n\n  /**\n   * Select block handler\n   * @method onSelectBlock\n   * @param {string} id Id of the field\n   * @param {string} isMultipleSelection true if multiple blocks are selected\n   * @returns {undefined}\n   */\n  onSelectBlock(id, isMultipleSelection, event) {\n    let multiSelected = [];\n    let selected = id;\n\n    if (isMultipleSelection) {\n      selected = null;\n      const blocksLayoutFieldname = getBlocksLayoutFieldname(\n        this.state.formData,\n      );\n\n      const blocks_layout = this.state.formData[blocksLayoutFieldname].items;\n\n      if (event.shiftKey) {\n        const anchor =\n          this.state.multiSelected.length > 0\n            ? blocks_layout.indexOf(this.state.multiSelected[0])\n            : blocks_layout.indexOf(this.state.selected);\n        const focus = blocks_layout.indexOf(id);\n\n        if (anchor === focus) {\n          multiSelected = [id];\n        } else if (focus > anchor) {\n          multiSelected = [...blocks_layout.slice(anchor, focus + 1)];\n        } else {\n          multiSelected = [...blocks_layout.slice(focus, anchor + 1)];\n        }\n      }\n\n      if ((event.ctrlKey || event.metaKey) && !event.shiftKey) {\n        multiSelected = this.state.multiSelected || [];\n        if (!this.state.multiSelected.includes(this.state.selected)) {\n          multiSelected = [...multiSelected, this.state.selected];\n          selected = null;\n        }\n        if (this.state.multiSelected.includes(id)) {\n          selected = null;\n          multiSelected = without(multiSelected, id);\n        } else {\n          multiSelected = [...multiSelected, id];\n        }\n      }\n    }\n\n    this.setState({\n      selected,\n      multiSelected,\n    });\n\n    if (this.props.onSelectForm) {\n      if (event) event.nativeEvent.stopImmediatePropagation();\n      this.props.onSelectForm();\n    }\n  }\n\n  /**\n   * Cancel handler\n   * It prevents event from triggering submit, reset form if props.resetAfterSubmit\n   * and calls this.props.onCancel\n   * @method onCancel\n   * @param {Object} event Event object.\n   * @returns {undefined}\n   */\n  onCancel(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.props.resetAfterSubmit) {\n      this.setState({\n        formData: this.props.formData,\n      });\n    }\n    this.props.onCancel(event);\n  }\n\n  /**\n   * Submit handler also validate form and collect errors\n   * @method onSubmit\n   * @param {Object} event Event object.\n   * @returns {undefined}\n   */\n  onSubmit(event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    const errors = FormValidation.validateFieldsPerFieldset({\n      schema: this.props.schema,\n      formData: this.state.formData,\n      formatMessage: this.props.intl.formatMessage,\n    });\n\n    if (keys(errors).length > 0) {\n      const activeIndex = FormValidation.showFirstTabWithErrors({\n        errors,\n        schema: this.props.schema,\n      });\n      this.setState(\n        {\n          errors,\n          activeIndex,\n        },\n        () => {\n          Object.keys(errors).forEach((err) =>\n            toast.error(\n              <Toast error title={err} content={errors[err].join(', ')} />,\n            ),\n          );\n        },\n      );\n      // Changes the focus to the metadata tab in the sidebar if error\n      this.props.setSidebarTab(0);\n    } else {\n      // Get only the values that have been modified (Edit forms), send all in case that\n      // it's an add form\n      if (this.props.isEditForm) {\n        this.props.onSubmit(this.getOnlyFormModifiedValues());\n      } else {\n        this.props.onSubmit(this.state.formData);\n      }\n      if (this.props.resetAfterSubmit) {\n        this.setState({\n          formData: this.props.formData,\n        });\n      }\n    }\n  }\n\n  /**\n   * getOnlyFormModifiedValues handler\n   * It returns only the values of the fields that are have really changed since the\n   * form was loaded. Useful for edit forms and PATCH operations, when we only want to\n   * send the changed data.\n   * @method getOnlyFormModifiedValues\n   * @param {Object} event Event object.\n   * @returns {undefined}\n   */\n  getOnlyFormModifiedValues = () => {\n    const fieldsModified = Object.keys(\n      difference(this.state.formData, this.state.initialFormData),\n    );\n    return {\n      ...pickBy(this.state.formData, (value, key) =>\n        fieldsModified.includes(key),\n      ),\n      ...(this.state.formData['@static_behaviors'] && {\n        '@static_behaviors': this.state.formData['@static_behaviors'],\n      }),\n    };\n  };\n\n  /**\n   * Removed blocks and blocks_layout fields from the form.\n   * @method removeBlocksLayoutFields\n   * @param {object} schema The schema definition of the form.\n   * @returns A modified copy of the given schema.\n   */\n  removeBlocksLayoutFields = (schema) => {\n    const newSchema = { ...schema };\n    const layoutFieldsetIndex = findIndex(\n      newSchema.fieldsets,\n      (fieldset) => fieldset.id === 'layout',\n    );\n    if (layoutFieldsetIndex > -1) {\n      const layoutFields = newSchema.fieldsets[layoutFieldsetIndex].fields;\n      newSchema.fieldsets[layoutFieldsetIndex].fields = layoutFields.filter(\n        (field) => field !== 'blocks' && field !== 'blocks_layout',\n      );\n      if (newSchema.fieldsets[layoutFieldsetIndex].fields.length === 0) {\n        newSchema.fieldsets = [\n          ...newSchema.fieldsets.slice(0, layoutFieldsetIndex),\n          ...newSchema.fieldsets.slice(layoutFieldsetIndex + 1),\n        ];\n      }\n    }\n    return newSchema;\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { settings } = config;\n    const { schema: originalSchema, onCancel, onSubmit } = this.props;\n    const { formData } = this.state;\n    const schema = this.removeBlocksLayoutFields(originalSchema);\n\n    return this.props.visual ? (\n      // Removing this from SSR is important, since react-beautiful-dnd supports SSR,\n      // but draftJS don't like it much and the hydration gets messed up\n      this.state.isClient && (\n        <div className=\"ui container\">\n          <BlocksToolbar\n            formData={this.state.formData}\n            selectedBlock={this.state.selected}\n            selectedBlocks={this.state.multiSelected}\n            onChangeBlocks={(newBlockData) =>\n              this.setState({\n                formData: {\n                  ...formData,\n                  ...newBlockData,\n                },\n              })\n            }\n            onSetSelectedBlocks={(blockIds) =>\n              this.setState({ multiSelected: blockIds })\n            }\n            onSelectBlock={this.onSelectBlock}\n          />\n          <UndoToolbar\n            state={{\n              formData: this.state.formData,\n              selected: this.state.selected,\n              multiSelected: this.state.multiSelected,\n            }}\n            enableHotKeys\n            onUndoRedo={({ state }) => this.setState(state)}\n          />\n          <BlocksForm\n            onChangeFormData={(newFormData) =>\n              this.setState({\n                formData: {\n                  ...formData,\n                  ...newFormData,\n                },\n              })\n            }\n            onChangeField={this.onChangeField}\n            onSelectBlock={this.onSelectBlock}\n            properties={formData}\n            pathname={this.props.pathname}\n            selectedBlock={this.state.selected}\n            multiSelected={this.state.multiSelected}\n            manage={this.props.isAdminForm}\n            allowedBlocks={this.props.allowedBlocks}\n            showRestricted={this.props.showRestricted}\n            editable={this.props.editable}\n            isMainForm={this.props.editable}\n          />\n          {this.state.isClient && this.props.editable && (\n            <Portal\n              node={__CLIENT__ && document.getElementById('sidebar-metadata')}\n            >\n              <UiForm\n                method=\"post\"\n                onSubmit={this.onSubmit}\n                error={keys(this.state.errors).length > 0}\n              >\n                {schema &&\n                  map(schema.fieldsets, (item) => [\n                    <Segment\n                      secondary\n                      attached\n                      className={`fieldset-${item.id}`}\n                      key={item.title}\n                    >\n                      {item.title}\n                    </Segment>,\n                    <Segment attached key={`fieldset-contents-${item.title}`}>\n                      {map(item.fields, (field, index) => (\n                        <Field\n                          {...schema.properties[field]}\n                          id={field}\n                          fieldSet={item.title.toLowerCase()}\n                          formData={this.state.formData}\n                          focus={false}\n                          value={this.state.formData?.[field]}\n                          required={schema.required.indexOf(field) !== -1}\n                          onChange={this.onChangeField}\n                          onBlur={this.onBlurField}\n                          onClick={this.onClickInput}\n                          key={field}\n                          error={this.state.errors[field]}\n                        />\n                      ))}\n                    </Segment>,\n                  ])}\n              </UiForm>\n            </Portal>\n          )}\n        </div>\n      )\n    ) : (\n      <Container>\n        <UiForm\n          method=\"post\"\n          onSubmit={this.onSubmit}\n          error={keys(this.state.errors).length > 0}\n          className={settings.verticalFormTabs ? 'vertical-form' : ''}\n        >\n          <fieldset className=\"invisible\" disabled={!this.props.editable}>\n            <Segment.Group raised>\n              {schema && schema.fieldsets.length > 1 && (\n                <>\n                  {settings.verticalFormTabs && this.props.title && (\n                    <Segment secondary attached key={this.props.title}>\n                      {this.props.title}\n                    </Segment>\n                  )}\n                  <Tab\n                    menu={{\n                      secondary: true,\n                      pointing: true,\n                      attached: true,\n                      tabular: true,\n                      className: 'formtabs',\n                      vertical: settings.verticalFormTabs,\n                    }}\n                    grid={{ paneWidth: 9, tabWidth: 3, stackable: true }}\n                    onTabChange={this.onTabChange}\n                    activeIndex={this.state.activeIndex}\n                    panes={map(schema.fieldsets, (item) => ({\n                      menuItem: item.title,\n                      render: () => [\n                        !settings.verticalFormTabs && this.props.title && (\n                          <Segment secondary attached key={this.props.title}>\n                            {this.props.title}\n                          </Segment>\n                        ),\n                        ...map(item.fields, (field, index) => (\n                          <Field\n                            {...schema.properties[field]}\n                            id={field}\n                            formData={this.state.formData}\n                            fieldSet={item.title.toLowerCase()}\n                            focus={index === 0}\n                            value={this.state.formData?.[field]}\n                            required={schema.required.indexOf(field) !== -1}\n                            onChange={this.onChangeField}\n                            onBlur={this.onBlurField}\n                            onClick={this.onClickInput}\n                            key={field}\n                            error={this.state.errors[field]}\n                          />\n                        )),\n                      ],\n                    }))}\n                  />\n                </>\n              )}\n              {schema && schema.fieldsets.length === 1 && (\n                <Segment>\n                  {this.props.title && (\n                    <Segment className=\"primary\">\n                      <h1 style={{ fontSize: '16px' }}> {this.props.title}</h1>\n                    </Segment>\n                  )}\n                  {this.props.description && (\n                    <Segment secondary>{this.props.description}</Segment>\n                  )}\n                  {keys(this.state.errors).length > 0 && (\n                    <Message\n                      icon=\"warning\"\n                      negative\n                      attached\n                      header={this.props.intl.formatMessage(messages.error)}\n                      content={this.props.intl.formatMessage(\n                        messages.thereWereSomeErrors,\n                      )}\n                    />\n                  )}\n                  {this.props.error && (\n                    <Message\n                      icon=\"warning\"\n                      negative\n                      attached\n                      header={this.props.intl.formatMessage(messages.error)}\n                      content={this.props.error.message}\n                    />\n                  )}\n                  {map(schema.fieldsets[0].fields, (field) => (\n                    <Field\n                      {...schema.properties[field]}\n                      id={field}\n                      value={this.state.formData?.[field]}\n                      required={schema.required.indexOf(field) !== -1}\n                      onChange={this.onChangeField}\n                      onBlur={this.onBlurField}\n                      onClick={this.onClickInput}\n                      key={field}\n                      error={this.state.errors[field]}\n                    />\n                  ))}\n                </Segment>\n              )}\n              {!this.props.hideActions && (\n                <Segment className=\"actions\" clearing>\n                  {onSubmit && (\n                    <Button\n                      basic\n                      primary\n                      floated=\"right\"\n                      type=\"submit\"\n                      aria-label={\n                        this.props.submitLabel\n                          ? this.props.submitLabel\n                          : this.props.intl.formatMessage(messages.save)\n                      }\n                      title={\n                        this.props.submitLabel\n                          ? this.props.submitLabel\n                          : this.props.intl.formatMessage(messages.save)\n                      }\n                      loading={this.props.loading}\n                    >\n                      <Icon className=\"circled\" name={aheadSVG} size=\"30px\" />\n                    </Button>\n                  )}\n                  {onCancel && (\n                    <Button\n                      basic\n                      secondary\n                      aria-label={this.props.intl.formatMessage(\n                        messages.cancel,\n                      )}\n                      title={this.props.intl.formatMessage(messages.cancel)}\n                      floated=\"right\"\n                      onClick={this.onCancel}\n                    >\n                      <Icon className=\"circled\" name={clearSVG} size=\"30px\" />\n                    </Button>\n                  )}\n                </Segment>\n              )}\n            </Segment.Group>\n          </fieldset>\n        </UiForm>\n      </Container>\n    );\n  }\n}\n\nconst FormIntl = injectIntl(Form, { forwardRef: true });\n\nexport default compose(\n  connect(null, { setSidebarTab }, null, { forwardRef: true }),\n)(FormIntl);\n","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport {\n  messages,\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n} from '@plone/volto/helpers';\nimport { Icon } from '@plone/volto/components';\nimport { Plug } from '@plone/volto/components/manage/Pluggable';\nimport { v4 as uuid } from 'uuid';\nimport { load } from 'redux-localstorage-simple';\nimport { isEqual, omit, without } from 'lodash';\n\nimport { setBlocksClipboard, resetBlocksClipboard } from '@plone/volto/actions';\nimport config from '@plone/volto/registry';\n\nimport copySVG from '@plone/volto/icons/copy.svg';\nimport cutSVG from '@plone/volto/icons/cut.svg';\nimport pasteSVG from '@plone/volto/icons/paste.svg';\nimport trashSVG from '@plone/volto/icons/delete.svg';\n\nexport class BlocksToolbarComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.copyBlocksToClipboard = this.copyBlocksToClipboard.bind(this);\n    this.cutBlocksToClipboard = this.cutBlocksToClipboard.bind(this);\n    this.deleteBlocks = this.deleteBlocks.bind(this);\n    this.loadFromStorage = this.loadFromStorage.bind(this);\n    this.pasteBlocks = this.pasteBlocks.bind(this);\n    this.setBlocksClipboard = this.setBlocksClipboard.bind(this);\n  }\n\n  loadFromStorage() {\n    const clipboard = load({ states: ['blocksClipboard'] })?.blocksClipboard;\n    if (!isEqual(clipboard, this.props.blocksClipboard))\n      this.props.setBlocksClipboard(clipboard || {});\n  }\n\n  componentDidMount() {\n    window.addEventListener('storage', this.loadFromStorage, true);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('storage', this.loadFromStorage);\n  }\n\n  deleteBlocks() {\n    const blockIds = this.props.selectedBlocks;\n\n    const { formData } = this.props;\n    const blocksFieldname = getBlocksFieldname(formData);\n    const blocksLayoutFieldname = getBlocksLayoutFieldname(formData);\n\n    // Might need ReactDOM.unstable_batchedUpdates()\n    this.props.onSelectBlock(null);\n    const newBlockData = {\n      [blocksFieldname]: omit(formData[blocksFieldname], blockIds),\n      [blocksLayoutFieldname]: {\n        ...formData[blocksLayoutFieldname],\n        items: without(formData[blocksLayoutFieldname].items, ...blockIds),\n      },\n    };\n    this.props.onChangeBlocks(newBlockData);\n  }\n\n  copyBlocksToClipboard() {\n    this.setBlocksClipboard('copy');\n  }\n\n  cutBlocksToClipboard() {\n    this.setBlocksClipboard('cut');\n    this.deleteBlocks();\n  }\n\n  setBlocksClipboard(actionType) {\n    const { formData } = this.props;\n    const blocksFieldname = getBlocksFieldname(formData);\n    const blocks = formData[blocksFieldname];\n    const blocksData = this.props.selectedBlocks.map(\n      (blockId) => blocks[blockId],\n    );\n    this.props.setBlocksClipboard({ [actionType]: blocksData });\n    this.props.onSetSelectedBlocks([]);\n  }\n\n  pasteBlocks(e) {\n    const { formData, blocksClipboard = {}, selectedBlock } = this.props;\n    const mode = Object.keys(blocksClipboard).includes('cut') ? 'cut' : 'copy';\n    const blocksData = blocksClipboard[mode] || [];\n    const cloneWithIds = blocksData\n      .filter((blockData) => !!blockData['@type'])\n      .map((blockData) => {\n        const blockConfig = config.blocks.blocksConfig[blockData['@type']];\n        return mode === 'copy'\n          ? blockConfig.cloneData\n            ? blockConfig.cloneData(blockData)\n            : [uuid(), blockData]\n          : [uuid(), blockData]; // if cut/pasting blocks, we don't clone\n      })\n      .filter((info) => !!info); // some blocks may refuse to be copied\n    const blocksFieldname = getBlocksFieldname(formData);\n    const blocksLayoutFieldname = getBlocksLayoutFieldname(formData);\n    const selectedIndex =\n      formData[blocksLayoutFieldname].items.indexOf(selectedBlock) + 1;\n\n    const newBlockData = {\n      [blocksFieldname]: {\n        ...formData[blocksFieldname],\n        ...Object.assign(\n          {},\n          ...cloneWithIds.map(([id, data]) => ({ [id]: data })),\n        ),\n      },\n      [blocksLayoutFieldname]: {\n        ...formData[blocksLayoutFieldname],\n        items: [\n          ...formData[blocksLayoutFieldname].items.slice(0, selectedIndex),\n          ...cloneWithIds.map(([id]) => id),\n          ...formData[blocksLayoutFieldname].items.slice(selectedIndex),\n        ],\n      },\n    };\n\n    if (!(e.ctrlKey || e.metaKey)) this.props.resetBlocksClipboard();\n    this.props.onChangeBlocks(newBlockData);\n  }\n\n  render() {\n    const {\n      blocksClipboard = {},\n      selectedBlock,\n      selectedBlocks,\n      intl,\n    } = this.props;\n    return (\n      <>\n        {selectedBlocks.length > 0 ? (\n          <>\n            <Plug pluggable=\"main.toolbar.bottom\" id=\"blocks-delete-btn\">\n              <button\n                aria-label={intl.formatMessage(messages.deleteBlocks)}\n                onClick={this.deleteBlocks}\n                tabIndex={0}\n                className=\"deleteBlocks\"\n                id=\"toolbar-delete-blocks\"\n              >\n                <Icon name={trashSVG} size=\"30px\" />\n              </button>\n            </Plug>\n            <Plug pluggable=\"main.toolbar.bottom\" id=\"blocks-cut-btn\">\n              <button\n                aria-label={intl.formatMessage(messages.cutBlocks)}\n                onClick={this.cutBlocksToClipboard}\n                tabIndex={0}\n                className=\"cutBlocks\"\n                id=\"toolbar-cut-blocks\"\n              >\n                <Icon name={cutSVG} size=\"30px\" />\n              </button>\n            </Plug>\n            <Plug pluggable=\"main.toolbar.bottom\" id=\"blocks-copy-btn\">\n              <button\n                aria-label={intl.formatMessage(messages.copyBlocks)}\n                onClick={this.copyBlocksToClipboard}\n                tabIndex={0}\n                className=\"copyBlocks\"\n                id=\"toolbar-copy-blocks\"\n              >\n                <Icon name={copySVG} size=\"30px\" />\n              </button>\n            </Plug>\n          </>\n        ) : (\n          ''\n        )}\n        {selectedBlock && (blocksClipboard?.cut || blocksClipboard?.copy) && (\n          <Plug pluggable=\"main.toolbar.bottom\" id=\"block-paste-btn\">\n            <button\n              aria-label={intl.formatMessage(messages.pasteBlocks)}\n              onClick={this.pasteBlocks}\n              tabIndex={0}\n              className=\"pasteBlocks\"\n              id=\"toolbar-paste-blocks\"\n            >\n              <span className=\"blockCount\">\n                {(blocksClipboard.cut || blocksClipboard.copy).length}\n              </span>\n              <Icon name={pasteSVG} size=\"30px\" />\n            </button>\n          </Plug>\n        )}\n      </>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => {\n      return {\n        blocksClipboard: state?.blocksClipboard || {},\n      };\n    },\n    { setBlocksClipboard, resetBlocksClipboard },\n  ),\n)(BlocksToolbarComponent);\n","import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Plug } from '@plone/volto/components/manage/Pluggable';\nimport { Icon } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport { useUndoManager } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nimport undoSVG from '@plone/volto/icons/undo.svg';\nimport redoSVG from '@plone/volto/icons/redo.svg';\n\nconst messages = defineMessages({\n  undo: {\n    id: 'Undo',\n    defaultMessage: 'Undo',\n  },\n  redo: {\n    id: 'Redo',\n    defaultMessage: 'Redo',\n  },\n});\n\nconst UndoToolbar = ({ state, onUndoRedo, maxUndoLevels, enableHotKeys }) => {\n  const intl = useIntl();\n  const undoLevels = maxUndoLevels ?? config.settings.maxUndoLevels;\n  const { doUndo, doRedo, canUndo, canRedo } = useUndoManager(\n    state,\n    onUndoRedo,\n    {\n      maxUndoLevels: undoLevels,\n    },\n  );\n\n  return (\n    <>\n      <Plug\n        pluggable=\"main.toolbar.bottom\"\n        id=\"undo-btn\"\n        dependencies={[canUndo, canRedo]}\n      >\n        <Button\n          className=\"undo\"\n          onClick={() => doUndo()}\n          aria-label={intl.formatMessage(messages.undo)}\n          disabled={!canUndo}\n        >\n          <Icon\n            name={undoSVG}\n            className=\"circled\"\n            size=\"30px\"\n            title={intl.formatMessage(messages.undo)}\n          />\n        </Button>\n      </Plug>\n      <Plug\n        pluggable=\"main.toolbar.bottom\"\n        id=\"redo-btn\"\n        dependencies={[canUndo, canRedo]}\n      >\n        <Button\n          className=\"redo\"\n          onClick={() => doRedo()}\n          aria-label={intl.formatMessage(messages.redo)}\n          disabled={!canRedo}\n        >\n          <Icon\n            name={redoSVG}\n            className=\"circled\"\n            size=\"30px\"\n            title={intl.formatMessage(messages.redo)}\n          />\n        </Button>\n      </Plug>\n    </>\n  );\n};\n\nexport default UndoToolbar;\n","/**\n * Search tags components.\n * @module components/theme/Search/SearchTags\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { getVocabulary } from '@plone/volto/actions';\n\nconst vocabulary = 'plone.app.vocabularies.Keywords';\n\n/**\n * Search tags container class.\n * @class SearchTags\n * @extends Component\n */\nclass SearchTags extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getVocabulary: PropTypes.func.isRequired,\n    terms: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n      }),\n    ).isRequired,\n  };\n\n  componentDidMount() {\n    this.props.getVocabulary({ vocabNameOrURL: vocabulary });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return this.props.terms && this.props.terms.length > 0 ? (\n      <div>\n        {this.props.terms.map((term) => (\n          <Link\n            className=\"ui label\"\n            to={`/search?Subject=${term.title}`}\n            key={term.title}\n          >\n            {term.title}\n          </Link>\n        ))}\n      </div>\n    ) : (\n      <span />\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    terms:\n      state.vocabularies[vocabulary] && state.vocabularies[vocabulary].terms\n        ? state.vocabularies[vocabulary].terms\n        : [],\n  }),\n  { getVocabulary },\n)(SearchTags);\n","/**\n * Comment edit modal.\n * @module components/theme/Comments/CommentEditModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { updateComment } from '@plone/volto/actions';\nimport { ModalForm } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  editComment: {\n    id: 'Edit comment',\n    defaultMessage: 'Edit comment',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  comment: {\n    id: 'Comment',\n    defaultMessage: 'Comment',\n  },\n});\n\n/**\n * CommentEditModal class.\n * @class CommentEditModal\n * @extends Component\n */\nclass CommentEditModal extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateComment: PropTypes.func.isRequired,\n    id: PropTypes.string,\n    text: PropTypes.string,\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    open: PropTypes.bool.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    id: '',\n    text: '',\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs CommentEditModal\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded) {\n      this.props.onOk();\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} data Form data\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.updateComment(this.props.id, data.text);\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      this.props.open && (\n        <ModalForm\n          open={this.props.open}\n          onSubmit={this.onSubmit}\n          onCancel={this.props.onCancel}\n          formData={{ text: this.props.text }}\n          title={this.props.intl.formatMessage(messages.editComment)}\n          schema={{\n            fieldsets: [\n              {\n                id: 'default',\n                title: this.props.intl.formatMessage(messages.default),\n                fields: ['text'],\n              },\n            ],\n            properties: {\n              text: {\n                title: this.props.intl.formatMessage(messages.comment),\n                type: 'string',\n                description: '',\n              },\n            },\n            required: ['text'],\n          }}\n        />\n      )\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      request: state.comments.update,\n    }),\n    { updateComment },\n  ),\n)(CommentEditModal);\n","import React from 'react';\nimport { Breadcrumb } from 'semantic-ui-react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { defineMessages, useIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  home: {\n    id: 'Home',\n    defaultMessage: 'Home',\n  },\n  root: {\n    id: 'Root',\n    defaultMessage: 'Root',\n  },\n});\n\nconst ContentsBreadcrumbs = (props) => {\n  const { settings } = config;\n  const { items } = props;\n  const intl = useIntl();\n  const pathname = useLocation().pathname;\n  const lang = pathname.split('/')[1];\n\n  return (\n    <Breadcrumb>\n      {settings.isMultilingual && (\n        <>\n          <Link\n            to=\"/contents\"\n            className=\"section\"\n            title={intl.formatMessage(messages.root)}\n          >\n            {intl.formatMessage(messages.root)}\n          </Link>\n          <Breadcrumb.Divider />\n        </>\n      )}\n      {settings.isMultilingual && pathname?.split('/')?.length > 2 && (\n        <Link\n          to={`/${lang}/contents`}\n          className=\"section\"\n          title={intl.formatMessage(messages.home)}\n        >\n          {lang}\n        </Link>\n      )}\n      {!settings.isMultilingual && (\n        <Link\n          to=\"/contents\"\n          className=\"section\"\n          title={intl.formatMessage(messages.home)}\n        >\n          {intl.formatMessage(messages.home)}\n        </Link>\n      )}\n      {items.map((breadcrumb, index, breadcrumbs) => [\n        <Breadcrumb.Divider key={`divider-${breadcrumb.url}`} />,\n        index < breadcrumbs.length - 1 ? (\n          <Link\n            key={breadcrumb.url}\n            to={`${breadcrumb.url}/contents`}\n            className=\"section\"\n          >\n            {breadcrumb.nav_title || breadcrumb.title}\n          </Link>\n        ) : (\n          <Breadcrumb.Section key={breadcrumb.url} active>\n            {breadcrumb.nav_title || breadcrumb.title}\n          </Breadcrumb.Section>\n        ),\n      ])}\n    </Breadcrumb>\n  );\n};\n\nexport default ContentsBreadcrumbs;\n","/**\n * Contents index header component.\n * @module components/manage/Contents/ContentsIndexHeader\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nconst widthValues = [\n  'one',\n  'two',\n  'three',\n  'four',\n  'five',\n  'six',\n  'seven',\n  'eight',\n  'nine',\n  'ten',\n  'eleven',\n  'twelve',\n  'thirteen',\n  'fourteen',\n  'fiveteen',\n  'sixteen',\n];\n\n/**\n * Contents index header component class.\n * @function ContentsIndexHeaderComponent\n * @returns {string} Markup of the component.\n */\nexport const ContentsIndexHeaderComponent = ({\n  intl,\n  width,\n  label,\n  connectDragSource,\n  connectDropTarget,\n  isDragging,\n}) =>\n  connectDropTarget(\n    connectDragSource(\n      <th\n        className={`${widthValues[width - 2]} wide`}\n        style={{ opacity: isDragging ? 0.5 : 1, cursor: 'move' }}\n      >\n        {intl.formatMessage({\n          id: label,\n          defaultMessage: label,\n        })}\n      </th>,\n    ),\n  );\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nContentsIndexHeaderComponent.propTypes = {\n  width: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  connectDragSource: PropTypes.func.isRequired,\n  connectDropTarget: PropTypes.func.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  order: PropTypes.number.isRequired,\n  onOrderIndex: PropTypes.func.isRequired,\n};\n\nconst DragDropConnector = (props) => {\n  const { DropTarget, DragSource } = props.reactDnd;\n\n  const DndConnectedContentsIndexHeader = React.useMemo(\n    () =>\n      DropTarget(\n        'index',\n        {\n          hover(props, monitor) {\n            const dragOrder = monitor.getItem().order;\n            const hoverOrder = props.order;\n\n            if (dragOrder === hoverOrder) {\n              return;\n            }\n\n            props.onOrderIndex(dragOrder, hoverOrder - dragOrder);\n\n            monitor.getItem().order = hoverOrder;\n          },\n        },\n        (connect) => ({\n          connectDropTarget: connect.dropTarget(),\n        }),\n      )(\n        DragSource(\n          'index',\n          {\n            beginDrag(props) {\n              return {\n                id: props.label,\n                order: props.order,\n              };\n            },\n          },\n          (connect, monitor) => ({\n            connectDragSource: connect.dragSource(),\n            isDragging: monitor.isDragging(),\n          }),\n        )(injectIntl(ContentsIndexHeaderComponent)),\n      ),\n    [DragSource, DropTarget],\n  );\n\n  return <DndConnectedContentsIndexHeader {...props} />;\n};\n\nexport default injectLazyLibs('reactDnd')(DragDropConnector);\n","/**\n * Contents item component.\n * @module components/manage/Contents/ContentsItem\n */\n\nimport React from 'react';\nimport { Button, Dropdown, Table } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { map } from 'lodash';\nimport { useIntl, defineMessages, FormattedMessage } from 'react-intl';\nimport { Circle, FormattedDate, Icon } from '@plone/volto/components';\nimport { getContentIcon } from '@plone/volto/helpers';\nimport moreSVG from '@plone/volto/icons/more.svg';\nimport checkboxUncheckedSVG from '@plone/volto/icons/checkbox-unchecked.svg';\nimport checkboxCheckedSVG from '@plone/volto/icons/checkbox-checked.svg';\nimport cutSVG from '@plone/volto/icons/cut.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport copySVG from '@plone/volto/icons/copy.svg';\nimport showSVG from '@plone/volto/icons/show.svg';\nimport moveUpSVG from '@plone/volto/icons/move-up.svg';\nimport moveDownSVG from '@plone/volto/icons/move-down.svg';\nimport editingSVG from '@plone/volto/icons/editing.svg';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport cx from 'classnames';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nconst messages = defineMessages({\n  private: {\n    id: 'private',\n    defaultMessage: 'Private',\n  },\n  published: {\n    id: 'published',\n    defaultMessage: 'Published',\n  },\n  intranet: {\n    id: 'intranet',\n    defaultMessage: 'Intranet',\n  },\n  draft: {\n    id: 'draft',\n    defaultMessage: 'Draft',\n  },\n  no_workflow_state: {\n    id: 'no workflow state',\n    defaultMessage: 'No workflow state',\n  },\n  none: {\n    id: 'None',\n    defaultMessage: 'None',\n  },\n});\n\nfunction getColor(string) {\n  switch (string) {\n    case 'private':\n      return '#ed4033';\n    case 'published':\n      return '#007bc1';\n    case 'intranet':\n      return '#51aa55';\n    case 'draft':\n      return '#f6a808';\n    default:\n      return 'grey';\n  }\n}\n\n/**\n * Contents item component class.\n * @function ContentsItemComponent\n * @returns {string} Markup of the component.\n */\nexport const ContentsItemComponent = ({\n  item,\n  selected,\n  onClick,\n  indexes,\n  onCut,\n  onCopy,\n  onDelete,\n  onMoveToTop,\n  onMoveToBottom,\n  connectDragPreview,\n  connectDragSource,\n  connectDropTarget,\n  isDragging,\n  order,\n}) => {\n  const intl = useIntl();\n\n  return connectDropTarget(\n    connectDragPreview(\n      <tr key={item['@id']} className={cx('', { 'dragging-row': isDragging })}>\n        <Table.Cell className={cx('', { 'dragging-cell': isDragging })}>\n          {connectDragSource(\n            <div style={{ display: 'inline-block' }}>\n              <Button icon basic>\n                <Icon\n                  name={dragSVG}\n                  size=\"20px\"\n                  color=\"#878f93\"\n                  className=\"content drag handle\"\n                />\n              </Button>\n            </div>,\n          )}\n        </Table.Cell>\n        <Table.Cell className={cx('', { 'dragging-cell': isDragging })}>\n          {selected ? (\n            <Button\n              icon\n              basic\n              aria-label=\"Unchecked\"\n              onClick={(e) => onClick(e, item['@id'])}\n            >\n              <Icon\n                name={checkboxCheckedSVG}\n                color=\"#007eb1\"\n                size=\"24px\"\n                className=\"checked\"\n              />\n            </Button>\n          ) : (\n            <Button\n              icon\n              basic\n              aria-label=\"Checked\"\n              onClick={(e) => onClick(e, item['@id'])}\n            >\n              <Icon\n                name={checkboxUncheckedSVG}\n                color=\"#826a6a\"\n                size=\"24px\"\n                className=\"unchecked\"\n              />\n            </Button>\n          )}\n        </Table.Cell>\n        <Table.Cell className={cx('', { 'dragging-cell': isDragging })}>\n          <Link\n            className=\"icon-align-name\"\n            to={`${item['@id']}${item.is_folderish ? '/contents' : ''}`}\n          >\n            <div className=\"expire-align\">\n              <Icon\n                name={getContentIcon(item['@type'], item.is_folderish)}\n                size=\"20px\"\n                className=\"icon-margin\"\n                color=\"#878f93\"\n                title={item['@type']}\n              />{' '}\n              <span title={item.title}> {item.title}</span>\n            </div>\n            {item.ExpirationDate !== 'None' &&\n              new Date(item.ExpirationDate).getTime() <\n                new Date().getTime() && (\n                <Button className=\"button-margin\" size=\"mini\">\n                  <FormattedMessage id=\"Expired\" defaultMessage=\"Expired\" />\n                </Button>\n              )}\n          </Link>\n        </Table.Cell>\n        {map(indexes, (index) => (\n          <Table.Cell\n            className={cx('', { 'dragging-cell': isDragging })}\n            key={index.id}\n          >\n            {index.type === 'boolean' &&\n              (item[index.id] ? (\n                <FormattedMessage id=\"Yes\" defaultMessage=\"Yes\" />\n              ) : (\n                <FormattedMessage id=\"No\" defaultMessage=\"No\" />\n              ))}\n            {index.type === 'string' &&\n              index.id !== 'review_state' &&\n              item[index.id]}\n            {index.id === 'review_state' && (\n              <div>\n                <span>\n                  <Circle color={getColor(item[index.id])} size=\"15px\" />\n                </span>\n                {messages[item[index.id]]\n                  ? intl.formatMessage(messages[item[index.id]])\n                  : item['review_title'] ||\n                    item['review_state'] ||\n                    intl.formatMessage(messages.no_workflow_state)}\n              </div>\n            )}\n            {index.type === 'date' && (\n              <>\n                {item[index.id] !== 'None' ? (\n                  <FormattedDate date={item[index.id]} />\n                ) : (\n                  intl.formatMessage(messages.none)\n                )}\n              </>\n            )}\n            {index.type === 'array' && (\n              <span>{item[index.id]?.join(', ')}</span>\n            )}\n          </Table.Cell>\n        ))}\n        <Table.Cell\n          className={cx('', { 'dragging-cell': isDragging })}\n          textAlign=\"right\"\n        >\n          <Dropdown\n            className=\"row-actions\"\n            icon={<Icon name={moreSVG} size=\"24px\" color=\"#007eb1\" />}\n          >\n            <Dropdown.Menu className=\"left\">\n              <Link className=\"item icon-align\" to={`${item['@id']}/edit`}>\n                <Icon name={editingSVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage id=\"Edit\" defaultMessage=\"Edit\" />\n              </Link>\n              <Link className=\"item right-dropdown icon-align\" to={item['@id']}>\n                <Icon name={showSVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage id=\"View\" defaultMessage=\"View\" />\n              </Link>\n              <Dropdown.Divider />\n              <Dropdown.Item\n                onClick={onCut}\n                value={item['@id']}\n                className=\"right-dropdown icon-align\"\n              >\n                <Icon name={cutSVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage id=\"Cut\" defaultMessage=\"Cut\" />\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={onCopy}\n                value={item['@id']}\n                className=\"right-dropdown icon-align\"\n              >\n                <Icon name={copySVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage id=\"Copy\" defaultMessage=\"Copy\" />\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={onDelete}\n                value={item['@id']}\n                className=\"right-dropdown icon-align\"\n              >\n                <Icon name={deleteSVG} color=\"#e40166\" size=\"24px\" />{' '}\n                <FormattedMessage id=\"Delete\" defaultMessage=\"Delete\" />\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item\n                onClick={onMoveToTop}\n                value={order}\n                className=\"right-dropdown icon-align\"\n              >\n                <Icon name={moveUpSVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage\n                  id=\"Move to top of folder\"\n                  defaultMessage=\"Move to top of folder\"\n                />\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={onMoveToBottom}\n                value={order}\n                className=\"right-dropdown icon-align\"\n              >\n                <Icon name={moveDownSVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage\n                  id=\"Move to bottom of folder\"\n                  defaultMessage=\"Move to bottom of folder\"\n                />\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Table.Cell>\n      </tr>,\n    ),\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nContentsItemComponent.propTypes = {\n  item: PropTypes.shape({\n    '@id': PropTypes.string,\n    title: PropTypes.string,\n    is_folderish: PropTypes.bool,\n    '@type': PropTypes.string,\n  }).isRequired,\n  selected: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  indexes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n    }),\n  ).isRequired,\n  onCut: PropTypes.func.isRequired,\n  onCopy: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onMoveToTop: PropTypes.func.isRequired,\n  onMoveToBottom: PropTypes.func.isRequired,\n  connectDragPreview: PropTypes.func.isRequired,\n  connectDragSource: PropTypes.func.isRequired,\n  connectDropTarget: PropTypes.func.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  order: PropTypes.number.isRequired,\n  onOrderItem: PropTypes.func.isRequired,\n};\n\nconst DragDropConnector = (props) => {\n  const { DropTarget, DragSource } = props.reactDnd;\n\n  const DndConnectedContentsItem = React.useMemo(\n    () =>\n      DropTarget(\n        'item',\n        {\n          hover(props, monitor) {\n            const id = monitor.getItem().id;\n            const dragOrder = monitor.getItem().order;\n            const hoverOrder = props.order;\n\n            if (dragOrder === hoverOrder) {\n              return;\n            }\n\n            props.onOrderItem(id, dragOrder, hoverOrder - dragOrder, false);\n\n            monitor.getItem().order = hoverOrder;\n          },\n          drop(props, monitor) {\n            const id = monitor.getItem().id;\n            const dragOrder = monitor.getItem().startOrder;\n            const dropOrder = props.order;\n\n            if (dragOrder === dropOrder) {\n              return;\n            }\n\n            props.onOrderItem(id, dragOrder, dropOrder - dragOrder, true);\n\n            monitor.getItem().order = dropOrder;\n          },\n        },\n        (connect) => ({\n          connectDropTarget: connect.dropTarget(),\n        }),\n      )(\n        DragSource(\n          'item',\n          {\n            beginDrag(props) {\n              return {\n                id: props.item['@id'],\n                order: props.order,\n                startOrder: props.order,\n              };\n            },\n          },\n          (connect, monitor) => ({\n            connectDragSource: connect.dragSource(),\n            connectDragPreview: connect.dragPreview(),\n            isDragging: monitor.isDragging(),\n          }),\n        )(ContentsItemComponent),\n      ),\n    [DragSource, DropTarget],\n  );\n\n  return <DndConnectedContentsItem {...props} />;\n};\n\nexport default injectLazyLibs('reactDnd')(DragDropConnector);\n","/**\n * Contents upload modal.\n * @module components/manage/Contents/ContentsUploadModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport {\n  Button,\n  Dimmer,\n  Header,\n  Icon,\n  Image,\n  Loader,\n  Modal,\n  Table,\n  Segment,\n} from 'semantic-ui-react';\nimport loadable from '@loadable/component';\nimport { concat, filter, map } from 'lodash';\nimport filesize from 'filesize';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { FormattedRelativeDate } from '@plone/volto/components';\nimport { createContent } from '@plone/volto/actions';\n\nconst Dropzone = loadable(() => import('react-dropzone'));\n\nconst messages = defineMessages({\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  upload: {\n    id:\n      '{count, plural, one {Upload {count} file} other {Upload {count} files}}',\n    defaultMessage:\n      '{count, plural, one {Upload {count} file} other {Upload {count} files}}',\n  },\n});\n\nconst SUBREQUEST = 'batch-upload';\n\n/**\n * ContentsUploadModal class.\n * @class ContentsUploadModal\n * @extends Component\n */\nclass ContentsUploadModal extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    createContent: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    open: PropTypes.bool.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsUploadModal\n   */\n  constructor(props) {\n    super(props);\n    this.onRemoveFile = this.onRemoveFile.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      files: [],\n    };\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded) {\n      this.props.onOk();\n      this.setState({\n        files: [],\n      });\n    }\n  }\n\n  /**\n   * Remove file handler\n   * @method onRemoveFile\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  onRemoveFile(event) {\n    this.setState({\n      files: filter(\n        this.state.files,\n        (file, index) =>\n          index !== parseInt(event.target.getAttribute('value'), 10),\n      ),\n    });\n  }\n\n  /**\n   * Drop handler\n   * @method onDrop\n   * @param {array} files File objects\n   * @returns {undefined}\n   */\n  onDrop = async (files) => {\n    for (let i = 0; i < files.length; i++) {\n      await readAsDataURL(files[i]).then((data) => {\n        const fields = data.match(/^data:(.*);(.*),(.*)$/);\n        files[i].preview = fields[0];\n      });\n    }\n    this.setState({\n      files: concat(this.state.files, files),\n    });\n  };\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.onCancel();\n    this.setState({\n      files: [],\n    });\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @returns {undefined}\n   */\n  onSubmit() {\n    Promise.all(map(this.state.files, (file) => readAsDataURL(file))).then(\n      (files) => {\n        this.props.createContent(\n          this.props.pathname,\n          map(this.state.files, (file, index) => {\n            const fields = files[index].match(/^data:(.*);(.*),(.*)$/);\n            const image = fields[1].split('/')[0] === 'image';\n            return {\n              '@type': image ? 'Image' : 'File',\n              title: file.name,\n              [image ? 'image' : 'file']: {\n                data: fields[3],\n                encoding: fields[2],\n                'content-type': fields[1],\n                filename: file.name,\n              },\n            };\n          }),\n          SUBREQUEST,\n        );\n      },\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      this.props.open && (\n        <Modal open={this.props.open}>\n          <Header>\n            <FormattedMessage id=\"Upload files\" defaultMessage=\"Upload files\" />\n          </Header>\n          <Dimmer active={this.props.request.loading}>\n            <Loader>\n              <FormattedMessage\n                id=\"Uploading files\"\n                defaultMessage=\"Uploading files\"\n              />\n            </Loader>\n          </Dimmer>\n          <Modal.Content>\n            <Dropzone\n              onDrop={this.onDrop}\n              className=\"dropzone\"\n              noDragEventsBubbling={true}\n              multiple={true}\n            >\n              {({ getRootProps, getInputProps }) => (\n                <div {...getRootProps({ className: 'dashed' })}>\n                  <Segment>\n                    <Table basic=\"very\">\n                      <Table.Body>\n                        <Table.Row>\n                          <Table.Cell>\n                            <FormattedMessage\n                              id=\"Drag and drop files from your computer onto this area or click the “Browse” button.\"\n                              defaultMessage=\"Drag and drop files from your computer onto this area or click the “Browse” button.\"\n                            />\n                          </Table.Cell>\n                          <Table.Cell>\n                            <Button className=\"ui button primary\">\n                              <FormattedMessage\n                                id=\"Browse\"\n                                defaultMessage=\"Browse\"\n                              />\n                            </Button>\n                            <input\n                              {...getInputProps({\n                                type: 'file',\n                                style: { display: 'none' },\n                              })}\n                            />\n                          </Table.Cell>\n                        </Table.Row>\n                      </Table.Body>\n                    </Table>\n                  </Segment>\n                </div>\n              )}\n            </Dropzone>\n            {this.state.files.length > 0 && (\n              <Table compact singleLine>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell width={8}>\n                      <FormattedMessage\n                        id=\"Filename\"\n                        defaultMessage=\"Filename\"\n                      />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell width={4}>\n                      <FormattedMessage\n                        id=\"Last modified\"\n                        defaultMessage=\"Last modified\"\n                      />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell width={4}>\n                      <FormattedMessage\n                        id=\"File size\"\n                        defaultMessage=\"File size\"\n                      />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell width={4}>\n                      <FormattedMessage id=\"Preview\" defaultMessage=\"Preview\" />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell />\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {map(this.state.files, (file, index) => (\n                    <Table.Row className=\"upload-row\" key={file.name}>\n                      <Table.Cell>{file.name}</Table.Cell>\n                      <Table.Cell>\n                        {file.lastModifiedDate && (\n                          <FormattedRelativeDate date={file.lastModifiedDate} />\n                        )}\n                      </Table.Cell>\n                      <Table.Cell>\n                        {filesize(file.size, { round: 0 })}\n                      </Table.Cell>\n                      <Table.Cell>\n                        {file.type.split('/')[0] === 'image' && (\n                          <Image src={file.preview} height={60} />\n                        )}\n                      </Table.Cell>\n                      <Table.Cell>\n                        <Icon\n                          name=\"close\"\n                          value={index}\n                          link\n                          onClick={this.onRemoveFile}\n                        />\n                      </Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            )}\n          </Modal.Content>\n          <Modal.Actions>\n            {this.state.files.length > 0 && (\n              <Button\n                basic\n                circular\n                primary\n                floated=\"right\"\n                icon=\"arrow right\"\n                aria-label={this.props.intl.formatMessage(messages.upload, {\n                  count: this.state.files.length,\n                })}\n                onClick={this.onSubmit}\n                title={this.props.intl.formatMessage(messages.upload, {\n                  count: this.state.files.length,\n                })}\n                size=\"big\"\n              />\n            )}\n            <Button\n              basic\n              circular\n              secondary\n              icon=\"remove\"\n              aria-label={this.props.intl.formatMessage(messages.cancel)}\n              title={this.props.intl.formatMessage(messages.cancel)}\n              floated=\"right\"\n              size=\"big\"\n              onClick={this.onCancel}\n            />\n          </Modal.Actions>\n        </Modal>\n      )\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      request: state.content.subrequests?.[SUBREQUEST] || {},\n    }),\n    { createContent },\n  ),\n)(ContentsUploadModal);\n","/**\n * Contents properties modal.\n * @module components/manage/Contents/ContentsPropertiesModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { isEmpty, map } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { updateContent } from '@plone/volto/actions';\nimport { ModalForm } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  properties: {\n    id: 'Properties',\n    defaultMessage: 'Properties',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  effectiveTitle: {\n    id: 'Publishing Date',\n    defaultMessage: 'Publishing Date',\n  },\n  effectiveDescription: {\n    id:\n      'If this date is in the future, the content will not show up in listings and searches until this date.',\n    defaultMessage:\n      'If this date is in the future, the content will not show up in listings and searches until this date.',\n  },\n  expiresTitle: {\n    id: 'Expiration Date',\n    defaultMessage: 'Expiration Date',\n  },\n  expiresDescription: {\n    id:\n      'When this date is reached, the content will nolonger be visible in listings and searches.',\n    defaultMessage:\n      'When this date is reached, the content will nolonger be visible in listings and searches.',\n  },\n  rightsTitle: {\n    id: 'Rights',\n    defaultMessage: 'Rights',\n  },\n  rightsDescription: {\n    id: 'Copyright statement or other rights information on this item.',\n    defaultMessage:\n      'Copyright statement or other rights information on this item.',\n  },\n  creatorsTitle: {\n    id: 'Creators',\n    defaultMessage: 'Creators',\n  },\n  creatorsDescription: {\n    id:\n      'Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.',\n    defaultMessage:\n      'Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.',\n  },\n  excludeFromNavTitle: {\n    id: 'Exclude from navigation',\n    defaultMessage: 'Exclude from navigation',\n  },\n  excludeFromNavDescription: {\n    id: 'If selected, this item will not appear in the navigation tree',\n    defaultMessage:\n      'If selected, this item will not appear in the navigation tree',\n  },\n});\n\n/**\n * ContentsPropertiesModal class.\n * @class ContentsPropertiesModal\n * @extends Component\n */\nclass ContentsPropertiesModal extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateContent: PropTypes.func.isRequired,\n    items: PropTypes.arrayOf(PropTypes.string).isRequired,\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    open: PropTypes.bool.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsUploadModal\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded) {\n      this.props.onOk();\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} data Form data\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    if (isEmpty(data)) {\n      this.props.onOk();\n    } else {\n      this.props.updateContent(\n        this.props.items,\n        map(this.props.items, () => data),\n      );\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      this.props.open && (\n        <ModalForm\n          open={this.props.open}\n          onSubmit={this.onSubmit}\n          onCancel={this.props.onCancel}\n          title={this.props.intl.formatMessage(messages.properties)}\n          schema={{\n            fieldsets: [\n              {\n                id: 'default',\n                title: this.props.intl.formatMessage(messages.default),\n                fields: [\n                  'effective',\n                  'expires',\n                  'rights',\n                  'creators',\n                  'exclude_from_nav',\n                ],\n              },\n            ],\n            properties: {\n              effective: {\n                description: this.props.intl.formatMessage(\n                  messages.effectiveDescription,\n                ),\n                title: this.props.intl.formatMessage(messages.effectiveTitle),\n                type: 'string',\n                widget: 'datetime',\n              },\n              expires: {\n                description: this.props.intl.formatMessage(\n                  messages.expiresDescription,\n                ),\n                title: this.props.intl.formatMessage(messages.expiresTitle),\n                type: 'string',\n                widget: 'datetime',\n              },\n              rights: {\n                description: this.props.intl.formatMessage(\n                  messages.rightsDescription,\n                ),\n                title: this.props.intl.formatMessage(messages.rightsTitle),\n                type: 'string',\n                widget: 'textarea',\n              },\n              creators: {\n                description: this.props.intl.formatMessage(\n                  messages.creatorsDescription,\n                ),\n                title: this.props.intl.formatMessage(messages.creatorsTitle),\n                type: 'array',\n              },\n              exclude_from_nav: {\n                description: this.props.intl.formatMessage(\n                  messages.excludeFromNavDescription,\n                ),\n                title: this.props.intl.formatMessage(\n                  messages.excludeFromNavTitle,\n                ),\n                type: 'array',\n                choices: [\n                  [true, 'Yes'],\n                  [false, 'No'],\n                ],\n              },\n            },\n            required: [],\n          }}\n        />\n      )\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      request: state.content.update,\n    }),\n    { updateContent },\n  ),\n)(ContentsPropertiesModal);\n","/**\n * Contents rename modal.\n * @module components/manage/Contents/ContentsRenameModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { concat, merge, map } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { updateContent } from '@plone/volto/actions';\nimport { ModalForm } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  renameItems: {\n    id: 'Rename items',\n    defaultMessage: 'Rename items',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  title: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  shortName: {\n    id: 'Short name',\n    defaultMessage: 'Short name',\n  },\n  shortNameDescription: {\n    id: 'This name will be displayed in the URL.',\n    defaultMessage: 'This name will be displayed in the URL.',\n  },\n  loadingMessage: {\n    id: 'Rename Items Loading Message',\n    defaultMessage: 'Renaming items...',\n  },\n});\n\n/**\n * ContentsRenameModal class.\n * @class ContentsRenameModal\n * @extends Component\n */\nclass ContentsRenameModal extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateContent: PropTypes.func.isRequired,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        title: PropTypes.string,\n        url: PropTypes.string,\n      }),\n    ).isRequired,\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    open: PropTypes.bool.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsUploadModal\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded) {\n      this.props.onOk();\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} data Form data\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.updateContent(\n      map(this.props.items, (item) => item.url),\n      map(this.props.items, (item, index) => ({\n        id: data[`${index}_id`],\n        title: data[`${index}_title`],\n      })),\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      this.props.open && (\n        <ModalForm\n          open={this.props.open}\n          loading={this.props.request.loading}\n          loadingMessage={this.props.intl.formatMessage(\n            messages.loadingMessage,\n          )}\n          onSubmit={this.onSubmit}\n          onCancel={this.props.onCancel}\n          formData={merge(\n            ...map(this.props.items, (item, index) => ({\n              [`${index}_title`]: item.title,\n              [`${index}_id`]: item.id,\n            })),\n          )}\n          title={this.props.intl.formatMessage(messages.renameItems)}\n          schema={{\n            fieldsets: [\n              {\n                id: 'default',\n                title: this.props.intl.formatMessage(messages.default),\n                fields: concat(\n                  ...map(this.props.items, (item, index) => [\n                    `${index}_title`,\n                    `${index}_id`,\n                  ]),\n                ),\n              },\n            ],\n            properties: merge(\n              ...map(this.props.items, (item, index) => ({\n                [`${index}_title`]: {\n                  title: this.props.intl.formatMessage(messages.title),\n                  type: 'string',\n                  description: '',\n                },\n                [`${index}_id`]: {\n                  title: this.props.intl.formatMessage(messages.shortName),\n                  type: 'id',\n                  description: this.props.intl.formatMessage(\n                    messages.shortNameDescription,\n                  ),\n                },\n              })),\n            ),\n            required: [],\n          }}\n        />\n      )\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      request: state.content.update,\n    }),\n    { updateContent },\n  ),\n)(ContentsRenameModal);\n","/**\n * Contents workflow modal.\n * @module components/manage/Contents/ContentsWorkflowModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { concat, filter, last, map, uniqBy } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { getWorkflow, transitionWorkflow } from '@plone/volto/actions';\nimport { ModalForm } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  stateTitle: {\n    id: 'Change State',\n    defaultMessage: 'Change State',\n  },\n  includeChildrenTitle: {\n    id: 'Change workflow state recursively',\n    defaultMessage: 'Change workflow state recursively',\n  },\n  stateDescription: {\n    id: 'Select the transition to be used for modifying the items state.',\n    defaultMessage:\n      'Select the transition to be used for modifying the items state.',\n  },\n  loadingMessage: {\n    id: 'Workflow Change Loading Message',\n    defaultMessage: 'Updating workflow states...',\n  },\n});\n\n/**\n * ContentsWorkflowModal class.\n * @class ContentsWorkflowModal\n * @extends Component\n */\nclass ContentsWorkflowModal extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getWorkflow: PropTypes.func.isRequired,\n    transitionWorkflow: PropTypes.func.isRequired,\n    items: PropTypes.arrayOf(PropTypes.string).isRequired,\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    workflows: PropTypes.arrayOf(\n      PropTypes.shape({\n        transition: PropTypes.shape({\n          '@id': PropTypes.string,\n          title: PropTypes.string,\n        }),\n      }),\n    ).isRequired,\n    open: PropTypes.bool.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsUploadModal\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getWorkflow(this.props.items);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded) {\n      this.props.onOk();\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {string} state New state\n   * @returns {undefined}\n   */\n  onSubmit({ state, include_children }) {\n    if (!state) {\n      return;\n    }\n\n    this.props.transitionWorkflow(\n      filter(\n        map(\n          concat(\n            ...map(this.props.workflows, (workflow) => workflow.transitions),\n          ),\n          (item) => item['@id'],\n        ),\n        (x) => last(x.split('/')) === state,\n      ),\n      include_children,\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      this.props.open &&\n      this.props.workflows.length > 0 && (\n        <ModalForm\n          open={this.props.open}\n          loading={this.props.request.loading}\n          loadingMessage={this.props.intl.formatMessage(\n            messages.loadingMessage,\n          )}\n          onSubmit={this.onSubmit}\n          onCancel={this.props.onCancel}\n          title={this.props.intl.formatMessage(messages.stateTitle)}\n          schema={{\n            fieldsets: [\n              {\n                id: 'default',\n                title: this.props.intl.formatMessage(messages.default),\n                fields: ['state', 'include_children'],\n              },\n            ],\n            properties: {\n              state: {\n                description: this.props.intl.formatMessage(\n                  messages.stateDescription,\n                ),\n                title: this.props.intl.formatMessage(messages.stateTitle),\n                type: 'string',\n                choices: map(\n                  uniqBy(\n                    concat(\n                      ...map(\n                        this.props.workflows,\n                        (workflow) => workflow.transitions,\n                      ),\n                    ),\n                    (x) => x.title,\n                  ),\n                  (y) => [last(y['@id'].split('/')), y.title],\n                ),\n              },\n              include_children: {\n                title: this.props.intl.formatMessage(\n                  messages.includeChildrenTitle,\n                ),\n                type: 'boolean',\n              },\n            },\n            required: [],\n          }}\n        />\n      )\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      request: state.workflow.transition,\n      workflows: state.workflow.multiple,\n    }),\n    { getWorkflow, transitionWorkflow },\n  ),\n)(ContentsWorkflowModal);\n","/**\n * Contents tags modal.\n * @module components/manage/Contents/ContentsTagsModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { map } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { updateContent } from '@plone/volto/actions';\nimport { ModalForm } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  tags: {\n    id: 'Tags',\n    defaultMessage: 'Tags',\n  },\n  tagsToRemove: {\n    id: 'Tags to remove',\n    defaultMessage: 'Tags to remove',\n  },\n  tagsToAdd: {\n    id: 'Tags to add',\n    defaultMessage: 'Tags to add',\n  },\n});\n\n/**\n * ContentsTagsModal class.\n * @class ContentsTagsModal\n * @extends Component\n */\nclass ContentsTagsModal extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateContent: PropTypes.func.isRequired,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        subjects: PropTypes.arrayOf(PropTypes.string),\n        url: PropTypes.string,\n      }),\n    ).isRequired,\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    open: PropTypes.bool.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsUploadModal\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded) {\n      this.props.onOk();\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} data Form data\n   * @returns {undefined}\n   */\n  onSubmit({ tags_to_add = [], tags_to_remove = [] }) {\n    this.props.updateContent(\n      map(this.props.items, (item) => item.url),\n      map(this.props.items, (item) => ({\n        subjects: [\n          ...new Set(\n            (item.subjects ?? [])\n              .filter((s) => !tags_to_remove.includes(s))\n              .concat(tags_to_add),\n          ),\n        ],\n      })),\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const currentSetTags = [\n      ...new Set(this.props.items.map((item) => item.subjects).flat()),\n    ];\n\n    return (\n      this.props.open && (\n        <ModalForm\n          open={this.props.open}\n          onSubmit={this.onSubmit}\n          onCancel={this.props.onCancel}\n          title={this.props.intl.formatMessage(messages.tags)}\n          schema={{\n            fieldsets: [\n              {\n                id: 'default',\n                title: this.props.intl.formatMessage(messages.default),\n                fields: ['tags_to_remove', 'tags_to_add'],\n              },\n            ],\n            properties: {\n              tags_to_remove: {\n                type: 'array',\n                widget: 'array',\n                title: this.props.intl.formatMessage(messages.tagsToRemove),\n                choices: currentSetTags.map((tag) => [tag, tag]),\n              },\n              tags_to_add: {\n                type: 'array',\n                widget: 'token',\n                title: this.props.intl.formatMessage(messages.tagsToAdd),\n                items: {\n                  vocabulary: { '@id': 'plone.app.vocabularies.Keywords' },\n                },\n              },\n            },\n            required: [],\n          }}\n        />\n      )\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      request: state.content.update,\n    }),\n    { updateContent },\n  ),\n)(ContentsTagsModal);\n","/**\n * Users controlpanel user.\n * @module components/manage/Controlpanels/UsersControlpanelUser\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Dropdown, Table, Checkbox } from 'semantic-ui-react';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nimport { Icon } from '@plone/volto/components';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\n\n/**\n * UsersControlpanelUser class.\n * @class UsersControlpanelUser\n * @extends Component\n */\nclass RenderUsers extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    user: PropTypes.shape({\n      username: PropTypes.string,\n      fullname: PropTypes.string,\n      roles: PropTypes.arrayOf(PropTypes.string),\n    }).isRequired,\n    roles: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n      }),\n    ).isRequired,\n    onDelete: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.onChange = this.onChange.bind(this);\n  }\n  /**\n   * @param {*} event\n   * @param {*} { value }\n   * @memberof UsersControlpanelUser\n   */\n\n  onChange(event, { value }) {\n    const [user, role] = value.split('.');\n    this.props.updateUser(user, role);\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Table.Row key={this.props.user.username}>\n        <Table.Cell className=\"fullname\">\n          {this.props.user.fullname\n            ? this.props.user.fullname\n            : this.props.user.username}\n        </Table.Cell>\n        {this.props.roles.map((role) => (\n          <Table.Cell key={role.id}>\n            {this.props.inheritedRole &&\n            this.props.inheritedRole.includes(role.id) ? (\n              <Icon\n                name={ploneSVG}\n                size=\"20px\"\n                color=\"#007EB1\"\n                title={'plone-svg'}\n              />\n            ) : (\n              <Checkbox\n                checked={this.props.user.roles.includes(role.id)}\n                onChange={this.onChange}\n                value={`${this.props.user.id}.${role.id}`}\n              />\n            )}\n          </Table.Cell>\n        ))}\n        <Table.Cell textAlign=\"right\">\n          <Dropdown icon=\"ellipsis horizontal\">\n            <Dropdown.Menu className=\"left\">\n              <Dropdown.Item\n                onClick={this.props.onDelete}\n                value={this.props.user['@id']}\n              >\n                <Icon name={trashSVG} size=\"15px\" />\n                <FormattedMessage id=\"Delete\" defaultMessage=\"Delete\" />\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\nexport default injectIntl(RenderUsers);\n","/**\n * Users controlpanel groups.\n * @module components/manage/Controlpanels/UsersControlpanelGroups\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Dropdown, Table, Checkbox } from 'semantic-ui-react';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\nimport { Icon } from '@plone/volto/components';\n\n/**\n * UsersControlpanelGroups class.\n * @class UsersControlpanelGroups\n * @extends Component\n */\nclass RenderGroups extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    //single group\n    group: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      email: PropTypes.string,\n      groupname: PropTypes.string,\n      roles: PropTypes.arrayOf(PropTypes.string),\n    }).isRequired,\n\n    roles: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n      }),\n    ).isRequired,\n    inheritedRole: PropTypes.array,\n    onDelete: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  /**\n   * @param {*} event\n   * @param {*} { value }\n   * @memberof UsersControlpanelUser\n   */\n  onChange(event, { value }) {\n    const [group, role] = value.split('.');\n    this.props.updateGroups(group, role);\n  }\n\n  /**\n   *@param {*}\n   *@returns {Boolean}\n   *@memberof RenderGroups\n   */\n  isAuthGroup = (roleId) => {\n    return this.props.inheritedRole.includes(roleId);\n  };\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Table.Row key={this.props.group.title}>\n        <Table.Cell>{this.props.group.groupname}</Table.Cell>\n        {this.props.roles.map((role) => (\n          <Table.Cell key={role.id}>\n            {this.props.inheritedRole &&\n            this.props.inheritedRole.includes(role.id) &&\n            this.props.group.roles.includes('Authenticated') ? (\n              <Icon\n                name={ploneSVG}\n                size=\"20px\"\n                color=\"#007EB1\"\n                title={'plone-svg'}\n              />\n            ) : (\n              <Checkbox\n                checked={\n                  this.props.group.id === 'AuthenticatedUsers'\n                    ? this.isAuthGroup(role.id)\n                    : this.props.group.roles.includes(role.id)\n                }\n                onChange={this.onChange}\n                value={`${this.props.group.id}.${role.id}`}\n              />\n            )}\n          </Table.Cell>\n        ))}\n        <Table.Cell textAlign=\"right\">\n          <Dropdown icon=\"ellipsis horizontal\">\n            <Dropdown.Menu className=\"left\">\n              <Dropdown.Item\n                onClick={this.props.onDelete}\n                value={this.props.group['@id']}\n              >\n                <Icon name={trashSVG} size=\"15px\" />\n                <FormattedMessage id=\"Delete\" defaultMessage=\"Delete\" />\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\nexport default injectIntl(RenderGroups);\n","/**\n * Diff field component.\n * @module components/manage/Diff/DiffField\n */\n\nimport React from 'react';\n// import { diffWords as dWords } from 'diff';\nimport { join, map } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport ReactDOMServer from 'react-dom/server';\nimport { Provider } from 'react-intl-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { useSelector } from 'react-redux';\n\nimport { Api } from '@plone/volto/helpers';\nimport configureStore from '@plone/volto/store';\nimport { DefaultView } from '@plone/volto/components/';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\n/**\n * Enhanced diff words utility\n * @function diffWords\n * @param oneStr Field one\n * @param twoStr Field two\n */\n\n/**\n * Diff field component.\n * @function DiffField\n * @param {*} one Field one\n * @param {*} two Field two\n * @param {Object} schema Field schema\n * @returns {string} Markup of the component.\n */\nconst DiffField = ({\n  one,\n  two,\n  contentOne,\n  contentTwo,\n  view,\n  schema,\n  diffLib,\n}) => {\n  const language = useSelector((state) => state.intl.locale);\n  const readable_date_format = {\n    dateStyle: 'full',\n    timeStyle: 'short',\n  };\n  const diffWords = (oneStr, twoStr) => {\n    return diffLib.diffWords(String(oneStr), String(twoStr));\n  };\n\n  let parts, oneArray, twoArray;\n  if (schema.widget) {\n    switch (schema.widget) {\n      case 'richtext':\n        parts = diffWords(one?.data, two?.data);\n        break;\n      case 'datetime':\n        parts = diffWords(\n          new Intl.DateTimeFormat(language, readable_date_format).format(\n            new Date(one),\n          ),\n          new Intl.DateTimeFormat(language, readable_date_format).format(\n            new Date(two),\n          ),\n        );\n        break;\n      case 'json':\n        const api = new Api();\n        const history = createBrowserHistory();\n        const store = configureStore(window.__data, history, api);\n        parts = diffWords(\n          ReactDOMServer.renderToStaticMarkup(\n            <Provider store={store}>\n              <ConnectedRouter history={history}>\n                <DefaultView content={contentOne} />\n              </ConnectedRouter>\n            </Provider>,\n          ),\n          ReactDOMServer.renderToStaticMarkup(\n            <Provider store={store}>\n              <ConnectedRouter history={history}>\n                <DefaultView content={contentTwo} />\n              </ConnectedRouter>\n            </Provider>,\n          ),\n        );\n        break;\n      case 'textarea':\n      default:\n        parts = diffWords(one, two);\n        break;\n    }\n  } else if (schema.type === 'object') {\n    parts = diffWords(one?.filename || one, two?.filename || two);\n  } else if (schema.type === 'array') {\n    oneArray = (one || []).map((i) => i?.title || i);\n    twoArray = (two || []).map((j) => j?.title || j);\n    parts = diffWords(oneArray, twoArray);\n  } else {\n    parts = diffWords(one?.title || one, two?.title || two);\n  }\n  return (\n    <Table compact data-testid=\"DiffField\">\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell colSpan={2}>{schema.title}</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {view === 'split' && (\n          <Table.Row>\n            <Table.Cell width={8} verticalAlign=\"top\">\n              <span\n                dangerouslySetInnerHTML={{\n                  __html: join(\n                    map(\n                      parts,\n                      (part) =>\n                        (part.removed &&\n                          `<span class=\"deletion\">${part.value}</span>`) ||\n                        (!part.added && `<span>${part.value}</span>`) ||\n                        '',\n                    ),\n                    '',\n                  ),\n                }}\n              />\n            </Table.Cell>\n            <Table.Cell width={8} verticalAlign=\"top\">\n              <span\n                dangerouslySetInnerHTML={{\n                  __html: join(\n                    map(\n                      parts,\n                      (part) =>\n                        (part.added &&\n                          `<span class=\"addition\">${part.value}</span>`) ||\n                        (!part.removed && `<span>${part.value}</span>`) ||\n                        '',\n                    ),\n                    '',\n                  ),\n                }}\n              />\n            </Table.Cell>\n          </Table.Row>\n        )}\n        {view === 'unified' && (\n          <Table.Row>\n            <Table.Cell width={16} verticalAlign=\"top\">\n              <span\n                dangerouslySetInnerHTML={{\n                  __html: join(\n                    map(\n                      parts,\n                      (part) =>\n                        (part.removed &&\n                          `<span class=\"deletion\">${part.value}</span>`) ||\n                        (part.added &&\n                          `<span class=\"addition\">${part.value}</span>`) ||\n                        (!part.added && `<span>${part.value}</span>`),\n                    ),\n                    '',\n                  ),\n                }}\n              />\n            </Table.Cell>\n          </Table.Row>\n        )}\n      </Table.Body>\n    </Table>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nDiffField.propTypes = {\n  one: PropTypes.any.isRequired,\n  two: PropTypes.any.isRequired,\n  contentOne: PropTypes.any,\n  contentTwo: PropTypes.any,\n  view: PropTypes.string.isRequired,\n  schema: PropTypes.shape({\n    widget: PropTypes.string,\n    type: PropTypes.string,\n    title: PropTypes.string,\n  }).isRequired,\n};\n\nexport default injectLazyLibs('diffLib')(DiffField);\n","import React, { useRef } from 'react';\nimport { isEmpty } from 'lodash';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { v4 as uuid } from 'uuid';\n\nconst getPlaceholder = (draggedDOM, sourceIndex, destinationIndex) => {\n  // Because of the margin rendering rules, there is no easy\n  // way to calculate the offset of the placeholder.\n  //\n  // (Note that this is the reason we cannot use the solutions\n  // published on the net, because they assume that we are in control\n  // of the content and there are no additional margins involved.)\n  //\n  // To get a placeholder that looks good in all cases, we\n  // fill up the space between the previous and the next element.\n  const childrenArray = [...draggedDOM.parentNode.children];\n  // Remove the source element\n  childrenArray.splice(sourceIndex, 1);\n  // Also remove the placeholder that the library always inserts at the end\n  childrenArray.splice(-1, 1);\n  const parentRect = draggedDOM.parentNode.getBoundingClientRect();\n  const prevNode = childrenArray[destinationIndex - 1];\n  const nextNode = childrenArray[destinationIndex];\n  let top, bottom;\n  if (prevNode) {\n    const prevRect = prevNode.getBoundingClientRect();\n    top = prevRect.top + prevRect.height - parentRect.top;\n  } else {\n    top = 0;\n  }\n  if (nextNode) {\n    const nextRect = nextNode.getBoundingClientRect();\n    bottom = nextRect.top - parentRect.top;\n  } else {\n    bottom =\n      parentRect.bottom +\n      draggedDOM.getBoundingClientRect().height -\n      parentRect.top;\n  }\n  return {\n    clientY: top,\n    clientHeight: bottom - top,\n    clientX: parseFloat(\n      window.getComputedStyle(draggedDOM.parentNode).paddingLeft,\n    ),\n    clientWidth: draggedDOM.clientWidth,\n  };\n};\n\nconst DragDropList = (props) => {\n  const {\n    childList,\n    children,\n    onMoveItem,\n    as = 'div',\n    style,\n    forwardedAriaLabelledBy,\n    reactBeautifulDnd,\n  } = props; //renderChild\n  const { DragDropContext, Draggable, Droppable } = reactBeautifulDnd;\n  const [placeholderProps, setPlaceholderProps] = React.useState({});\n  const [uid] = React.useState(uuid());\n  // queueing timed action\n  const timer = useRef(null);\n\n  const onDragStart = React.useCallback((event) => {\n    clearTimeout(timer.current);\n    const queryAttr = 'data-rbd-draggable-id';\n    const domQuery = `[${queryAttr}='${event.draggableId}']`;\n    const draggedDOM = document.querySelector(domQuery);\n    if (!draggedDOM) {\n      return;\n    }\n    const sourceIndex = event.source.index;\n    setPlaceholderProps(getPlaceholder(draggedDOM, sourceIndex, sourceIndex));\n  }, []);\n\n  const onDragEnd = React.useCallback(\n    (result) => {\n      clearTimeout(timer.current);\n      onMoveItem(result);\n      setPlaceholderProps({});\n    },\n    [onMoveItem],\n  );\n\n  const onDragUpdate = React.useCallback((update) => {\n    clearTimeout(timer.current);\n    setPlaceholderProps({});\n    if (!update.destination) {\n      return;\n    }\n    const draggableId = update.draggableId;\n    const queryAttr = 'data-rbd-draggable-id';\n    const domQuery = `[${queryAttr}='${draggableId}']`;\n    const draggedDOM = document.querySelector(domQuery);\n    if (!draggedDOM) {\n      return;\n    }\n    const sourceIndex = update.source.index;\n    const destinationIndex = update.destination.index;\n    // Wait until the animations have finished, to make it look good.\n    timer.current = setTimeout(\n      () =>\n        setPlaceholderProps(\n          getPlaceholder(draggedDOM, sourceIndex, destinationIndex),\n        ),\n      250,\n    );\n  }, []);\n\n  const AsDomComponent = as;\n  return (\n    <DragDropContext\n      onDragStart={onDragStart}\n      onDragUpdate={onDragUpdate}\n      onDragEnd={onDragEnd}\n    >\n      <Droppable droppableId={uid}>\n        {(provided, snapshot) => (\n          <AsDomComponent\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            style={{ ...style, position: 'relative' }}\n            aria-labelledby={forwardedAriaLabelledBy}\n          >\n            {childList\n              .filter(([id, child]) => id && child) // beware numbers!\n              .map(([childId, child], index) => (\n                <Draggable\n                  draggableId={childId.toString()}\n                  index={index}\n                  key={childId}\n                  style={{\n                    userSelect: 'none',\n                  }}\n                >\n                  {(draginfo) => children({ child, childId, index, draginfo })}\n                </Draggable>\n              ))}\n            {provided.placeholder}\n            {!isEmpty(placeholderProps) && snapshot.isDraggingOver && (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: placeholderProps.clientY,\n                  left: placeholderProps.clientX,\n                  height: placeholderProps.clientHeight,\n                  background: '#eee',\n                  width: placeholderProps.clientWidth,\n                  borderRadius: '3px',\n                }}\n              />\n            )}\n          </AsDomComponent>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default injectLazyLibs(['reactBeautifulDnd'])(DragDropList);\n","import { InlineForm } from '@plone/volto/components';\nimport { withVariationSchemaEnhancer } from '@plone/volto/helpers';\n\nconst BlockDataForm = withVariationSchemaEnhancer(InlineForm);\n\nexport default BlockDataForm;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/**\n * Schema widget fieldset.\n * @module components/manage/Widgets/SchemaWidgetFieldset\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\n/**\n * Schema widget fieldset component.\n * @function SchemaWidgetFieldset\n * @returns {string} Markup of the component.\n */\nexport const SchemaWidgetFieldsetComponent = ({\n  // isDragging,\n  title,\n  order,\n  active,\n  onShowEditFieldset,\n  onShowDeleteFieldset,\n  onClick,\n  getItemStyle,\n  isDraggable,\n  isDisabled,\n  reactBeautifulDnd,\n}) => (\n  <reactBeautifulDnd.Draggable draggableId={title} index={order} key={title}>\n    {(provided, snapshot) => (\n      <div\n        className={`item${active ? ' active' : ''}`}\n        onClick={() => onClick(order)}\n        ref={provided.innerRef}\n        {...provided.draggableProps}\n        style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\n      >\n        {isDraggable && (\n          <i\n            aria-hidden=\"true\"\n            className=\"grey bars icon drag handle\"\n            {...provided.dragHandleProps}\n          />\n        )}\n        {title}\n        {!isDisabled && (\n          <button\n            className=\"item ui noborder button\"\n            onClick={(event) => {\n              event.stopPropagation();\n              event.preventDefault();\n              onShowEditFieldset(order);\n            }}\n          >\n            <Icon name=\"write square\" size=\"large\" color=\"blue\" />\n          </button>\n        )}\n\n        {!isDisabled && (\n          <button\n            className=\"item ui noborder button\"\n            onClick={(event) => {\n              event.stopPropagation();\n              event.preventDefault();\n              onShowDeleteFieldset(order);\n            }}\n          >\n            <Icon name=\"close\" size=\"large\" color=\"red\" />\n          </button>\n        )}\n      </div>\n    )}\n  </reactBeautifulDnd.Draggable>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nSchemaWidgetFieldsetComponent.propTypes = {\n  order: PropTypes.number.isRequired,\n  active: PropTypes.bool.isRequired,\n  onOrderFieldset: PropTypes.func.isRequired,\n  onShowEditFieldset: PropTypes.func.isRequired,\n  onShowDeleteFieldset: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  getItemStyle: PropTypes.func.isRequired,\n  isDraggable: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n};\n\nexport default injectLazyLibs(['reactBeautifulDnd'])(\n  SchemaWidgetFieldsetComponent,\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'semantic-ui-react';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { Icon, TextWidget } from '@plone/volto/components';\nimport AlignBlock from '@plone/volto/components/manage/Sidebar/AlignBlock';\n\nimport globeSVG from '@plone/volto/icons/globe.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  LinkTo: {\n    id: 'Link to',\n    defaultMessage: 'Link to',\n  },\n  openLinkInNewTab: {\n    id: 'Open in a new tab',\n    defaultMessage: 'Open in a new tab',\n  },\n  MapsURL: {\n    id: 'Maps URL',\n    defaultMessage: 'Maps URL',\n  },\n});\n\nconst MapsSidebar = ({\n  data,\n  block,\n  onChangeBlock,\n  openObjectBrowser,\n  required = false,\n  resetSubmitUrl,\n  intl,\n}) => {\n  return (\n    <Segment.Group raised>\n      <header className=\"header pulled\">\n        <h2>\n          <FormattedMessage id=\"Map\" defaultMessage=\"Map\" />\n        </h2>\n      </header>\n\n      {!data.url && (\n        <>\n          <Segment className=\"sidebar-metadata-container\" secondary>\n            <FormattedMessage\n              id=\"No map selected\"\n              defaultMessage=\"No map selected\"\n            />\n            <Icon name={globeSVG} size=\"100px\" color=\"#b8c6c8\" />\n          </Segment>\n        </>\n      )}\n      {data.url && (\n        <>\n          <Segment className=\"form sidebar-image-data\">\n            {data.url && (\n              <TextWidget\n                id=\"external\"\n                title={intl.formatMessage(messages.MapsURL)}\n                required={false}\n                value={data.url}\n                icon={clearSVG}\n                iconAction={() => {\n                  resetSubmitUrl();\n                  onChangeBlock(block, {\n                    ...data,\n                    url: '',\n                  });\n                }}\n                onChange={() => {}}\n              />\n            )}\n            <Form.Field inline required={required}>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column width=\"4\">\n                    <div className=\"wrapper\">\n                      <label htmlFor=\"field-align\">\n                        <FormattedMessage\n                          id=\"Alignment\"\n                          defaultMessage=\"Alignment\"\n                        />\n                      </label>\n                    </div>\n                  </Grid.Column>\n                  <Grid.Column width=\"8\" className=\"align-tools\">\n                    <AlignBlock\n                      align={data.align}\n                      onChangeBlock={onChangeBlock}\n                      data={data}\n                      block={block}\n                    />\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Form.Field>\n          </Segment>\n        </>\n      )}\n    </Segment.Group>\n  );\n};\n\nMapsSidebar.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired,\n  resetSubmitUrl: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(MapsSidebar);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'semantic-ui-react';\nimport { Accordion, Grid, Segment } from 'semantic-ui-react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { CheckboxWidget, Icon, TextWidget } from '@plone/volto/components';\nimport AlignBlock from '@plone/volto/components/manage/Sidebar/AlignBlock';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers';\nimport videoSVG from '@plone/volto/icons/videocamera.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\n\nconst messages = defineMessages({\n  LinkTo: {\n    id: 'Link to',\n    defaultMessage: 'Link to',\n  },\n  openLinkInNewTab: {\n    id: 'Open in a new tab',\n    defaultMessage: 'Open in a new tab',\n  },\n  videoURL: {\n    id: 'Video URL',\n    defaultMessage: 'Video URL',\n  },\n  Preview_image: {\n    id: 'Preview Image URL',\n    defaultMessage: 'Preview Image URL',\n  },\n});\n\nconst VideoSidebar = ({\n  data,\n  block,\n  onChangeBlock,\n  openObjectBrowser,\n  required = false,\n  resetSubmitUrl,\n  intl,\n}) => {\n  const [activeAccIndex, setActiveAccIndex] = useState(0);\n\n  function handleAccClick(e, titleProps) {\n    const { index } = titleProps;\n    const newIndex = activeAccIndex === index ? -1 : index;\n\n    setActiveAccIndex(newIndex);\n  }\n\n  return (\n    <Segment.Group raised>\n      <header className=\"header pulled\">\n        <h2>\n          <FormattedMessage id=\"Video\" defaultMessage=\"Video\" />\n        </h2>\n      </header>\n\n      {!data.url && (\n        <>\n          <Segment className=\"sidebar-metadata-container\" secondary>\n            <FormattedMessage\n              id=\"No video selected\"\n              defaultMessage=\"No video selected\"\n            />\n            <Icon name={videoSVG} size=\"100px\" color=\"#b8c6c8\" />\n          </Segment>\n        </>\n      )}\n      {data.url && (\n        <>\n          <Segment className=\"form sidebar-image-data\">\n            {data.url && (\n              <>\n                <TextWidget\n                  id=\"external\"\n                  title={intl.formatMessage(messages.videoURL)}\n                  required={false}\n                  value={data.url}\n                  icon={clearSVG}\n                  iconAction={() => {\n                    resetSubmitUrl();\n                    onChangeBlock(block, {\n                      ...data,\n                      url: '',\n                    });\n                  }}\n                  onChange={() => {}}\n                />\n                <TextWidget\n                  id=\"video-preview-image\"\n                  title={intl.formatMessage(messages.Preview_image)}\n                  required={false}\n                  value={\n                    isInternalURL(data.preview_image)\n                      ? data.preview_image\n                          ?.replace(/\\/$/, '')\n                          .split('/')\n                          .slice(-1)[0]\n                      : data.preview_image\n                  }\n                  icon={data.preview_image ? clearSVG : navTreeSVG}\n                  iconAction={\n                    data.preview_image\n                      ? () => {\n                          onChangeBlock(block, {\n                            ...data,\n                            preview_image: '',\n                          });\n                        }\n                      : () =>\n                          openObjectBrowser({\n                            mode: 'image',\n                            dataName: 'preview_image',\n                          })\n                  }\n                  onChange={(id, value) => {\n                    onChangeBlock(block, {\n                      ...data,\n                      preview_image: value,\n                    });\n                  }}\n                />\n              </>\n            )}\n            <Form.Field inline required={required}>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column width=\"4\">\n                    <div className=\"wrapper\">\n                      <label htmlFor=\"field-align\">\n                        <FormattedMessage\n                          id=\"Alignment\"\n                          defaultMessage=\"Alignment\"\n                        />\n                      </label>\n                    </div>\n                  </Grid.Column>\n                  <Grid.Column width=\"8\" className=\"align-tools\">\n                    <AlignBlock\n                      align={data.align}\n                      onChangeBlock={onChangeBlock}\n                      data={data}\n                      block={block}\n                    />\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Form.Field>\n          </Segment>\n          {data.url.match('.mp4') && (\n            <Accordion fluid styled className=\"form\">\n              <Accordion.Title\n                active={activeAccIndex === 0}\n                index={0}\n                onClick={handleAccClick}\n              >\n                Link Settings\n                {activeAccIndex === 0 ? (\n                  <Icon name={upSVG} size=\"20px\" />\n                ) : (\n                  <Icon name={downSVG} size=\"20px\" />\n                )}\n              </Accordion.Title>\n              <Accordion.Content active={activeAccIndex === 0}>\n                <TextWidget\n                  id=\"link\"\n                  title={intl.formatMessage(messages.LinkTo)}\n                  required={false}\n                  value={flattenToAppURL(data.href)}\n                  icon={data.href ? clearSVG : navTreeSVG}\n                  iconAction={\n                    data.href\n                      ? () => {\n                          onChangeBlock(block, {\n                            ...data,\n                            href: '',\n                          });\n                        }\n                      : () => openObjectBrowser({ mode: 'link' })\n                  }\n                  onChange={(name, value) => {\n                    onChangeBlock(block, {\n                      ...data,\n                      href: flattenToAppURL(value),\n                    });\n                  }}\n                />\n                <CheckboxWidget\n                  id=\"openLinkInNewTab\"\n                  title={intl.formatMessage(messages.openLinkInNewTab)}\n                  value={data.openLinkInNewTab ? data.openLinkInNewTab : false}\n                  onChange={(name, value) => {\n                    onChangeBlock(block, {\n                      ...data,\n                      openLinkInNewTab: value,\n                    });\n                  }}\n                />\n              </Accordion.Content>\n            </Accordion>\n          )}\n        </>\n      )}\n    </Segment.Group>\n  );\n};\n\nVideoSidebar.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired,\n  resetSubmitUrl: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(VideoSidebar);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'semantic-ui-react';\nimport { Accordion, Grid, Segment } from 'semantic-ui-react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { CheckboxWidget, Icon, TextWidget } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport AlignBlock from '@plone/volto/components/manage/Sidebar/AlignBlock';\n\nimport imageSVG from '@plone/volto/icons/image.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\n\nconst messages = defineMessages({\n  Image: {\n    id: 'Image',\n    defaultMessage: 'Image',\n  },\n  Origin: {\n    id: 'Origin',\n    defaultMessage: 'Origin',\n  },\n  AltText: {\n    id: 'Alt text',\n    defaultMessage: 'Alt text',\n  },\n  Align: {\n    id: 'Alignment',\n    defaultMessage: 'Alignment',\n  },\n  LinkTo: {\n    id: 'Link to',\n    defaultMessage: 'Link to',\n  },\n  openLinkInNewTab: {\n    id: 'Open in a new tab',\n    defaultMessage: 'Open in a new tab',\n  },\n  NoImageSelected: {\n    id: 'No image set in image content field',\n    defaultMessage: 'No image set in image content field',\n  },\n  externalURL: {\n    id: 'External URL',\n    defaultMessage: 'External URL',\n  },\n});\n\nconst LeadImageSidebar = ({\n  properties,\n  data,\n  block,\n  onChangeBlock,\n  openObjectBrowser,\n  required = false,\n  onChangeField,\n  intl,\n}) => {\n  const [activeAccIndex, setActiveAccIndex] = useState(0);\n\n  function handleAccClick(e, titleProps) {\n    const { index } = titleProps;\n    const newIndex = activeAccIndex === index ? -1 : index;\n\n    setActiveAccIndex(newIndex);\n  }\n\n  return (\n    <Segment.Group raised>\n      <header className=\"header pulled\">\n        <h2>\n          <FormattedMessage id=\"Lead Image\" defaultMessage=\"Lead Image\" />\n        </h2>\n      </header>\n\n      {!properties.image && (\n        <>\n          <Segment className=\"sidebar-metadata-container\" secondary>\n            <FormattedMessage\n              id=\"No image set in Lead Image content field\"\n              defaultMessage=\"No image set in Lead Image content field\"\n            />\n            <Icon name={imageSVG} size=\"100px\" color=\"#b8c6c8\" />\n          </Segment>\n        </>\n      )}\n      {properties.image && (\n        <>\n          <Segment className=\"sidebar-metadata-container\" secondary>\n            {properties.image.filename}\n            <img\n              src={\n                properties.image.data\n                  ? `data:${properties.image['content-type']};base64,${properties.image.data}`\n                  : flattenToAppURL(properties.image.scales.mini.download)\n              }\n              alt={properties.image_caption || ''}\n            />\n          </Segment>\n          <Segment className=\"form sidebar-image-data\">\n            <TextWidget\n              id=\"alt\"\n              title={intl.formatMessage(messages.AltText)}\n              required={false}\n              value={properties.image_caption}\n              icon={properties.image_caption ? clearSVG : null}\n              iconAction={() => onChangeField('image_caption', '')}\n              onChange={(name, value) => {\n                onChangeField('image_caption', value);\n              }}\n            />\n            <Form.Field inline required={required}>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column width=\"4\">\n                    <div className=\"wrapper\">\n                      <label htmlFor=\"field-align\">\n                        <FormattedMessage\n                          id=\"Alignment\"\n                          defaultMessage=\"Alignment\"\n                        />\n                      </label>\n                    </div>\n                  </Grid.Column>\n                  <Grid.Column width=\"8\" className=\"align-tools\">\n                    <AlignBlock\n                      align={data.align}\n                      onChangeBlock={onChangeBlock}\n                      data={data}\n                      block={block}\n                    />\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Form.Field>\n          </Segment>\n          <Accordion fluid styled className=\"form\">\n            <Accordion.Title\n              active={activeAccIndex === 0}\n              index={0}\n              onClick={handleAccClick}\n            >\n              Link Settings\n              {activeAccIndex === 0 ? (\n                <Icon name={upSVG} size=\"20px\" />\n              ) : (\n                <Icon name={downSVG} size=\"20px\" />\n              )}\n            </Accordion.Title>\n            <Accordion.Content active={activeAccIndex === 0}>\n              <TextWidget\n                id=\"link\"\n                title={intl.formatMessage(messages.LinkTo)}\n                required={false}\n                value={flattenToAppURL(data.href)}\n                icon={data.href ? clearSVG : navTreeSVG}\n                iconAction={\n                  data.href\n                    ? () => {\n                        onChangeBlock(block, {\n                          ...data,\n                          href: '',\n                        });\n                      }\n                    : () => openObjectBrowser({ mode: 'link' })\n                }\n                onChange={(name, value) => {\n                  onChangeBlock(block, {\n                    ...data,\n                    href: flattenToAppURL(value),\n                  });\n                }}\n              />\n              <CheckboxWidget\n                id=\"openLinkInNewTab\"\n                title={intl.formatMessage(messages.openLinkInNewTab)}\n                value={data.openLinkInNewTab ? data.openLinkInNewTab : false}\n                onChange={(name, value) => {\n                  onChangeBlock(block, {\n                    ...data,\n                    openLinkInNewTab: value,\n                  });\n                }}\n              />\n            </Accordion.Content>\n          </Accordion>\n        </>\n      )}\n    </Segment.Group>\n  );\n};\n\nLeadImageSidebar.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired,\n  onChangeField: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(LeadImageSidebar);\n","import React from 'react';\nimport cx from 'classnames';\n\nexport default ({ data, detached, children }) => {\n  return (\n    <div\n      className={cx(\n        `${data['@type'] ? `${data['@type']} block` : ''} align`,\n        {\n          center: !Boolean(data.align),\n          detached,\n        },\n        data.align,\n      )}\n    >\n      <div\n        className={cx({\n          'full-width': data.align === 'full',\n          large: data.size === 'l',\n          medium: data.size === 'm',\n          small: data.size === 's',\n        })}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\n\nconst Settings = ({ data, block, onChangeBlock, schema }) => {\n  return (\n    <InlineForm\n      schema={schema}\n      title={schema.title}\n      onChangeField={(id, value) => {\n        onChangeBlock(block, {\n          ...data,\n          [id]: value,\n        });\n      }}\n      formData={data}\n    />\n  );\n};\n\nSettings.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  schema: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default injectIntl(Settings);\n","import React from 'react';\nimport { toPublicURL, Helmet } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nconst ContentMetadataTags = (props) => {\n  const {\n    opengraph_title,\n    opengraph_description,\n    seo_title,\n    seo_description,\n    seo_canonical_url,\n    title,\n    description,\n  } = props.content;\n\n  const getContentImageInfo = () => {\n    const { contentMetadataTagsImageField } = config.settings;\n    const image = props.content[contentMetadataTagsImageField];\n    const { opengraph_image } = props.content;\n\n    const contentImageInfo = {\n      contentHasImage: false,\n      url: null,\n      height: null,\n      width: null,\n    };\n    contentImageInfo.contentHasImage =\n      opengraph_image?.scales?.large?.download ||\n      image?.scales?.large?.download ||\n      false;\n\n    if (contentImageInfo.contentHasImage && opengraph_image?.scales?.large) {\n      contentImageInfo.url = opengraph_image.scales.large.download;\n      contentImageInfo.height = opengraph_image.scales.large.height;\n      contentImageInfo.width = opengraph_image.scales.large.width;\n    } else if (contentImageInfo.contentHasImage) {\n      contentImageInfo.url = image.scales.large.download;\n      contentImageInfo.height = image.scales.large.height;\n      contentImageInfo.width = image.scales.large.width;\n    }\n\n    return contentImageInfo;\n  };\n\n  const contentImageInfo = getContentImageInfo();\n\n  return (\n    <>\n      <Helmet>\n        <title>{seo_title || title}</title>\n        <meta name=\"description\" content={seo_description || description} />\n        <meta\n          property=\"og:title\"\n          content={opengraph_title || seo_title || title}\n        />\n        <meta\n          property=\"og:url\"\n          content={seo_canonical_url || toPublicURL(props.content['@id'])}\n        />\n        {contentImageInfo.contentHasImage && (\n          <meta\n            property=\"og:image\"\n            content={toPublicURL(contentImageInfo.url)}\n          />\n        )}\n        {contentImageInfo.contentHasImage && (\n          <meta property=\"og:image:width\" content={contentImageInfo.width} />\n        )}\n        {contentImageInfo.contentHasImage && (\n          <meta property=\"og:image:height\" content={contentImageInfo.height} />\n        )}\n        {(opengraph_description || seo_description || description) && (\n          <meta\n            property=\"og:description\"\n            content={opengraph_description || seo_description || description}\n          />\n        )}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      </Helmet>\n    </>\n  );\n};\n\nexport default ContentMetadataTags;\n","import React from 'react';\nimport { formatDate, long_date_format } from '@plone/volto/helpers/Utils/Date';\nimport { useSelector } from 'react-redux';\n\n/**\n * Friendly formatting of dates\n */\nconst FormattedDate = ({\n  date,\n  format,\n  long,\n  includeTime,\n  relative,\n  className,\n  locale,\n  children,\n}) => {\n  const language = useSelector((state) => locale || state.intl.locale);\n  const toDate = (d) => (typeof d === 'string' ? new Date(d) : d);\n  const args = { date, long, includeTime, format, locale: language };\n\n  return (\n    <time\n      className={className}\n      dateTime={date}\n      title={new Intl.DateTimeFormat(language, long_date_format).format(\n        new Date(toDate(date)),\n      )}\n    >\n      {children\n        ? children(\n            formatDate({\n              ...args,\n              formatToParts: true,\n            }),\n          )\n        : formatDate(args)}\n    </time>\n  );\n};\n\nexport default FormattedDate;\n","import React from 'react';\nimport {\n  formatRelativeDate,\n  long_date_format,\n  toDate,\n} from '@plone/volto/helpers/Utils/Date';\nimport { useSelector } from 'react-redux';\n\nconst FormattedRelativeDate = ({\n  date,\n  style,\n  relativeTo,\n  className,\n  locale,\n  children,\n  live = false,\n  refresh = 5000,\n}) => {\n  const language = useSelector((state) => locale || state.intl.locale);\n  const [liveRelativeTo, setLiveRelativeTo] = React.useState(\n    relativeTo ? toDate(relativeTo) : new Date(),\n  );\n\n  const interval = React.useRef();\n\n  React.useEffect(() => {\n    if (live) {\n      interval.current = setInterval(() => {\n        setLiveRelativeTo(new Date());\n      }, refresh);\n    }\n    return () => interval.current && clearInterval(interval.current);\n  }, [refresh, live]);\n\n  const args = { locale: language, date, style, relativeTo: liveRelativeTo };\n\n  return (\n    <time\n      className={className}\n      dateTime={date}\n      title={new Intl.DateTimeFormat(language, long_date_format).format(\n        new Date(date),\n      )}\n    >\n      {children\n        ? children(\n            formatRelativeDate({\n              ...args,\n              formatToParts: true,\n            }),\n          )\n        : formatRelativeDate(args)}\n    </time>\n  );\n};\n\nexport default FormattedRelativeDate;\n","import registry from '@plone/volto/registry';\n\n/**\n * A component that can autommatically look up its implementation from the\n * registry based on the provided component `componentName`\n */\nconst Component = ({ componentName, ...rest }) => {\n  const Component = registry.resolve(componentName)?.component;\n\n  if (!Component) {\n    // eslint-disable-next-line no-console\n    console.warn(`Component not found in registry: ${componentName}`);\n    return null;\n  }\n\n  return <Component {...rest} />;\n};\n\nexport default Component;\n","module.exports = require(\"react-dates/initialize\");","// Exports\nmodule.exports = {};\n","module.exports = require(\"react-simple-code-editor\");","module.exports = require(\"react-image-gallery\");","module.exports = require(\"prettier/standalone\");","module.exports = require(\"prettier/parser-html\");","module.exports = require(\"prismjs/components/prism-core\");","module.exports = require(\"react-window\");","module.exports = require(\"react-sortable-hoc\");","module.exports = require(\"react-select-async-paginate\");","module.exports = require(\"react-select/async\");","module.exports = require(\"react-select/creatable\");","module.exports = require(\"react-select/async-creatable\");","module.exports = require(\"diff\");","module.exports = require(\"moment\");","module.exports = require(\"react-dates\");","module.exports = require(\"react-dnd\");","module.exports = require(\"react-dnd-html5-backend\");","module.exports = require(\"immutable\");","module.exports = require(\"draft-js\");","module.exports = require(\"draft-js/lib/isSoftNewlineEvent\");","module.exports = require(\"draftjs-filters\");","module.exports = require(\"draft-js-inline-toolbar-plugin\");","module.exports = require(\"draft-js-import-html\");","module.exports = require(\"draft-js-block-breakout-plugin\");","module.exports = require(\"draft-js-buttons/lib/utils/createInlineStyleButton\");","module.exports = require(\"draft-js-buttons/lib/utils/createBlockStyleButton\");","module.exports = require(\"draft-js-plugins-utils\");","module.exports = require(\"rc-time-picker\");","import config from '@plone/volto/registry';\n\n// Non Content Routes/Views\n// You can include either RegEx or a string representing the ending of the\n// nonContentRoute eg. '/add' will match '/foo/bar/add'\nexport const nonContentRoutes = [\n  /\\?.*$/,\n  /\\/add$/,\n  '/contents',\n  '/delete',\n  '/diff',\n  /\\/edit$/,\n  '/history',\n  '/layout',\n  '/login',\n  '/logout',\n  '/sitemap',\n  '/register',\n  '/sharing',\n  '/search',\n  '/change-password',\n  /\\/controlpanel\\/.*$/,\n  '/controlpanel',\n  '/contact-form',\n  '/personal-information',\n  '/personal-preferences',\n  '/register',\n  /\\/password-reset\\/.*$/,\n  '/password-reset',\n  '/create-translation',\n  '/manage-translations',\n  ...(config.settings?.externalRoutes?.map((route) => route.match.path) || []),\n];\n","/**\n * View image block.\n * @module components/manage/Blocks/Image/View\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { UniversalLink } from '@plone/volto/components';\nimport cx from 'classnames';\n\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\n/**\n * View image block class.\n * @class View\n * @extends Component\n */\nconst View = ({ data, properties }) => (\n  <p\n    className={cx(\n      'block image align',\n      {\n        center: !Boolean(data.align),\n      },\n      data.align,\n    )}\n  >\n    {properties.image && (\n      <>\n        {(() => {\n          const image = (\n            <img\n              className={cx({ 'full-width': data.align === 'full' })}\n              src={flattenToAppURL(properties.image.download)}\n              alt={properties.image_caption || ''}\n            />\n          );\n          if (data.href) {\n            return (\n              <UniversalLink\n                href={data.href}\n                openLinkInNewTab={data.openLinkInNewTab}\n              >\n                {image}\n              </UniversalLink>\n            );\n          } else {\n            return image;\n          }\n        })()}\n      </>\n    )}\n  </p>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default View;\n","/**\n * View table block.\n * @module components/manage/Blocks/Table/View\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport redraft from 'redraft';\nimport config from '@plone/volto/registry';\n\n/**\n * View table block class.\n * @class View\n * @extends Component\n */\nconst View = ({ data }) =>\n  data &&\n  data.table && (\n    <Table\n      fixed={data.table.fixed}\n      compact={data.table.compact}\n      basic={data.table.basic ? 'very' : false}\n      celled={data.table.celled}\n      inverted={data.table.inverted}\n      striped={data.table.striped}\n    >\n      <Table.Body>\n        {map(data.table.rows, (row) => (\n          <Table.Row key={row.key}>\n            {map(row.cells, (cell) => (\n              <Table.Cell\n                key={cell.key}\n                as={cell.type === 'header' ? 'th' : 'td'}\n              >\n                {cell.value && cell.value.blocks && cell.value.blocks[0].text\n                  ? redraft(\n                      cell.value,\n                      config.settings.richtextViewSettings.ToHTMLRenderers,\n                      config.settings.richtextViewSettings.ToHTMLOptions,\n                    )\n                  : '\\u00A0'}\n              </Table.Cell>\n            ))}\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default View;\n","/**\n * Edit image block.\n * @module components/manage/Blocks/Image/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { Message } from 'semantic-ui-react';\nimport { isEqual } from 'lodash';\n\nimport { LeadImageSidebar, SidebarPortal } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\n\nconst messages = defineMessages({\n  ImageBlockInputPlaceholder: {\n    id: \"Upload a lead image in the 'Lead Image' content field.\",\n    defaultMessage: \"Upload a lead image in the 'Lead Image' content field.\",\n  },\n});\n\n/**\n * Edit image block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    properties: PropTypes.objectOf(PropTypes.any).isRequired,\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    pathname: PropTypes.string.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    openObjectBrowser: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Align block handler\n   * @method onAlignBlock\n   * @param {string} align Alignment option\n   * @returns {undefined}\n   */\n  onAlignBlock(align) {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      align,\n    });\n  }\n\n  /**\n   * @param {*} nextProps\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selected || !isEqual(this.props.data, nextProps.data);\n  }\n\n  node = React.createRef();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { data, properties } = this.props;\n    const placeholder =\n      this.props.data.placeholder ||\n      this.props.intl.formatMessage(messages.ImageBlockInputPlaceholder);\n\n    return (\n      <div\n        className={cx(\n          'block image align',\n          {\n            center: !Boolean(data.align),\n          },\n          data.align,\n        )}\n      >\n        {!properties.image && (\n          <Message>\n            <center>\n              <img src={imageBlockSVG} alt=\"\" />\n              <div className=\"message-text\">{placeholder}</div>\n            </center>\n          </Message>\n        )}\n        {properties.image && (\n          <img\n            className={cx({ 'full-width': data.align === 'full' })}\n            src={\n              properties.image.data\n                ? `data:${properties.image['content-type']};base64,${properties.image.data}`\n                : flattenToAppURL(properties.image.download)\n            }\n            alt={data.image_caption || ''}\n          />\n        )}\n        <SidebarPortal selected={this.props.selected}>\n          <LeadImageSidebar {...this.props} />\n        </SidebarPortal>\n      </div>\n    );\n  }\n}\n\nexport default compose(injectIntl)(Edit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ConditionalLink } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport { isInternalURL } from '@plone/volto/helpers/Url/Url';\n\nconst DefaultTemplate = ({ items, linkTitle, linkHref, isEditMode }) => {\n  let link = null;\n  let href = linkHref?.[0]?.['@id'] || '';\n\n  if (isInternalURL(href)) {\n    link = (\n      <ConditionalLink to={flattenToAppURL(href)} condition={!isEditMode}>\n        {linkTitle || href}\n      </ConditionalLink>\n    );\n  } else if (href) {\n    link = <a href={href}>{linkTitle || href}</a>;\n  }\n\n  return (\n    <>\n      <div className=\"items\">\n        {items.map((item) => (\n          <div className=\"listing-item\" key={item['@id']}>\n            <ConditionalLink item={item} condition={!isEditMode}>\n              <div className=\"listing-body\">\n                <h4>{item.title ? item.title : item.id}</h4>\n                <p>{item.description}</p>\n              </div>\n            </ConditionalLink>\n          </div>\n        ))}\n      </div>\n\n      {link && <div className=\"footer\">{link}</div>}\n    </>\n  );\n};\nDefaultTemplate.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n  linkMore: PropTypes.any,\n  isEditMode: PropTypes.bool,\n};\nexport default DefaultTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ConditionalLink, Component } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport { isInternalURL } from '@plone/volto/helpers/Url/Url';\n\nconst SummaryTemplate = ({ items, linkTitle, linkHref, isEditMode }) => {\n  let link = null;\n  let href = linkHref?.[0]?.['@id'] || '';\n\n  if (isInternalURL(href)) {\n    link = (\n      <ConditionalLink to={flattenToAppURL(href)} condition={!isEditMode}>\n        {linkTitle || href}\n      </ConditionalLink>\n    );\n  } else if (href) {\n    link = <a href={href}>{linkTitle || href}</a>;\n  }\n\n  return (\n    <>\n      <div className=\"items\">\n        {items.map((item) => (\n          <div className=\"listing-item\" key={item['@id']}>\n            <ConditionalLink item={item} condition={!isEditMode}>\n              <Component componentName=\"PreviewImage\" item={item} alt=\"\" />\n              <div className=\"listing-body\">\n                <h3>{item.title ? item.title : item.id}</h3>\n                <p>{item.description}</p>\n              </div>\n            </ConditionalLink>\n          </div>\n        ))}\n      </div>\n\n      {link && <div className=\"footer\">{link}</div>}\n    </>\n  );\n};\n\nSummaryTemplate.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n  linkMore: PropTypes.any,\n  isEditMode: PropTypes.bool,\n};\n\nexport default SummaryTemplate;\n","/**\n * Edit text block.\n * @module components/manage/Blocks/Title/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { map, remove } from 'lodash';\nimport { Button, Segment, Table, Form } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport cx from 'classnames';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Cell from '@plone/volto/components/manage/Blocks/Table/Cell';\nimport { Field, Icon } from '@plone/volto/components';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport rowBeforeSVG from '@plone/volto/icons/row-before.svg';\nimport rowAfterSVG from '@plone/volto/icons/row-after.svg';\nimport colBeforeSVG from '@plone/volto/icons/column-before.svg';\nimport colAfterSVG from '@plone/volto/icons/column-after.svg';\nimport rowDeleteSVG from '@plone/volto/icons/row-delete.svg';\nimport colDeleteSVG from '@plone/volto/icons/column-delete.svg';\n\nconst getId = () => Math.floor(Math.random() * Math.pow(2, 24)).toString(32);\n\nconst valueToDraft = (value) => ({\n  blocks: [\n    {\n      data: {},\n      depth: 0,\n      entityRanges: [],\n      inlineStyleRanges: [],\n      key: getId(),\n      text: value,\n      type: 'unstyled',\n    },\n  ],\n  entityMap: {},\n});\n\nconst emptyCell = (type) => ({\n  key: getId(),\n  type: type || 'data',\n  value: valueToDraft(''),\n});\n\nconst emptyRow = (cells) => ({\n  key: getId(),\n  cells: map(cells, () => emptyCell()),\n});\n\nconst initialTable = () => ({\n  fixed: true,\n  compact: false,\n  basic: false,\n  celled: true,\n  inverted: false,\n  striped: false,\n  rows: [\n    {\n      key: getId(),\n      cells: [\n        {\n          key: getId(),\n          type: 'header',\n          value: valueToDraft(''),\n        },\n        {\n          key: getId(),\n          type: 'header',\n          value: valueToDraft(''),\n        },\n      ],\n    },\n    {\n      key: getId(),\n      cells: [\n        {\n          key: getId(),\n          type: 'data',\n          value: valueToDraft(''),\n        },\n        {\n          key: getId(),\n          type: 'data',\n          value: valueToDraft(''),\n        },\n      ],\n    },\n  ],\n});\n\nconst messages = defineMessages({\n  insertRowBefore: {\n    id: 'Insert row before',\n    defaultMessage: 'Insert row before',\n  },\n  insertRowAfter: {\n    id: 'Insert row after',\n    defaultMessage: 'Insert row after',\n  },\n  deleteRow: {\n    id: 'Delete row',\n    defaultMessage: 'Delete row',\n  },\n  insertColBefore: {\n    id: 'Insert col before',\n    defaultMessage: 'Insert col before',\n  },\n  insertColAfter: {\n    id: 'Insert col after',\n    defaultMessage: 'Insert col after',\n  },\n  deleteCol: {\n    id: 'Delete col',\n    defaultMessage: 'Delete col',\n  },\n  fixed: {\n    id: 'Fixed width table cells',\n    defaultMessage: 'Fixed width columns',\n  },\n  compact: {\n    id: 'Make the table compact',\n    defaultMessage: 'Reduce cell padding',\n  },\n  basic: {\n    id: 'Reduce complexity',\n    defaultMessage: 'Minimalistic table design',\n  },\n  celled: {\n    id: 'Divide each row into separate cells',\n    defaultMessage: 'Add border to inner columns',\n  },\n  striped: {\n    id: 'Stripe alternate rows with color',\n    defaultMessage: 'Alternate row background color',\n  },\n  headerCell: {\n    id: 'Header cell',\n    defaultMessage: 'Header cell',\n  },\n});\n\n/**\n * Edit text block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    detached: PropTypes.bool,\n    index: PropTypes.number.isRequired,\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    onAddBlock: PropTypes.func.isRequired,\n    onInsertBlock: PropTypes.func.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    onMutateBlock: PropTypes.func.isRequired,\n    onFocusPreviousBlock: PropTypes.func.isRequired,\n    onFocusNextBlock: PropTypes.func.isRequired,\n    onSelectBlock: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    detached: false,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: {\n        row: 0,\n        cell: 0,\n      },\n      isClient: false,\n    };\n    this.onSelectCell = this.onSelectCell.bind(this);\n    this.onInsertRowBefore = this.onInsertRowBefore.bind(this);\n    this.onInsertRowAfter = this.onInsertRowAfter.bind(this);\n    this.onInsertColBefore = this.onInsertColBefore.bind(this);\n    this.onInsertColAfter = this.onInsertColAfter.bind(this);\n    this.onDeleteRow = this.onDeleteRow.bind(this);\n    this.onDeleteCol = this.onDeleteCol.bind(this);\n    this.onChangeCell = this.onChangeCell.bind(this);\n    this.toggleCellType = this.toggleCellType.bind(this);\n    this.toggleBool = this.toggleBool.bind(this);\n    this.toggleFixed = this.toggleFixed.bind(this);\n    this.toggleCompact = this.toggleCompact.bind(this);\n    this.toggleBasic = this.toggleBasic.bind(this);\n    this.toggleCelled = this.toggleCelled.bind(this);\n    this.toggleStriped = this.toggleStriped.bind(this);\n\n    const { convertToRaw } = props.draftJs;\n    this.convertToRaw = convertToRaw;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (!this.props.data.table) {\n      this.props.onChangeBlock(this.props.block, {\n        ...this.props.data,\n        table: initialTable(),\n      });\n    }\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!nextProps.data.table) {\n      this.props.onChangeBlock(nextProps.block, {\n        ...nextProps.data,\n        table: initialTable(),\n      });\n    }\n  }\n\n  /**\n   * Select cell handler\n   * @method onSelectCell\n   * @param {Number} row Row index.\n   * @param {Number} cell Cell index.\n   * @returns {undefined}\n   */\n  onSelectCell(row, cell) {\n    this.setState({ selected: { row, cell } });\n  }\n\n  /**\n   * Change cell handler\n   * @method onChangeCell\n   * @param {Number} row Row index.\n   * @param {Number} cell Cell index.\n   * @param {Object} editorState Editor state.\n   * @returns {undefined}\n   */\n  onChangeCell(row, cell, editorState) {\n    const table = { ...this.props.data.table };\n    table.rows[row].cells[cell].value = this.convertToRaw(\n      editorState.getCurrentContent(),\n    );\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table,\n    });\n  }\n\n  /**\n   * Toggle cell type\n   * @method toggleCellType\n   * @returns {undefined}\n   */\n  toggleCellType() {\n    const table = { ...this.props.data.table };\n    let type =\n      table.rows[this.state.selected.row].cells[this.state.selected.cell].type;\n    table.rows[this.state.selected.row].cells[this.state.selected.cell].type =\n      type === 'header' ? 'data' : 'header';\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table,\n    });\n  }\n\n  /**\n   * Insert row before handler\n   * @method onInsertRowBefore\n   * @returns {undefined}\n   */\n  onInsertRowBefore(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: [\n          ...table.rows.slice(0, this.state.selected.row),\n          emptyRow(table.rows[0].cells),\n          ...table.rows.slice(this.state.selected.row),\n        ],\n      },\n    });\n    this.setState({\n      selected: {\n        row: this.state.selected.row + 1,\n        cell: this.state.selected.cell,\n      },\n    });\n  }\n\n  /**\n   * Insert row after handler\n   * @method onInsertRowAfter\n   * @returns {undefined}\n   */\n  onInsertRowAfter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: [\n          ...table.rows.slice(0, this.state.selected.row + 1),\n          emptyRow(table.rows[0].cells),\n          ...table.rows.slice(this.state.selected.row + 1),\n        ],\n      },\n    });\n  }\n\n  /**\n   * Insert col before handler\n   * @method onInsertColBefore\n   * @returns {undefined}\n   */\n  onInsertColBefore(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: map(table.rows, (row, index) => ({\n          ...row,\n          cells: [\n            ...row.cells.slice(0, this.state.selected.cell),\n            emptyCell(table.rows[index].cells[this.state.selected.cell].type),\n            ...row.cells.slice(this.state.selected.cell),\n          ],\n        })),\n      },\n    });\n    this.setState({\n      selected: {\n        row: this.state.selected.row,\n        cell: this.state.selected.cell + 1,\n      },\n    });\n  }\n\n  /**\n   * Insert col after handler\n   * @method onInsertColAfter\n   * @returns {undefined}\n   */\n  onInsertColAfter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: map(table.rows, (row, index) => ({\n          ...row,\n          cells: [\n            ...row.cells.slice(0, this.state.selected.cell + 1),\n            emptyCell(table.rows[index].cells[this.state.selected.cell].type),\n            ...row.cells.slice(this.state.selected.cell + 1),\n          ],\n        })),\n      },\n    });\n  }\n\n  /**\n   * Delete col handler\n   * @method onDeleteCol\n   * @returns {undefined}\n   */\n  onDeleteCol(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n\n    if (this.state.selected.cell === table.rows[0].cells.length - 1) {\n      this.setState({\n        selected: {\n          row: this.state.selected.row,\n          cell: this.state.selected.cell - 1,\n        },\n      });\n    }\n\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: map(table.rows, (row) => ({\n          ...row,\n          cells: remove(\n            row.cells,\n            (cell, index) => index !== this.state.selected.cell,\n          ),\n        })),\n      },\n    });\n  }\n\n  /**\n   * Delete row handler\n   * @method onDeleteRow\n   * @returns {undefined}\n   */\n  onDeleteRow(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n\n    if (this.state.selected.row === table.rows.length - 1) {\n      this.setState({\n        selected: {\n          row: this.state.selected.row - 1,\n          cell: this.state.selected.cell,\n        },\n      });\n    }\n\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: remove(\n          table.rows,\n          (row, index) => index !== this.state.selected.row,\n        ),\n      },\n    });\n  }\n\n  /**\n   * Toggle bool\n   * @method toggleBool\n   * @param {string} value Value to toggle.\n   * @returns {undefined}\n   */\n  toggleBool(value) {\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        [value]: !table[value],\n      },\n    });\n  }\n\n  /**\n   * Toggle fixed\n   * @method toggleFixed\n   * @returns {undefined}\n   */\n  toggleFixed() {\n    this.toggleBool('fixed');\n  }\n\n  /**\n   * Toggle compact\n   * @method toggleCompact\n   * @returns {undefined}\n   */\n  toggleCompact() {\n    this.toggleBool('compact');\n  }\n\n  /**\n   * Toggle basic\n   * @method toggleBasic\n   * @returns {undefined}\n   */\n  toggleBasic() {\n    this.toggleBool('basic');\n  }\n\n  /**\n   * Toggle celled\n   * @method toggleCelled\n   * @returns {undefined}\n   */\n  toggleCelled() {\n    this.toggleBool('celled');\n  }\n\n  /**\n   * Toggle striped\n   * @method toggleStriped\n   * @returns {undefined}\n   */\n  toggleStriped() {\n    this.toggleBool('striped');\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (!this.state.isClient) {\n      return <div />;\n    }\n\n    return (\n      <div className={cx('block table', { selected: this.props.selected })}>\n        {this.props.selected && (\n          <div className=\"toolbar\">\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onInsertRowBefore}\n                title={this.props.intl.formatMessage(messages.insertRowBefore)}\n                aria-label={this.props.intl.formatMessage(\n                  messages.insertRowBefore,\n                )}\n              >\n                <Icon name={rowBeforeSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onInsertRowAfter}\n                title={this.props.intl.formatMessage(messages.insertRowAfter)}\n                aria-label={this.props.intl.formatMessage(\n                  messages.insertRowAfter,\n                )}\n              >\n                <Icon name={rowAfterSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onDeleteRow}\n                disabled={\n                  this.props.data.table &&\n                  this.props.data.table.rows.length === 1\n                }\n                title={this.props.intl.formatMessage(messages.deleteRow)}\n                aria-label={this.props.intl.formatMessage(messages.deleteRow)}\n              >\n                <Icon name={rowDeleteSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onInsertColBefore}\n                title={this.props.intl.formatMessage(messages.insertColBefore)}\n                aria-label={this.props.intl.formatMessage(\n                  messages.insertColBefore,\n                )}\n              >\n                <Icon name={colBeforeSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onInsertColAfter}\n                title={this.props.intl.formatMessage(messages.insertColAfter)}\n                aria-label={this.props.intl.formatMessage(\n                  messages.insertColAfter,\n                )}\n              >\n                <Icon name={colAfterSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onDeleteCol}\n                disabled={\n                  this.props.data.table &&\n                  this.props.data.table.rows[0].cells.length === 1\n                }\n                title={this.props.intl.formatMessage(messages.deleteCol)}\n                aria-label={this.props.intl.formatMessage(messages.deleteCol)}\n              >\n                <Icon name={colDeleteSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n          </div>\n        )}\n        {this.props.data.table && (\n          <Table\n            fixed={this.props.data.table.fixed}\n            compact={this.props.data.table.compact}\n            basic={this.props.data.table.basic ? 'very' : false}\n            celled={this.props.data.table.celled}\n            inverted={this.props.data.table.inverted}\n            striped={this.props.data.table.striped}\n          >\n            <Table.Body>\n              {map(this.props.data.table.rows, (row, rowIndex) => (\n                <Table.Row key={row.key}>\n                  {map(row.cells, (cell, cellIndex) => (\n                    <Table.Cell\n                      key={cell.key}\n                      as={cell.type === 'header' ? 'th' : 'td'}\n                      className={\n                        rowIndex === this.state.selected.row &&\n                        cellIndex === this.state.selected.cell &&\n                        this.props.selected\n                          ? 'selected'\n                          : ''\n                      }\n                    >\n                      <Cell\n                        editable={this.props.editable}\n                        value={cell.value}\n                        row={rowIndex}\n                        cell={cellIndex}\n                        onSelectCell={this.onSelectCell}\n                        selected={\n                          rowIndex === this.state.selected.row &&\n                          cellIndex === this.state.selected.cell\n                        }\n                        isTableBlockSelected={this.props.selected}\n                        onAddBlock={this.props.onAddBlock}\n                        onSelectBlock={this.props.onSelectBlock}\n                        onChange={this.onChangeCell}\n                        index={this.props.index}\n                        disableNewBlocks={this.props.data?.disableNewBlocks}\n                      />\n                    </Table.Cell>\n                  ))}\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        )}\n        {this.props.selected && this.state.isClient && (\n          <Portal node={document.getElementById('sidebar-properties')}>\n            <Form\n              method=\"post\"\n              onSubmit={(event) => {\n                event.preventDefault();\n                event.stopPropagation();\n              }}\n            >\n              <Segment secondary attached>\n                <FormattedMessage id=\"Table\" defaultMessage=\"Table\" />\n              </Segment>\n              <Segment attached>\n                <Field\n                  id=\"fixed\"\n                  title={this.props.intl.formatMessage(messages.fixed)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.fixed}\n                  onChange={() => this.toggleFixed()}\n                />\n                <Field\n                  id=\"celled\"\n                  title={this.props.intl.formatMessage(messages.celled)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.celled}\n                  onChange={this.toggleCelled}\n                />\n                <Field\n                  id=\"striped\"\n                  title={this.props.intl.formatMessage(messages.striped)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.striped}\n                  onChange={this.toggleStriped}\n                />\n                <Field\n                  id=\"compact\"\n                  title={this.props.intl.formatMessage(messages.compact)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.compact}\n                  onChange={() => this.toggleCompact()}\n                />\n                <Field\n                  id=\"basic\"\n                  title={this.props.intl.formatMessage(messages.basic)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.basic}\n                  onChange={this.toggleBasic}\n                />\n              </Segment>\n              <Segment secondary attached>\n                <FormattedMessage id=\"Cell\" defaultMessage=\"Cell\" />\n              </Segment>\n              <Segment attached>\n                <Field\n                  id=\"celltype\"\n                  title={this.props.intl.formatMessage(messages.headerCell)}\n                  type=\"boolean\"\n                  value={\n                    this.props.data.table &&\n                    this.props.data.table.rows[this.state.selected.row].cells[\n                      this.state.selected.cell\n                    ].type === 'header'\n                  }\n                  onChange={this.toggleCellType}\n                />\n              </Segment>\n            </Form>\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(injectLazyLibs(['draftJs']), injectIntl)(Edit);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport qs from 'query-string';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport { resolveExtension } from '@plone/volto/helpers/Extensions/withBlockExtensions';\nimport config from '@plone/volto/registry';\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nconst SEARCH_ENDPOINT_FIELDS = [\n  'SearchableText',\n  'b_size',\n  'limit',\n  'sort_on',\n  'sort_order',\n];\n\nconst PAQO = 'plone.app.querystring.operation';\n\n/**\n * Based on URL state, gets an initial internal state for the search\n *\n * @function getInitialState\n *\n */\nfunction getInitialState(data, facets, urlSearchText, id) {\n  const {\n    types: facetWidgetTypes,\n  } = config.blocks.blocksConfig.search.extensions.facetWidgets;\n  const facetSettings = data?.facets || [];\n\n  return {\n    query: [\n      ...(data.query?.query || []),\n      ...(facetSettings || [])\n        .map((facet) => {\n          if (!facet?.field) return null;\n\n          const { valueToQuery } = resolveExtension(\n            'type',\n            facetWidgetTypes,\n            facet,\n          );\n\n          const name = facet.field.value;\n          const value = facets[name];\n\n          return valueToQuery({ value, facet });\n        })\n        .filter((f) => !!f),\n      ...(urlSearchText\n        ? [\n            {\n              i: 'SearchableText',\n              o: 'plone.app.querystring.operation.string.contains',\n              v: urlSearchText,\n            },\n          ]\n        : []),\n    ],\n    sort_on: data.query?.sort_on,\n    sort_order: data.query?.sort_order,\n    b_size: data.query?.b_size,\n    limit: data.query?.limit,\n    block: id,\n  };\n}\n\n/**\n * \"Normalizes\" the search state to something that's serializable\n * (for querying) and used to compute data for the ListingBody\n *\n * @function normalizeState\n *\n */\nfunction normalizeState({\n  query, // base query\n  facets, // facet values\n  id, // block id\n  searchText, // SearchableText\n  sortOn,\n  sortOrder,\n  facetSettings, // data.facets extracted from block data\n}) {\n  const {\n    types: facetWidgetTypes,\n  } = config.blocks.blocksConfig.search.extensions.facetWidgets;\n\n  const params = {\n    query: [\n      ...(query.query || []),\n      ...(facetSettings || []).map((facet) => {\n        if (!facet?.field) return null;\n\n        const { valueToQuery } = resolveExtension(\n          'type',\n          facetWidgetTypes,\n          facet,\n        );\n\n        const name = facet.field.value;\n        const value = facets[name];\n\n        return valueToQuery({ value, facet });\n      }),\n    ].filter((o) => !!o),\n    sort_on: sortOn || query.sort_on,\n    sort_order: sortOrder || query.sort_order,\n    b_size: query.b_size,\n    limit: query.limit,\n    block: id,\n  };\n\n  // TODO: need to check if SearchableText facet is not already in the query\n  // Ideally the searchtext functionality should be restructured as being just\n  // another facet\n  params.query = params.query.reduce(\n    // Remove SearchableText from query\n    (acc, kvp) => (kvp.i === 'SearchableText' ? acc : [...acc, kvp]),\n    [],\n  );\n  if (searchText) {\n    params.query.push({\n      i: 'SearchableText',\n      o: 'plone.app.querystring.operation.string.contains',\n      v: searchText,\n    });\n  }\n\n  return params;\n}\n\nconst getSearchFields = (searchData) => {\n  return Object.assign(\n    {},\n    ...SEARCH_ENDPOINT_FIELDS.map((k) => {\n      return searchData[k] ? { [k]: searchData[k] } : {};\n    }),\n    searchData.query ? { query: serializeQuery(searchData['query']) } : {},\n  );\n};\n\n/**\n * A HOC that will mirror the search block state to a hash location\n */\nconst useHashState = () => {\n  const location = useLocation();\n  const history = useHistory();\n\n  const oldState = React.useMemo(() => {\n    return {\n      ...qs.parse(location.search),\n      ...qs.parse(location.hash),\n    };\n  }, [location.hash, location.search]);\n\n  // This creates a shallow copy. Why is this needed?\n  const current = Object.assign(\n    {},\n    ...Array.from(Object.keys(oldState)).map((k) => ({ [k]: oldState[k] })),\n  );\n\n  const setSearchData = React.useCallback(\n    (searchData) => {\n      const newParams = qs.parse(location.hash);\n\n      let changed = false;\n\n      Object.keys(searchData)\n        .sort()\n        .forEach((k) => {\n          if (searchData[k]) {\n            newParams[k] = searchData[k];\n            if (oldState[k] !== searchData[k]) {\n              changed = true;\n            }\n          }\n        });\n\n      if (changed) {\n        history.push({\n          hash: qs.stringify(newParams),\n        });\n      }\n    },\n    [history, oldState, location.hash],\n  );\n\n  return [current, setSearchData];\n};\n\n/**\n * A hook to make it possible to switch disable mirroring the search block\n * state to the window location. When using the internal state we \"start from\n * scratch\", as it's intended to be used in the edit page.\n */\nconst useSearchBlockState = (uniqueId, isEditMode) => {\n  const [hashState, setHashState] = useHashState();\n  const [internalState, setInternalState] = React.useState({});\n\n  return isEditMode\n    ? [internalState, setInternalState]\n    : [hashState, setHashState];\n};\n\n// Simple compress/decompress the state in URL by replacing the lengthy string\nconst deserializeQuery = (q) => {\n  return JSON.parse(q)?.map((kvp) => ({\n    ...kvp,\n    o: kvp.o.replace(/^paqo/, PAQO),\n  }));\n};\nconst serializeQuery = (q) => {\n  return JSON.stringify(\n    q?.map((kvp) => ({ ...kvp, o: kvp.o.replace(PAQO, 'paqo') })),\n  );\n};\n\nconst withSearch = (options) => (WrappedComponent) => {\n  const { inputDelay = 1000 } = options || {};\n\n  function WithSearch(props) {\n    const { data, id, editable = false } = props;\n\n    const [locationSearchData, setLocationSearchData] = useSearchBlockState(\n      id,\n      editable,\n    );\n\n    const urlQuery = locationSearchData.query\n      ? deserializeQuery(locationSearchData.query)\n      : [];\n    const urlSearchText =\n      locationSearchData.SearchableText ||\n      urlQuery.find(({ i }) => i === 'SearchableText')?.v ||\n      '';\n\n    // TODO: refactor, should use only useLocationStateManager()!!!\n    const [searchText, setSearchText] = React.useState(urlSearchText);\n    const configuredFacets =\n      data.facets?.map((facet) => facet?.field?.value) || [];\n    const multiFacets = data.facets\n      ?.filter((facet) => facet?.multiple)\n      .map((facet) => facet?.field?.value);\n    const [facets, setFacets] = React.useState(\n      Object.assign(\n        {},\n        ...urlQuery.map(({ i, v }) => ({ [i]: v })), // TODO: the 'o' should be kept. This would be a major refactoring of the facets\n\n        // support for simple filters like ?Subject=something\n        // TODO: since the move to hash params this is no longer working.\n        // We'd have to treat the location.search and manage it just like the\n        // hash, to support it. We can read it, but we'd have to reset it as\n        // well, so at that point what's the difference to the hash?\n        ...configuredFacets.map((f) =>\n          locationSearchData[f]\n            ? {\n                [f]:\n                  multiFacets.indexOf(f) > -1\n                    ? [locationSearchData[f]]\n                    : locationSearchData[f],\n              }\n            : {},\n        ),\n      ),\n    );\n\n    const [sortOn, setSortOn] = React.useState(data?.query?.sort_on);\n    const [sortOrder, setSortOrder] = React.useState(data?.query?.sort_order);\n\n    const [searchData, setSearchData] = React.useState(\n      getInitialState(data, facets, urlSearchText, id),\n    );\n\n    const timeoutRef = React.useRef();\n    const facetSettings = data?.facets;\n\n    const onTriggerSearch = React.useCallback(\n      (toSearchText, toSearchFacets, toSortOn, toSortOrder) => {\n        if (timeoutRef.current) clearTimeout(timeoutRef.current);\n        timeoutRef.current = setTimeout(\n          () => {\n            const searchData = normalizeState({\n              id,\n              query: data.query || {},\n              facets: toSearchFacets || facets,\n              searchText: toSearchText,\n              sortOn: toSortOn || sortOn,\n              sortOrder: toSortOrder || sortOrder,\n              facetSettings,\n            });\n            if (toSearchFacets) setFacets(toSearchFacets);\n            if (toSortOn) setSortOn(toSortOn);\n            if (toSortOrder) setSortOrder(toSortOrder);\n            setSearchData(searchData);\n            setLocationSearchData(getSearchFields(searchData));\n          },\n          toSearchFacets ? inputDelay / 3 : inputDelay,\n        );\n      },\n      [\n        data.query,\n        facets,\n        id,\n        setLocationSearchData,\n        sortOn,\n        sortOrder,\n        facetSettings,\n      ],\n    );\n\n    const querystringResults = useSelector(\n      (state) => state.querystringsearch.subrequests,\n    );\n    const totalItems =\n      querystringResults[id]?.total || querystringResults[id]?.items?.length;\n\n    return (\n      <WrappedComponent\n        {...props}\n        searchData={searchData}\n        facets={facets}\n        setFacets={setFacets}\n        setSortOn={setSortOn}\n        setSortOrder={setSortOrder}\n        sortOn={sortOn}\n        sortOrder={sortOrder}\n        searchedText={urlSearchText}\n        searchText={searchText}\n        setSearchText={setSearchText}\n        onTriggerSearch={onTriggerSearch}\n        totalItems={totalItems}\n      />\n    );\n  }\n  WithSearch.displayName = `WithSearch(${getDisplayName(WrappedComponent)})`;\n\n  return WithSearch;\n};\n\nexport default withSearch;\n","import React from 'react';\n\nimport ListingBody from '@plone/volto/components/manage/Blocks/Listing/ListingBody';\nimport { withBlockExtensions } from '@plone/volto/helpers';\n\nimport config from '@plone/volto/registry';\n\nimport { withSearch, withQueryString } from './hocs';\nimport { compose } from 'redux';\nimport { useSelector } from 'react-redux';\nimport { isEqual, isFunction } from 'lodash';\n\nconst getListingBodyVariation = (data) => {\n  const { variations } = config.blocks.blocksConfig.listing;\n\n  const variation = data.listingBodyTemplate\n    ? variations.find(({ id }) => id === data.listingBodyTemplate)\n    : variations.find(({ isDefault }) => isDefault);\n\n  return variation;\n};\n\nconst isfunc = (obj) => isFunction(obj) || typeof obj === 'function';\n\nconst _filtered = (obj) =>\n  Object.assign(\n    {},\n    ...Object.keys(obj).map((k) => {\n      const reject = k !== 'properties' && !isfunc(obj[k]);\n      return reject ? { [k]: obj[k] } : {};\n    }),\n  );\n\nconst blockPropsAreChanged = (prevProps, nextProps) => {\n  const prev = _filtered(prevProps);\n  const next = _filtered(nextProps);\n\n  return isEqual(prev, next);\n};\n\nconst applyDefaults = (data, root) => {\n  const defaultQuery = [\n    {\n      i: 'path',\n      o: 'plone.app.querystring.operation.string.absolutePath',\n      v: root || '/',\n    },\n  ];\n  return {\n    ...data,\n    sort_on: data?.sort_on || 'effective',\n    sort_order: data?.sort_order || 'descending',\n    query: data?.query?.length ? data.query : defaultQuery,\n  };\n};\n\nconst SearchBlockView = (props) => {\n  const { data, searchData, mode = 'view', variation } = props;\n\n  const Layout = variation.view;\n\n  const listingBodyVariation = getListingBodyVariation(data);\n  const root = useSelector((state) => state.breadcrumbs.root);\n  const listingBodyData = applyDefaults(searchData, root);\n\n  return (\n    <div className=\"block search\">\n      <Layout {...props} isEditMode={mode === 'edit'}>\n        <ListingBody\n          variation={{ ...data, ...listingBodyVariation }}\n          data={listingBodyData}\n          path={props.path}\n          isEditMode={mode === 'edit'}\n        />\n      </Layout>\n    </div>\n  );\n};\n\nexport const SearchBlockViewComponent = compose(\n  withBlockExtensions,\n  (Component) => React.memo(Component, blockPropsAreChanged),\n)(SearchBlockView);\n\nexport default compose(withQueryString, withSearch())(SearchBlockViewComponent);\n","export const NONVALUE_OPERATIONS = new Set([\n  'plone.app.querystring.operation.boolean.isFalse',\n  'plone.app.querystring.operation.boolean.isTrue',\n]);\n\nexport const DATE_OPERATIONS = new Set([\n  'plone.app.querystring.operation.date.between',\n]);\n\nexport const hasNonValueOperation = (ops) => {\n  return ops.filter((x) => NONVALUE_OPERATIONS.has(x)).length > 0;\n};\n\nexport const hasDateOperation = (ops) => {\n  return ops.filter((x) => DATE_OPERATIONS.has(x)).length > 0;\n};\n","import config from '@plone/volto/registry';\nimport { defineMessages } from 'react-intl';\nimport { cloneDeep } from 'lodash';\nimport { hasNonValueOperation, hasDateOperation } from './utils';\n\nconst messages = defineMessages({\n  searchBlock: {\n    id: 'Search block',\n    defaultMessage: 'Search block',\n  },\n  controls: {\n    id: 'Controls',\n    defaultMessage: 'Controls',\n  },\n  baseSearchQuery: {\n    id: 'Base search query',\n    defaultMessage: 'Base search query',\n  },\n  sectionTitle: {\n    id: 'Section title',\n    defaultMessage: 'Section title',\n  },\n  headline: {\n    id: 'Headline',\n    defaultMessage: 'Headline',\n  },\n  searchInputPrompt: {\n    id: 'Search input label',\n    defaultMessage: 'Search input label',\n  },\n  showSearchInput: {\n    id: 'Show search input?',\n    defaultMessage: 'Show search input?',\n  },\n  showSearchButtonTitle: {\n    id: 'Show search button?',\n    defaultMessage: 'Show search button?',\n  },\n  showSearchButtonDescription: {\n    id:\n      'The button presence disables the live search, the query is issued when you press ENTER',\n    defaultMessage:\n      'The button presence disables the live search, the query is issued when you press ENTER',\n  },\n  searchButtonLabel: {\n    id: 'Search button label',\n    defaultMessage: 'Search button label',\n  },\n  searchButtonPlaceholder: {\n    id: 'Search',\n    defaultMessage: 'Search',\n  },\n  showSortOn: {\n    id: 'Show sorting?',\n    defaultMessage: 'Show sorting?',\n  },\n  sortOnLabel: {\n    id: 'Sort on label',\n    defaultMessage: 'Sort on label',\n  },\n  sortOnOptions: {\n    id: 'Sort on options',\n    defaultMessage: 'Sort on options',\n  },\n  facets: {\n    id: 'Facets',\n    defaultMessage: 'Facets',\n  },\n  facet: {\n    id: 'Facet',\n    defaultMessage: 'Facet',\n  },\n  label: {\n    id: 'Label',\n    defaultMessage: 'Label',\n  },\n  field: {\n    id: 'Field',\n    defaultMessage: 'Field',\n  },\n  multipleChoices: {\n    id: 'Multiple choices?',\n    defaultMessage: 'Multiple choices?',\n  },\n  hideFacetTitle: {\n    id: 'Hide facet?',\n    defaultMessage: 'Hide facet?',\n  },\n  hideFacetDescription: {\n    id:\n      'Hidden facets will still filter the results if proper parameters are passed in URLs',\n    defaultMessage:\n      'Hidden facets will still filter the results if proper parameters are passed in URLs',\n  },\n  facetWidget: {\n    id: 'Facet widget',\n    defaultMessage: 'Facet widget',\n  },\n});\n\nconst enhanceSchema = (originalSchema, formData) => {\n  const extensionName = 'facetWidgets';\n  const extensionType = 'type'; // property name in stored block data\n  const variations =\n    config.blocks.blocksConfig.search.extensions[extensionName].types;\n\n  const activeItemName = formData?.[extensionType];\n  let activeItem = variations?.find((item) => item.id === activeItemName);\n  if (!activeItem) activeItem = variations?.find((item) => item.isDefault);\n\n  const schemaEnhancer = activeItem?.['schemaEnhancer'];\n\n  let schema = schemaEnhancer\n    ? schemaEnhancer({ schema: cloneDeep(originalSchema), formData })\n    : cloneDeep(originalSchema);\n\n  return schema;\n};\n\nconst FacetSchema = ({ intl }) => ({\n  title: intl.formatMessage(messages.facet),\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: ['title', 'field', 'type', 'hidden'],\n    },\n  ],\n  properties: {\n    title: {\n      title: intl.formatMessage(messages.label),\n    },\n    field: {\n      title: intl.formatMessage(messages.field),\n      widget: 'select_querystring_field',\n      vocabulary: { '@id': 'plone.app.vocabularies.MetadataFields' },\n      filterOptions: (options) => {\n        // Only allows indexes that provide simple, fixed vocabularies.\n        // This should be improved, together with the facets. The querystring\n        // widget implementation should serve as inspiration for those dynamic\n        // types of facets.\n        return Object.assign(\n          {},\n          ...Object.keys(options).map((k) =>\n            Object.keys(options[k].values || {}).length ||\n            hasNonValueOperation(options[k].operations) ||\n            hasDateOperation(options[k].operations)\n              ? { [k]: options[k] }\n              : {},\n          ),\n        );\n      },\n    },\n    multiple: {\n      type: 'boolean',\n      title: intl.formatMessage(messages.multipleChoices),\n      default: false,\n    },\n    hidden: {\n      type: 'boolean',\n      title: intl.formatMessage(messages.hideFacetTitle),\n      default: false,\n      description: intl.formatMessage(messages.hideFacetDescription),\n    },\n    type: {\n      title: intl.formatMessage(messages.facetWidget),\n      choices: config.blocks.blocksConfig.search.extensions.facetWidgets.types.map(\n        ({ id, title }) => [id, title],\n      ),\n      defaultValue: config.blocks.blocksConfig.search.extensions.facetWidgets.types.find(\n        ({ isDefault }) => isDefault,\n      ).id,\n    },\n  },\n  required: ['field'],\n});\n\nexport default ({ data = {}, intl }) => {\n  return {\n    title: intl.formatMessage(messages.searchBlock),\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Default',\n        fields: ['headline'],\n      },\n      {\n        id: 'searchquery',\n        title: intl.formatMessage(messages.baseSearchQuery),\n        fields: ['query'],\n      },\n      {\n        id: 'facets',\n        title: intl.formatMessage(messages.facets),\n        fields: ['facetsTitle', 'facets'],\n      },\n      {\n        id: 'controls',\n        title: intl.formatMessage(messages.controls),\n        fields: [\n          'showSortOn',\n          ...(data.showSortOn ? ['sortOnLabel'] : []),\n          ...(data.showSortOn ? ['sortOnOptions'] : []),\n          'showSearchInput',\n          ...(data.showSearchInput ?? true ? ['showSearchButton'] : []),\n          // ...(data.showSearchInput ? ['searchInputPrompt'] : []),\n          // ...(data.showSearchButton ? ['searchButtonLabel'] : []),\n        ],\n      },\n    ],\n    properties: {\n      headline: {\n        title: intl.formatMessage(messages.headline),\n      },\n      searchInputPrompt: {\n        title: intl.formatMessage(messages.searchInputPrompt),\n      },\n      showSearchInput: {\n        type: 'boolean',\n        title: intl.formatMessage(messages.showSearchInput),\n        default: true,\n      },\n      showSearchButton: {\n        type: 'boolean',\n        title: intl.formatMessage(messages.showSearchButtonTitle),\n        description: intl.formatMessage(messages.showSearchButtonDescription),\n      },\n      searchButtonLabel: {\n        title: intl.formatMessage(messages.searchButtonLabel),\n        placeholder: intl.formatMessage(messages.searchButtonPlaceholder),\n      },\n      showSortOn: {\n        type: 'boolean',\n        title: intl.formatMessage(messages.showSortOn),\n      },\n      sortOnLabel: {\n        title: intl.formatMessage(messages.sortOnLabel),\n      },\n      sortOnOptions: {\n        title: intl.formatMessage(messages.sortOnOptions),\n        widget: 'array',\n      },\n      facets: {\n        title: intl.formatMessage(messages.facets),\n        widget: 'object_list',\n        schema: FacetSchema({ intl }),\n        schemaExtender: enhanceSchema,\n      },\n      facetsTitle: {\n        title: intl.formatMessage(messages.sectionTitle),\n      },\n      query: {\n        title: 'Query',\n      },\n    },\n    required: [],\n  };\n};\n","import React from 'react';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { defineMessages } from 'react-intl';\nimport { compose } from 'redux';\n\nimport { SidebarPortal, BlockDataForm } from '@plone/volto/components';\nimport { addExtensionFieldToSchema } from '@plone/volto/helpers/Extensions/withBlockSchemaEnhancer';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nimport { SearchBlockViewComponent } from './SearchBlockView';\nimport Schema from './schema';\nimport { withSearch, withQueryString } from './hocs';\nimport { cloneDeep } from 'lodash';\n\nconst messages = defineMessages({\n  template: {\n    id: 'Results template',\n    defaultMessage: 'Results template',\n  },\n});\n\nconst SearchBlockEdit = (props) => {\n  const {\n    block,\n    onChangeBlock,\n    data,\n    selected,\n    intl,\n    onTriggerSearch,\n    querystring = {},\n  } = props;\n  const { sortable_indexes = {} } = querystring;\n\n  let schema = Schema({ data, intl });\n\n  schema = addExtensionFieldToSchema({\n    schema,\n    name: 'listingBodyTemplate',\n    items: config.blocks.blocksConfig.listing.variations,\n    intl,\n    title: { id: intl.formatMessage(messages.template) },\n  });\n  const listingVariations = config.blocks.blocksConfig?.listing?.variations;\n  let activeItem = listingVariations.find(\n    (item) => item.id === data.listingBodyTemplate,\n  );\n  const listingSchemaEnhancer = activeItem?.schemaEnhancer;\n  if (listingSchemaEnhancer)\n    schema = listingSchemaEnhancer({\n      schema: cloneDeep(schema),\n      data,\n      intl,\n    });\n  schema.properties.sortOnOptions.items = {\n    choices: Object.keys(sortable_indexes).map((k) => [\n      k,\n      sortable_indexes[k].title,\n    ]),\n  };\n\n  const { query = {} } = data || {};\n  useDeepCompareEffect(() => {\n    onTriggerSearch();\n  }, [query, onTriggerSearch]);\n\n  return (\n    <>\n      <SearchBlockViewComponent\n        {...props}\n        path={getBaseUrl(props.pathname)}\n        mode=\"edit\"\n      />\n      <SidebarPortal selected={selected}>\n        <BlockDataForm\n          schema={schema}\n          onChangeField={(id, value) => {\n            onChangeBlock(block, {\n              ...data,\n              [id]: value,\n            });\n          }}\n          formData={data}\n        />\n      </SidebarPortal>\n    </>\n  );\n};\n\nexport default compose(withQueryString, withSearch())(SearchBlockEdit);\n","import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  searchResults: {\n    id: 'Search results',\n    defaultMessage: 'Search results',\n  },\n  searchedFor: {\n    id: 'Searched for',\n    defaultMessage: 'Searched for',\n  },\n});\n\nconst SearchDetails = ({ total, text, as = 'h4' }) => {\n  const El = as;\n  const intl = useIntl();\n  return (\n    <El className=\"search-details\">\n      {text ? `${intl.formatMessage(messages.searchedFor)}: ${text}. ` : ''}\n      {intl.formatMessage(messages.searchResults)}: {total}\n    </El>\n  );\n};\n\nexport default SearchDetails;\n","import React from 'react';\nimport { resolveExtension } from '@plone/volto/helpers/Extensions/withBlockExtensions';\nimport config from '@plone/volto/registry';\nimport { hasNonValueOperation, hasDateOperation } from '../utils';\n\nconst showFacet = (index) => {\n  const { values } = index;\n  return index\n    ? hasNonValueOperation(index.operations || []) ||\n      hasDateOperation(index.operations || [])\n      ? true\n      : values && Object.keys(values).length > 0\n    : values && Object.keys(values).length > 0;\n};\n\nconst Facets = (props) => {\n  const {\n    querystring,\n    data = {},\n    facets,\n    setFacets,\n    facetWrapper,\n    isEditMode,\n  } = props;\n  const { search } = config.blocks.blocksConfig;\n\n  const FacetWrapper = facetWrapper;\n  const query_to_values = Object.assign(\n    {},\n    ...(data?.query?.query?.map(({ i, v }) => ({ [i]: v })) || []),\n  );\n\n  return (\n    <>\n      {data?.facets\n        ?.filter((facetSettings) => !facetSettings.hidden)\n        .map((facetSettings) => {\n          const field = facetSettings?.field?.value;\n          const index = querystring.indexes[field] || {};\n          const { values = {} } = index;\n\n          let choices = Object.keys(values)\n            .map((name) => ({\n              value: name,\n              label: values[name].title,\n            }))\n            // filter the available values based on the allowed values in the\n            // base query\n            .filter(({ value }) =>\n              query_to_values[field]\n                ? query_to_values[field].includes(value)\n                : true,\n            );\n\n          choices = choices.sort((a, b) =>\n            a.label.localeCompare(b.label, 'en', { sensitivity: 'base' }),\n          );\n\n          const isMulti = facetSettings.multiple;\n          const selectedValue = facets[facetSettings?.field?.value];\n\n          // TODO :handle changing the type of facet (multi/nonmulti)\n\n          const { view: FacetWidget, stateToValue } = resolveExtension(\n            'type',\n            search.extensions.facetWidgets.types,\n            facetSettings,\n          );\n\n          let value = stateToValue({ facetSettings, index, selectedValue });\n\n          const {\n            rewriteOptions = (name, options) => options,\n          } = search.extensions.facetWidgets;\n\n          return FacetWrapper && (isEditMode || showFacet(index)) ? (\n            <FacetWrapper key={facetSettings['@id']}>\n              <FacetWidget\n                facet={facetSettings}\n                choices={rewriteOptions(facetSettings?.field?.value, choices)}\n                isMulti={isMulti}\n                value={value}\n                isEditMode={isEditMode}\n                onChange={(id, value) => {\n                  !isEditMode && setFacets({ ...facets, [id]: value });\n                }}\n              />\n            </FacetWrapper>\n          ) : (\n            ''\n          );\n        })}\n    </>\n  );\n};\n\nexport default Facets;\n","export const selectTheme = (theme) => ({\n  ...theme,\n  borderRadius: 0,\n  colors: {\n    ...theme.colors,\n    primary25: 'hotpink',\n    primary: '#b8c6c8',\n  },\n});\n\nexport const customSelectStyles = {\n  control: (styles, state) => ({\n    ...styles,\n    border: 'none',\n    borderBottom: '1px solid #c7d5d8',\n    boxShadow: 'none',\n    borderBottomStyle: state.menuIsOpen ? 'dotted' : 'solid',\n    minHeight: '37px',\n  }),\n  menu: (styles, state) => ({\n    ...styles,\n    top: null,\n    marginTop: 0,\n    boxShadow: 'none',\n    borderBottom: '1px solid #c7d5d8',\n    zIndex: 2,\n  }),\n  indicatorSeparator: (styles) => ({\n    ...styles,\n    width: null,\n  }),\n  valueContainer: (styles) => ({\n    ...styles,\n    padding: '0px',\n    paddingLeft: 0,\n  }),\n  dropdownIndicator: (styles) => ({\n    paddingRight: 0,\n    paddingTop: '4px',\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: null,\n    minHeight: '30px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '6px 6px',\n    color: state.isSelected\n      ? '#007bc1'\n      : state.isFocused\n      ? '#4a4a4a'\n      : 'inherit',\n    ':active': {\n      backgroundColor: null,\n    },\n    svg: {\n      flex: '0 0 auto',\n      height: '18px !important',\n      width: '18px !important',\n    },\n  }),\n};\n\nexport const sortOnSelectStyles = {\n  control: (styles, state) => ({\n    ...styles,\n    border: '1px solid #c7d5d8',\n    borderRadius: '5px',\n    boxShadow: 'none',\n    minHeight: '20px',\n    width: '170px',\n  }),\n  menu: (styles, state) => ({\n    ...styles,\n    top: null,\n    marginTop: 0,\n    boxShadow: 'none',\n    border: '1px solid #c7d5d8',\n    zIndex: 2,\n    width: '170px',\n  }),\n  indicatorSeparator: (styles) => ({\n    ...styles,\n    width: null,\n  }),\n  dropdownIndicator: (styles) => ({\n    ...styles,\n    padding: '3px',\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: null,\n    minHeight: '20px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '6px 6px',\n    color: state.isSelected\n      ? '#007bc1'\n      : state.isFocused\n      ? '#4a4a4a'\n      : 'inherit',\n    ':active': {\n      backgroundColor: null,\n    },\n    svg: {\n      flex: '0 0 auto',\n      height: '18px !important',\n      width: '18px !important',\n    },\n  }),\n};\n","import { isEmpty } from 'lodash';\n\n/**\n * Converts the state (extracted from URL) to options for the facet control\n *\n * Shared by the SelectFacet and CheckboxFacet\n */\nexport const selectFacetStateToValue = ({\n  facetSettings,\n  index,\n  selectedValue,\n}) => {\n  const isMulti = facetSettings.multiple;\n  return selectedValue\n    ? isMulti\n      ? Array.isArray(selectedValue)\n        ? selectedValue.map((v) => ({\n            value: v,\n            label: index.values?.[v]?.title,\n          }))\n        : []\n      : {\n          value: selectedValue,\n          label: index.values?.[selectedValue]?.title,\n        }\n    : [];\n};\n\nexport const selectFacetSchemaEnhancer = ({ schema, formData }) => {\n  // adds (enables) the 'multiple' field after the 'type' dropdown\n  let { fields } = schema.fieldsets[0];\n  const pos = fields.indexOf('type') + 1;\n  fields = [\n    ...fields.slice(0, pos),\n    'multiple',\n    ...fields.slice(pos, fields.length),\n  ];\n  schema.fieldsets[0].fields = fields;\n  return schema;\n};\n\nexport const selectFacetValueToQuery = ({ value, facet }) => {\n  return !isEmpty(value)\n    ? {\n        i: facet.field.value,\n        o: Array.isArray(value)\n          ? 'plone.app.querystring.operation.list.contains'\n          : 'plone.app.querystring.operation.selection.is',\n        v: value,\n      }\n    : undefined;\n};\n","import React from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport {\n  Option,\n  DropdownIndicator,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { selectTheme, customSelectStyles } from './SelectStyling';\nimport {\n  selectFacetSchemaEnhancer,\n  selectFacetStateToValue,\n  selectFacetValueToQuery,\n} from './base';\n\nconst SelectFacet = (props) => {\n  const {\n    facet,\n    choices,\n    reactSelect,\n    isMulti,\n    onChange,\n    value,\n    isEditMode,\n  } = props;\n  const Select = reactSelect.default;\n  const v = Array.isArray(value) && value.length === 0 ? null : value;\n\n  return (\n    <Select\n      placeholder={facet?.title ?? (facet?.field?.label || 'select...')}\n      className=\"react-select-container\"\n      classNamePrefix=\"react-select\"\n      options={choices}\n      styles={customSelectStyles}\n      theme={selectTheme}\n      components={{ DropdownIndicator, Option }}\n      isDisabled={isEditMode}\n      onChange={(data) => {\n        if (data) {\n          onChange(\n            facet.field.value,\n            isMulti ? data.map(({ value }) => value) : [data.value],\n          );\n        } else {\n          // data has been removed\n          onChange(facet.field.value, []);\n        }\n      }}\n      isMulti={facet.multiple}\n      isClearable\n      value={v}\n    />\n  );\n};\n\nSelectFacet.schemaEnhancer = selectFacetSchemaEnhancer;\nSelectFacet.stateToValue = selectFacetStateToValue;\nSelectFacet.valueToQuery = selectFacetValueToQuery;\n\nexport default injectLazyLibs('reactSelect')(SelectFacet);\n","import React from 'react';\nimport { Checkbox, Header } from 'semantic-ui-react';\nimport {\n  selectFacetSchemaEnhancer,\n  selectFacetStateToValue,\n  selectFacetValueToQuery,\n} from './base';\n\n/**\n * A facet that uses radio/checkboxes to provide an explicit list of values for\n * filtering\n */\nconst CheckboxFacet = (props) => {\n  const { facet, choices, isMulti, onChange, value, isEditMode } = props;\n  const facetValue = value;\n\n  return (\n    <div className=\"checkbox-facet\">\n      <Header as=\"h4\">{facet.title ?? facet?.field?.label}</Header>\n      <div className=\"entries\">\n        {choices.map(({ label, value }, i) => (\n          <div className=\"entry\" key={value}>\n            <Checkbox\n              disabled={isEditMode}\n              label={label}\n              radio={!isMulti}\n              checked={\n                isMulti\n                  ? !!facetValue?.find((f) => f.value === value)\n                  : facetValue && facetValue.value === value\n              }\n              onChange={(e, { checked }) =>\n                onChange(\n                  facet.field.value,\n                  isMulti\n                    ? [\n                        ...facetValue\n                          .filter((f) => f.value !== value)\n                          .map((f) => f.value),\n                        ...(checked ? [value] : []),\n                      ]\n                    : checked\n                    ? value\n                    : null,\n                )\n              }\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nCheckboxFacet.schemaEnhancer = selectFacetSchemaEnhancer;\nCheckboxFacet.stateToValue = selectFacetStateToValue;\nCheckboxFacet.valueToQuery = selectFacetValueToQuery;\n\nexport default CheckboxFacet;\n","import React, { useState } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { compose } from 'redux';\nimport { Icon } from '@plone/volto/components';\nimport { connect } from 'react-redux';\n\nimport leftKey from '@plone/volto/icons/left-key.svg';\nimport rightKey from '@plone/volto/icons/right-key.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nconst messages = defineMessages({\n  startDate: {\n    id: 'Start Date',\n    defaultMessage: 'Start Date',\n  },\n  endDate: {\n    id: 'End Date',\n    defaultMessage: 'End Date',\n  },\n});\n\nconst PrevIcon = () => (\n  <div\n    className=\"prev-icon\"\n    style={{\n      color: '#000',\n      left: '22px',\n      padding: '5px',\n      position: 'absolute',\n      top: '15px',\n    }}\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n    tabIndex=\"0\"\n  >\n    <Icon name={leftKey} size=\"30px\" />\n  </div>\n);\nconst NextIcon = () => (\n  <div\n    className=\"next-icon\"\n    style={{\n      color: '#000',\n      right: '22px',\n      padding: '5px',\n      position: 'absolute',\n      top: '15px',\n    }}\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n    tabIndex=\"0\"\n  >\n    <Icon name={rightKey} size=\"30px\" />\n  </div>\n);\n\nconst CloseIcon = () => <Icon name={clearSVG} size=\"24px\" className=\"close\" />;\n\nconst DateRangeFacet = (props) => {\n  const { facet, isEditMode, onChange, value, reactDates, intl, lang } = props;\n  const moment = props.moment.default;\n  const { DateRangePicker } = reactDates;\n  const [focused, setFocused] = useState(null);\n\n  return (\n    <div className=\"daterange-facet\">\n      <Header as=\"h4\">{facet?.title ?? facet?.field?.label}</Header>\n      <div className=\"ui form date-time-widget-wrapper\">\n        <div className=\"ui input date-input\">\n          <DateRangePicker\n            startDate={value && value[0] ? moment(value[0]) : null}\n            startDateId={`${facet['@id']}-start-date`}\n            startDatePlaceholderText={intl.formatMessage(messages.startDate)}\n            endDate={value && value[1] ? moment(value[1]) : null}\n            endDateId={`${facet['@id']}-end-date`}\n            endDatePlaceholderText={intl.formatMessage(messages.endDate)}\n            numberOfMonths={1}\n            disabled={isEditMode}\n            noBorder\n            showClearDates\n            customCloseIcon={<CloseIcon />}\n            displayFormat={moment.localeData(lang).longDateFormat('L')}\n            focusedInput={focused}\n            onFocusChange={(focusedInput) => setFocused(focusedInput)}\n            onDatesChange={({ startDate, endDate }) => {\n              onChange(facet.field.value, [\n                startDate ? startDate.format('YYYY-MM-DD') : null,\n                endDate ? endDate.format('YYYY-MM-DD') : null,\n              ]);\n            }}\n            isOutsideRange={() => false}\n            navPrev={<PrevIcon />}\n            navNext={<NextIcon />}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDateRangeFacet.stateToValue = ({ facetSettings, index, selectedValue }) => {\n  return selectedValue || [null, null];\n};\n\nDateRangeFacet.valueToQuery = ({ value, facet }) => {\n  return value && typeof value[0] === 'string' && typeof value[1] === 'string'\n    ? {\n        i: facet.field.value,\n        o: 'plone.app.querystring.operation.date.between',\n        v: value,\n      }\n    : null;\n};\n\nexport default compose(\n  injectLazyLibs(['reactDates', 'moment']),\n  connect((state) => ({\n    lang: state.intl.locale,\n  })),\n  injectIntl,\n)(DateRangeFacet);\n","import React from 'react';\nimport { Button, Input } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport loupeSVG from '@plone/volto/icons/zoom.svg';\n\nconst messages = defineMessages({\n  search: {\n    id: 'Search',\n    defaultMessage: 'Search',\n  },\n});\n\nconst SearchInput = (props) => {\n  const { data, searchText, setSearchText, isLive, onTriggerSearch } = props;\n  const intl = useIntl();\n\n  return (\n    <div className=\"search-input\">\n      <Input\n        id={`${props.id}-searchtext`}\n        value={searchText}\n        placeholder={\n          data.searchInputPrompt || intl.formatMessage(messages.search)\n        }\n        fluid\n        onKeyPress={(event) => {\n          if (isLive || event.key === 'Enter') onTriggerSearch(searchText);\n        }}\n        onChange={(event, { value }) => {\n          setSearchText(value);\n          if (isLive) {\n            onTriggerSearch(value);\n          }\n        }}\n      />\n      {isLive && (\n        <Button basic icon className=\"search-input-live-icon-button\">\n          <Icon name={loupeSVG} />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default SearchInput;\n","import React from 'react';\nimport { Accordion, Button, Icon } from 'semantic-ui-react';\nimport { Icon as VoltoIcon } from '@plone/volto/components';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { resolveExtension } from '@plone/volto/helpers/Extensions/withBlockExtensions';\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  currentFilters: {\n    id: 'Current filters applied',\n    defaultMessage: 'Current filters applied',\n  },\n  clearFilters: {\n    id: 'Clear filters',\n    defaultMessage: 'Clear filters',\n  },\n});\n\n/**\n * A list of active filtered values and controls to clear those filters.\n *\n */\nconst FilterList = (props) => {\n  const { data = {}, facets = {}, setFacets, isEditMode } = props;\n  const definedFacets = data.facets || [];\n  const [isOpened, setIsOpened] = React.useState(false);\n\n  const totalFilters = definedFacets.filter(\n    ({ field }) =>\n      field && Object.keys(facets).includes(field.value) && facets[field.value],\n  ).length;\n\n  const {\n    types: facetWidgetTypes,\n  } = config.blocks.blocksConfig.search.extensions.facetWidgets;\n\n  const intl = useIntl();\n\n  return totalFilters ? (\n    <Accordion className=\"filter-listing\">\n      <Accordion.Title\n        className=\"filter-list-header\"\n        active={isOpened}\n        onClick={() => setIsOpened(!isOpened)}\n      >\n        <div className=\"filter-list-title\">\n          <VoltoIcon name={downSVG} size=\"18px\" />\n          {intl.formatMessage(messages.currentFilters)}: {totalFilters}\n        </div>\n        <Button\n          icon\n          basic\n          compact\n          size=\"small\"\n          onClick={(e) => {\n            e.stopPropagation();\n            !isEditMode && setFacets({});\n          }}\n        >\n          <Icon name=\"trash\" />\n          {intl.formatMessage(messages.clearFilters)}\n        </Button>\n      </Accordion.Title>\n      <Accordion.Content className=\"filter-list-content\" active={isOpened}>\n        <div className=\"filter-list\">\n          {data.facets?.map((facetSettings, i) => {\n            const {\n              filterListComponent: FilterListComponent,\n            } = resolveExtension('type', facetWidgetTypes, facetSettings);\n            const facet = facetSettings?.field?.value;\n            if (!facet) return null;\n\n            return (\n              <div key={i}>\n                {Object.keys(facets).includes(facet) && !!facets[facet] && (\n                  <div className=\"filter-list-group\" key={i}>\n                    <span className=\"label-title\">\n                      {facetSettings.title ?? facetSettings?.field?.label}\n                    </span>\n                    <FilterListComponent {...props} facet={facet} />\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </Accordion.Content>\n    </Accordion>\n  ) : null;\n};\n\nexport default FilterList;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { compose } from 'redux';\nimport { Icon } from '@plone/volto/components';\nimport {\n  Option,\n  DropdownIndicator,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { selectTheme, sortOnSelectStyles } from './SelectStyling';\n\nimport upSVG from '@plone/volto/icons/sort-up.svg';\nimport downSVG from '@plone/volto/icons/sort-down.svg';\n\nconst messages = defineMessages({\n  noSelection: {\n    id: 'No selection',\n    defaultMessage: 'No selection',\n  },\n  sortOn: {\n    id: 'Sort on',\n    defaultMessage: 'Sort on',\n  },\n  ascending: {\n    id: 'Ascending',\n    defaultMessage: 'Ascending',\n  },\n  descending: {\n    id: 'Descending',\n    defaultMessage: 'Descending',\n  },\n});\n\nconst SortOn = (props) => {\n  const {\n    data = {},\n    reactSelect,\n    sortOn = null,\n    sortOrder = null,\n    setSortOn,\n    setSortOrder,\n    isEditMode,\n    querystring = {},\n    intl,\n  } = props;\n  const { sortable_indexes } = querystring;\n  const Select = reactSelect.default;\n\n  const activeSortOn = sortOn || data?.query?.sort_on || '';\n\n  const { sortOnOptions = [] } = data;\n  const value = {\n    value: activeSortOn || intl.formatMessage(messages.noSelection),\n    label:\n      activeSortOn && sortable_indexes\n        ? sortable_indexes[activeSortOn]?.title\n        : activeSortOn || intl.formatMessage(messages.noSelection),\n  };\n\n  return (\n    <div className=\"search-sort-wrapper\">\n      <div className=\"search-sort-on\">\n        {data.sortOnLabel && (\n          <span className=\"sort-label\">{data.sortOnLabel}</span>\n        )}\n        <Select\n          id=\"select-search-sort-on\"\n          name=\"select-searchblock-sort-on\"\n          className=\"search-react-select-container\"\n          classNamePrefix=\"react-select\"\n          placeholder={intl.formatMessage(messages.sortOn)}\n          styles={sortOnSelectStyles}\n          theme={selectTheme}\n          components={{ DropdownIndicator, Option }}\n          options={[\n            ...sortOnOptions.map((k) => ({\n              value: k,\n              label: sortable_indexes[k]?.title || k,\n            })),\n          ]}\n          value={value}\n          onChange={(data) => {\n            !isEditMode && setSortOn(data.value);\n          }}\n        />\n      </div>\n      <Button\n        icon\n        basic\n        compact\n        title={intl.formatMessage(messages.ascending)}\n        className={cx({\n          active: sortOrder === 'ascending',\n        })}\n        onClick={() => {\n          !isEditMode && setSortOrder('ascending');\n        }}\n      >\n        <Icon name={upSVG} size=\"25px\" />\n      </Button>\n      <Button\n        icon\n        basic\n        compact\n        title={intl.formatMessage(messages.descending)}\n        className={cx({\n          active: sortOrder === 'descending',\n        })}\n        onClick={() => {\n          !isEditMode && setSortOrder('descending');\n        }}\n      >\n        <Icon name={downSVG} size=\"25px\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default compose(injectIntl, injectLazyLibs(['reactSelect']))(SortOn);\n","import React from 'react';\nimport { Radio, Header } from 'semantic-ui-react';\n\nconst ToggleFacet = (props) => {\n  const { facet, isEditMode, onChange, value } = props; // value, choices, isMulti, onChange,\n\n  return (\n    <div className=\"checkbox-facet\">\n      <Header as=\"h4\">{facet?.title ?? facet?.field?.label}</Header>\n      <div className=\"radio\">\n        <Radio\n          toggle\n          checked={value || typeof value === 'string'}\n          disabled={isEditMode}\n          onChange={(e, { checked }) => {\n            onChange(facet.field.value, checked);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nToggleFacet.stateToValue = ({ facetSettings, index, selectedValue }) => {\n  return selectedValue || typeof selectedValue === 'string';\n};\n\nToggleFacet.valueToQuery = ({ value, facet }) => {\n  return value || typeof value === 'string'\n    ? {\n        i: facet.field.value,\n        o: 'plone.app.querystring.operation.boolean.isTrue',\n        v: '',\n      }\n    : null;\n};\n\nexport default ToggleFacet;\n","import React from 'react';\nimport { Label, Icon } from 'semantic-ui-react';\n\nfunction SelectFacetFilterListEntry(props) {\n  const { facet, isEditMode, setFacets, facets } = props;\n  return typeof facets[facet] === 'string' ? (\n    <Label size=\"small\">\n      {facets[facet]}\n      <Icon\n        name=\"delete\"\n        onClick={() => {\n          !isEditMode &&\n            setFacets({\n              ...facets,\n              [facet]: '',\n            });\n        }}\n      />\n    </Label>\n  ) : (\n    <>\n      {facets[facet].map((entry, i) => (\n        <Label size=\"small\" key={i}>\n          {entry}\n          <Icon\n            name=\"delete\"\n            onClick={() => {\n              const entries = facets[facet].filter((item) => item !== entry);\n              !isEditMode &&\n                setFacets({\n                  ...facets,\n                  [facet]: entries,\n                });\n            }}\n          />\n        </Label>\n      ))}\n    </>\n  );\n}\n\nexport default SelectFacetFilterListEntry;\n","import React from 'react';\nimport { Label, Icon } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  yes: {\n    id: 'yes',\n    defaultMessage: 'Yes',\n  },\n  no: {\n    id: 'no',\n    defaultMessage: 'No',\n  },\n});\n\nfunction ToggleFacetFilterListEntry(props) {\n  const { facet, isEditMode, setFacets, facets } = props;\n  const intl = useIntl();\n\n  return (\n    <Label size=\"small\">\n      {intl.formatMessage(facets[facet] ? messages.yes : messages.no)}\n      <Icon\n        name=\"delete\"\n        onClick={() => {\n          const filteredFacets = Object.assign(\n            {},\n            ...Object.keys(facets)\n              .filter((f) => f !== facet)\n              .map((f) => ({ [f]: facets[f] })),\n          );\n          !isEditMode && setFacets(filteredFacets);\n        }}\n      />\n    </Label>\n  );\n}\n\nexport default ToggleFacetFilterListEntry;\n","import React from 'react';\nimport { Label, Icon } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  yes: {\n    id: 'yes',\n    defaultMessage: 'Yes',\n  },\n  no: {\n    id: 'no',\n    defaultMessage: 'No',\n  },\n});\n\nfunction DateRangeFacetFilterListEntry(props) {\n  const { facet, isEditMode, setFacets, facets } = props;\n  const intl = useIntl();\n\n  return (\n    <Label size=\"small\">\n      {intl.formatMessage(facets[facet] ? messages.yes : messages.no)}\n      <Icon\n        name=\"delete\"\n        onClick={() => {\n          const filteredFacets = Object.assign(\n            {},\n            ...Object.keys(facets)\n              .filter((f) => f !== facet)\n              .map((f) => ({ [f]: facets[f] })),\n          );\n          !isEditMode && setFacets(filteredFacets);\n        }}\n      />\n    </Label>\n  );\n}\n\nexport default DateRangeFacetFilterListEntry;\n","import React from 'react';\nimport {\n  SearchInput,\n  SearchDetails,\n  Facets,\n  FilterList,\n  SortOn,\n} from '../components';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { Button } from 'semantic-ui-react';\nimport { flushSync } from 'react-dom';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  searchButtonText: {\n    id: 'Search',\n    defaultMessage: 'Search',\n  },\n});\n\nconst FacetWrapper = ({ children }) => (\n  <Segment basic className=\"facet\">\n    {children}\n  </Segment>\n);\n\nconst RightColumnFacets = (props) => {\n  const {\n    children,\n    data,\n    totalItems,\n    facets,\n    setFacets,\n    setSortOn,\n    setSortOrder,\n    sortOn,\n    sortOrder,\n    onTriggerSearch,\n    searchedText, // search text for previous search\n    searchText, // search text currently being entered (controlled input)\n    isEditMode,\n    querystring = {},\n    // searchData,\n    // mode = 'view',\n    // variation,\n  } = props;\n  const { showSearchButton } = data;\n  const isLive = !showSearchButton;\n  const intl = useIntl();\n\n  return (\n    <Grid className=\"searchBlock-facets right-column-facets\" stackable>\n      <Grid.Row>\n        <Grid.Column>\n          {data.headline && <h2 className=\"headline\">{data.headline}</h2>}\n        </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row>\n        <Grid.Column\n          mobile={12}\n          tablet={data.facets?.length ? 8 : 12}\n          computer={data.facets?.length ? 9 : 12}\n        >\n          {(Object.keys(data).includes('showSearchInput')\n            ? data.showSearchInput\n            : true) && (\n            <div className=\"search-wrapper\">\n              <SearchInput {...props} isLive={isLive} />\n              {data.showSearchButton && (\n                <Button primary onClick={() => onTriggerSearch(searchText)}>\n                  {data.searchButtonLabel ||\n                    intl.formatMessage(messages.searchButtonText)}\n                </Button>\n              )}\n            </div>\n          )}\n\n          <div>\n            <FilterList\n              {...props}\n              isEditMode={isEditMode}\n              setFacets={(f) => {\n                flushSync(() => {\n                  setFacets(f);\n                  onTriggerSearch(searchedText || '', f);\n                });\n              }}\n            />\n          </div>\n\n          <div className=\"search-results-count-sort\">\n            <SearchDetails text={searchedText} total={totalItems} />\n            {data.showSortOn && (\n              <SortOn\n                data={data}\n                querystring={querystring}\n                isEditMode={isEditMode}\n                sortOrder={sortOrder}\n                sortOn={sortOn}\n                setSortOn={(sortOn) => {\n                  flushSync(() => {\n                    setSortOn(sortOn);\n                    onTriggerSearch(searchedText || '', facets, sortOn);\n                  });\n                }}\n                setSortOrder={(sortOrder) => {\n                  flushSync(() => {\n                    setSortOrder(sortOrder);\n                    onTriggerSearch(\n                      searchedText || '',\n                      facets,\n                      sortOn,\n                      sortOrder,\n                    );\n                  });\n                }}\n              />\n            )}\n          </div>\n          {children}\n        </Grid.Column>\n\n        {data.facets?.length && (\n          <Grid.Column mobile={12} tablet={4} computer={3}>\n            <div className=\"facets\">\n              {data.facetsTitle && <h3>{data.facetsTitle}</h3>}\n              <Facets\n                querystring={querystring}\n                data={data}\n                facets={facets}\n                isEditMode={isEditMode}\n                setFacets={(f) => {\n                  flushSync(() => {\n                    setFacets(f);\n                    onTriggerSearch(searchedText || '', f);\n                  });\n                }}\n                facetWrapper={FacetWrapper}\n              />\n            </div>\n          </Grid.Column>\n        )}\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default RightColumnFacets;\n","import React from 'react';\nimport {\n  SearchInput,\n  SearchDetails,\n  Facets,\n  FilterList,\n  SortOn,\n} from '../components';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { Button } from 'semantic-ui-react';\nimport { flushSync } from 'react-dom';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  searchButtonText: {\n    id: 'Search',\n    defaultMessage: 'Search',\n  },\n});\n\nconst FacetWrapper = ({ children }) => (\n  <Segment basic className=\"facet\">\n    {children}\n  </Segment>\n);\n\nconst LeftColumnFacets = (props) => {\n  const {\n    children,\n    data,\n    totalItems,\n    facets,\n    setFacets,\n    setSortOn,\n    setSortOrder,\n    sortOn,\n    sortOrder,\n    onTriggerSearch,\n    searchedText, // search text for previous search\n    searchText, // search text currently being entered (controlled input)\n    isEditMode,\n    querystring = {},\n    // searchData,\n    // mode = 'view',\n    // variation,\n  } = props;\n  const { showSearchButton } = data;\n  const isLive = !showSearchButton;\n  const intl = useIntl();\n\n  return (\n    <Grid className=\"searchBlock-facets left-column-facets\" stackable>\n      <Grid.Row>\n        <Grid.Column>\n          {data.headline && <h2 className=\"headline\">{data.headline}</h2>}\n        </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row>\n        {data.facets?.length && (\n          <Grid.Column mobile={12} tablet={4} computer={3}>\n            <div className=\"facets\">\n              {data.facetsTitle && <h3>{data.facetsTitle}</h3>}\n              <Facets\n                querystring={querystring}\n                data={data}\n                facets={facets}\n                setFacets={(f) => {\n                  flushSync(() => {\n                    setFacets(f);\n                    onTriggerSearch(searchedText || '', f);\n                  });\n                }}\n                facetWrapper={FacetWrapper}\n              />\n            </div>\n          </Grid.Column>\n        )}\n\n        <Grid.Column\n          mobile={12}\n          tablet={data.facets?.length ? 8 : 12}\n          computer={data.facets?.length ? 9 : 12}\n        >\n          {(Object.keys(data).includes('showSearchInput')\n            ? data.showSearchInput\n            : true) && (\n            <div className=\"search-wrapper\">\n              <SearchInput {...props} isLive={isLive} />\n              {data.showSearchButton && (\n                <Button primary onClick={() => onTriggerSearch(searchText)}>\n                  {data.searchButtonLabel ||\n                    intl.formatMessage(messages.searchButtonText)}\n                </Button>\n              )}\n            </div>\n          )}\n\n          <div>\n            <FilterList\n              {...props}\n              isEditMode={isEditMode}\n              setFacets={(f) => {\n                flushSync(() => {\n                  setFacets(f);\n                  onTriggerSearch(searchedText || '', f);\n                });\n              }}\n            />\n          </div>\n\n          <div className=\"search-results-count-sort\">\n            <SearchDetails text={searchedText} total={totalItems} />\n\n            {data.showSortOn && (\n              <SortOn\n                querystring={querystring}\n                data={data}\n                isEditMode={isEditMode}\n                sortOn={sortOn}\n                sortOrder={sortOrder}\n                setSortOn={(sortOn) => {\n                  flushSync(() => {\n                    setSortOn(sortOn);\n                    onTriggerSearch(searchedText || '', facets, sortOn);\n                  });\n                }}\n                setSortOrder={(sortOrder) => {\n                  flushSync(() => {\n                    setSortOrder(sortOrder);\n                    onTriggerSearch(\n                      searchedText || '',\n                      facets,\n                      sortOn,\n                      sortOrder,\n                    );\n                  });\n                }}\n              />\n            )}\n          </div>\n          {children}\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default LeftColumnFacets;\n","import React from 'react';\nimport {\n  SearchInput,\n  SearchDetails,\n  Facets,\n  FilterList,\n  SortOn,\n} from '../components';\nimport { Grid } from 'semantic-ui-react';\nimport { Button } from 'semantic-ui-react';\nimport { flushSync } from 'react-dom';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  searchButtonText: {\n    id: 'Search',\n    defaultMessage: 'Search',\n  },\n});\n\nconst FacetWrapper = ({ children }) => (\n  <Grid.Column mobile={12} tablet={4} computer={3}>\n    {children}\n  </Grid.Column>\n);\n\nconst TopSideFacets = (props) => {\n  const {\n    children,\n    data,\n    totalItems,\n    facets,\n    setFacets,\n    setSortOn,\n    setSortOrder,\n    sortOn,\n    sortOrder,\n    onTriggerSearch,\n    searchedText, // search text for previous search\n    searchText, // search text currently being entered (controlled input)\n    isEditMode,\n    querystring = {},\n    // searchData,\n    // mode = 'view',\n    // variation,\n  } = props;\n  const { showSearchButton } = data;\n  const isLive = !showSearchButton;\n  const intl = useIntl();\n\n  return (\n    <Grid className=\"searchBlock-facets\" stackable>\n      <Grid.Row>\n        <Grid.Column>\n          {data.headline && <h2 className=\"headline\">{data.headline}</h2>}\n        </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row>\n        <Grid.Column>\n          {(Object.keys(data).includes('showSearchInput')\n            ? data.showSearchInput\n            : true) && (\n            <div className=\"search-wrapper\">\n              <SearchInput {...props} isLive={isLive} />\n              {data.showSearchButton && (\n                <Button primary onClick={() => onTriggerSearch(searchText)}>\n                  {data.searchButtonLabel ||\n                    intl.formatMessage(messages.searchButtonText)}\n                </Button>\n              )}\n            </div>\n          )}\n\n          <div className=\"search-filters-sort\">\n            <FilterList\n              {...props}\n              isEditMode={isEditMode}\n              setFacets={(f) => {\n                flushSync(() => {\n                  setFacets(f);\n                  onTriggerSearch(searchedText || '', f);\n                });\n              }}\n            />\n\n            {data.showSortOn && (\n              <SortOn\n                data={data}\n                querystring={querystring}\n                isEditMode={isEditMode}\n                sortOn={sortOn}\n                sortOrder={sortOrder}\n                setSortOn={(sortOn) => {\n                  flushSync(() => {\n                    setSortOn(sortOn);\n                    onTriggerSearch(searchedText || '', facets, sortOn);\n                  });\n                }}\n                setSortOrder={(sortOrder) => {\n                  flushSync(() => {\n                    setSortOrder(sortOrder);\n                    onTriggerSearch(\n                      searchedText || '',\n                      facets,\n                      sortOn,\n                      sortOrder,\n                    );\n                  });\n                }}\n              />\n            )}\n          </div>\n          {data.facets?.length > 0 && (\n            <div className=\"facets\">\n              {data.facetsTitle && <h3>{data.facetsTitle}</h3>}\n              <Grid verticalAlign=\"bottom\" columns={12}>\n                <Facets\n                  data={data}\n                  querystring={querystring}\n                  facets={facets}\n                  setFacets={(f) => {\n                    flushSync(() => {\n                      setFacets(f);\n                      onTriggerSearch(searchedText || '', f);\n                    });\n                  }}\n                  facetWrapper={FacetWrapper}\n                />\n              </Grid>\n            </div>\n          )}\n          <SearchDetails text={searchedText} total={totalItems} as=\"h5\" />\n        </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row>\n        <Grid.Column>{children}</Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default TopSideFacets;\n","import { getQueryStringResults } from '@plone/volto/actions';\n\nexport default ({ dispatch, data, path }) => {\n  return [\n    dispatch(\n      getQueryStringResults(\n        path,\n        {\n          ...data.querystring,\n          ...(data.variation?.fullobjects\n            ? { fullobjects: 1 }\n            : { metadata_fields: '_all' }),\n        },\n        data.block,\n      ),\n    ),\n  ];\n};\n","import { defineMessages } from 'react-intl';\n\nimport ViewTitleBlock from '@plone/volto/components/manage/Blocks/Title/View';\nimport ViewDescriptionBlock from '@plone/volto/components/manage/Blocks/Description/View';\nimport ViewToCBlock from '@plone/volto/components/manage/Blocks/ToC/View';\nimport ViewTextBlock from '@plone/volto/components/manage/Blocks/Text/View';\nimport ViewImageBlock from '@plone/volto/components/manage/Blocks/Image/View';\nimport ViewLeadImageBlock from '@plone/volto/components/manage/Blocks/LeadImage/View';\nimport ViewListingBlock from '@plone/volto/components/manage/Blocks/Listing/View';\nimport ViewVideoBlock from '@plone/volto/components/manage/Blocks/Video/View';\nimport ViewHeroImageLeftBlock from '@plone/volto/components/manage/Blocks/HeroImageLeft/View';\nimport ViewMapBlock from '@plone/volto/components/manage/Blocks/Maps/View';\nimport ViewHTMLBlock from '@plone/volto/components/manage/Blocks/HTML/View';\nimport ViewTableBlock from '@plone/volto/components/manage/Blocks/Table/View';\n\nimport EditTitleBlock from '@plone/volto/components/manage/Blocks/Title/Edit';\nimport EditDescriptionBlock from '@plone/volto/components/manage/Blocks/Description/Edit';\nimport EditToCBlock from '@plone/volto/components/manage/Blocks/ToC/Edit';\nimport EditTextBlock from '@plone/volto/components/manage/Blocks/Text/Edit';\nimport EditImageBlock from '@plone/volto/components/manage/Blocks/Image/Edit';\nimport EditLeadImageBlock from '@plone/volto/components/manage/Blocks/LeadImage/Edit';\nimport EditListingBlock from '@plone/volto/components/manage/Blocks/Listing/Edit';\nimport DefaultListingBlockTemplate from '@plone/volto/components/manage/Blocks/Listing/DefaultTemplate';\nimport SummaryListingBlockTemplate from '@plone/volto/components/manage/Blocks/Listing/SummaryTemplate';\nimport EditVideoBlock from '@plone/volto/components/manage/Blocks/Video/Edit';\nimport EditHeroImageLeftBlock from '@plone/volto/components/manage/Blocks/HeroImageLeft/Edit';\nimport EditMapBlock from '@plone/volto/components/manage/Blocks/Maps/Edit';\nimport EditHTMLBlock from '@plone/volto/components/manage/Blocks/HTML/Edit';\nimport EditTableBlock from '@plone/volto/components/manage/Blocks/Table/Edit';\n\nimport descriptionSVG from '@plone/volto/icons/description.svg';\nimport titleSVG from '@plone/volto/icons/text.svg';\nimport textSVG from '@plone/volto/icons/subtext.svg';\nimport cameraSVG from '@plone/volto/icons/camera.svg';\nimport videoSVG from '@plone/volto/icons/videocamera.svg';\nimport globeSVG from '@plone/volto/icons/globe.svg';\nimport codeSVG from '@plone/volto/icons/code.svg';\nimport heroSVG from '@plone/volto/icons/hero.svg';\nimport tableSVG from '@plone/volto/icons/table.svg';\nimport listBulletSVG from '@plone/volto/icons/list-bullet.svg';\nimport tocSVG from '@plone/volto/icons/list-bullet.svg';\nimport searchSVG from '@plone/volto/icons/zoom.svg';\n\nimport ImageGalleryListingBlockTemplate from '@plone/volto/components/manage/Blocks/Listing/ImageGallery';\nimport BlockSettingsSchema from '@plone/volto/components/manage/Blocks/Block/Schema';\nimport TextSettingsSchema from '@plone/volto/components/manage/Blocks/Text/Schema';\nimport ImageSettingsSchema from '@plone/volto/components/manage/Blocks/Image/Schema';\nimport ToCSettingsSchema from '@plone/volto/components/manage/Blocks/ToC/Schema';\n\nimport SearchBlockView from '@plone/volto/components/manage/Blocks/Search/SearchBlockView';\nimport SearchBlockEdit from '@plone/volto/components/manage/Blocks/Search/SearchBlockEdit';\n\nimport RightColumnFacets from '@plone/volto/components/manage/Blocks/Search/layout/RightColumnFacets';\nimport LeftColumnFacets from '@plone/volto/components/manage/Blocks/Search/layout/LeftColumnFacets';\nimport TopSideFacets from '@plone/volto/components/manage/Blocks/Search/layout/TopSideFacets';\nimport {\n  SelectFacet,\n  CheckboxFacet,\n  DateRangeFacet,\n  ToggleFacet,\n  ToggleFacetFilterListEntry,\n  SelectFacetFilterListEntry,\n  DateRangeFacetFilterListEntry,\n} from '@plone/volto/components/manage/Blocks/Search/components';\nimport getListingBlockAsyncData from '@plone/volto/components/manage/Blocks/Listing/getAsyncData';\n\n// block sidebar schemas (not the Dexterity Layout block settings schemas)\nimport HeroImageLeftBlockSchema from '@plone/volto/components/manage/Blocks/HeroImageLeft/schema';\nimport ListingBlockSchema from '@plone/volto/components/manage/Blocks/Listing/schema';\nimport SearchBlockSchema from '@plone/volto/components/manage/Blocks/Search/schema';\n\ndefineMessages({\n  title: {\n    id: 'title',\n    defaultMessage: 'Title',\n  },\n  description: {\n    id: 'description',\n    defaultMessage: 'Description',\n  },\n  text: {\n    id: 'text',\n    defaultMessage: 'Text',\n  },\n  toc: {\n    id: 'toc',\n    defaultMessage: 'Table of Contents',\n  },\n  image: {\n    id: 'image',\n    defaultMessage: 'Image',\n  },\n  video: {\n    id: 'video',\n    defaultMessage: 'Video',\n  },\n  hero: {\n    id: 'hero',\n    defaultMessage: 'Hero',\n  },\n  table: {\n    id: 'table',\n    defaultMessage: 'Table',\n  },\n  maps: {\n    id: 'maps',\n    defaultMessage: 'Maps',\n  },\n  html: {\n    id: 'html',\n    defaultMessage: 'HTML',\n  },\n  leadimage: {\n    id: 'leadimage',\n    defaultMessage: 'Lead Image Field',\n  },\n  listing: {\n    id: 'listing',\n    defaultMessage: 'Listing',\n  },\n  // Groups\n  mostUsed: {\n    id: 'mostUsed',\n    defaultMessage: 'Most used',\n  },\n  media: {\n    id: 'media',\n    defaultMessage: 'Media',\n  },\n  common: {\n    id: 'common',\n    defaultMessage: 'Common',\n  },\n  // Listing block variations\n  summary: {\n    id: 'Summary',\n    defaultMessage: 'Summary',\n  },\n  imageGallery: {\n    id: 'Image gallery',\n    defaultMessage: 'Image gallery',\n  },\n  // Search block variations\n  facetsRightSide: {\n    id: 'Facets on right side',\n    defaultMessage: 'Facets on right side',\n  },\n  facetsLeftSide: {\n    id: 'Facets on left side',\n    defaultMessage: 'Facets on left side',\n  },\n  facetsTopSide: {\n    id: 'Facets on top',\n    defaultMessage: 'Facets on top',\n  },\n});\n\nconst groupBlocksOrder = [\n  { id: 'mostUsed', title: 'Most used' },\n  { id: 'text', title: 'Text' },\n  { id: 'media', title: 'Media' },\n  { id: 'common', title: 'Common' },\n];\n\nconst blocksConfig = {\n  title: {\n    id: 'title',\n    title: 'Title',\n    icon: titleSVG,\n    group: 'text',\n    view: ViewTitleBlock,\n    edit: EditTitleBlock,\n    schema: BlockSettingsSchema,\n    restricted: ({ properties, block }) =>\n      properties.blocks_layout?.items?.find(\n        (uid) => properties.blocks?.[uid]?.['@type'] === block.id,\n      ),\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    sidebarTab: 0,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n  },\n  description: {\n    id: 'description',\n    title: 'Description',\n    icon: descriptionSVG,\n    group: 'text',\n    view: ViewDescriptionBlock,\n    edit: EditDescriptionBlock,\n    schema: BlockSettingsSchema,\n    restricted: true,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    sidebarTab: 0,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n  },\n  text: {\n    id: 'text',\n    title: 'Text',\n    icon: textSVG,\n    group: 'text',\n    view: ViewTextBlock,\n    edit: EditTextBlock,\n    schema: TextSettingsSchema,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    sidebarTab: 0,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n    blockHasValue: (data) => {\n      const isEmpty =\n        !data.text ||\n        (data.text?.blocks?.length === 1 && data.text.blocks[0].text === '');\n      return !isEmpty;\n    },\n  },\n  image: {\n    id: 'image',\n    title: 'Image',\n    icon: cameraSVG,\n    group: 'media',\n    view: ViewImageBlock,\n    edit: EditImageBlock,\n    schema: ImageSettingsSchema,\n    restricted: false,\n    mostUsed: true,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n  },\n  leadimage: {\n    id: 'leadimage',\n    title: 'Lead Image Field',\n    icon: cameraSVG,\n    group: 'media',\n    view: ViewLeadImageBlock,\n    edit: EditLeadImageBlock,\n    schema: BlockSettingsSchema,\n    restricted: ({ properties }) => !properties.hasOwnProperty('image'),\n    mostUsed: false,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n  },\n  listing: {\n    id: 'listing',\n    title: 'Listing',\n    icon: listBulletSVG,\n    group: 'common',\n    view: ViewListingBlock,\n    edit: EditListingBlock,\n    schema: BlockSettingsSchema,\n    blockSchema: ListingBlockSchema,\n    restricted: false,\n    mostUsed: true,\n    sidebarTab: 1,\n    showLinkMore: false,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n    variations: [\n      {\n        id: 'default',\n        isDefault: true,\n        title: 'Default',\n        template: DefaultListingBlockTemplate,\n      },\n      {\n        id: 'imageGallery',\n        title: 'Image gallery',\n        template: ImageGalleryListingBlockTemplate,\n      },\n      {\n        id: 'summary',\n        title: 'Summary',\n        template: SummaryListingBlockTemplate,\n      },\n    ],\n    getAsyncData: getListingBlockAsyncData,\n  },\n  video: {\n    id: 'video',\n    title: 'Video',\n    icon: videoSVG,\n    group: 'media',\n    view: ViewVideoBlock,\n    edit: EditVideoBlock,\n    schema: BlockSettingsSchema,\n    restricted: false,\n    mostUsed: true,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n  },\n  toc: {\n    id: 'toc',\n    title: 'Table of Contents',\n    icon: tocSVG,\n    group: 'common',\n    view: ViewToCBlock,\n    edit: EditToCBlock,\n    schema: ToCSettingsSchema,\n    restricted: false,\n    mostUsed: false,\n    sidebarTab: 0,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n  },\n  hero: {\n    id: 'hero',\n    title: 'Hero',\n    icon: heroSVG,\n    group: 'common',\n    view: ViewHeroImageLeftBlock,\n    edit: EditHeroImageLeftBlock,\n    schema: BlockSettingsSchema,\n    blockSchema: HeroImageLeftBlockSchema,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n  },\n\n  maps: {\n    id: 'maps',\n    title: 'Maps',\n    icon: globeSVG,\n    group: 'common',\n    view: ViewMapBlock,\n    edit: EditMapBlock,\n    schema: BlockSettingsSchema,\n    restricted: false,\n    mostUsed: false,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n  },\n  html: {\n    id: 'html',\n    title: 'HTML',\n    icon: codeSVG,\n    group: 'common',\n    view: ViewHTMLBlock,\n    edit: EditHTMLBlock,\n    schema: BlockSettingsSchema,\n    restricted: false,\n    mostUsed: false,\n    sidebarTab: 0,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n  },\n  table: {\n    id: 'table',\n    title: 'Table',\n    icon: tableSVG,\n    group: 'common',\n    view: ViewTableBlock,\n    edit: EditTableBlock,\n    schema: BlockSettingsSchema,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n  },\n  search: {\n    id: 'search',\n    title: 'Search',\n    icon: searchSVG,\n    group: 'common',\n    view: SearchBlockView,\n    edit: SearchBlockEdit,\n    blockSchema: SearchBlockSchema,\n    restricted: false,\n    mostUsed: false,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n    variations: [\n      {\n        id: 'facetsRightSide',\n        title: 'Facets on right side',\n        view: RightColumnFacets,\n        isDefault: true,\n      },\n      {\n        id: 'facetsLeftSide',\n        title: 'Facets on left side',\n        view: LeftColumnFacets,\n        isDefault: false,\n      },\n      {\n        id: 'facetsTopSide',\n        title: 'Facets on top',\n        view: TopSideFacets,\n        isDefault: false,\n      },\n    ],\n    extensions: {\n      facetWidgets: {\n        rewriteOptions: (name, choices) => {\n          return name === 'review_state'\n            ? choices.map((opt) => ({\n                ...opt,\n                label: opt.label.replace(/\\[.+\\]/, '').trim(),\n              }))\n            : choices;\n        },\n        types: [\n          {\n            id: 'selectFacet',\n            title: 'Select',\n            view: SelectFacet,\n            isDefault: true,\n            schemaEnhancer: SelectFacet.schemaEnhancer,\n            stateToValue: SelectFacet.stateToValue,\n            valueToQuery: SelectFacet.valueToQuery,\n            filterListComponent: SelectFacetFilterListEntry,\n          },\n          {\n            id: 'checkboxFacet',\n            title: 'Checkbox',\n            view: CheckboxFacet,\n            isDefault: false,\n            schemaEnhancer: CheckboxFacet.schemaEnhancer,\n            stateToValue: CheckboxFacet.stateToValue,\n            valueToQuery: CheckboxFacet.valueToQuery,\n            filterListComponent: SelectFacetFilterListEntry,\n          },\n          {\n            id: 'daterangeFacet',\n            title: 'Date range',\n            view: DateRangeFacet,\n            isDefault: false,\n            stateToValue: DateRangeFacet.stateToValue,\n            valueToQuery: DateRangeFacet.valueToQuery,\n            filterListComponent: DateRangeFacetFilterListEntry,\n          },\n          {\n            id: 'toggleFacet',\n            title: 'Toggle',\n            view: ToggleFacet,\n            isDefault: false,\n            stateToValue: ToggleFacet.stateToValue,\n            valueToQuery: ToggleFacet.valueToQuery,\n            filterListComponent: ToggleFacetFilterListEntry,\n          },\n        ],\n      },\n    },\n  },\n};\n\nconst requiredBlocks = ['title'];\n\nconst initialBlocks = {};\nconst initialBlocksFocus = {}; //{Document:'title'}\n\nexport {\n  groupBlocksOrder,\n  requiredBlocks,\n  blocksConfig,\n  initialBlocks,\n  initialBlocksFocus,\n};\n","import { PreviewImage } from '@plone/volto/components';\n\nexport const components = {\n  PreviewImage: { component: PreviewImage },\n};\n","import { CaptureConsole } from '@sentry/integrations';\n\nexport const sentryOptions = {\n  /*\n\n  dsn: 'https://key@sentry.io/1',\n  environment: 'production',\n  release: '1.2.3',\n  serverName: 'volto',\n  tags: {\n    site: 'foo.bar',\n    app: 'test_app',\n    logger: 'volto',\n  },\n  extras: {\n    key: 'value',\n  },\n\n  */\n  integrations: [\n    new CaptureConsole({\n      levels: ['error'],\n    }),\n  ],\n};\n","import contentExistingSVG from '@plone/volto/icons/content-existing.svg';\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport calendarSVG from '@plone/volto/icons/calendar.svg';\nimport folderSVG from '@plone/volto/icons/folder.svg';\nimport fileSVG from '@plone/volto/icons/file.svg';\nimport pageSVG from '@plone/volto/icons/page.svg';\nimport imageSVG from '@plone/volto/icons/image.svg';\n\nexport const contentIcons = {\n  Document: pageSVG,\n  Folder: folderSVG,\n  'News Item': contentExistingSVG,\n  Event: calendarSVG,\n  Image: imageSVG,\n  File: fileSVG,\n  Link: linkSVG,\n};\n","import contentSVG from '@plone/volto/icons/content.svg';\nimport calendarSVG from '@plone/volto/icons/calendar.svg';\nimport languageSVG from '@plone/volto/icons/language.svg';\nimport emailSVG from '@plone/volto/icons/email.svg';\nimport navSVG from '@plone/volto/icons/nav.svg';\nimport worldSVG from '@plone/volto/icons/world.svg';\nimport zoomSVG from '@plone/volto/icons/zoom.svg';\nimport megaphoneSVG from '@plone/volto/icons/megaphone.svg';\nimport editingSVG from '@plone/volto/icons/editing.svg';\nimport imageSVG from '@plone/volto/icons/image.svg';\nimport codeSVG from '@plone/volto/icons/code.svg';\nimport discussionSVG from '@plone/volto/icons/discussion.svg';\nimport securitySVG from '@plone/volto/icons/security.svg';\nimport groupSVG from '@plone/volto/icons/group.svg';\nimport userSVG from '@plone/volto/icons/user.svg';\nimport addonSVG from '@plone/volto/icons/add-on.svg';\nimport settingsSVG from '@plone/volto/icons/settings.svg';\n\nexport const controlPanelsIcons = {\n  default: settingsSVG,\n  'dexterity-types': contentSVG,\n  'date-and-time': calendarSVG,\n  language: languageSVG,\n  mail: emailSVG,\n  navigation: navSVG,\n  site: worldSVG,\n  search: zoomSVG,\n  socialmedia: megaphoneSVG,\n  editing: editingSVG,\n  imaging: imageSVG,\n  markup: codeSVG,\n  'moderate-comments': discussionSVG,\n  security: securitySVG,\n  users: userSVG,\n  groups: groupSVG,\n  addons: addonSVG,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { isEmpty } from 'lodash';\nimport UniversalLink from '@plone/volto/components/manage/UniversalLink/UniversalLink';\n\nconst styles = {\n  code: {\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 16,\n    padding: 2,\n  },\n  codeBlock: {\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 16,\n    padding: 20,\n  },\n};\n\nconst addBreaklinesInline = (children) => {\n  if (typeof children[0] == 'string') {\n    const s = children[0];\n\n    if (s.split('\\n').length > 1) {\n      return s.split('\\n').map((child, index) => (\n        <React.Fragment key={child + index}>\n          {child}\n          {child?.length > 0 && <br />}\n        </React.Fragment>\n      ));\n    }\n  }\n  return children;\n};\n\n// Inline (not block) styles\nconst inline = {\n  BOLD: (children, { key }) => (\n    <strong key={key}>{addBreaklinesInline(children)}</strong>\n  ),\n  ITALIC: (children, { key }) => (\n    <em key={key}>{addBreaklinesInline(children)}</em>\n  ),\n  UNDERLINE: (children, { key }) => (\n    <u key={key}>{addBreaklinesInline(children)}</u>\n  ),\n  CODE: (children, { key }) => (\n    <span key={key} style={styles.code}>\n      {children}\n    </span>\n  ),\n};\n\nconst addBreaklines = (children) =>\n  children.map((child) => {\n    return child[1].map((child) => [\n      <React.Fragment key={child}>\n        {child}\n        <br />\n      </React.Fragment>,\n    ]);\n  });\n\nconst splitBySoftLines = (children) =>\n  children.map((child) => {\n    return child.map((item) => {\n      if (Array.isArray(item)) {\n        return item[0].split('\\n');\n      }\n      return item;\n    });\n  });\n\n// splitSoftLines for <li> tag\nconst splitSoftLinesOfLists = (children) =>\n  children.map((child, index) => {\n    return (\n      <li key={index}>\n        {child.map((subchild) => {\n          if (Array.isArray(subchild)) {\n            return subchild.map((subchildren) => {\n              if (typeof subchildren === 'string') {\n                const last = subchildren.split('\\n').length - 1;\n                return subchildren.split('\\n').map((item, index) => (\n                  <React.Fragment key={index}>\n                    {item}\n                    {index !== last && <br />}\n                  </React.Fragment>\n                ));\n              } else {\n                return subchildren;\n              }\n            });\n          } else {\n            return subchild;\n          }\n        })}\n      </li>\n    );\n  });\n\n// Returns how the default lists should be rendered\nconst getList = (ordered) => (children, { depth, keys }) =>\n  ordered ? (\n    <ol key={keys[0]} keys={keys} depth={depth}>\n      {splitSoftLinesOfLists(children)}\n    </ol>\n  ) : (\n    <ul key={keys[0]} keys={keys} depth={depth}>\n      {splitSoftLinesOfLists(children)}\n    </ul>\n  );\n\n// Special function to deal with list clones\n/*const getSpecialList = type => (children, { depth, keys }) => (\n  <ul key={keys[0]} keys={keys} depth={depth} className={type}>\n    {children.map((child, i) => (\n      <li key={keys[i]} className={`${type}-item`}>\n        {child}\n      </li>\n    ))}\n  </ul>\n);\n*/\n\n// Original recommended way to deal with atomics, this does not work with IMAGE\n// const getAtomic = (children, { data, keys }) =>\n//   data.map((item, i) => <div key={keys[i]} {...data[i]} />);\n\nconst processChildren = (children, keys) => {\n  const processedChildren = children.map((chunks) =>\n    chunks.map((child, index) => {\n      if (Array.isArray(child)) {\n        // If it's empty is a blank paragraph, we want to add a <br /> in it\n        if (isEmpty(child)) {\n          return <br key={index} />;\n        }\n        return child.map((subchild, index) => {\n          if (typeof subchild === 'string') {\n            const last = subchild.split('\\n').length - 1;\n            return subchild.split('\\n').map((item, index) => (\n              <React.Fragment key={index}>\n                {item}\n                {index !== last && <br />}\n              </React.Fragment>\n            ));\n          } else {\n            return subchild;\n          }\n        });\n      } else {\n        return child;\n      }\n    }),\n  );\n  return processedChildren.map(\n    (chunk, index) => chunk && <p key={keys[index]}>{chunk}</p>,\n  );\n};\n/**\n * Note that children can be maped to render a list or do other cool stuff\n */\nconst blocks = {\n  unstyled: (children, { keys }) => {\n    return processChildren(children, keys);\n  },\n  atomic: (children) => children[0],\n  blockquote: (children, { keys }) => (\n    <blockquote key={keys[0]}>\n      {addBreaklines(splitBySoftLines(children))}\n    </blockquote>\n  ),\n  'header-one': (children, { keys }) =>\n    children.map((child, i) => <h1 key={keys[i]}>{child}</h1>),\n  'header-two': (children, { keys }) =>\n    children.map((child, i) => (\n      <h2 id={keys[i]} key={keys[i]}>\n        {child}\n      </h2>\n    )),\n  'header-three': (children, { keys }) =>\n    children.map((child, i) => (\n      <h3 id={keys[i]} key={keys[i]}>\n        {child}\n      </h3>\n    )),\n  'header-four': (children, { keys }) =>\n    children.map((child, i) => (\n      <h4 id={keys[i]} key={keys[i]}>\n        {child}\n      </h4>\n    )),\n  'header-five': (children, { keys }) =>\n    children.map((child, i) => (\n      <h5 id={keys[i]} key={keys[i]}>\n        {child}\n      </h5>\n    )),\n  'header-six': (children, { keys }) =>\n    children.map((child, i) => (\n      <h6 id={keys[i]} key={keys[i]}>\n        {child}\n      </h6>\n    )),\n  'code-block': (children, { keys }) => (\n    <pre key={keys[0]} style={styles.codeBlock}>\n      {addBreaklines(children)}\n    </pre>\n  ),\n  'unordered-list-item': getList(),\n  'ordered-list-item': getList(true),\n  callout: (children, { keys }) =>\n    children.map((child, i) => (\n      <p key={keys[i]} className=\"callout\">\n        {child}\n      </p>\n    )),\n};\n\nconst LinkEntity = connect((state) => ({\n  token: state.userSession.token,\n}))(({ token, key, url, target, targetUrl, download, children }) => {\n  const to = token ? url : targetUrl || url;\n\n  return (\n    <UniversalLink\n      href={to}\n      openLinkInNewTab={target === '_blank' || undefined}\n      download={download}\n    >\n      {children}\n    </UniversalLink>\n  );\n});\n\nconst entities = {\n  LINK: (children, props, { key }) => (\n    <LinkEntity key={key} {...props}>\n      {children}\n    </LinkEntity>\n  ),\n\n  IMAGE: (children, entity, { key }) => (\n    <img key={key} src={entity.src} alt={entity.alt} />\n  ),\n};\n\nexport const options = {\n  cleanup: false,\n  // joinOutput: true,\n};\n\nconst renderers = {\n  inline,\n  blocks,\n  entities,\n};\n\nexport default renderers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isInternalURL, flattenToAppURL } from '@plone/volto/helpers';\n\nconst propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  entityKey: PropTypes.string,\n  getEditorState: PropTypes.func.isRequired,\n  target: PropTypes.string,\n};\n\nconst Link = ({ children, className, entityKey, getEditorState, target }) => {\n  const entity = getEditorState().getCurrentContent().getEntity(entityKey);\n  const entityData = entity ? entity.get('data') : undefined;\n  const href = (entityData && entityData.url) || undefined;\n\n  return (\n    <a\n      className={className}\n      title={href}\n      href={isInternalURL(href) ? flattenToAppURL(href) : href}\n      target={target}\n      rel=\"noopener noreferrer\"\n    >\n      {children}\n    </a>\n  );\n};\n\nLink.propTypes = propTypes;\nLink.defaultProps = {\n  className: null,\n  entityKey: null,\n  target: null,\n};\nexport default Link;\n","export default ({ draftJs }) => ({\n  createLinkAtSelection(editorState, url) {\n    const contentState = editorState\n      .getCurrentContent()\n      .createEntity('LINK', 'MUTABLE', { url });\n    const entityKey = contentState.getLastCreatedEntityKey();\n    const withLink = draftJs.RichUtils.toggleLink(\n      editorState,\n      editorState.getSelection(),\n      entityKey,\n    );\n    return draftJs.EditorState.forceSelection(\n      withLink,\n      editorState.getSelection(),\n    );\n  },\n\n  removeLinkAtSelection(editorState) {\n    const selection = editorState.getSelection();\n    return draftJs.RichUtils.toggleLink(editorState, selection, null);\n  },\n\n  getCurrentEntityKey(editorState) {\n    const selection = editorState.getSelection();\n    const anchorKey = selection.getAnchorKey();\n    const contentState = editorState.getCurrentContent();\n    const anchorBlock = contentState.getBlockForKey(anchorKey);\n    const index = selection.isBackward\n      ? selection.focusOffset\n      : selection.anchorOffset;\n\n    return anchorBlock.getEntityAt(index);\n  },\n\n  getCurrentEntity(editorState) {\n    const contentState = editorState.getCurrentContent();\n    const entityKey = this.getCurrentEntityKey(editorState);\n    return entityKey ? contentState.getEntity(entityKey) : null;\n  },\n\n  hasEntity(editorState, entityType) {\n    const entity = this.getCurrentEntity(editorState);\n    return entity && entity.getType() === entityType;\n  },\n});\n","/**\n * Add link form.\n * @module components/manage/AnchorPlugin/components/LinkButton/AddLinkForm\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\n\n// import unionClassNames from 'union-class-names';\nimport cx from 'classnames';\nimport {\n  addAppURL,\n  isInternalURL,\n  flattenToAppURL,\n  URLUtils,\n} from '@plone/volto/helpers';\n\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nimport { Input, Form, Button } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\n\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport { withRouter } from 'react-router';\n\nimport { Icon } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  placeholder: {\n    id: 'Enter URL or select an item',\n    defaultMessage: 'Enter URL or select an item',\n  },\n});\n\n/**\n * Add link form class.\n * @class AddLinkForm\n * @extends Component\n */\nclass AddLinkForm extends Component {\n  static propTypes = {\n    onChangeValue: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onOverrideContent: PropTypes.func.isRequired,\n    theme: PropTypes.objectOf(PropTypes.any).isRequired,\n    openObjectBrowser: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    placeholder: 'Enter URL or select an item',\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs AddLinkForm\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: isInternalURL(props.data.url)\n        ? flattenToAppURL(props.data.url)\n        : props.data.url || '',\n      isInvalid: false,\n    };\n    this.onRef = this.onRef.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    setTimeout(() => this.input.focus(), 50);\n    document.addEventListener('mousedown', this.handleClickOutside, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside, false);\n  }\n\n  handleClickOutside = (e) => {\n    if (\n      this.linkFormContainer.current &&\n      doesNodeContainClick(this.linkFormContainer.current, e)\n    )\n      return;\n    if (this.linkFormContainer.current && this.props.isObjectBrowserOpen)\n      return;\n    this.onClose();\n  };\n\n  /**\n   * Ref handler\n   * @method onRef\n   * @param {Object} node Node\n   * @returns {undefined}\n   */\n  onRef(node) {\n    this.input = node;\n  }\n\n  linkFormContainer = React.createRef();\n\n  /**\n   * Change handler\n   * @method onChange\n   * @param {Object} value Value\n   * @returns {undefined}\n   */\n  onChange(value, clear) {\n    let nextState = { value };\n    if (!clear) {\n      if (\n        this.state.isInvalid &&\n        URLUtils.isUrl(URLUtils.normalizeUrl(value))\n      ) {\n        nextState.isInvalid = false;\n      }\n\n      if (isInternalURL(value)) {\n        nextState = { value: flattenToAppURL(value) };\n      }\n    }\n    this.setState(nextState);\n\n    if (clear) this.props.onClear();\n  }\n\n  /**\n   * Select item handler\n   * @method onSelectItem\n   * @param {string} e event\n   * @param {string} url Url\n   * @returns {undefined}\n   */\n  onSelectItem = (e, url) => {\n    e.preventDefault();\n    this.setState({\n      value: url,\n      isInvalid: false,\n    });\n    this.props.onChangeValue(addAppURL(url));\n  };\n\n  /**\n   * Clear handler\n   * @method clear\n   * @param {Object} value Value\n   * @returns {undefined}\n   */\n  clear() {\n    const nextState = { value: '' };\n    this.setState(nextState);\n\n    this.props.onClear();\n  }\n\n  /**\n   * Close handler\n   * @method onClose\n   * @returns {undefined}\n   */\n  onClose = () => this.props.onOverrideContent(undefined);\n\n  /**\n   * Keydown handler\n   * @method onKeyDown\n   * @param {Object} e Event object\n   * @returns {undefined}\n   */\n  onKeyDown(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      e.stopPropagation();\n      this.onSubmit();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      this.onClose();\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @returns {undefined}\n   */\n  onSubmit() {\n    let { value: url } = this.state;\n\n    const checkedURL = URLUtils.checkAndNormalizeUrl(url);\n    url = checkedURL.url;\n    if (!checkedURL.isValid) {\n      this.setState({ isInvalid: true });\n      return;\n    }\n\n    const editorStateUrl = isInternalURL(url) ? addAppURL(url) : url;\n\n    this.props.onChangeValue(editorStateUrl);\n    this.onClose();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { value, isInvalid } = this.state;\n    const className = isInvalid\n      ? cx(\n          'ui input editor-link',\n          'input-anchorlink-theme',\n          'input-anchorlink-theme-Invalid',\n        )\n      : cx('ui input editor-link', 'input-anchorlink-theme');\n\n    return (\n      <div className=\"link-form-container\" ref={this.linkFormContainer}>\n        <div\n          style={{ marginLeft: '5px', display: 'flex', alignItems: 'center' }}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 36 36\"\n            fill=\"#B8B2C8\"\n          >\n            <g fillRule=\"evenodd\">\n              <path d=\"M27.1318,7.333 C24.4028,4.604 19.9618,4.604 17.2328,7.333 L12.9898,11.576 C11.8428,12.723 11.1288,14.248 10.9778,15.871 C10.8228,17.541 11.2708,19.211 12.2378,20.576 C12.4818,20.919 12.7278,21.213 12.9888,21.475 C13.7848,22.271 14.7778,22.868 15.8608,23.202 C16.5498,23.415 17.2548,23.519 17.9518,23.518 C19.7808,23.518 21.5598,22.804 22.8888,21.475 L23.9498,20.414 L22.5358,19 L21.4748,20.061 C20.1648,21.371 18.2388,21.842 16.4498,21.291 C15.6668,21.049 14.9778,20.635 14.4038,20.061 C14.2218,19.879 14.0478,19.668 13.8698,19.418 C13.1778,18.443 12.8588,17.249 12.9688,16.056 C13.0768,14.896 13.5868,13.808 14.4038,12.99 L18.6468,8.747 C20.5958,6.798 23.7688,6.798 25.7178,8.747 C26.6568,9.687 27.1748,10.942 27.1748,12.283 C27.1748,13.623 26.6568,14.878 25.7178,15.818 L27.1318,17.232 C28.4488,15.915 29.1748,14.157 29.1748,12.283 C29.1748,10.408 28.4488,8.65 27.1318,7.333\" />\n              <path d=\"M25.0107,16.5254 C24.2147,15.7294 23.2217,15.1324 22.1387,14.7984 C19.6417,14.0284 16.9477,14.6894 15.1107,16.5254 L14.0507,17.5864 L15.4647,19.0004 L16.5247,17.9394 C17.8357,16.6294 19.7587,16.1554 21.5497,16.7094 C22.3337,16.9514 23.0217,17.3644 23.5957,17.9394 C23.7777,18.1214 23.9527,18.3314 24.1307,18.5824 C24.8217,19.5564 25.1417,20.7514 25.0317,21.9444 C24.9237,23.1034 24.4137,24.1924 23.5957,25.0104 L19.3537,29.2534 C17.4047,31.2024 14.2317,31.2024 12.2817,29.2534 C11.3427,28.3134 10.8247,27.0574 10.8247,25.7174 C10.8247,24.3774 11.3427,23.1214 12.2817,22.1824 L10.8677,20.7684 C9.5507,22.0854 8.8247,23.8424 8.8247,25.7174 C8.8247,27.5924 9.5507,29.3504 10.8677,30.6674 C12.2327,32.0314 14.0257,32.7134 15.8177,32.7134 C17.6107,32.7134 19.4027,32.0314 20.7677,30.6674 L25.0107,26.4244 C26.1567,25.2774 26.8717,23.7524 27.0227,22.1294 C27.1777,20.4594 26.7297,18.7894 25.7617,17.4244 C25.5177,17.0814 25.2717,16.7874 25.0107,16.5254\" />\n            </g>\n          </svg>\n          <Form.Field inline>\n            <div className=\"wrapper\">\n              <Input\n                className={className}\n                id={`field-link`}\n                name=\"link\"\n                value={value || ''}\n                onChange={({ target }) => this.onChange(target.value)}\n                placeholder={this.props.intl.formatMessage(\n                  messages.placeholder,\n                )}\n                onKeyDown={this.onKeyDown}\n                ref={this.onRef}\n              />\n              {value.length > 0 ? (\n                <Button.Group>\n                  <Button\n                    basic\n                    className=\"cancel\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      this.clear();\n                    }}\n                  >\n                    <Icon name={clearSVG} size=\"24px\" />\n                  </Button>\n                </Button.Group>\n              ) : (\n                <Button.Group>\n                  <Button\n                    basic\n                    icon\n                    onClick={(e) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      this.props.openObjectBrowser({\n                        mode: 'link',\n                        overlay: true,\n                        onSelectItem: (url) => {\n                          this.onChange(url);\n                          this.onSubmit();\n                        },\n                      });\n                    }}\n                  >\n                    <Icon name={navTreeSVG} size=\"24px\" />\n                  </Button>\n                </Button.Group>\n              )}\n              <Button.Group>\n                <Button\n                  basic\n                  primary\n                  disabled={!value.length > 0}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    this.onSubmit();\n                  }}\n                >\n                  <Icon name={aheadSVG} size=\"24px\" />\n                </Button>\n              </Button.Group>\n            </div>\n          </Form.Field>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default compose(injectIntl, withRouter, withObjectBrowser)(AddLinkForm);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport EditorUtils from '../../utils/EditorUtils';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport AddLinkForm from '@plone/volto/components/manage/AnchorPlugin/components/LinkButton/AddLinkForm';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\n\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport unlinkSVG from '@plone/volto/icons/unlink.svg';\n\n// import unionClassNames from 'union-class-names';\n//import EditorUtils from 'draft-js-plugins-utils';\n\n/**\n * Add link form class.\n * @class LinkButton\n * @extends Component\n */\nclass LinkButton extends Component {\n  static propTypes = {\n    placeholder: PropTypes.string,\n    theme: PropTypes.shape({}).isRequired,\n    ownTheme: PropTypes.shape({}).isRequired,\n    onRemoveLinkAtSelection: PropTypes.func.isRequired,\n    onOverrideContent: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.DraftEditorUtils = props.draftJsPluginsUtils.default;\n    this.EditorUtils = EditorUtils(props);\n  }\n\n  static defaultProps = {\n    placeholder: '',\n  };\n\n  onMouseDown = (event) => {\n    event.preventDefault();\n  };\n\n  onAddLinkClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const { ownTheme, placeholder, onOverrideContent } = this.props;\n    const link = this.EditorUtils.getCurrentEntity(\n      this.props.getEditorState(),\n    )?.getData()?.url;\n\n    const content = (props) => (\n      <AddLinkForm\n        {...props}\n        placeholder={placeholder}\n        theme={ownTheme}\n        block=\"draft-js\"\n        data={{ url: link || '' }}\n        onChangeBlock={() => {}}\n        onClear={() => {\n          this.props.setEditorState(\n            this.DraftEditorUtils.removeLinkAtSelection(\n              this.props.getEditorState(),\n            ),\n          );\n        }}\n        onChangeValue={(url) => {\n          this.props.setEditorState(\n            this.DraftEditorUtils.createLinkAtSelection(\n              this.props.getEditorState(),\n              url,\n            ),\n          );\n        }}\n      />\n    );\n    onOverrideContent(content);\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { theme } = this.props;\n    const hasLinkSelected = this.EditorUtils.hasEntity(\n      this.props.getEditorState(),\n      'LINK',\n    );\n    const className = hasLinkSelected\n      ? cx(theme.button, theme.active)\n      : theme.button;\n\n    return (\n      <div\n        className={theme.buttonWrapper}\n        onMouseDown={this.onMouseDown}\n        role=\"presentation\"\n      >\n        <button\n          className={className}\n          onClick={\n            this.onAddLinkClick\n            // hasLinkSelected\n            //   ? () =>\n            //       onRemoveLinkAtSelection(\n            //         this.props.setEditorState,\n            //         this.props.getEditorState,\n            //       )\n            //   : this.onAddLinkClick\n          }\n          type=\"button\"\n        >\n          {!hasLinkSelected ? (\n            <Icon name={linkSVG} size=\"24px\" />\n          ) : (\n            <Icon name={unlinkSVG} size=\"24px\" />\n          )}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default injectLazyLibs(['draftJs', 'draftJsPluginsUtils'])(LinkButton);\n","export const matchesEntityType = (type) => type === 'LINK';\n\n/**\n *\n *\n * @export strategy\n * @param {*} contentBlock contentBlock\n * @param {*} cb cb\n * @param {*} contentState contentState\n * @returns {*} string\n */\nexport default function strategy(contentBlock, cb, contentState) {\n  if (!contentState) return;\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity();\n    return (\n      entityKey !== null &&\n      matchesEntityType(contentState.getEntity(entityKey).getType())\n    );\n  }, cb);\n}\n","import decorateComponentWithProps from 'decorate-component-with-props';\n\nimport DefaultLink from './components/Link';\nimport LinkButton from './components/LinkButton';\nimport linkStrategy, { matchesEntityType } from './linkStrategy';\n\nfunction unboundRemoveEntity(editorState) {\n  const contentState = editorState.getCurrentContent();\n  const selectionState = editorState.getSelection();\n  const startKey = selectionState.getStartKey();\n  const contentBlock = contentState.getBlockForKey(startKey);\n  const startOffset = selectionState.getStartOffset();\n  const entity = contentBlock.getEntityAt(startOffset);\n\n  if (!entity) {\n    return editorState;\n  }\n\n  let entitySelection = null;\n\n  contentBlock.findEntityRanges(\n    (character) => character.getEntity() === entity,\n    (start, end) => {\n      entitySelection = selectionState.merge({\n        anchorOffset: start,\n        focusOffset: end,\n        isBackward: false,\n      });\n    },\n  );\n\n  const newContentState = this.Modifier.applyEntity(\n    contentState,\n    entitySelection,\n    null,\n  );\n\n  const newEditorState = this.EditorState.push(\n    editorState,\n    newContentState,\n    'apply-entity',\n  );\n\n  return newEditorState;\n}\n\nexport default (config = {}) => {\n  // ToDo: Get rif of the remainings of having the original CSS modules\n  const defaultTheme = {};\n\n  const {\n    theme = defaultTheme,\n    placeholder,\n    Link,\n    linkTarget,\n    libraries,\n  } = config;\n\n  const removeEntity = unboundRemoveEntity.bind(libraries);\n\n  return {\n    decorators: [\n      {\n        strategy: linkStrategy,\n        matchesEntityType,\n        component:\n          Link ||\n          decorateComponentWithProps(DefaultLink, {\n            className: 'link-anchorlink-theme',\n            target: linkTarget,\n          }),\n      },\n    ],\n\n    LinkButton: decorateComponentWithProps(LinkButton, {\n      ownTheme: theme,\n      placeholder,\n      onRemoveLinkAtSelection: (setEditorState, getEditorState) =>\n        setEditorState(removeEntity(getEditorState())),\n    }),\n  };\n};\n","import createLinkPlugin from '@plone/volto/components/manage/AnchorPlugin';\n\nimport Styles from './Styles';\n\nconst breakOutOptions = {\n  doubleBreakoutBlocks: [\n    'unordered-list-item',\n    'ordered-list-item',\n    'code-block',\n  ],\n  breakoutBlocks: [\n    'header-one',\n    'header-two',\n    'header-three',\n    'highlight',\n    'blockquote',\n    'callout',\n  ],\n};\n\n//const linkDetectionPlugin = createLinkDetectionPlugin();\n\nconst plugins = (props) => {\n  const { draftJsInlineToolbarPlugin, draftJsBlockBreakoutPlugin } = props;\n  const { Separator } = draftJsInlineToolbarPlugin;\n  const blockBreakoutPlugin = draftJsBlockBreakoutPlugin.default(\n    breakOutOptions,\n  );\n\n  const linkPlugin = createLinkPlugin({ libraries: props });\n\n  const buttons = Styles(props);\n  const {\n    BoldButton,\n    ItalicButton,\n    HeadlineTwoButton,\n    HeadlineThreeButton,\n    UnorderedListButton,\n    OrderedListButton,\n    BlockquoteButton,\n    CalloutButton,\n  } = buttons;\n\n  const inlineToolbarButtons = [\n    BoldButton,\n    ItalicButton,\n    linkPlugin.LinkButton,\n    Separator,\n    HeadlineTwoButton,\n    HeadlineThreeButton,\n    UnorderedListButton,\n    OrderedListButton,\n    BlockquoteButton,\n    CalloutButton,\n  ];\n\n  return { inlineToolbarButtons, plugins: [linkPlugin, blockBreakoutPlugin] }; //linkDetectionPlugin\n};\n\nexport default plugins;\n","import React from 'react';\n// import createInlineStyleButton from 'draft-js-buttons/lib/utils/createInlineStyleButton';\n// import createBlockStyleButton from 'draft-js-buttons/lib/utils/createBlockStyleButton';\n\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\n\nimport boldSVG from '@plone/volto/icons/bold.svg';\nimport italicSVG from '@plone/volto/icons/italic.svg';\nimport textSVG from '@plone/volto/icons/text.svg';\nimport subtextSVG from '@plone/volto/icons/subtext.svg';\nimport unorderedListSVG from '@plone/volto/icons/list-bullet.svg';\nimport orderedListSVG from '@plone/volto/icons/list-numbered.svg';\nimport blockquoteSVG from '@plone/volto/icons/quote.svg';\nimport calloutSVG from '@plone/volto/icons/megaphone.svg';\n\nexport default function (props) {\n  const createInlineStyleButton = props.draftJsCreateInlineStyleButton.default;\n  const createBlockStyleButton = props.draftJsCreateBlockStyleButton.default;\n\n  const BoldButton = createInlineStyleButton({\n    style: 'BOLD',\n    children: <Icon name={boldSVG} size=\"24px\" />,\n  });\n\n  const ItalicButton = createInlineStyleButton({\n    style: 'ITALIC',\n    children: <Icon name={italicSVG} size=\"24px\" />,\n  });\n\n  const HeadlineTwoButton = createBlockStyleButton({\n    blockType: 'header-two',\n    children: <Icon name={textSVG} size=\"24px\" />,\n  });\n\n  const HeadlineThreeButton = createBlockStyleButton({\n    blockType: 'header-three',\n    children: <Icon name={subtextSVG} size=\"24px\" />,\n  });\n\n  const UnorderedListButton = createBlockStyleButton({\n    blockType: 'unordered-list-item',\n    children: <Icon name={unorderedListSVG} size=\"24px\" />,\n  });\n\n  const OrderedListButton = createBlockStyleButton({\n    blockType: 'ordered-list-item',\n    children: <Icon name={orderedListSVG} size=\"24px\" />,\n  });\n\n  const BlockquoteButton = createBlockStyleButton({\n    blockType: 'blockquote',\n    children: <Icon name={blockquoteSVG} size=\"24px\" />,\n  });\n\n  const CalloutButton = createBlockStyleButton({\n    blockType: 'callout',\n    children: <Icon name={calloutSVG} size=\"24px\" />,\n  });\n  return {\n    BlockquoteButton,\n    BoldButton,\n    CalloutButton,\n    ItalicButton,\n    HeadlineTwoButton,\n    HeadlineThreeButton,\n    OrderedListButton,\n    UnorderedListButton,\n  };\n}\n","export default (element) => {\n  if (element.className === 'callout') {\n    return {\n      type: 'callout',\n    };\n  }\n  return null;\n};\n","import ToHTMLRenderers, { options as ToHTMLOptions } from './ToHTML';\nimport Blocks from './Blocks';\nimport Plugins from './Plugins';\nimport FromHTMLCustomBlockFn from './FromHTML';\n\nexport const richtextEditorSettings = (props) => {\n  const { plugins, inlineToolbarButtons } = Plugins(props);\n  const { extendedBlockRenderMap, blockStyleFn, listBlockTypes } = Blocks(\n    props,\n  );\n\n  return {\n    extendedBlockRenderMap,\n    blockStyleFn: blockStyleFn,\n    listBlockTypes: listBlockTypes,\n    richTextEditorPlugins: plugins,\n    richTextEditorInlineToolbarButtons: inlineToolbarButtons,\n    FromHTMLCustomBlockFn,\n    customStyleMap: null,\n  };\n};\n\nexport const richtextViewSettings = {\n  ToHTMLRenderers,\n  ToHTMLOptions,\n};\n","/*\nThis file is autogenerated. Don't change it directly.\nInstead, change the \"addons\" setting in your package.json file.\n*/\n\nconst projectConfigLoader = require('@root/config');\n\nconst addonsInfo = [];\nexport { addonsInfo };\n\nconst safeWrapper = (func) => (config) => {\n  const res = func(config);\n  if (typeof res === 'undefined') {\n    throw new Error(\"Configuration function doesn't return config\");\n  }\n  return res;\n}\n\nconst projectConfig = (config) => {\n  return typeof projectConfigLoader.default === \"function\" ? projectConfigLoader.default(config) : config;\n}\n\nconst load = (config) => {\n  const addonLoaders = [];\n  if(!addonLoaders.every((el) => typeof el === \"function\")) {\n    throw new TypeError(\n      'Each addon has to provide a function applying its configuration to the projects configuration.',\n    );\n  }\n  return projectConfig(addonLoaders.reduce((acc, apply) => safeWrapper(apply)(acc), config));\n};\nexport default load;\n","/**\n * Config.\n * @module config\n */\nimport { parse as parseUrl } from 'url';\nimport { defaultWidget, widgetMapping } from './Widgets';\nimport {\n  layoutViews,\n  contentTypesViews,\n  defaultView,\n  errorViews,\n} from './Views';\nimport { nonContentRoutes } from './NonContentRoutes';\nimport {\n  groupBlocksOrder,\n  requiredBlocks,\n  blocksConfig,\n  initialBlocks,\n  initialBlocksFocus,\n} from './Blocks';\nimport { components } from './Components';\nimport { loadables } from './Loadables';\n\nimport { sentryOptions } from './Sentry';\nimport { contentIcons } from './ContentIcons';\nimport { controlPanelsIcons } from './ControlPanels';\n\nimport { richtextEditorSettings, richtextViewSettings } from './RichTextEditor';\n\nimport applyAddonConfiguration, { addonsInfo } from 'load-volto-addons';\n\nimport ConfigRegistry from '@plone/volto/registry';\n\nconst host = process.env.HOST || 'localhost';\nconst port = process.env.PORT || '3000';\n\nconst apiPath =\n  process.env.RAZZLE_API_PATH ||\n  (__DEVELOPMENT__ ? `http://${host}:${port}` : '');\n\nconst getServerURL = (url) => {\n  if (!url) return;\n  const apiPathURL = parseUrl(url);\n  return `${apiPathURL.protocol}//${apiPathURL.hostname}${\n    apiPathURL.port ? `:${apiPathURL.port}` : ''\n  }`;\n};\n\n// Sensible defaults for publicURL\n// if RAZZLE_PUBLIC_URL is present, use it\n// if in DEV, use the host/port combination by default\n// if in PROD, assume it's RAZZLE_API_PATH server name (no /api or alikes) or fallback\n// to DEV settings if RAZZLE_API_PATH is not present\nconst publicURL =\n  process.env.RAZZLE_PUBLIC_URL ||\n  (__DEVELOPMENT__\n    ? `http://${host}:${port}`\n    : getServerURL(process.env.RAZZLE_API_PATH) || `http://${host}:${port}`);\n\nconst serverConfig =\n  typeof __SERVER__ !== 'undefined' && __SERVER__\n    ? require('./server').default\n    : {};\n\nlet config = {\n  settings: {\n    host,\n    port,\n    // The URL Volto is going to be served (see sensible defaults above)\n    publicURL,\n    apiPath,\n    apiExpanders: [],\n    // Internal proxy to bypass CORS *while developing*. NOT intended for production use.\n    // In production is recommended you use a Seamless mode deployment using a web server in\n    // front of both the frontend and the backend so you can bypass CORS safely.\n    // https://docs.voltocms.com/deploying/seamless-mode/\n    devProxyToApiPath:\n      process.env.RAZZLE_DEV_PROXY_API_PATH ||\n      process.env.RAZZLE_API_PATH ||\n      'http://localhost:8080/Plone', // Set it to '' for disabling the proxy\n    // proxyRewriteTarget Set it for set a custom target for the proxy or overide the internal VHM rewrite\n    // proxyRewriteTarget: '/VirtualHostBase/http/localhost:8080/Plone/VirtualHostRoot/_vh_api'\n    // proxyRewriteTarget: 'https://myvoltositeinproduction.com'\n    proxyRewriteTarget: process.env.RAZZLE_PROXY_REWRITE_TARGET || undefined,\n    // apiPath: process.env.RAZZLE_API_PATH || 'http://localhost:8000', // for Volto reference\n    // apiPath: process.env.RAZZLE_API_PATH || 'http://localhost:8081/db/web', // for guillotina\n    actions_raising_api_errors: ['GET_CONTENT', 'UPDATE_CONTENT'],\n    internalApiPath: process.env.RAZZLE_INTERNAL_API_PATH || undefined,\n    websockets: process.env.RAZZLE_WEBSOCKETS || false,\n    // TODO: legacyTraverse to be removed when the use of the legacy traverse is deprecated.\n    legacyTraverse: process.env.RAZZLE_LEGACY_TRAVERSE || false,\n    cookieExpires: 15552000, //in seconds. Default is 6 month (15552000)\n    nonContentRoutes,\n    richtextEditorSettings,\n    richtextViewSettings,\n    imageObjects: ['Image'],\n    reservedIds: ['login', 'layout', 'plone', 'zip', 'properties'],\n    downloadableObjects: ['File'], //list of content-types for which the direct download of the file will be carried out if the user is not authenticated\n    viewableInBrowserObjects: [], //ex: ['File']. List of content-types for which the file will be displayed in browser if the user is not authenticated\n    listingPreviewImageField: 'image', // deprecated from Volto 14 onwards\n    notSupportedBrowsers: ['ie'],\n    defaultPageSize: 25,\n    isMultilingual: false,\n    supportedLanguages: ['en'],\n    defaultLanguage: 'en',\n    navDepth: 1,\n    expressMiddleware: serverConfig.expressMiddleware, // BBB\n    defaultBlockType: 'text',\n    verticalFormTabs: false,\n    useEmailAsLogin: false,\n    persistentReducers: ['blocksClipboard'],\n    initialReducersBlacklist: [], // reducers in this list won't be hydrated in windows.__data\n    asyncPropsExtenders: [], // per route asyncConnect customizers\n    sentryOptions: {\n      ...sentryOptions,\n    },\n    contentIcons: contentIcons,\n    loadables,\n    lazyBundles: {\n      cms: [\n        'prettierStandalone',\n        'prettierParserHtml',\n        'prismCore',\n        'toastify',\n        'reactSelect',\n        'reactBeautifulDnd',\n        // 'diffLib',\n      ],\n      draftEditor: [\n        'immutableLib',\n        'draftJs',\n        'draftJsLibIsSoftNewlineEvent',\n        'draftJsFilters',\n        'draftJsInlineToolbarPlugin',\n        'draftJsImportHtml',\n        'draftJsBlockBreakoutPlugin',\n      ],\n    },\n    appExtras: [],\n    maxResponseSize: 2000000000, // This is superagent default (200 mb)\n    serverConfig,\n    storeExtenders: [],\n    showTags: true,\n    controlPanelsIcons,\n    externalRoutes: [\n      // URL to be considered as external\n      // {\n      //   match: {\n      //     path: '/news',\n      //     exact: false,\n      //     strict: false,\n      //   },\n      //   url(payload) {\n      //     return payload.location.pathname;\n      //   },\n      // },\n    ],\n    showSelfRegistration: false,\n    contentMetadataTagsImageField: 'image',\n    hasWorkingCopySupport: false,\n    maxUndoLevels: 200, // undo history size for the main form\n    addonsInfo: addonsInfo,\n  },\n  widgets: {\n    ...widgetMapping,\n    default: defaultWidget,\n  },\n  views: {\n    layoutViews,\n    contentTypesViews,\n    defaultView,\n    errorViews,\n  },\n  blocks: {\n    requiredBlocks,\n    blocksConfig,\n    groupBlocksOrder,\n    initialBlocks,\n    initialBlocksFocus,\n    showEditBlocksInBabelView: false,\n  },\n  addonRoutes: [],\n  addonReducers: {},\n  components,\n};\n\nconfig = applyAddonConfiguration(config);\n\nConfigRegistry.settings = config.settings;\nConfigRegistry.blocks = config.blocks;\nConfigRegistry.views = config.views;\nConfigRegistry.widgets = config.widgets;\nConfigRegistry.addonRoutes = config.addonRoutes;\nConfigRegistry.addonReducers = config.addonReducers;\nConfigRegistry.appExtras = config.appExtras;\nConfigRegistry.components = config.components;\n","export default (props) => {\n  const { draftJs, immutableLib } = props;\n  const { DefaultDraftBlockRenderMap } = draftJs;\n  const { Map } = immutableLib;\n\n  const blockRenderMap = Map({\n    callout: {\n      element: 'p',\n    },\n    unstyled: {\n      element: 'div',\n    },\n  });\n\n  const extendedBlockRenderMap = DefaultDraftBlockRenderMap.merge(\n    blockRenderMap,\n  );\n\n  const blockStyleFn = (contentBlock) => {\n    const type = contentBlock.getType();\n    if (type === 'callout') {\n      return 'callout';\n    }\n    return null;\n  };\n\n  const listBlockTypes = ['unordered-list-item', 'ordered-list-item'];\n\n  return { extendedBlockRenderMap, blockStyleFn, listBlockTypes };\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { isInternalURL } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nconst NavItem = ({ item, lang }) => {\n  const { settings } = config;\n  // The item.url in the root is ''\n  // TODO: make more consistent it everywhere (eg. reducers to return '/' instead of '')\n  if (isInternalURL(item.url) || item.url === '') {\n    return (\n      <NavLink\n        to={item.url === '' ? '/' : item.url}\n        key={item.url}\n        className=\"item\"\n        activeClassName=\"active\"\n        exact={\n          settings.isMultilingual ? item.url === `/${lang}` : item.url === ''\n        }\n      >\n        {item.title}\n      </NavLink>\n    );\n  } else {\n    return (\n      <a\n        href={item.url}\n        key={item.url}\n        className=\"item\"\n        rel=\"noopener noreferrer\"\n      >\n        {item.title}\n      </a>\n    );\n  }\n};\n\nexport default NavItem;\n","import React from 'react';\nimport NavItem from './NavItem';\n\nconst NavItems = ({ items, lang }) => {\n  return (\n    <>\n      {items.map((item) => (\n        <NavItem item={item} lang={lang} key={item.url} />\n      ))}\n    </>\n  );\n};\n\nexport default NavItems;\n","/**\n * Navigation components.\n * @module components/theme/Navigation/Navigation\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Menu } from 'semantic-ui-react';\nimport cx from 'classnames';\nimport { BodyClass, getBaseUrl, hasApiExpander } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport { getNavigation } from '@plone/volto/actions';\nimport { CSSTransition } from 'react-transition-group';\nimport NavItems from '@plone/volto/components/theme/Navigation/NavItems';\n\nconst messages = defineMessages({\n  closeMobileMenu: {\n    id: 'Close menu',\n    defaultMessage: 'Close menu',\n  },\n  openMobileMenu: {\n    id: 'Open menu',\n    defaultMessage: 'Open menu',\n  },\n});\n\n/**\n * Navigation container class.\n * @class Navigation\n * @extends Component\n */\nclass Navigation extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getNavigation: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        url: PropTypes.string,\n      }),\n    ).isRequired,\n    lang: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Navigation\n   */\n  constructor(props) {\n    super(props);\n    this.toggleMobileMenu = this.toggleMobileMenu.bind(this);\n    this.closeMobileMenu = this.closeMobileMenu.bind(this);\n    this.state = {\n      isMobileMenuOpen: false,\n    };\n  }\n\n  componentDidMount() {\n    const { settings } = config;\n    if (!hasApiExpander('navigation', getBaseUrl(this.props.pathname))) {\n      this.props.getNavigation(\n        getBaseUrl(this.props.pathname),\n        settings.navDepth,\n      );\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { settings } = config;\n    if (\n      nextProps.pathname !== this.props.pathname ||\n      nextProps.token !== this.props.token\n    ) {\n      if (!hasApiExpander('navigation', getBaseUrl(this.props.pathname))) {\n        this.props.getNavigation(\n          getBaseUrl(nextProps.pathname),\n          settings.navDepth,\n        );\n      }\n    }\n  }\n\n  /**\n   * Toggle mobile menu's open state\n   * @method toggleMobileMenu\n   * @returns {undefined}\n   */\n  toggleMobileMenu() {\n    this.setState({ isMobileMenuOpen: !this.state.isMobileMenuOpen });\n  }\n\n  /**\n   * Close mobile menu\n   * @method closeMobileMenu\n   * @returns {undefined}\n   */\n  closeMobileMenu() {\n    if (!this.state.isMobileMenuOpen) {\n      return;\n    }\n    this.setState({ isMobileMenuOpen: false });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <nav className=\"navigation\" id=\"navigation\" aria-label=\"navigation\">\n        <div className=\"hamburger-wrapper mobile tablet only\">\n          <button\n            className={cx('hamburger hamburger--spin', {\n              'is-active': this.state.isMobileMenuOpen,\n            })}\n            aria-label={\n              this.state.isMobileMenuOpen\n                ? this.props.intl.formatMessage(messages.closeMobileMenu, {\n                    type: this.props.type,\n                  })\n                : this.props.intl.formatMessage(messages.openMobileMenu, {\n                    type: this.props.type,\n                  })\n            }\n            title={\n              this.state.isMobileMenuOpen\n                ? this.props.intl.formatMessage(messages.closeMobileMenu, {\n                    type: this.props.type,\n                  })\n                : this.props.intl.formatMessage(messages.openMobileMenu, {\n                    type: this.props.type,\n                  })\n            }\n            type=\"button\"\n            onClick={this.toggleMobileMenu}\n          >\n            <span className=\"hamburger-box\">\n              <span className=\"hamburger-inner\" />\n            </span>\n          </button>\n        </div>\n        <Menu\n          stackable\n          pointing\n          secondary\n          className=\"computer large screen widescreen only\"\n          onClick={this.closeMobileMenu}\n        >\n          <NavItems items={this.props.items} lang={this.props.lang} />\n        </Menu>\n        <CSSTransition\n          in={this.state.isMobileMenuOpen}\n          timeout={500}\n          classNames=\"mobile-menu\"\n          unmountOnExit\n        >\n          <div key=\"mobile-menu-key\" className=\"mobile-menu\">\n            <BodyClass className=\"has-mobile-menu-open\" />\n            <div className=\"mobile-menu-nav\">\n              <Menu stackable pointing secondary onClick={this.closeMobileMenu}>\n                <NavItems items={this.props.items} lang={this.props.lang} />\n              </Menu>\n            </div>\n          </div>\n        </CSSTransition>\n        \n      </nav>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      token: state.userSession.token,\n      items: state.navigation.items,\n      lang: state.intl.locale,\n    }),\n    { getNavigation },\n  ),\n)(Navigation);\n","import React, { useEffect, useState } from 'react';\nimport { cloneDeep, uniqBy } from 'lodash';\nimport { useIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { Button, Checkbox } from 'semantic-ui-react';\nimport { messages } from '@plone/volto/helpers';\nimport { listGroups } from '@plone/volto/actions';\nimport { Icon, Toast } from '@plone/volto/components';\nimport { updateGroup, listUsers } from '@plone/volto/actions';\n\nimport add from '@plone/volto/icons/add.svg';\nimport remove from '@plone/volto/icons/remove.svg';\nimport down_key from '@plone/volto/icons/down-key.svg';\n\nconst ListingTemplate = ({\n  query_user, // Show users on y-axis that match\n  query_group, // Show groups on y-axis that match\n  groups_filter, // show members of these groups\n  add_joined_groups, // Toggle: show also groups joined by users below\n  many_users,\n  many_groups,\n}) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  const pageSize = 25;\n  const [userLimit, setUserLimit] = useState(pageSize);\n\n  // y axis\n  let items = useSelector((state) => state.users.users);\n  let show_users =\n    !many_users ||\n    (many_users && query_user.length > 1) ||\n    (many_users && groups_filter.length > 0); // Stay with '> 0', as these are already groups, not querystring to search for groups.\n  if (show_users) {\n    items.sort(function (a, b) {\n      var labelA =\n        (a.fullname && a.fullname.split(' ').reverse().join(' ')) || a.id;\n      var labelB =\n        (b.fullname && b.fullname.split(' ').reverse().join(' ')) || b.id;\n      if (labelA < labelB) {\n        return -1;\n      }\n      if (labelA > labelB) {\n        return 1;\n      }\n      return 0;\n    });\n  } else {\n    items = [];\n  }\n\n  // x axis\n  let groups = useSelector((state) => state.groups.groups);\n  let show_matrix_options =\n    !many_groups ||\n    (many_groups && query_group.length > 1) ||\n    groups_filter.length > 0 ||\n    add_joined_groups;\n  let matrix_options; // list of Objects (value, label)\n  if (show_matrix_options) {\n    matrix_options =\n      !many_groups || (many_groups && query_group.length > 1)\n        ? cloneDeep(groups)\n        : [];\n    if (add_joined_groups) {\n      items.map((item) => {\n        matrix_options.push(...item.groups.items);\n        return item.groups.items;\n      });\n    }\n    matrix_options = matrix_options.map((group) => ({\n      value: group.id,\n      label: group.title || `${group.id}`,\n    }));\n    if (groups_filter.length > 0) {\n      matrix_options = groups_filter.concat(matrix_options);\n    }\n    matrix_options = uniqBy(matrix_options, (x) => x.value);\n    matrix_options = matrix_options.filter((group) => {\n      return group.value !== 'AuthenticatedUsers';\n    });\n    matrix_options.sort(function (a, b) {\n      var labelA = a.label.toUpperCase();\n      var labelB = b.label.toUpperCase();\n      if (labelA < labelB) {\n        return -1;\n      }\n      if (labelA > labelB) {\n        return 1;\n      }\n      return 0;\n    });\n  } else {\n    matrix_options = [];\n  }\n\n  useEffect(() => {\n    // Get users.\n    if (show_users) {\n      dispatch(\n        listUsers({\n          search: query_user,\n          groups_filter: groups_filter.map((el) => el.value),\n          limit: userLimit,\n        }),\n      );\n    }\n  }, [dispatch, query_user, groups_filter, show_users, userLimit]);\n\n  useEffect(() => {\n    // Get matrix groups.\n    if (show_matrix_options) {\n      dispatch(listGroups(query_group));\n    }\n  }, [dispatch, query_group, show_matrix_options, groups_filter]);\n\n  const onSelectOptionHandler = (item, selectedvalue, checked, singleClick) => {\n    singleClick = singleClick ?? false;\n    let group = selectedvalue.y;\n    let username = selectedvalue.x;\n\n    dispatch(\n      updateGroup(group, {\n        users: {\n          [username]: checked ? true : false,\n        },\n      }),\n    )\n      .then((resp) => {\n        singleClick &&\n          dispatch(\n            listUsers({\n              search: query_user,\n              groups_filter: groups_filter.map((el) => el.value),\n              limit: userLimit,\n            }),\n          );\n      })\n      .then(() => {\n        singleClick &&\n          toast.success(\n            <Toast\n              success\n              title={intl.formatMessage(messages.success)}\n              content=\"Membership updated\"\n            />,\n          );\n      });\n  };\n\n  const onSelectAllHandler = (mtxoption, checked) => {\n    let elements = document.querySelectorAll(`div.checkbox_${mtxoption} input`);\n    let identifier;\n    let usersgroupmapping = {};\n    elements.forEach((element) => {\n      identifier = element.name.split('_-_');\n      usersgroupmapping[identifier[1]] = checked ? true : false;\n    });\n\n    dispatch(\n      updateGroup(identifier[2], {\n        users: usersgroupmapping,\n      }),\n    )\n      .then(() => {\n        dispatch(\n          listUsers({\n            search: query_user,\n            groups_filter: groups_filter.map((el) => el.value),\n            limit: userLimit,\n          }),\n        );\n      })\n      .then(() => {\n        toast.success(\n          <Toast\n            success\n            title={intl.formatMessage(messages.success)}\n            content=\"Membership updated\"\n          />,\n        );\n      });\n  };\n\n  return (\n    <div className=\"administration_matrix\">\n      {matrix_options && matrix_options?.length > 0 && (\n        <div className=\"label-options\">\n          {matrix_options?.map((matrix_option) => (\n            <div\n              className=\"label-options-label inclined\"\n              key={matrix_option.value}\n            >\n              <div>\n                <span className=\"label\">{matrix_option.label}</span>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      <div className=\"items\">\n        {items.length > 0 ? (\n          <>\n            <div className=\"listing-row selectall\" key=\"selectall\">\n              <div className=\"listing-item\">\n                <div />\n                <div className=\"matrix_options\">\n                  {matrix_options?.map((matrix_option) => (\n                    <div key={matrix_option.value}>\n                      <Button\n                        icon\n                        basic\n                        onClick={() =>\n                          onSelectAllHandler(matrix_option.value, true)\n                        }\n                        className=\"add-button\"\n                        aria-label={\n                          intl.formatMessage(messages.addUsersToGroup) +\n                          ` ${matrix_option.label}`\n                        }\n                        title={\n                          intl.formatMessage(messages.addUsersToGroup) +\n                          ` ${matrix_option.label}`\n                        }\n                      >\n                        <Icon\n                          name={add}\n                          size=\"10px\"\n                          className=\"circled\"\n                          color=\"unset\"\n                        />\n                      </Button>\n                      <Button\n                        icon\n                        basic\n                        onClick={() =>\n                          onSelectAllHandler(matrix_option.value, false)\n                        }\n                        className=\"remove-button\"\n                        aria-label={\n                          intl.formatMessage(messages.removeUsersFromGroup) +\n                          ` ${matrix_option.label}`\n                        }\n                        title={\n                          intl.formatMessage(messages.removeUsersFromGroup) +\n                          ` ${matrix_option.label}`\n                        }\n                      >\n                        <Icon\n                          name={remove}\n                          size=\"10px\"\n                          className=\"circled\"\n                          color=\"unset\"\n                        />\n                      </Button>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            <h3>{items.length} users </h3>\n            {items.map((item) => (\n              <div className=\"listing-row\" key={item.id}>\n                <div className=\"listing-item\" key={item['@id']}>\n                  <div>\n                    <h4>\n                      {item.fullname} ({item.id})\n                    </h4>\n                  </div>\n                  <div className=\"matrix_options\">\n                    {matrix_options?.map((matrix_option) => (\n                      <Checkbox\n                        name={`member_-_${item.id}_-_${matrix_option.value}`}\n                        className={`checkbox_${matrix_option.value}`}\n                        key={matrix_option.value}\n                        title={matrix_option.title}\n                        checked={item.groups?.items\n                          ?.map((el) => el.id)\n                          .includes(matrix_option.value)}\n                        onChange={(event, { checked }) => {\n                          onSelectOptionHandler(\n                            item,\n                            { y: matrix_option.value, x: item.id },\n                            checked,\n                            true,\n                          );\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ))}\n            {!(items.length < pageSize) ? (\n              <div className=\"show-more\">\n                <Button\n                  icon\n                  basic\n                  onClick={() => setUserLimit(userLimit + pageSize)}\n                  className=\"show-more-button\"\n                >\n                  <Icon name={down_key} size=\"30px\" />\n                </Button>\n              </div>\n            ) : null}\n          </>\n        ) : (\n          <div>\n            {intl.formatMessage(\n              show_users\n                ? query_user\n                  ? messages.noUserFound\n                  : messages.pleaseSearchOrFilterUsers\n                : messages.pleaseSearchOrFilterUsers,\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default ListingTemplate;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { Checkbox, Form, Input } from 'semantic-ui-react';\n\nimport { isEqual } from 'lodash';\n\nimport { messages } from '@plone/volto/helpers';\nimport { listGroups } from '@plone/volto/actions'; // getRegistry\nimport UserGroupMembershipListing from './UserGroupMembershipListing';\n\nconst UserGroupMembershipMatrix = ({ many_users, many_groups }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  const [query_user, setQuery_user] = useState(''); // Show users matching the search string\n  const [query_group, setQuery_group] = useState(''); // Show groups matching the search string\n  const [query_group_filter, setQuery_group_filter] = useState(''); // Offer groups matching the search string to filter users\n  const [groups_filter, setGroups_filter] = useState([]); // Show users joining these groups.\n  const [add_joined_groups, setAdd_joined_groups] = useState(false);\n\n  let filter_options = useSelector((state) => state.groups.filter_groups);\n  if (filter_options) {\n    filter_options = filter_options.map((group) => ({\n      value: group.id,\n      label: group.title || group.id,\n    }));\n    filter_options.sort(function (a, b) {\n      var labelA = a.label.toUpperCase();\n      var labelB = b.label.toUpperCase();\n      if (labelA < labelB) {\n        return -1;\n      }\n      if (labelA > labelB) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  useEffect(() => {\n    // TODO fetch group for at least query_group_filter.length > 1?\n    if (!many_groups || (many_groups && query_group_filter.length > 1)) {\n      dispatch(listGroups('', query_group_filter));\n    }\n  }, [dispatch, many_groups, query_group_filter]);\n\n  const onReset = (event) => {\n    // event.preventDefault();\n    let element = event.target.querySelector('input');\n    element.value = '';\n    element.focus();\n    let searchtype = element.name;\n    switch (searchtype) {\n      case 'SearchUser':\n        setQuery_user('');\n        break;\n      case 'SearchGroup':\n        setQuery_group('');\n        break;\n      case 'SearchGroupFilter':\n        setQuery_group_filter('');\n        setGroups_filter([]);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onChangeSearchUsers = (event) => {\n    if (many_users || many_groups) {\n      // search only on hitting return key\n      if (event.keyCode === 13) {\n        setQuery_user(event.target.value);\n        event.preventDefault();\n      }\n    } else {\n      setQuery_user(event.target.value);\n    }\n  };\n\n  const onChangeSearchGroups = (event) => {\n    if (many_users || many_groups) {\n      // search only on hitting return key\n      if (event.keyCode === 13) {\n        setQuery_group(event.target.value);\n        event.preventDefault();\n      }\n    } else {\n      setQuery_group(event.target.value);\n    }\n  };\n\n  const onSelectOptionHandler = (filter_option, checked) => {\n    let groups_filter_set_new = [];\n    if (checked) {\n      groups_filter_set_new = new Set([...groups_filter, filter_option]);\n    } else {\n      groups_filter_set_new = groups_filter.filter(\n        (el) => el.value !== filter_option.value,\n      );\n    }\n    if (!isEqual(groups_filter_set_new, new Set(groups_filter))) {\n      setGroups_filter([...groups_filter_set_new]);\n    }\n  };\n  const onToggleJoinedGroups = (checked) => {\n    setAdd_joined_groups(checked);\n  };\n\n  const onChangeSearchGroupsFilter = (event) => {\n    if (many_users || many_groups) {\n      // search only on hitting return key\n      if (event.keyCode === 13) {\n        setQuery_group_filter(event.target.value);\n        event.preventDefault();\n      }\n    } else {\n      setQuery_group_filter(event.target.value);\n    }\n  };\n\n  return (\n    <div className=\"controlpanel_matrix\">\n      <div className=\"controlpanel_search_y\">\n        <Form className=\"search_users\" onSubmit={onReset}>\n          <Form.Field>\n            <Input\n              name=\"SearchUser\"\n              action={{ icon: 'delete' }}\n              placeholder={intl.formatMessage(messages.searchUsers)}\n              onChange={onChangeSearchUsers}\n              onKeyDown={onChangeSearchUsers}\n              id=\"user-search-input\"\n            />\n          </Form.Field>\n        </Form>\n      </div>\n      <div className=\"controlpanel_search_x\">\n        <Form className=\"search_groups\" onSubmit={onReset}>\n          <Form.Field>\n            <Input\n              name=\"SearchGroup\"\n              action={{ icon: 'delete' }}\n              placeholder={intl.formatMessage(messages.searchGroups)}\n              onChange={onChangeSearchGroups}\n              onKeyDown={onChangeSearchGroups}\n              id=\"group-search-input\"\n            />\n          </Form.Field>\n          <Form.Field>\n            <Checkbox\n              name=\"addJoinedGroups\"\n              label={intl.formatMessage(messages.addJoinedGroups)}\n              title={intl.formatMessage(messages.addJoinedGroups)}\n              defaultChecked={false}\n              onChange={(event, { checked }) => {\n                onToggleJoinedGroups(checked);\n              }}\n            />\n          </Form.Field>\n        </Form>\n      </div>\n      <div className=\"controlpanel_filter\">\n        <h3>{intl.formatMessage(messages.filterByGroups)}</h3>\n\n        <Form className=\"search_filter_groups\" onSubmit={onReset}>\n          <Form.Field>\n            <Input\n              name=\"SearchGroupFilter\"\n              action={{ icon: 'delete' }}\n              placeholder={intl.formatMessage(messages.searchGroups)}\n              onChange={onChangeSearchGroupsFilter}\n              onKeyDown={onChangeSearchGroupsFilter}\n              id=\"groupfilter-search-input\"\n            />\n          </Form.Field>\n        </Form>\n\n        {(!many_groups || query_group_filter.length > 1) &&\n          filter_options?.map((filter_option) => (\n            <Checkbox\n              name={`filter_option_${filter_option.value}`}\n              key={filter_option.value}\n              title={filter_option.label}\n              label={filter_option.label}\n              defaultChecked={false}\n              onChange={(event, { checked }) => {\n                onSelectOptionHandler(filter_option, checked);\n              }}\n            />\n          ))}\n      </div>\n      <UserGroupMembershipListing\n        query_user={query_user}\n        query_group={query_group}\n        groups_filter={groups_filter}\n        add_joined_groups={add_joined_groups}\n        many_users={many_users}\n        many_groups={many_groups}\n      />\n    </div>\n  );\n};\n\nexport default UserGroupMembershipMatrix;\n","/**\n * User Control Panel [user group membership management]\n * TODO Enrich with features of user control panel. Then replace user control panel.\n */\nimport React, { useEffect } from 'react';\nimport { find, toNumber } from 'lodash';\nimport { Portal } from 'react-portal';\nimport { useHistory } from 'react-router';\nimport { Link, useLocation } from 'react-router-dom';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container, Segment } from 'semantic-ui-react';\nimport { Helmet, messages } from '@plone/volto/helpers';\nimport {\n  getControlpanel,\n  getSystemInformation,\n  listActions,\n} from '@plone/volto/actions';\nimport { Icon, Toolbar, Unauthorized } from '@plone/volto/components';\nimport { getParentUrl } from '@plone/volto/helpers';\nimport UserGroupMembershipMatrix from '@plone/volto/components/manage/Controlpanels/Users/UserGroupMembershipMatrix';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport settingsSVG from '@plone/volto/icons/settings.svg';\n\nconst UserGroupMembershipPanel = () => {\n  const intl = useIntl();\n  const history = useHistory();\n  const pathname = useLocation().pathname;\n  const dispatch = useDispatch();\n\n  const many_users = useSelector(\n    (state) => state.controlpanels.controlpanel?.data?.many_users,\n  );\n  const many_groups = useSelector(\n    (state) => state.controlpanels.controlpanel?.data?.many_groups,\n  );\n  const systeminformation = useSelector(\n    (state) => state.controlpanels.systeminformation,\n  );\n  const can_use_group_membership_panel = systeminformation\n    ? toNumber(systeminformation?.plone_restapi_version.slice(0, 4)) >= 8.24\n    : false;\n  const actions = useSelector((state) => state.actions?.actions ?? {});\n  const ploneSetupAction = find(actions.user, {\n    id: 'plone_setup',\n  });\n\n  useEffect(() => {\n    dispatch(listActions('/'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getControlpanel('usergroup'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getSystemInformation());\n  }, [dispatch]);\n\n  if (__CLIENT__ && !ploneSetupAction) {\n    return <Unauthorized />;\n  }\n\n  return (\n    <>\n      <Container className=\"users-control-panel\">\n        <Helmet title={intl.formatMessage(messages.usergroupmemberbership)} />\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            {intl.formatMessage(messages.usergroupmemberbership)}\n          </Segment>\n          {can_use_group_membership_panel &&\n          many_users !== undefined &&\n          many_groups !== undefined ? (\n            many_users || many_groups ? (\n              <>\n                <Segment secondary>\n                  <FormattedMessage\n                    id=\"InfoUserGroupSettings\"\n                    defaultMessage=\"You have selected the option 'many users' or 'many groups'. Thus this control panel asks for input to show users and groups. If you want to see users and groups instantaneous, head over to user group settings. See the button on the left.\"\n                  />\n                </Segment>\n                <Segment className=\"usergroupmembership\">\n                  <UserGroupMembershipMatrix\n                    many_users={many_users}\n                    many_groups={many_groups}\n                  />\n                </Segment>\n              </>\n            ) : (\n              <Segment className=\"usergroupmembership\">\n                <UserGroupMembershipMatrix\n                  many_users={many_users}\n                  many_groups={many_groups}\n                />\n              </Segment>\n            )\n          ) : (\n            <Segment secondary className=\"usergroupmembership upgrade-info\">\n              <div>\n                <FormattedMessage\n                  id=\"Please upgrade to plone.restapi >= 8.24.0.\"\n                  defaultMessage=\"Please upgrade to plone.restapi >= 8.24.0.\"\n                />\n              </div>\n            </Segment>\n          )}\n        </Segment.Group>\n      </Container>\n\n      {__CLIENT__ && (\n        <Portal node={document.getElementById('toolbar')}>\n          <Toolbar\n            pathname={pathname}\n            hideDefaultViewButtons\n            inner={\n              <>\n                <Link\n                  className=\"item\"\n                  to=\"#\"\n                  onClick={() => {\n                    history.push(getParentUrl(pathname));\n                  }}\n                >\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                  />\n                </Link>\n                <Link to=\"/controlpanel/usergroup\" className=\"usergroup\">\n                  <Icon\n                    name={settingsSVG}\n                    className=\"circled\"\n                    aria-label={intl.formatMessage(messages.usergroup)}\n                    size=\"30px\"\n                    title={intl.formatMessage(messages.usergroup)}\n                  />\n                </Link>\n              </>\n            }\n          />\n        </Portal>\n      )}\n    </>\n  );\n};\n\nexport default UserGroupMembershipPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'semantic-ui-react';\nimport cx from 'classnames';\nimport { RRule, rrulestr } from 'rrule';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { useSelector } from 'react-redux';\n\nexport const datesForDisplay = (start, end, moment) => {\n  const mStart = moment(start);\n  const mEnd = moment(end);\n  if (!mStart.isValid() || !mEnd.isValid()) {\n    return null;\n  }\n  const sameDay = mStart.isSame(mEnd, 'day');\n  const sameTime = mStart.isSame(mEnd, 'minute');\n  return {\n    sameDay,\n    sameTime,\n    startDate: mStart.format('ll'),\n    startTime: mStart.format('LT'),\n    endDate: mEnd.format('ll'),\n    endTime: mEnd.format('LT'),\n  };\n};\n\nconst When_ = ({ start, end, whole_day, open_end, moment: momentlib }) => {\n  const lang = useSelector((state) => state.intl.locale);\n\n  const moment = momentlib.default;\n  moment.locale(lang);\n\n  const datesInfo = datesForDisplay(start, end, moment);\n  if (!datesInfo) {\n    return;\n  }\n  // TODO I18N INTL\n  return (\n    <p\n      className={cx('event-when', {\n        'same-day': datesInfo.sameDay,\n        'same-time': datesInfo.sameTime,\n        'whole-day': whole_day,\n        'open-end': open_end,\n      })}\n    >\n      {!datesInfo.sameDay ? (\n        <>\n          <span className=\"start\">\n            <span className=\"start-date\">{datesInfo.startDate}</span>\n            {!whole_day && (\n              <>\n                {/* Plone has an optional word based on locale here */}\n                <span> </span>\n                <span className=\"start-time\">{datesInfo.startTime}</span>\n              </>\n            )}\n          </span>\n          {!open_end && (\n            <>\n              &nbsp;to&nbsp;\n              <span className=\"end\">\n                <span className=\"end-date\">{datesInfo.endDate}</span>\n                {!whole_day && (\n                  <>\n                    {/* Plone has an optional word based on locale here */}\n                    <span> </span>\n                    <span className=\"end-time\">{datesInfo.endTime}</span>\n                  </>\n                )}\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          {whole_day && (\n            <span className=\"start-date\">{datesInfo.startDate}</span>\n          )}\n          {open_end && !whole_day && (\n            <>\n              <span className=\"start-date\">{datesInfo.startDate}</span>\n              &nbsp;from&nbsp;\n              <span className=\"start-time\">{datesInfo.startTime}</span>\n            </>\n          )}\n          {!(whole_day || open_end) && (\n            <>\n              <span className=\"start-date\">{datesInfo.startDate}</span>\n              &nbsp;from&nbsp;\n              <span className=\"start-time\">{datesInfo.startTime}</span>\n              &nbsp;to&nbsp;\n              <span className=\"end-time\">{datesInfo.endTime}</span>\n            </>\n          )}\n        </>\n      )}\n    </p>\n  );\n};\n\nexport const When = injectLazyLibs(['moment'])(When_);\n\nWhen.propTypes = {\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string,\n  whole_day: PropTypes.bool,\n  open_end: PropTypes.bool,\n};\n\nexport const Recurrence_ = ({ recurrence, start, moment: momentlib }) => {\n  const moment = momentlib.default;\n  if (recurrence.indexOf('DTSTART') < 0) {\n    var dtstart = RRule.optionsToString({\n      dtstart: new Date(start),\n    });\n    recurrence = dtstart + '\\n' + recurrence;\n  }\n  const rrule = rrulestr(recurrence, { unfold: true, forceset: true });\n\n  return (\n    <List\n      items={rrule\n        .all()\n        .map((date) => datesForDisplay(date, undefined, moment))\n        .map((date) => date.startDate)}\n    />\n  );\n};\nexport const Recurrence = injectLazyLibs(['moment'])(Recurrence_);\n\nRecurrence.propTypes = {\n  recurrence: PropTypes.string.isRequired,\n  start: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Segment, Header, List } from 'semantic-ui-react';\nimport {\n  When,\n  Recurrence,\n} from '@plone/volto/components/theme/View/EventDatesInfo';\nimport { Icon } from '@plone/volto/components';\nimport { expandToBackendURL } from '@plone/volto/helpers';\n\nimport calendarSVG from '@plone/volto/icons/calendar.svg';\n\nconst messages = defineMessages({\n  what: {\n    id: 'event_what',\n    defaultMessage: 'What',\n  },\n  when: {\n    id: 'event_when',\n    defaultMessage: 'When',\n  },\n  allDates: {\n    id: 'event_alldates',\n    defaultMessage: 'All dates',\n  },\n  downloadEvent: {\n    id: 'Download Event',\n    defaultMessage: 'Download Event',\n  },\n  where: {\n    id: 'event_where',\n    defaultMessage: 'Where',\n  },\n  contactName: {\n    id: 'event_contactname',\n    defaultMessage: 'Contact Name',\n  },\n  contactPhone: {\n    id: 'event_contactphone',\n    defaultMessage: 'Contact Phone',\n  },\n  attendees: {\n    id: 'event_attendees',\n    defaultMessage: 'Attendees',\n  },\n  website: {\n    id: 'event_website',\n    defaultMessage: 'Website',\n  },\n  visitWebsite: {\n    id: 'visit_external_website',\n    defaultMessage: 'Visit external website',\n  },\n});\n\nconst EventDetails = ({ content, display_as = 'aside' }) => {\n  const intl = useIntl();\n  return (\n    <Segment\n      as={display_as}\n      {...(display_as === 'aside' ? { floated: 'right' } : {})}\n    >\n      {content.subjects.length > 0 && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.what)}\n          </Header>\n          <List items={content.subjects} />\n        </>\n      )}\n      <Header dividing sub>\n        {intl.formatMessage(messages.when)}\n      </Header>\n      <When\n        start={content.start}\n        end={content.end}\n        whole_day={content.whole_day}\n        open_end={content.open_end}\n      />\n      {content.recurrence && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.allDates)}\n          </Header>\n          <Recurrence recurrence={content.recurrence} start={content.start} />\n        </>\n      )}\n      {content.location && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.where)}\n          </Header>\n          <p>{content.location}</p>\n        </>\n      )}\n      {content.contact_name && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.contactName)}\n          </Header>\n          <p>\n            {content.contact_email ? (\n              <a href={`mailto:${content.contact_email}`}>\n                {content.contact_name}\n              </a>\n            ) : (\n              content.contact_name\n            )}\n          </p>\n        </>\n      )}\n      {content.contact_phone && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.contactPhone)}\n          </Header>\n          <p>{content.contact_phone}</p>\n        </>\n      )}\n      {content.attendees.length > 0 && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.attendees)}\n          </Header>\n          <List items={content.attendees} />\n        </>\n      )}\n      {content.event_url && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.website)}\n          </Header>\n          <p>\n            <a\n              href={content.event_url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {intl.formatMessage(messages.visitWebsite)}\n            </a>\n          </p>\n        </>\n      )}\n      <div className=\"download-event\">\n        <Icon name={calendarSVG} />\n        <a\n          className=\"ics-download\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href={`${expandToBackendURL(content['@id'])}/ics_view`}\n        >\n          {intl.formatMessage(messages.downloadEvent)}\n        </a>\n      </div>\n    </Segment>\n  );\n};\n\nexport default EventDetails;\n","/**\n * Layouts.\n * @module constants/Layouts\n */\n\nexport default {\n  sortable_title: { label: 'Title', type: 'string', sort_on: 'sortable_title' },\n  review_state: { label: 'Review state', type: 'string' },\n  ModificationDate: {\n    label: 'Last modified',\n    type: 'date',\n    sort_on: 'modified',\n  },\n  EffectiveDate: {\n    label: 'Publication date',\n    type: 'date',\n    sort_on: 'effective',\n  },\n  id: { label: 'ID', type: 'string', sort_on: 'id' },\n  ExpirationDate: { label: 'Expiration date', type: 'date' },\n  CreationDate: { label: 'Created on', type: 'date', sort_on: 'created' },\n  Subject: { label: 'Tags', type: 'array' },\n  portal_type: { label: 'Type', type: 'string', sort_on: 'portal_type' },\n  is_folderish: { label: 'Folder', type: 'boolean' },\n  exclude_from_nav: { label: 'Excluded from navigation', type: 'boolean' },\n  getObjSize: { label: 'Object Size', type: 'string' },\n  last_comment_date: { label: 'Last comment date', type: 'date' },\n  total_comments: { label: 'Total comments', type: 'number' },\n  end: { label: 'End Date', type: 'date' },\n  Description: { label: 'Description', type: 'string' },\n  Creator: { label: 'Creator', type: 'string' },\n  location: { label: 'Location', type: 'string' },\n  UID: { label: 'UID', type: 'string' },\n  start: { label: 'Start Date', type: 'date' },\n  Type: { label: 'Type', type: 'string' },\n};\n\nexport const defaultIndexes = [\n  'review_state',\n  'ModificationDate',\n  'EffectiveDate',\n];\n","/**\n * Contents component.\n * @module components/manage/Contents/Contents\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Portal } from 'react-portal';\nimport { Link } from 'react-router-dom';\nimport {\n  Button,\n  Confirm,\n  Container,\n  Dropdown,\n  Menu,\n  Input,\n  Segment,\n  Table,\n  Popup,\n  Loader,\n  Dimmer,\n} from 'semantic-ui-react';\nimport {\n  concat,\n  filter,\n  find,\n  indexOf,\n  keys,\n  map,\n  mapValues,\n  pull,\n} from 'lodash';\nimport move from 'lodash-move';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { asyncConnect } from '@plone/volto/helpers';\n\nimport {\n  searchContent,\n  cut,\n  copy,\n  copyContent,\n  deleteContent,\n  listActions,\n  moveContent,\n  orderContent,\n  sortContent,\n  updateColumnsContent,\n} from '@plone/volto/actions';\nimport Indexes, { defaultIndexes } from '@plone/volto/constants/Indexes';\nimport {\n  ContentsBreadcrumbs,\n  ContentsIndexHeader,\n  ContentsItem,\n  ContentsRenameModal,\n  ContentsUploadModal,\n  ContentsWorkflowModal,\n  ContentsTagsModal,\n  ContentsPropertiesModal,\n  Pagination,\n  Toolbar,\n  Toast,\n  Icon,\n  Unauthorized,\n} from '@plone/volto/components';\n\nimport { Helmet, getBaseUrl } from '@plone/volto/helpers';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport backSVG from '@plone/volto/icons/back.svg';\nimport cutSVG from '@plone/volto/icons/cut.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport copySVG from '@plone/volto/icons/copy.svg';\nimport tagSVG from '@plone/volto/icons/tag.svg';\nimport renameSVG from '@plone/volto/icons/rename.svg';\nimport semaphoreSVG from '@plone/volto/icons/semaphore.svg';\nimport uploadSVG from '@plone/volto/icons/upload.svg';\nimport propertiesSVG from '@plone/volto/icons/properties.svg';\nimport pasteSVG from '@plone/volto/icons/paste.svg';\nimport zoomSVG from '@plone/volto/icons/zoom.svg';\nimport checkboxUncheckedSVG from '@plone/volto/icons/checkbox-unchecked.svg';\nimport checkboxCheckedSVG from '@plone/volto/icons/checkbox-checked.svg';\nimport checkboxIndeterminateSVG from '@plone/volto/icons/checkbox-indeterminate.svg';\nimport configurationSVG from '@plone/volto/icons/configuration-app.svg';\nimport sortDownSVG from '@plone/volto/icons/sort-down.svg';\nimport sortUpSVG from '@plone/volto/icons/sort-up.svg';\nimport downKeySVG from '@plone/volto/icons/down-key.svg';\nimport moreSVG from '@plone/volto/icons/more.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  contents: {\n    id: 'Contents',\n    defaultMessage: 'Contents',\n  },\n  copy: {\n    id: 'Copy',\n    defaultMessage: 'Copy',\n  },\n  cut: {\n    id: 'Cut',\n    defaultMessage: 'Cut',\n  },\n  error: {\n    id: \"You can't paste this content here\",\n    defaultMessage: \"You can't paste this content here\",\n  },\n  delete: {\n    id: 'Delete',\n    defaultMessage: 'Delete',\n  },\n  deleteConfirm: {\n    id: 'Do you really want to delete the following items?',\n    defaultMessage: 'Do you really want to delete the following items?',\n  },\n  deleteError: {\n    id: 'The item could not be deleted.',\n    defaultMessage: 'The item could not be deleted.',\n  },\n  loading: {\n    id: 'loading',\n    defaultMessage: 'Loading',\n  },\n  home: {\n    id: 'Home',\n    defaultMessage: 'Home',\n  },\n  filter: {\n    id: 'Filter…',\n    defaultMessage: 'Filter…',\n  },\n  messageCopied: {\n    id: 'Item(s) copied.',\n    defaultMessage: 'Item(s) copied.',\n  },\n  messageCut: {\n    id: 'Item(s) cut.',\n    defaultMessage: 'Item(s) cut.',\n  },\n  messageUpdate: {\n    id: 'Item(s) has been updated.',\n    defaultMessage: 'Item(s) has been updated.',\n  },\n  messageReorder: {\n    id: 'Item succesfully moved.',\n    defaultMessage: 'Item succesfully moved.',\n  },\n  messagePasted: {\n    id: 'Item(s) pasted.',\n    defaultMessage: 'Item(s) pasted.',\n  },\n  messageWorkflowUpdate: {\n    id: 'Item(s) state has been updated.',\n    defaultMessage: 'Item(s) state has been updated.',\n  },\n  paste: {\n    id: 'Paste',\n    defaultMessage: 'Paste',\n  },\n  properties: {\n    id: 'Properties',\n    defaultMessage: 'Properties',\n  },\n  rearrangeBy: {\n    id: 'Rearrange items by…',\n    defaultMessage: 'Rearrange items by…',\n  },\n  rename: {\n    id: 'Rename',\n    defaultMessage: 'Rename',\n  },\n  select: {\n    id: 'Select…',\n    defaultMessage: 'Select…',\n  },\n  selected: {\n    id: '{count} selected',\n    defaultMessage: '{count} selected',\n  },\n  selectColumns: {\n    id: 'Select columns to show',\n    defaultMessage: 'Select columns to show',\n  },\n  sort: {\n    id: 'sort',\n    defaultMessage: 'sort',\n  },\n  state: {\n    id: 'State',\n    defaultMessage: 'State',\n  },\n  tags: {\n    id: 'Tags',\n    defaultMessage: 'Tags',\n  },\n  upload: {\n    id: 'Upload',\n    defaultMessage: 'Upload',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  publicationDate: {\n    id: 'Publication date',\n    defaultMessage: 'Publication date',\n  },\n  createdOn: {\n    id: 'Created on',\n    defaultMessage: 'Created on',\n  },\n  expirationDate: {\n    id: 'Expiration date',\n    defaultMessage: 'Expiration date',\n  },\n  id: {\n    id: 'ID',\n    defaultMessage: 'ID',\n  },\n  uid: {\n    id: 'UID',\n    defaultMessage: 'UID',\n  },\n  reviewState: {\n    id: 'Review state',\n    defaultMessage: 'Review state',\n  },\n  folder: {\n    id: 'Folder',\n    defaultMessage: 'Folder',\n  },\n  excludedFromNavigation: {\n    id: 'Excluded from navigation',\n    defaultMessage: 'Excluded from navigation',\n  },\n  objectSize: {\n    id: 'Object Size',\n    defaultMessage: 'Object Size',\n  },\n  lastCommentedDate: {\n    id: 'Last comment date',\n    defaultMessage: 'Last comment date',\n  },\n  totalComments: {\n    id: 'Total comments',\n    defaultMessage: 'Total comments',\n  },\n  creator: {\n    id: 'Creator',\n    defaultMessage: 'Creator',\n  },\n  endDate: {\n    id: 'End Date',\n    defaultMessage: 'End Date',\n  },\n  startDate: {\n    id: 'Start Date',\n    defaultMessage: 'Start Date',\n  },\n  all: {\n    id: 'All',\n    defaultMessage: 'All',\n  },\n});\n\n/**\n * Contents class.\n * @class Contents\n * @extends Component\n */\nclass Contents extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    action: PropTypes.string,\n    source: PropTypes.arrayOf(PropTypes.string),\n    searchContent: PropTypes.func.isRequired,\n    cut: PropTypes.func.isRequired,\n    copy: PropTypes.func.isRequired,\n    copyContent: PropTypes.func.isRequired,\n    deleteContent: PropTypes.func.isRequired,\n    moveContent: PropTypes.func.isRequired,\n    orderContent: PropTypes.func.isRequired,\n    sortContent: PropTypes.func.isRequired,\n    updateColumnsContent: PropTypes.func.isRequired,\n    clipboardRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    deleteRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    updateRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    searchRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        '@type': PropTypes.string,\n        title: PropTypes.string,\n        description: PropTypes.string,\n      }),\n    ),\n    breadcrumbs: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        url: PropTypes.string,\n      }),\n    ).isRequired,\n    total: PropTypes.number.isRequired,\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    items: [],\n    action: null,\n    source: null,\n    index: {\n      order: keys(Indexes),\n      values: mapValues(Indexes, (value, key) => ({\n        ...value,\n        selected: indexOf(defaultIndexes, key) !== -1,\n      })),\n      selectedCount: defaultIndexes.length + 1,\n    },\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsComponent\n   */\n  constructor(props) {\n    super(props);\n    this.onDeselect = this.onDeselect.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onSelectAll = this.onSelectAll.bind(this);\n    this.onSelectIndex = this.onSelectIndex.bind(this);\n    this.onSelectNone = this.onSelectNone.bind(this);\n    this.onDeleteOk = this.onDeleteOk.bind(this);\n    this.onDeleteCancel = this.onDeleteCancel.bind(this);\n    this.onUploadOk = this.onUploadOk.bind(this);\n    this.onUploadCancel = this.onUploadCancel.bind(this);\n    this.onRenameOk = this.onRenameOk.bind(this);\n    this.onRenameCancel = this.onRenameCancel.bind(this);\n    this.onTagsOk = this.onTagsOk.bind(this);\n    this.onTagsCancel = this.onTagsCancel.bind(this);\n    this.onPropertiesOk = this.onPropertiesOk.bind(this);\n    this.onPropertiesCancel = this.onPropertiesCancel.bind(this);\n    this.onWorkflowOk = this.onWorkflowOk.bind(this);\n    this.onWorkflowCancel = this.onWorkflowCancel.bind(this);\n    this.onChangeFilter = this.onChangeFilter.bind(this);\n    this.onChangePage = this.onChangePage.bind(this);\n    this.onChangePageSize = this.onChangePageSize.bind(this);\n    this.onOrderIndex = this.onOrderIndex.bind(this);\n    this.onOrderItem = this.onOrderItem.bind(this);\n    this.onSortItems = this.onSortItems.bind(this);\n    this.onMoveToTop = this.onMoveToTop.bind(this);\n    this.onChangeSelected = this.onChangeSelected.bind(this);\n    this.onMoveToBottom = this.onMoveToBottom.bind(this);\n    this.cut = this.cut.bind(this);\n    this.copy = this.copy.bind(this);\n    this.delete = this.delete.bind(this);\n    this.upload = this.upload.bind(this);\n    this.rename = this.rename.bind(this);\n    this.tags = this.tags.bind(this);\n    this.properties = this.properties.bind(this);\n    this.workflow = this.workflow.bind(this);\n    this.paste = this.paste.bind(this);\n    this.fetchContents = this.fetchContents.bind(this);\n    this.orderTimeout = null;\n    this.state = {\n      selected: [],\n      showDelete: false,\n      showUpload: false,\n      showRename: false,\n      showTags: false,\n      showProperties: false,\n      showWorkflow: false,\n      itemsToDelete: [],\n      items: this.props.items,\n      filter: '',\n      currentPage: 0,\n      pageSize: 50,\n      index: this.props.index || {\n        order: keys(Indexes),\n        values: mapValues(Indexes, (value, key) => ({\n          ...value,\n          selected: indexOf(defaultIndexes, key) !== -1,\n        })),\n        selectedCount: defaultIndexes.length + 1,\n      },\n      sort_on: this.props.sort?.on || 'getObjPositionInParent',\n      sort_order: this.props.sort?.order || 'ascending',\n      isClient: false,\n    };\n    this.filterTimeout = null;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.fetchContents();\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      (this.props.clipboardRequest.loading &&\n        nextProps.clipboardRequest.loaded) ||\n      (this.props.deleteRequest.loading && nextProps.deleteRequest.loaded) ||\n      (this.props.updateRequest.loading && nextProps.updateRequest.loaded)\n    ) {\n      this.fetchContents(nextProps.pathname);\n    }\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.toastify.toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.messageUpdate)}\n        />,\n      );\n    }\n    if (this.props.pathname !== nextProps.pathname) {\n      this.setState(\n        {\n          currentPage: 0,\n        },\n        () => this.fetchContents(nextProps.pathname),\n      );\n    }\n    if (this.props.searchRequest.loading && nextProps.searchRequest.loaded) {\n      this.setState({\n        items: nextProps.items,\n      });\n    }\n    if (\n      this.props.clipboardRequest.loading &&\n      nextProps.clipboardRequest.error\n    ) {\n      this.props.toastify.toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.error)}\n          content={this.props.intl.formatMessage(messages.error)}\n        />,\n      );\n    }\n\n    if (\n      this.props.clipboardRequest.loading &&\n      nextProps.clipboardRequest.loaded\n    ) {\n      this.props.toastify.toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.messagePasted)}\n        />,\n      );\n    }\n\n    if (this.props.deleteRequest.loading && nextProps.deleteRequest.error) {\n      this.props.toastify.toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.deleteError)}\n          content={this.props.intl.formatMessage(messages.deleteError)}\n        />,\n      );\n    }\n\n    if (this.props.orderRequest.loading && nextProps.orderRequest.loaded) {\n      this.props.toastify.toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.messageReorder)}\n        />,\n      );\n    }\n  }\n\n  /**\n   * On deselect handler\n   * @method onDeselect\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onDeselect(event, { value }) {\n    this.setState({\n      selected: pull(this.state.selected, value),\n    });\n  }\n\n  /**\n   * On select handler\n   * @method onSelect\n   * @param {object} event Event object\n   * @returns {undefined}\n   */\n  onSelect(event, id) {\n    if (indexOf(this.state.selected, id) === -1) {\n      this.setState({\n        selected: concat(this.state.selected, id),\n      });\n    } else {\n      this.setState({\n        selected: pull(this.state.selected, id),\n      });\n    }\n  }\n\n  /**\n   * On select all handler\n   * @method onSelectAll\n   * @returns {undefined}\n   */\n  onSelectAll() {\n    this.setState({\n      selected: map(this.state.items, (item) => item['@id']),\n    });\n  }\n\n  /**\n   * On select none handler\n   * @method onSelectNone\n   * @returns {undefined}\n   */\n  onSelectNone() {\n    this.setState({\n      selected: [],\n    });\n  }\n\n  /**\n   * On select index\n   * @method onSelectIndex\n   * @param {object} event Event object.\n   * @param {string} value Index value.\n   * @returns {undefined}\n   */\n  onSelectIndex(event, { value }) {\n    let newIndex = {\n      ...this.state.index,\n      selectedCount:\n        this.state.index.selectedCount +\n        (this.state.index.values[value].selected ? -1 : 1),\n      values: mapValues(this.state.index.values, (indexValue, indexKey) => ({\n        ...indexValue,\n        selected:\n          indexKey === value ? !indexValue.selected : indexValue.selected,\n      })),\n    };\n    this.setState({\n      index: newIndex,\n    });\n    this.props.updateColumnsContent(getBaseUrl(this.props.pathname), newIndex);\n  }\n\n  /**\n   * On change filter\n   * @method onChangeFilter\n   * @param {object} event Event object.\n   * @param {string} value Filter value.\n   * @returns {undefined}\n   */\n  onChangeFilter(event, { value }) {\n    const self = this;\n    clearTimeout(self.filterTimeout);\n    this.setState(\n      {\n        filter: value,\n      },\n      () => {\n        self.filterTimeout = setTimeout(() => {\n          self.fetchContents();\n        }, 200);\n      },\n    );\n  }\n\n  /**\n   * On change selected values (Filter)\n   * @method onChangeSelected\n   * @param {object} event Event object.\n   * @param {string} value Filter value.\n   * @returns {undefined}\n   */\n  onChangeSelected(event, { value }) {\n    event.stopPropagation();\n    const { items, selected } = this.state;\n\n    const filteredItems = filter(selected, (selectedItem) =>\n      find(items, (item) => item['@id'] === selectedItem)\n        .title.toLowerCase()\n        .includes(value.toLowerCase()),\n    );\n\n    this.setState({\n      filteredItems,\n    });\n  }\n\n  /**\n   * On change page\n   * @method onChangePage\n   * @param {object} event Event object.\n   * @param {string} value Page value.\n   * @returns {undefined}\n   */\n  onChangePage(event, { value }) {\n    this.setState(\n      {\n        currentPage: value,\n      },\n      () => this.fetchContents(),\n    );\n  }\n\n  /**\n   * On change page size\n   * @method onChangePageSize\n   * @param {object} event Event object.\n   * @param {string} value Page size value.\n   * @returns {undefined}\n   */\n  onChangePageSize(event, { value }) {\n    this.setState(\n      {\n        pageSize: value,\n        currentPage: 0,\n      },\n      () => this.fetchContents(),\n    );\n  }\n\n  /**\n   * On order index\n   * @method onOrderIndex\n   * @param {number} index Index\n   * @param {number} delta Delta\n   * @returns {undefined}\n   */\n  onOrderIndex(index, delta) {\n    this.setState({\n      index: {\n        ...this.state.index,\n        order: move(this.state.index.order, index, index + delta),\n      },\n    });\n    this.props.updateColumnsContent(\n      getBaseUrl(this.props.pathname),\n      this.state.index,\n    );\n  }\n\n  /**\n   * On order item\n   * @method onOrderItem\n   * @param {string} id Item id\n   * @param {number} itemIndex Item index\n   * @param {number} delta Delta\n   * @returns {undefined}\n   */\n  onOrderItem(id, itemIndex, delta, backend) {\n    if (backend) {\n      this.props.orderContent(\n        getBaseUrl(this.props.pathname),\n        id.replace(/^.*\\//, ''),\n        delta,\n      );\n    } else {\n      this.setState({\n        items: move(this.state.items, itemIndex, itemIndex + delta),\n      });\n    }\n  }\n\n  /**\n   * On sort items\n   * @method onSortItems\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n  onSortItems(event, { value }) {\n    const values = value.split('|');\n    this.setState({\n      sort_on: values[0],\n      sort_order: values[1],\n    });\n    this.props.sortContent(\n      getBaseUrl(this.props.pathname),\n      values[0],\n      values[1],\n    );\n  }\n\n  /**\n   * On move to top\n   * @method onMoveToTop\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n  onMoveToTop(event, { value }) {\n    const id = this.state.items[value]['@id'];\n    value = this.state.currentPage * this.state.pageSize + value;\n    this.props.orderContent(\n      getBaseUrl(this.props.pathname),\n      id.replace(/^.*\\//, ''),\n      -value,\n    );\n    this.setState(\n      {\n        currentPage: 0,\n      },\n      () => this.fetchContents(),\n    );\n  }\n\n  /**\n   * On move to bottom\n   * @method onMoveToBottom\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n  onMoveToBottom(event, { value }) {\n    this.onOrderItem(\n      this.state.items[value]['@id'],\n      value,\n      this.state.items.length - 1 - value,\n      false,\n    );\n    this.onOrderItem(\n      this.state.items[value]['@id'],\n      value,\n      this.state.items.length - 1 - value,\n      true,\n    );\n  }\n\n  /**\n   * On delete ok\n   * @method onDeleteOk\n   * @returns {undefined}\n   */\n  onDeleteOk() {\n    this.props.deleteContent(this.state.itemsToDelete);\n    this.setState({\n      showDelete: false,\n      itemsToDelete: [],\n      selected: [],\n    });\n  }\n\n  /**\n   * On delete cancel\n   * @method onDeleteCancel\n   * @returns {undefined}\n   */\n  onDeleteCancel() {\n    this.setState({\n      showDelete: false,\n      itemsToDelete: [],\n    });\n  }\n\n  /**\n   * On upload ok\n   * @method onUploadOk\n   * @returns {undefined}\n   */\n  onUploadOk() {\n    this.fetchContents();\n    this.setState({\n      showUpload: false,\n    });\n  }\n\n  /**\n   * On upload cancel\n   * @method onUploadCancel\n   * @returns {undefined}\n   */\n  onUploadCancel() {\n    this.setState({\n      showUpload: false,\n    });\n  }\n\n  /**\n   * On rename ok\n   * @method onRenameOk\n   * @returns {undefined}\n   */\n  onRenameOk() {\n    this.setState({\n      showRename: false,\n      selected: [],\n    });\n  }\n\n  /**\n   * On rename cancel\n   * @method onRenameCancel\n   * @returns {undefined}\n   */\n  onRenameCancel() {\n    this.setState({\n      showRename: false,\n    });\n  }\n\n  /**\n   * On tags ok\n   * @method onTagsOk\n   * @returns {undefined}\n   */\n  onTagsOk() {\n    this.setState({\n      showTags: false,\n      selected: [],\n    });\n  }\n\n  /**\n   * On tags cancel\n   * @method onTagsCancel\n   * @returns {undefined}\n   */\n  onTagsCancel() {\n    this.setState({\n      showTags: false,\n    });\n  }\n\n  /**\n   * On properties ok\n   * @method onPropertiesOk\n   * @returns {undefined}\n   */\n  onPropertiesOk() {\n    this.setState({\n      showProperties: false,\n      selected: [],\n    });\n  }\n\n  /**\n   * On properties cancel\n   * @method onPropertiesCancel\n   * @returns {undefined}\n   */\n  onPropertiesCancel() {\n    this.setState({\n      showProperties: false,\n    });\n  }\n\n  /**\n   * On workflow ok\n   * @method onWorkflowOk\n   * @returns {undefined}\n   */\n  onWorkflowOk() {\n    this.fetchContents();\n    this.setState({\n      showWorkflow: false,\n      selected: [],\n    });\n    this.props.toastify.toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.messageWorkflowUpdate)}\n      />,\n    );\n  }\n\n  /**\n   * On workflow cancel\n   * @method onWorkflowCancel\n   * @returns {undefined}\n   */\n  onWorkflowCancel() {\n    this.setState({\n      showWorkflow: false,\n    });\n  }\n\n  /**\n   * Get field by id\n   * @method getFieldById\n   * @param {string} id Id of object\n   * @param {string} field Field of object\n   * @returns {string} Field of object\n   */\n  getFieldById(id, field) {\n    const item = find(this.state.items, { '@id': id });\n    return item ? item[field] : '';\n  }\n\n  /**\n   * Fetch contents handler\n   * @method fetchContents\n   * @param {string} pathname Pathname to fetch contents.\n   * @returns {undefined}\n   */\n  fetchContents(pathname) {\n    if (this.state.pageSize === this.props.intl.formatMessage(messages.all)) {\n      //'All'\n      this.props.searchContent(getBaseUrl(pathname || this.props.pathname), {\n        'path.depth': 1,\n        sort_on: this.state.sort_on,\n        sort_order: this.state.sort_order,\n        metadata_fields: '_all',\n        b_size: 100000000,\n        ...(this.state.filter && { SearchableText: `${this.state.filter}*` }),\n      });\n    } else {\n      this.props.searchContent(getBaseUrl(pathname || this.props.pathname), {\n        'path.depth': 1,\n        sort_on: this.state.sort_on,\n        sort_order: this.state.sort_order,\n        metadata_fields: '_all',\n        ...(this.state.filter && { SearchableText: `${this.state.filter}*` }),\n        b_size: this.state.pageSize,\n        b_start: this.state.currentPage * this.state.pageSize,\n      });\n    }\n  }\n\n  /**\n   * Cut handler\n   * @method cut\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n  cut(event, { value }) {\n    this.props.cut(value ? [value] : this.state.selected);\n    this.onSelectNone();\n    this.props.toastify.toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.messageCut)}\n      />,\n    );\n  }\n\n  /**\n   * Copy handler\n   * @method copy\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n  copy(event, { value }) {\n    this.props.copy(value ? [value] : this.state.selected);\n    this.onSelectNone();\n    this.props.toastify.toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.messageCopied)}\n      />,\n    );\n  }\n\n  /**\n   * Delete handler\n   * @method delete\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n  delete(event, { value }) {\n    this.setState({\n      showDelete: true,\n      itemsToDelete: value ? [value] : this.state.selected,\n    });\n  }\n\n  /**\n   * Upload handler\n   * @method upload\n   * @returns {undefined}\n   */\n  upload() {\n    this.setState({\n      showUpload: true,\n    });\n  }\n\n  /**\n   * Rename handler\n   * @method rename\n   * @returns {undefined}\n   */\n  rename() {\n    this.setState({\n      showRename: true,\n    });\n  }\n\n  /**\n   * Tags handler\n   * @method tags\n   * @returns {undefined}\n   */\n  tags() {\n    this.setState({\n      showTags: true,\n    });\n  }\n\n  /**\n   * Properties handler\n   * @method properties\n   * @returns {undefined}\n   */\n  properties() {\n    this.setState({\n      showProperties: true,\n    });\n  }\n\n  /**\n   * Workflow handler\n   * @method workflow\n   * @returns {undefined}\n   */\n  workflow() {\n    this.setState({\n      showWorkflow: true,\n    });\n  }\n\n  /**\n   * Paste handler\n   * @method paste\n   * @returns {undefined}\n   */\n  paste() {\n    if (this.props.action === 'copy') {\n      this.props.copyContent(\n        this.props.source,\n        getBaseUrl(this.props.pathname),\n      );\n    }\n    if (this.props.action === 'cut') {\n      this.props.moveContent(\n        this.props.source,\n        getBaseUrl(this.props.pathname),\n      );\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const selected = this.state.selected.length > 0;\n    const filteredItems = this.state.filteredItems || this.state.selected;\n    const path = getBaseUrl(this.props.pathname);\n    const folderContentsAction = find(this.props.objectActions, {\n      id: 'folderContents',\n    });\n\n    const loading =\n      (this.props.clipboardRequest?.loading &&\n        !this.props.clipboardRequest?.error) ||\n      (this.props.deleteRequest?.loading && !this.props.deleteRequest?.error) ||\n      (this.props.updateRequest?.loading && !this.props.updateRequest?.error) ||\n      (this.props.orderRequest?.loading && !this.props.orderRequest?.error) ||\n      (this.props.searchRequest?.loading && !this.props.searchRequest?.error);\n\n    return this.props.token && this.props.objectActions?.length > 0 ? (\n      <>\n        {folderContentsAction ? (\n          <Container id=\"page-contents\" className=\"folder-contents\">\n            <Dimmer.Dimmable as=\"div\" blurring dimmed={loading}>\n              <Dimmer active={loading} inverted>\n                <Loader indeterminate size=\"massive\">\n                  {this.props.intl.formatMessage(messages.loading)}\n                </Loader>\n              </Dimmer>\n\n              <Helmet\n                title={this.props.intl.formatMessage(messages.contents)}\n              />\n              <div className=\"container\">\n                <article id=\"content\">\n                  <Confirm\n                    open={this.state.showDelete}\n                    header={this.props.intl.formatMessage(\n                      messages.deleteConfirm,\n                    )}\n                    content={\n                      <div className=\"content\">\n                        <ul className=\"content\">\n                          {map(this.state.itemsToDelete, (item) => (\n                            <li key={item}>\n                              {this.getFieldById(item, 'title')}\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    }\n                    onCancel={this.onDeleteCancel}\n                    onConfirm={this.onDeleteOk}\n                    size=\"mini\"\n                  />\n                  <ContentsUploadModal\n                    open={this.state.showUpload}\n                    onCancel={this.onUploadCancel}\n                    onOk={this.onUploadOk}\n                    pathname={getBaseUrl(this.props.pathname)}\n                  />\n                  <ContentsRenameModal\n                    open={this.state.showRename}\n                    onCancel={this.onRenameCancel}\n                    onOk={this.onRenameOk}\n                    items={map(this.state.selected, (item) => ({\n                      url: item,\n                      title: this.getFieldById(item, 'title'),\n                      id: this.getFieldById(item, 'id'),\n                    }))}\n                  />\n                  <ContentsTagsModal\n                    open={this.state.showTags}\n                    onCancel={this.onTagsCancel}\n                    onOk={this.onTagsOk}\n                    items={map(this.state.selected, (item) => ({\n                      url: item,\n                      subjects: this.getFieldById(item, 'Subject'),\n                    }))}\n                  />\n                  <ContentsPropertiesModal\n                    open={this.state.showProperties}\n                    onCancel={this.onPropertiesCancel}\n                    onOk={this.onPropertiesOk}\n                    items={this.state.selected}\n                  />\n                  {this.state.showWorkflow && (\n                    <ContentsWorkflowModal\n                      open={this.state.showWorkflow}\n                      onCancel={this.onWorkflowCancel}\n                      onOk={this.onWorkflowOk}\n                      items={this.state.selected}\n                    />\n                  )}\n                  <section id=\"content-core\">\n                    <Segment.Group raised>\n                      <Menu secondary attached className=\"top-menu\">\n                        <Menu.Menu className=\"top-menu-menu\">\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.upload}\n                                className=\"upload\"\n                              >\n                                <Icon\n                                  name={uploadSVG}\n                                  color=\"#007eb1\"\n                                  size=\"24px\"\n                                  className=\"upload\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.upload,\n                            )}\n                            size=\"mini\"\n                          />\n                        </Menu.Menu>\n                        <Menu.Menu className=\"top-menu-menu\">\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.rename}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={renameSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"rename\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.rename,\n                            )}\n                            size=\"mini\"\n                          />\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.workflow}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={semaphoreSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"semaphore\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.state,\n                            )}\n                            size=\"mini\"\n                          />\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.tags}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={tagSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"tag\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.tags,\n                            )}\n                            size=\"mini\"\n                          />\n\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.properties}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={propertiesSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"properties\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.properties,\n                            )}\n                            size=\"mini\"\n                          />\n                        </Menu.Menu>\n                        <Menu.Menu className=\"top-menu-menu\">\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.cut}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={cutSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"cut\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.cut,\n                            )}\n                            size=\"mini\"\n                          />\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.copy}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={copySVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"copy\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.copy,\n                            )}\n                            size=\"mini\"\n                          />\n\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.paste}\n                                disabled={!this.props.action}\n                              >\n                                <Icon\n                                  name={pasteSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"paste\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.paste,\n                            )}\n                            size=\"mini\"\n                          />\n\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.delete}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={deleteSVG}\n                                  color={selected ? '#e40166' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"delete\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.delete,\n                            )}\n                            size=\"mini\"\n                          />\n                        </Menu.Menu>\n                        <Menu.Menu\n                          position=\"right\"\n                          className=\"top-menu-searchbox\"\n                        >\n                          <div className=\"ui right aligned category search item\">\n                            <Input\n                              type=\"text\"\n                              transparent\n                              placeholder={this.props.intl.formatMessage(\n                                messages.filter,\n                              )}\n                              size=\"small\"\n                              value={this.state.filter}\n                              onChange={this.onChangeFilter}\n                            />\n                            <Icon\n                              name={zoomSVG}\n                              size=\"30px\"\n                              color=\"#007eb1\"\n                              className=\"zoom\"\n                            />\n                            <div className=\"results\" />\n                          </div>\n                        </Menu.Menu>\n                      </Menu>\n                      <Segment\n                        secondary\n                        attached\n                        className=\"contents-breadcrumbs\"\n                      >\n                        <ContentsBreadcrumbs items={this.props.breadcrumbs} />\n                        <Dropdown\n                          item\n                          upward={false}\n                          icon={\n                            <Icon name={moreSVG} size=\"24px\" color=\"#826a6a\" />\n                          }\n                          className=\"right floating selectIndex\"\n                        >\n                          <Dropdown.Menu className=\"left\">\n                            <Dropdown.Header\n                              content={this.props.intl.formatMessage(\n                                messages.selectColumns,\n                              )}\n                            />\n                            <Dropdown.Menu scrolling>\n                              {map(\n                                filter(\n                                  this.state.index.order,\n                                  (index) => index !== 'sortable_title',\n                                ),\n                                (index) => (\n                                  <Dropdown.Item\n                                    key={index}\n                                    value={index}\n                                    onClick={this.onSelectIndex}\n                                    className=\"iconAlign\"\n                                  >\n                                    {this.state.index.values[index].selected ? (\n                                      <Icon\n                                        name={checkboxCheckedSVG}\n                                        size=\"24px\"\n                                        color=\"#007eb1\"\n                                        className={\n                                          this.state.index.values[index].label\n                                        }\n                                      />\n                                    ) : (\n                                      <Icon\n                                        name={checkboxUncheckedSVG}\n                                        className={\n                                          this.state.index.values[index].label\n                                        }\n                                        size=\"24px\"\n                                      />\n                                    )}\n                                    <span>\n                                      {' '}\n                                      {this.props.intl.formatMessage({\n                                        id: this.state.index.values[index]\n                                          .label,\n                                        defaultMessage: this.state.index.values[\n                                          index\n                                        ].label,\n                                      })}\n                                    </span>\n                                  </Dropdown.Item>\n                                ),\n                              )}\n                            </Dropdown.Menu>\n                          </Dropdown.Menu>\n                        </Dropdown>\n                      </Segment>\n                      <div className=\"contents-table-wrapper\">\n                        <Table selectable compact singleLine attached>\n                          <Table.Header>\n                            <Table.Row>\n                              <Table.HeaderCell>\n                                <Dropdown\n                                  item\n                                  upward={false}\n                                  className=\"sort-icon\"\n                                  aria-label={this.props.intl.formatMessage(\n                                    messages.sort,\n                                  )}\n                                  icon={\n                                    <Icon\n                                      name={configurationSVG}\n                                      size=\"24px\"\n                                      color=\"#826a6a\"\n                                      className=\"configuration-svg\"\n                                    />\n                                  }\n                                >\n                                  <Dropdown.Menu>\n                                    <Dropdown.Header\n                                      content={this.props.intl.formatMessage(\n                                        messages.rearrangeBy,\n                                      )}\n                                    />\n                                    {map(\n                                      [\n                                        'id',\n                                        'sortable_title',\n                                        'EffectiveDate',\n                                        'CreationDate',\n                                        'ModificationDate',\n                                        'portal_type',\n                                      ],\n                                      (index) => (\n                                        <Dropdown.Item\n                                          key={index}\n                                          className={`sort_${index} icon-align`}\n                                        >\n                                          <Icon name={downKeySVG} size=\"24px\" />\n                                          <FormattedMessage\n                                            id={Indexes[index].label}\n                                          />\n                                          <Dropdown.Menu>\n                                            <Dropdown.Item\n                                              onClick={this.onSortItems}\n                                              value={`${Indexes[index].sort_on}|ascending`}\n                                              className={`sort_${Indexes[index].sort_on}_ascending icon-align`}\n                                            >\n                                              <Icon\n                                                name={sortDownSVG}\n                                                size=\"24px\"\n                                              />{' '}\n                                              <FormattedMessage\n                                                id=\"Ascending\"\n                                                defaultMessage=\"Ascending\"\n                                              />\n                                            </Dropdown.Item>\n                                            <Dropdown.Item\n                                              onClick={this.onSortItems}\n                                              value={`${Indexes[index].sort_on}|descending`}\n                                              className={`sort_${Indexes[index].sort_on}_descending icon-align`}\n                                            >\n                                              <Icon\n                                                name={sortUpSVG}\n                                                size=\"24px\"\n                                              />{' '}\n                                              <FormattedMessage\n                                                id=\"Descending\"\n                                                defaultMessage=\"Descending\"\n                                              />\n                                            </Dropdown.Item>\n                                          </Dropdown.Menu>\n                                        </Dropdown.Item>\n                                      ),\n                                    )}\n                                  </Dropdown.Menu>\n                                </Dropdown>\n                              </Table.HeaderCell>\n                              <Table.HeaderCell>\n                                <Dropdown\n                                  upward={false}\n                                  trigger={\n                                    <Icon\n                                      name={\n                                        this.state.selected.length === 0\n                                          ? checkboxUncheckedSVG\n                                          : this.state.selected.length ===\n                                            this.state.items.length\n                                          ? checkboxCheckedSVG\n                                          : checkboxIndeterminateSVG\n                                      }\n                                      color={\n                                        this.state.selected.length > 0\n                                          ? '#007eb1'\n                                          : '#826a6a'\n                                      }\n                                      size=\"24px\"\n                                    />\n                                  }\n                                  icon={null}\n                                >\n                                  <Dropdown.Menu>\n                                    <Dropdown.Header\n                                      content={this.props.intl.formatMessage(\n                                        messages.select,\n                                      )}\n                                    />\n                                    <Dropdown.Item onClick={this.onSelectAll}>\n                                      <Icon\n                                        name={checkboxCheckedSVG}\n                                        color=\"#007eb1\"\n                                        size=\"24px\"\n                                      />{' '}\n                                      <FormattedMessage\n                                        id=\"All\"\n                                        defaultMessage=\"All\"\n                                      />\n                                    </Dropdown.Item>\n                                    <Dropdown.Item onClick={this.onSelectNone}>\n                                      <Icon\n                                        name={checkboxUncheckedSVG}\n                                        size=\"24px\"\n                                      />{' '}\n                                      <FormattedMessage\n                                        id=\"None\"\n                                        defaultMessage=\"None\"\n                                      />\n                                    </Dropdown.Item>\n                                    <Dropdown.Divider />\n                                    <Dropdown.Header\n                                      content={this.props.intl.formatMessage(\n                                        messages.selected,\n                                        { count: this.state.selected.length },\n                                      )}\n                                    />\n                                    <Input\n                                      icon={<Icon name={zoomSVG} size=\"24px\" />}\n                                      iconPosition=\"left\"\n                                      className=\"search\"\n                                      placeholder={this.props.intl.formatMessage(\n                                        messages.filter,\n                                      )}\n                                      onChange={this.onChangeSelected}\n                                      onClick={(e) => {\n                                        e.preventDefault();\n                                        e.stopPropagation();\n                                      }}\n                                    />\n                                    <Dropdown.Menu scrolling>\n                                      {map(filteredItems, (item) => (\n                                        <Dropdown.Item\n                                          key={item}\n                                          value={item}\n                                          onClick={this.onDeselect}\n                                        >\n                                          <Icon\n                                            name={deleteSVG}\n                                            color=\"#e40166\"\n                                            size=\"24px\"\n                                          />{' '}\n                                          {this.getFieldById(item, 'title')}\n                                        </Dropdown.Item>\n                                      ))}\n                                    </Dropdown.Menu>\n                                  </Dropdown.Menu>\n                                </Dropdown>\n                              </Table.HeaderCell>\n                              <Table.HeaderCell\n                                width={Math.ceil(\n                                  16 / this.state.index.selectedCount,\n                                )}\n                              >\n                                <FormattedMessage\n                                  id=\"Title\"\n                                  defaultMessage=\"Title\"\n                                />\n                              </Table.HeaderCell>\n                              {map(\n                                this.state.index.order,\n                                (index, order) =>\n                                  this.state.index.values[index].selected && (\n                                    <ContentsIndexHeader\n                                      key={index}\n                                      width={Math.ceil(\n                                        16 / this.state.index.selectedCount,\n                                      )}\n                                      label={\n                                        this.state.index.values[index].label\n                                      }\n                                      order={order}\n                                      onOrderIndex={this.onOrderIndex}\n                                    />\n                                  ),\n                              )}\n                              <Table.HeaderCell textAlign=\"right\">\n                                <FormattedMessage\n                                  id=\"Actions\"\n                                  defaultMessage=\"Actions\"\n                                />\n                              </Table.HeaderCell>\n                            </Table.Row>\n                          </Table.Header>\n                          <Table.Body>\n                            {this.state.items.map((item, order) => (\n                              <ContentsItem\n                                key={item['@id']}\n                                item={item}\n                                order={order}\n                                selected={\n                                  indexOf(this.state.selected, item['@id']) !==\n                                  -1\n                                }\n                                onClick={this.onSelect}\n                                indexes={filter(\n                                  map(this.state.index.order, (index) => ({\n                                    id: index,\n                                    type: this.state.index.values[index].type,\n                                  })),\n                                  (index) =>\n                                    this.state.index.values[index.id].selected,\n                                )}\n                                onCut={this.cut}\n                                onCopy={this.copy}\n                                onDelete={this.delete}\n                                onOrderItem={this.onOrderItem}\n                                onMoveToTop={this.onMoveToTop}\n                                onMoveToBottom={this.onMoveToBottom}\n                              />\n                            ))}\n                          </Table.Body>\n                        </Table>\n                      </div>\n\n                      <div className=\"contents-pagination\">\n                        <Pagination\n                          current={this.state.currentPage}\n                          total={Math.ceil(\n                            this.props.total / this.state.pageSize,\n                          )}\n                          pageSize={this.state.pageSize}\n                          pageSizes={[\n                            50,\n                            this.props.intl.formatMessage(messages.all),\n                          ]}\n                          onChangePage={this.onChangePage}\n                          onChangePageSize={this.onChangePageSize}\n                        />\n                      </div>\n                    </Segment.Group>\n                  </section>\n                </article>\n              </div>\n              {this.state.isClient && (\n                <Portal node={document.getElementById('toolbar')}>\n                  <Toolbar\n                    pathname={this.props.pathname}\n                    inner={\n                      <Link\n                        to={`${path}`}\n                        aria-label={this.props.intl.formatMessage(\n                          messages.back,\n                        )}\n                      >\n                        <Icon\n                          name={backSVG}\n                          className=\"contents circled\"\n                          size=\"30px\"\n                          title={this.props.intl.formatMessage(messages.back)}\n                        />\n                      </Link>\n                    }\n                  />\n                </Portal>\n              )}\n            </Dimmer.Dimmable>\n          </Container>\n        ) : (\n          <Unauthorized staticContext={this.props.staticContext} />\n        )}\n      </>\n    ) : (\n      <Unauthorized staticContext={this.props.staticContext} />\n    );\n  }\n}\n\nconst DragDropConnector = (props) => {\n  const { DragDropContext } = props.reactDnd;\n  const HTML5Backend = props.reactDndHtml5Backend.default;\n\n  const DndConnectedContents = React.useMemo(\n    () => DragDropContext(HTML5Backend)(Contents),\n    [DragDropContext, HTML5Backend],\n  );\n\n  return <DndConnectedContents {...props} />;\n};\n\nexport const __test__ = compose(\n  injectIntl,\n  injectLazyLibs(['toastify', 'reactDnd']),\n  connect(\n    (store, props) => {\n      return {\n        token: store.userSession.token,\n        items: store.search.items,\n        sort: store.content.update.sort,\n        index: store.content.updatecolumns.idx,\n        breadcrumbs: store.breadcrumbs.items,\n        total: store.search.total,\n        searchRequest: {\n          loading: store.search.loading,\n          loaded: store.search.loaded,\n        },\n        pathname: props.location.pathname,\n        action: store.clipboard.action,\n        source: store.clipboard.source,\n        clipboardRequest: store.clipboard.request,\n        deleteRequest: store.content.delete,\n        updateRequest: store.content.update,\n        objectActions: store.actions.actions.object,\n        orderRequest: store.content.order,\n      };\n    },\n    {\n      searchContent,\n      cut,\n      copy,\n      copyContent,\n      deleteContent,\n      listActions,\n      moveContent,\n      orderContent,\n      sortContent,\n      updateColumnsContent,\n    },\n  ),\n)(Contents);\n\nexport default compose(\n  injectIntl,\n  connect(\n    (store, props) => {\n      return {\n        token: store.userSession.token,\n        items: store.search.items,\n        sort: store.content.update.sort,\n        index: store.content.updatecolumns.idx,\n        breadcrumbs: store.breadcrumbs.items,\n        total: store.search.total,\n        searchRequest: {\n          loading: store.search.loading,\n          loaded: store.search.loaded,\n        },\n        pathname: props.location.pathname,\n        action: store.clipboard.action,\n        source: store.clipboard.source,\n        clipboardRequest: store.clipboard.request,\n        deleteRequest: store.content.delete,\n        updateRequest: store.content.update,\n        objectActions: store.actions.actions.object,\n        orderRequest: store.content.order,\n      };\n    },\n    {\n      searchContent,\n      cut,\n      copy,\n      copyContent,\n      deleteContent,\n      listActions,\n      moveContent,\n      orderContent,\n      sortContent,\n      updateColumnsContent,\n    },\n  ),\n  asyncConnect([\n    {\n      key: 'actions',\n      // Dispatch async/await to make the operation syncronous, otherwise it returns\n      // before the promise is resolved\n      promise: async ({ location, store: { dispatch } }) =>\n        await dispatch(listActions(getBaseUrl(location.pathname))),\n    },\n  ]),\n  injectLazyLibs(['toastify', 'reactDnd', 'reactDndHtml5Backend']),\n)(DragDropConnector);\n","/**\n * Layouts.\n * @module constants/Layouts\n */\n\nexport default {\n  album_view: 'Album view',\n  event_listing: 'Event listing',\n  full_view: 'All content',\n  listing_view: 'Listing view',\n  summary_view: 'Summary view',\n  tabular_view: 'Tabular view',\n  layout_view: 'Mosaic layout',\n  document_view: 'Document view',\n};\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport { getSchema, updateContent, getContent } from '@plone/volto/actions';\nimport layouts from '@plone/volto/constants/Layouts';\nimport { getLayoutFieldname } from '@plone/volto/helpers';\nimport { Icon } from '@plone/volto/components';\nimport { FormattedMessage } from 'react-intl';\nimport config from '@plone/volto/registry';\n\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\n\nconst Option = injectLazyLibs('reactSelect')((props) => {\n  const { Option } = props.reactSelect.components;\n  return (\n    <Option {...props}>\n      <div>{props.label}</div>\n      {props.isFocused && !props.isSelected && (\n        <Icon name={checkSVG} size=\"24px\" color=\"#b8c6c8\" />\n      )}\n      {props.isSelected && <Icon name={checkSVG} size=\"24px\" color=\"#007bc1\" />}\n    </Option>\n  );\n});\n\nconst DropdownIndicator = injectLazyLibs('reactSelect')((props) => {\n  const { DropdownIndicator } = props.reactSelect.components;\n  return (\n    <DropdownIndicator {...props}>\n      {props.selectProps.menuIsOpen ? (\n        <Icon name={upSVG} size=\"24px\" color=\"#007bc1\" />\n      ) : (\n        <Icon name={downSVG} size=\"24px\" color=\"#007bc1\" />\n      )}\n    </DropdownIndicator>\n  );\n});\n\nconst selectTheme = (theme) => ({\n  ...theme,\n  borderRadius: 0,\n  colors: {\n    ...theme.colors,\n    primary25: 'hotpink',\n    primary: '#b8c6c8',\n  },\n});\n\nconst customSelectStyles = {\n  control: (styles, state) => ({\n    ...styles,\n    border: 'none',\n    borderBottom: '2px solid #b8c6c8',\n    boxShadow: 'none',\n    borderBottomStyle: state.menuIsOpen ? 'dotted' : 'solid',\n  }),\n  menu: (styles, state) => ({\n    ...styles,\n    top: null,\n    marginTop: 0,\n    boxShadow: 'none',\n    borderBottom: '2px solid #b8c6c8',\n  }),\n  menuList: (styles, state) => ({\n    ...styles,\n    maxHeight: '400px',\n  }),\n  indicatorSeparator: (styles) => ({\n    ...styles,\n    width: null,\n  }),\n  valueContainer: (styles) => ({\n    ...styles,\n    // paddingLeft: 0,\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: null,\n    height: '50px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '14px 12px',\n    color: state.isSelected\n      ? '#007bc1'\n      : state.isFocused\n      ? '#4a4a4a'\n      : 'inherit',\n    ':active': {\n      backgroundColor: null,\n    },\n  }),\n};\n\n/**\n * Display container class.\n * @class Display\n * @extends Component\n */\nclass DisplaySelect extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getSchema: PropTypes.func.isRequired,\n    updateContent: PropTypes.func.isRequired,\n    getContent: PropTypes.func.isRequired,\n    loaded: PropTypes.bool.isRequired,\n    pathname: PropTypes.string.isRequired,\n    layouts: PropTypes.arrayOf(PropTypes.string),\n    layout: PropTypes.string,\n    type: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    layouts: [],\n    layout: '',\n  };\n\n  state = {\n    selectedOption: {\n      value: this.props.layout,\n      label: layouts[this.props.layout] || this.props.layout,\n    },\n  };\n\n  componentDidMount() {\n    this.props.getSchema(this.props.type);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.getSchema(nextProps.type);\n    }\n    if (!this.props.loaded && nextProps.loaded) {\n      this.props.getContent(nextProps.pathname);\n    }\n  }\n\n  /**\n   * On set layout handler\n   * @method setLayout\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  setLayout = (selectedOption) => {\n    this.props.updateContent(this.props.pathname, {\n      layout: selectedOption.value,\n    });\n    this.setState({ selectedOption });\n  };\n\n  selectValue = (option) => (\n    <Fragment>\n      <span className=\"Select-value-label\">{option.label}</span>\n    </Fragment>\n  );\n\n  optionRenderer = (option) => (\n    <Fragment>\n      <span style={{ marginRight: 'auto' }}>{option.label}</span>\n      <Icon name={checkSVG} size=\"24px\" />\n    </Fragment>\n  );\n\n  render() {\n    const { selectedOption } = this.state;\n    const Select = this.props.reactSelect.default;\n\n    return (\n      <>\n        <label htmlFor=\"display-select\">\n          <FormattedMessage id=\"Viewmode\" defaultMessage=\"View\" />\n        </label>\n        <Select\n          name=\"display-select\"\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          options={this.props.layouts\n            .filter(\n              (layout) =>\n                Object.keys(config.views.contentTypesViews).includes(layout) ||\n                Object.keys(config.views.layoutViews).includes(layout),\n            )\n            .map((item) => ({\n              value: item,\n              label: layouts[item] || item,\n            }))}\n          styles={customSelectStyles}\n          theme={selectTheme}\n          components={{ DropdownIndicator, Option }}\n          onChange={this.setLayout}\n          defaultValue={selectedOption}\n          isSearchable={false}\n        />\n      </>\n    );\n  }\n}\n\nexport default compose(\n  injectLazyLibs('reactSelect'),\n  connect(\n    (state) => ({\n      loaded: state.content.update.loaded,\n      layouts: state.schema.schema ? state.schema.schema.layouts : [],\n      layout: state.content.data\n        ? state.content.data[getLayoutFieldname(state.content.data)]\n        : '',\n      layout_fieldname: state.content.data\n        ? getLayoutFieldname(state.content.data)\n        : '',\n      type: state.content.data ? state.content.data['@type'] : '',\n    }),\n    { getSchema, updateContent, getContent },\n  ),\n)(DisplaySelect);\n","/**\n * Layouts.\n * @module constants/Workflows\n */\n\nimport { last, split } from 'lodash';\n\nexport default function getWorkflowMapping(url, current) {\n  const mapping = {\n    published: { value: 'public', label: 'Public', color: '#007bc1', url },\n    publish: { value: 'public', label: 'Public', color: '#007bc1', url },\n    private: { value: 'private', label: 'Private', color: '#ed4033', url },\n    pending: { value: 'pending', label: 'Pending', color: '#f6a808', url },\n    send_back: { value: 'private', label: 'Private', color: '#ed4033', url },\n    retract: { value: 'private', label: 'Private', color: '#ed4033', url },\n    submit: { value: 'review', label: 'Review', color: '#f4e037', url },\n  };\n\n  if (url) {\n    const key = last(split(url, '/'));\n    if (key in mapping) {\n      return mapping[key];\n    }\n\n    return { value: key, label: key, color: '#000', url };\n  }\n\n  if (current in mapping) {\n    return mapping[current];\n  }\n\n  return { value: current, label: current, color: '#000', url };\n}\n","/**\n * Workflow component.\n * @module components/manage/Workflow/Workflow\n */\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { uniqBy } from 'lodash';\nimport { toast } from 'react-toastify';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport getWorkflowMapping from '@plone/volto/constants/Workflows';\nimport { Icon, Toast } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport {\n  getContent,\n  getWorkflow,\n  transitionWorkflow,\n} from '@plone/volto/actions';\n\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\n\nconst messages = defineMessages({\n  messageUpdated: {\n    id: 'Workflow updated.',\n    defaultMessage: 'Workflow updated.',\n  },\n  messageNoWorkflow: {\n    id: 'No workflow',\n    defaultMessage: 'No workflow',\n  },\n});\n\nconst SingleValue = injectLazyLibs('reactSelect')(({ children, ...props }) => {\n  const stateDecorator = {\n    marginLeft: '10px',\n    marginRight: '10px',\n    display: 'inline-block',\n    backgroundColor: props.selectProps.value.color || null,\n    content: ' ',\n    height: '10px',\n    width: '10px',\n    borderRadius: '50%',\n  };\n  const { SingleValue } = props.reactSelect.components;\n  return (\n    <SingleValue {...props}>\n      <span style={stateDecorator} />\n      {children}\n    </SingleValue>\n  );\n});\n\nconst Option = injectLazyLibs('reactSelect')((props) => {\n  const stateDecorator = {\n    marginLeft: '10px',\n    marginRight: '10px',\n    display: 'inline-block',\n    backgroundColor:\n      props.selectProps.value.value === props.data.value\n        ? props.selectProps.value.color\n        : null,\n    content: ' ',\n    height: '10px',\n    width: '10px',\n    borderRadius: '50%',\n    border:\n      props.selectProps.value.value !== props.data.value\n        ? `1px solid ${props.data.color}`\n        : null,\n  };\n\n  const { Option } = props['reactSelect'].components;\n  return (\n    <Option {...props}>\n      <span style={stateDecorator} />\n      <div style={{ marginRight: 'auto' }}>{props.label}</div>\n      {props.isFocused && !props.isSelected && (\n        <Icon name={checkSVG} size=\"24px\" color=\"#b8c6c8\" />\n      )}\n      {props.isSelected && <Icon name={checkSVG} size=\"24px\" color=\"#007bc1\" />}\n    </Option>\n  );\n});\n\nconst DropdownIndicator = injectLazyLibs('reactSelect')((props) => {\n  const { DropdownIndicator } = props.reactSelect.components;\n  return (\n    <DropdownIndicator {...props} data-testid=\"workflow-select-dropdown\">\n      {props.selectProps.menuIsOpen ? (\n        <Icon name={upSVG} size=\"24px\" color=\"#007bc1\" />\n      ) : (\n        <Icon name={downSVG} size=\"24px\" color=\"#007bc1\" />\n      )}\n    </DropdownIndicator>\n  );\n});\n\nconst selectTheme = (theme) => ({\n  ...theme,\n  borderRadius: 0,\n  colors: {\n    ...theme.colors,\n    primary25: 'hotpink',\n    primary: '#b8c6c8',\n  },\n});\n\nconst customSelectStyles = {\n  control: (styles, state) => ({\n    ...styles,\n    border: 'none',\n    borderBottom: '2px solid #b8c6c8',\n    boxShadow: 'none',\n    borderBottomStyle: state.menuIsOpen ? 'dotted' : 'solid',\n  }),\n  menu: (styles, state) => ({\n    ...styles,\n    top: null,\n    marginTop: 0,\n    boxShadow: 'none',\n    borderBottom: '2px solid #b8c6c8',\n  }),\n  indicatorSeparator: (styles) => ({\n    ...styles,\n    width: null,\n  }),\n  valueContainer: (styles) => ({\n    ...styles,\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: null,\n    height: '50px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '14px 12px',\n    color: state.isSelected\n      ? '#007bc1'\n      : state.isFocused\n      ? '#4a4a4a'\n      : 'inherit',\n    ':active': {\n      backgroundColor: null,\n    },\n  }),\n};\n\n/**\n * Workflow container class.\n * @class Workflow\n * @extends Component\n */\nclass Workflow extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getContent: PropTypes.func.isRequired,\n    getWorkflow: PropTypes.func.isRequired,\n    transitionWorkflow: PropTypes.func.isRequired,\n    loaded: PropTypes.bool.isRequired,\n    pathname: PropTypes.string.isRequired,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        review_state: PropTypes.string,\n      }),\n    ),\n    transitions: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        title: PropTypes.string,\n      }),\n    ),\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    history: [],\n    transitions: [],\n  };\n\n  state = {\n    selectedOption: this.props.content.review_state\n      ? getWorkflowMapping(null, this.props.content.review_state)\n      : {},\n  };\n\n  componentDidMount() {\n    this.props.getWorkflow(this.props.pathname);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.getWorkflow(nextProps.pathname);\n    }\n    if (!this.props.loaded && nextProps.loaded) {\n      this.props.getWorkflow(nextProps.pathname);\n      this.props.getContent(nextProps.pathname);\n    }\n  }\n\n  /**\n   * On transition handler\n   * @method transition\n   * @param {string} event Event object\n   * @returns {undefined}\n   */\n  transition = (selectedOption) => {\n    this.props.transitionWorkflow(flattenToAppURL(selectedOption.url));\n    this.setState({ selectedOption });\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.messageUpdated)}\n      />,\n    );\n  };\n\n  selectValue = (option) => {\n    const stateDecorator = {\n      marginLeft: '10px',\n      marginRight: '10px',\n      display: 'inline-block',\n      backgroundColor: option.color || null,\n      content: ' ',\n      height: '10px',\n      width: '10px',\n      borderRadius: '50%',\n    };\n    return (\n      <Fragment>\n        <span style={stateDecorator} />\n        <span className=\"Select-value-label\">{option.label}</span>\n      </Fragment>\n    );\n  };\n\n  optionRenderer = (option) => {\n    const stateDecorator = {\n      marginLeft: '10px',\n      marginRight: '10px',\n      display: 'inline-block',\n      backgroundColor:\n        this.state.selectedOption.value === option.value ? option.color : null,\n      content: ' ',\n      height: '10px',\n      width: '10px',\n      borderRadius: '50%',\n      border:\n        this.state.selectedOption.value !== option.value\n          ? `1px solid ${option.color}`\n          : null,\n    };\n\n    return (\n      <Fragment>\n        <span style={stateDecorator} />\n        <span style={{ marginRight: 'auto' }}>{option.label}</span>\n        <Icon name={checkSVG} size=\"24px\" />\n      </Fragment>\n    );\n  };\n\n  render() {\n    const { selectedOption } = this.state;\n    const { Placeholder } = this.props.reactSelect.components;\n    const Select = this.props.reactSelect.default;\n\n    return (\n      <Fragment>\n        <label htmlFor=\"state-select\">\n          <FormattedMessage id=\"State\" defaultMessage=\"State\" />\n        </label>\n        <Select\n          name=\"state-select\"\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          isDisabled={\n            !this.props.content.review_state ||\n            this.props.transitions.length === 0\n          }\n          options={uniqBy(\n            this.props.transitions.map((transition) =>\n              getWorkflowMapping(transition['@id']),\n            ),\n            'label',\n          ).concat(selectedOption)}\n          styles={customSelectStyles}\n          theme={selectTheme}\n          components={{\n            DropdownIndicator,\n            Placeholder,\n            Option,\n            SingleValue,\n          }}\n          onChange={this.transition}\n          defaultValue={\n            this.props.content.review_state\n              ? selectedOption\n              : {\n                  label: this.props.intl.formatMessage(\n                    messages.messageNoWorkflow,\n                  ),\n                  value: 'noworkflow',\n                }\n          }\n          isSearchable={false}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs(['reactSelect']),\n  connect(\n    (state) => ({\n      loaded: state.workflow.transition.loaded,\n      content: state.content.data,\n      history: state.workflow.history,\n      transitions: state.workflow.transitions,\n    }),\n    { getContent, getWorkflow, transitionWorkflow },\n  ),\n)(Workflow);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Icon } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst StandardWrapper = (props) => {\n  function pull() {\n    props.unloadComponent();\n  }\n\n  return (\n    <div\n      className={cx(`${props.componentName} pastanaga-menu`, {\n        'has-inner-actions': props.hasActions,\n      })}\n      style={{\n        flex: props.theToolbar.current\n          ? `0 0 ${props.theToolbar.current.getBoundingClientRect().width}px`\n          : null,\n      }}\n    >\n      <header className=\"header pulled\">\n        <button onClick={pull}>\n          <Icon name={backSVG} size=\"30px\" />\n        </button>\n        <div className=\"vertical divider\" />\n        <h2>{props.componentTitle || props.componentName}</h2>\n      </header>\n      {props.children}\n    </div>\n  );\n};\n\nStandardWrapper.propTypes = {\n  componentName: PropTypes.string.isRequired,\n  componentTitle: PropTypes.string,\n  unloadComponent: PropTypes.func.isRequired,\n  loadComponent: PropTypes.func.isRequired,\n  closeMenu: PropTypes.func.isRequired,\n  hasActions: PropTypes.bool,\n};\n\nexport default StandardWrapper;\n","/**\n * Toolbar component.\n * @module components/manage/Toolbar/Toolbar\n */\n\nimport React, { Component } from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nimport { withCookies } from 'react-cookie';\nimport { filter, find } from 'lodash';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\n\nimport More from '@plone/volto/components/manage/Toolbar/More';\nimport PersonalTools from '@plone/volto/components/manage/Toolbar/PersonalTools';\nimport Types from '@plone/volto/components/manage/Toolbar/Types';\nimport PersonalInformation from '@plone/volto/components/manage/Preferences/PersonalInformation';\nimport PersonalPreferences from '@plone/volto/components/manage/Preferences/PersonalPreferences';\nimport StandardWrapper from '@plone/volto/components/manage/Toolbar/StandardWrapper';\nimport {\n  getTypes,\n  listActions,\n  setExpandedToolbar,\n  unlockContent,\n} from '@plone/volto/actions';\nimport { Icon } from '@plone/volto/components';\nimport { BodyClass, getBaseUrl, getCookieOptions } from '@plone/volto/helpers';\nimport { Pluggable } from '@plone/volto/components/manage/Pluggable';\n\nimport penSVG from '@plone/volto/icons/pen.svg';\nimport unlockSVG from '@plone/volto/icons/unlock.svg';\nimport folderSVG from '@plone/volto/icons/folder.svg';\nimport addSVG from '@plone/volto/icons/add-document.svg';\nimport moreSVG from '@plone/volto/icons/more.svg';\nimport userSVG from '@plone/volto/icons/user.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  edit: {\n    id: 'Edit',\n    defaultMessage: 'Edit',\n  },\n  contents: {\n    id: 'Contents',\n    defaultMessage: 'Contents',\n  },\n  add: {\n    id: 'Add',\n    defaultMessage: 'Add',\n  },\n  more: {\n    id: 'More',\n    defaultMessage: 'More',\n  },\n  personalTools: {\n    id: 'Personal tools',\n    defaultMessage: 'Personal tools',\n  },\n  shrinkToolbar: {\n    id: 'Shrink toolbar',\n    defaultMessage: 'Shrink toolbar',\n  },\n  personalInformation: {\n    id: 'Personal Information',\n    defaultMessage: 'Personal Information',\n  },\n  personalPreferences: {\n    id: 'Personal Preferences',\n    defaultMessage: 'Personal Preferences',\n  },\n  collection: {\n    id: 'Collection',\n    defaultMessage: 'Collection',\n  },\n  file: {\n    id: 'File',\n    defaultMessage: 'File',\n  },\n  link: {\n    id: 'Link',\n    defaultMessage: 'Link',\n  },\n  newsItem: {\n    id: 'News Item',\n    defaultMessage: 'News Item',\n  },\n  page: {\n    id: 'Page',\n    defaultMessage: 'Page',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  unlock: {\n    id: 'Unlock',\n    defaultMessage: 'Unlock',\n  },\n});\n\nconst toolbarComponents = {\n  personalTools: { component: PersonalTools, wrapper: null },\n  more: { component: More, wrapper: null },\n  types: { component: Types, wrapper: null, contentAsProps: true },\n  profile: {\n    component: PersonalInformation,\n    wrapper: StandardWrapper,\n    wrapperTitle: messages.personalInformation,\n    hideToolbarBody: true,\n  },\n  preferences: {\n    component: PersonalPreferences,\n    wrapper: StandardWrapper,\n    wrapperTitle: messages.personalPreferences,\n    hideToolbarBody: true,\n  },\n};\n\n/**\n * Toolbar container class.\n * @class Toolbar\n * @extends Component\n */\nclass Toolbar extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    actions: PropTypes.shape({\n      object: PropTypes.arrayOf(PropTypes.object),\n      object_buttons: PropTypes.arrayOf(PropTypes.object),\n      user: PropTypes.arrayOf(PropTypes.object),\n    }),\n    token: PropTypes.string,\n    userId: PropTypes.string,\n    pathname: PropTypes.string.isRequired,\n    content: PropTypes.shape({\n      '@type': PropTypes.string,\n      is_folderish: PropTypes.bool,\n      review_state: PropTypes.string,\n    }),\n    getTypes: PropTypes.func.isRequired,\n    types: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        addable: PropTypes.bool,\n        title: PropTypes.string,\n      }),\n    ),\n    listActions: PropTypes.func.isRequired,\n    unlockContent: PropTypes.func,\n    unlockRequest: PropTypes.objectOf(PropTypes.any),\n    inner: PropTypes.element.isRequired,\n    hideDefaultViewButtons: PropTypes.bool,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    actions: null,\n    token: null,\n    userId: null,\n    content: null,\n    hideDefaultViewButtons: false,\n    types: [],\n  };\n\n  toolbarWindow = React.createRef();\n\n  constructor(props) {\n    super(props);\n    const { cookies } = props;\n    this.state = {\n      expanded: cookies.get('toolbar_expanded') !== 'false',\n      showMenu: false,\n      menuStyle: {},\n      menuComponents: [],\n      loadedComponents: [],\n      hideToolbarBody: false,\n    };\n  }\n\n  /**\n   * Component will mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.listActions(getBaseUrl(this.props.pathname));\n    this.props.getTypes(getBaseUrl(this.props.pathname));\n    this.props.setExpandedToolbar(this.state.expanded);\n    document.addEventListener('mousedown', this.handleClickOutside, false);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.listActions(getBaseUrl(nextProps.pathname));\n      this.props.getTypes(getBaseUrl(nextProps.pathname));\n    }\n\n    // Unlock\n    if (this.props.unlockRequest.loading && nextProps.unlockRequest.loaded) {\n      this.props.listActions(getBaseUrl(nextProps.pathname));\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillUnmount\n   * @returns {undefined}\n   */\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside, false);\n  }\n\n  handleShrink = () => {\n    const { cookies } = this.props;\n    cookies.set('toolbar_expanded', !this.state.expanded, getCookieOptions());\n    this.setState(\n      (state) => ({ expanded: !state.expanded }),\n      () => this.props.setExpandedToolbar(this.state.expanded),\n    );\n  };\n\n  closeMenu = () =>\n    this.setState(() => ({ showMenu: false, loadedComponents: [] }));\n\n  loadComponent = (type) => {\n    const { loadedComponents } = this.state;\n    if (!this.state.loadedComponents.includes(type)) {\n      this.setState({\n        loadedComponents: [...loadedComponents, type],\n        hideToolbarBody: toolbarComponents[type].hideToolbarBody || false,\n      });\n    }\n  };\n\n  unloadComponent = () => {\n    this.setState((state) => ({\n      loadedComponents: state.loadedComponents.slice(0, -1),\n      hideToolbarBody:\n        toolbarComponents[\n          state.loadedComponents[state.loadedComponents.length - 2]\n        ].hideToolbarBody || false,\n    }));\n  };\n\n  toggleMenu = (e, selector) => {\n    if (this.state.showMenu) {\n      this.closeMenu();\n      return;\n    }\n    // PersonalTools always shows at bottom\n    if (selector === 'personalTools') {\n      this.setState((state) => ({\n        showMenu: !state.showMenu,\n        menuStyle: { bottom: 0 },\n      }));\n    } else {\n      this.setState((state) => ({\n        showMenu: !state.showMenu,\n        menuStyle: { top: 0 },\n      }));\n    }\n    this.loadComponent(selector);\n  };\n\n  handleClickOutside = (e) => {\n    if (this.pusher && doesNodeContainClick(this.pusher, e)) return;\n    this.closeMenu();\n  };\n\n  unlock = (e) => {\n    this.props.unlockContent(getBaseUrl(this.props.pathname), true);\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const path = getBaseUrl(this.props.pathname);\n    const lock = this.props.content?.lock;\n    const unlockAction =\n      lock?.locked && lock?.stealable && lock?.creator !== this.props.userId;\n    const editAction =\n      !unlockAction && find(this.props.actions.object, { id: 'edit' });\n    const folderContentsAction = find(this.props.actions.object, {\n      id: 'folderContents',\n    });\n    const { expanded } = this.state;\n\n    return (\n      this.props.token && (\n        <>\n          <BodyClass\n            className={expanded ? 'has-toolbar' : 'has-toolbar-collapsed'}\n          />\n          <div\n            style={this.state.menuStyle}\n            className={\n              this.state.showMenu ? 'toolbar-content show' : 'toolbar-content'\n            }\n            ref={this.toolbarWindow}\n          >\n            {this.state.showMenu && (\n              // This sets the scroll locker in the body tag in mobile\n              <BodyClass className=\"has-toolbar-menu-open\" />\n            )}\n            <div\n              className=\"pusher-puller\"\n              ref={(node) => (this.pusher = node)}\n              style={{\n                transform: this.toolbarWindow.current\n                  ? `translateX(-${\n                      (this.state.loadedComponents.length - 1) *\n                      this.toolbarWindow.current.getBoundingClientRect().width\n                    }px)`\n                  : null,\n              }}\n            >\n              {this.state.loadedComponents.map((component, index) =>\n                (() => {\n                  const ToolbarComponent =\n                    toolbarComponents[component].component;\n                  const WrapperComponent = toolbarComponents[component].wrapper;\n                  const haveActions =\n                    toolbarComponents[component].hideToolbarBody;\n                  const title =\n                    toolbarComponents[component].wrapperTitle &&\n                    this.props.intl.formatMessage(\n                      toolbarComponents[component].wrapperTitle,\n                    );\n                  if (WrapperComponent) {\n                    return (\n                      <WrapperComponent\n                        componentName={component}\n                        componentTitle={title}\n                        pathname={this.props.pathname}\n                        loadComponent={this.loadComponent}\n                        unloadComponent={this.unloadComponent}\n                        componentIndex={index}\n                        theToolbar={this.toolbarWindow}\n                        key={`personalToolsComponent-${index}`}\n                        closeMenu={this.closeMenu}\n                        hasActions={haveActions}\n                      >\n                        <ToolbarComponent\n                          pathname={this.props.pathname}\n                          loadComponent={this.loadComponent}\n                          unloadComponent={this.unloadComponent}\n                          componentIndex={index}\n                          theToolbar={this.toolbarWindow}\n                          closeMenu={this.closeMenu}\n                          isToolbarEmbedded\n                        />\n                      </WrapperComponent>\n                    );\n                  } else {\n                    return (\n                      <ToolbarComponent\n                        pathname={this.props.pathname}\n                        loadComponent={this.loadComponent}\n                        unloadComponent={this.unloadComponent}\n                        componentIndex={index}\n                        theToolbar={this.toolbarWindow}\n                        key={`personalToolsComponent-${index}`}\n                        closeMenu={this.closeMenu}\n                        content={\n                          toolbarComponents[component].contentAsProps\n                            ? this.props.content\n                            : null\n                        }\n                      />\n                    );\n                  }\n                })(),\n              )}\n            </div>\n          </div>\n          <div className={this.state.expanded ? 'toolbar expanded' : 'toolbar'}>\n            <div className=\"toolbar-body\">\n              <div className=\"toolbar-actions\">\n                {this.props.hideDefaultViewButtons && this.props.inner && (\n                  <>{this.props.inner}</>\n                )}\n                {!this.props.hideDefaultViewButtons && (\n                  <>\n                    {unlockAction && (\n                      <button\n                        aria-label={this.props.intl.formatMessage(\n                          messages.unlock,\n                        )}\n                        className=\"unlock\"\n                        onClick={(e) => this.unlock(e)}\n                        tabIndex={0}\n                      >\n                        <Icon\n                          name={unlockSVG}\n                          size=\"30px\"\n                          className=\"unlock\"\n                          title={this.props.intl.formatMessage(messages.unlock)}\n                        />\n                      </button>\n                    )}\n\n                    {editAction && (\n                      <Link\n                        aria-label={this.props.intl.formatMessage(\n                          messages.edit,\n                        )}\n                        className=\"edit\"\n                        to={`${path}/edit`}\n                      >\n                        <Icon\n                          name={penSVG}\n                          size=\"30px\"\n                          className=\"circled\"\n                          title={this.props.intl.formatMessage(messages.edit)}\n                        />\n                      </Link>\n                    )}\n                    {this.props.content &&\n                      this.props.content.is_folderish &&\n                      folderContentsAction &&\n                      !this.props.pathname.endsWith('/contents') && (\n                        <Link\n                          aria-label={this.props.intl.formatMessage(\n                            messages.contents,\n                          )}\n                          to={`${path}/contents`}\n                        >\n                          <Icon\n                            name={folderSVG}\n                            size=\"30px\"\n                            title={this.props.intl.formatMessage(\n                              messages.contents,\n                            )}\n                          />\n                        </Link>\n                      )}\n                    {this.props.content &&\n                      this.props.content.is_folderish &&\n                      folderContentsAction &&\n                      this.props.pathname.endsWith('/contents') && (\n                        <Link\n                          to={`${path}`}\n                          aria-label={this.props.intl.formatMessage(\n                            messages.back,\n                          )}\n                        >\n                          <Icon\n                            name={clearSVG}\n                            className=\"contents circled\"\n                            size=\"30px\"\n                            title={this.props.intl.formatMessage(messages.back)}\n                          />\n                        </Link>\n                      )}\n                    {this.props.content &&\n                      ((this.props.content.is_folderish &&\n                        this.props.types.length > 0) ||\n                        (config.settings.isMultilingual &&\n                          this.props.content['@components'].translations)) && (\n                        <button\n                          className=\"add\"\n                          aria-label={this.props.intl.formatMessage(\n                            messages.add,\n                          )}\n                          onClick={(e) => this.toggleMenu(e, 'types')}\n                          tabIndex={0}\n                          id=\"toolbar-add\"\n                        >\n                          <Icon\n                            name={addSVG}\n                            size=\"30px\"\n                            title={this.props.intl.formatMessage(messages.add)}\n                          />\n                        </button>\n                      )}\n                    <div className=\"toolbar-button-spacer\" />\n                    <button\n                      className=\"more\"\n                      aria-label={this.props.intl.formatMessage(messages.more)}\n                      onClick={(e) => this.toggleMenu(e, 'more')}\n                      tabIndex={0}\n                      id=\"toolbar-more\"\n                    >\n                      <Icon\n                        className=\"mobile hidden\"\n                        name={moreSVG}\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.more)}\n                      />\n                      {this.state.showMenu ? (\n                        <Icon\n                          className=\"mobile only\"\n                          name={clearSVG}\n                          size=\"30px\"\n                        />\n                      ) : (\n                        <Icon\n                          className=\"mobile only\"\n                          name={moreSVG}\n                          size=\"30px\"\n                        />\n                      )}\n                    </button>\n                  </>\n                )}\n              </div>\n              <div className=\"toolbar-bottom\">\n                <Pluggable name=\"main.toolbar.bottom\" />\n                {!this.props.hideDefaultViewButtons && (\n                  <button\n                    className=\"user\"\n                    aria-label={this.props.intl.formatMessage(\n                      messages.personalTools,\n                    )}\n                    onClick={(e) => this.toggleMenu(e, 'personalTools')}\n                    tabIndex={0}\n                    id=\"toolbar-personal\"\n                  >\n                    <Icon\n                      name={userSVG}\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(\n                        messages.personalTools,\n                      )}\n                    />\n                  </button>\n                )}\n              </div>\n            </div>\n            <div className=\"toolbar-handler\">\n              <button\n                aria-label={this.props.intl.formatMessage(\n                  messages.shrinkToolbar,\n                )}\n                className={cx({\n                  [this.props.content?.review_state]: this.props.content\n                    ?.review_state,\n                })}\n                onClick={this.handleShrink}\n              />\n            </div>\n          </div>\n          <div className=\"pusher\" />\n        </>\n      )\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  withCookies,\n  connect(\n    (state, props) => ({\n      actions: state.actions.actions,\n      token: state.userSession.token,\n      userId: state.userSession.token\n        ? jwtDecode(state.userSession.token).sub\n        : '',\n      content: state.content.data,\n      pathname: props.pathname,\n      types: filter(state.types.types, 'addable'),\n      unlockRequest: state.content.unlock,\n    }),\n    { getTypes, listActions, setExpandedToolbar, unlockContent },\n  ),\n)(Toolbar);\n","import React from 'react';\nimport { Icon } from '@plone/volto/components';\nimport { blockHasValue } from '@plone/volto/helpers';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { Button } from 'semantic-ui-react';\nimport includes from 'lodash/includes';\nimport isBoolean from 'lodash/isBoolean';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\n\nimport trashSVG from '@plone/volto/icons/delete.svg';\n\nconst messages = defineMessages({\n  delete: {\n    id: 'delete',\n    defaultMessage: 'delete',\n  },\n});\n\nconst EditBlockWrapper = (props) => {\n  const hideHandler = (data) => {\n    return !!data.fixed || !(blockHasValue(data) && props.blockProps.editable);\n  };\n\n  const { intl, blockProps, draginfo, children } = props;\n  const { block, selected, type, onDeleteBlock, data, editable } = blockProps;\n  const visible = selected && !hideHandler(data);\n\n  const required = isBoolean(data.required)\n    ? data.required\n    : includes(config.blocks.requiredBlocks, type);\n\n  return (\n    <div\n      ref={draginfo.innerRef}\n      {...draginfo.draggableProps}\n      className={`block-editor-${data['@type']}`}\n    >\n      <div style={{ position: 'relative' }}>\n        <div\n          style={{\n            visibility: visible ? 'visible' : 'hidden',\n            display: 'inline-block',\n          }}\n          {...draginfo.dragHandleProps}\n          className=\"drag handle wrapper\"\n        >\n          <Icon name={dragSVG} size=\"18px\" />\n        </div>\n        <div className={`ui drag block inner ${type}`}>\n          {children}\n          {selected && !required && editable && (\n            <Button\n              icon\n              basic\n              onClick={() => onDeleteBlock(block, true)}\n              className=\"delete-button\"\n              aria-label={intl.formatMessage(messages.delete)}\n            >\n              <Icon name={trashSVG} size=\"18px\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default injectIntl(EditBlockWrapper);\n","import React from 'react';\nimport EditBlock from './Edit';\nimport { DragDropList } from '@plone/volto/components';\nimport { getBlocks } from '@plone/volto/helpers';\nimport {\n  addBlock,\n  insertBlock,\n  changeBlock,\n  deleteBlock,\n  moveBlock,\n  mutateBlock,\n  nextBlockId,\n  previousBlockId,\n} from '@plone/volto/helpers';\nimport EditBlockWrapper from './EditBlockWrapper';\nimport { setSidebarTab } from '@plone/volto/actions';\nimport { useDispatch } from 'react-redux';\nimport { useDetectClickOutside } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nconst BlocksForm = (props) => {\n  const {\n    pathname,\n    onChangeField,\n    properties,\n    onChangeFormData,\n    selectedBlock,\n    multiSelected,\n    onSelectBlock,\n    allowedBlocks,\n    showRestricted,\n    title,\n    description,\n    metadata,\n    manage,\n    children,\n    isMainForm = true,\n    blocksConfig = config.blocks.blocksConfig,\n    editable = true,\n  } = props;\n\n  const blockList = getBlocks(properties);\n\n  const dispatch = useDispatch();\n\n  const ClickOutsideListener = () => {\n    onSelectBlock(null);\n    dispatch(setSidebarTab(0));\n  };\n\n  const ref = useDetectClickOutside({\n    onTriggered: ClickOutsideListener,\n    triggerKeys: ['Escape'],\n    // Disabled feature for now https://github.com/plone/volto/pull/2389#issuecomment-830027413\n    disableClick: true,\n    disableKeys: !isMainForm,\n  });\n\n  const handleKeyDown = (\n    e,\n    index,\n    block,\n    node,\n    {\n      disableEnter = false,\n      disableArrowUp = false,\n      disableArrowDown = false,\n    } = {},\n  ) => {\n    const isMultipleSelection = e.shiftKey;\n    if (e.key === 'ArrowUp' && !disableArrowUp) {\n      onFocusPreviousBlock(block, node, isMultipleSelection);\n      e.preventDefault();\n    }\n    if (e.key === 'ArrowDown' && !disableArrowDown) {\n      onFocusNextBlock(block, node, isMultipleSelection);\n      e.preventDefault();\n    }\n    if (e.key === 'Enter' && !disableEnter) {\n      onAddBlock(config.settings.defaultBlockType, index + 1);\n      e.preventDefault();\n    }\n  };\n\n  const onFocusPreviousBlock = (\n    currentBlock,\n    blockNode,\n    isMultipleSelection,\n  ) => {\n    const prev = previousBlockId(properties, currentBlock);\n    if (prev === null) return;\n\n    blockNode.blur();\n\n    onSelectBlock(prev, isMultipleSelection);\n  };\n\n  const onFocusNextBlock = (currentBlock, blockNode, isMultipleSelection) => {\n    const next = nextBlockId(properties, currentBlock);\n    if (next === null) return;\n\n    blockNode.blur();\n\n    onSelectBlock(next, isMultipleSelection);\n  };\n\n  const onMutateBlock = (id, value) => {\n    const newFormData = mutateBlock(properties, id, value);\n    onChangeFormData(newFormData);\n  };\n\n  const onInsertBlock = (id, value, current) => {\n    const [newId, newFormData] = insertBlock(properties, id, value, current);\n    onChangeFormData(newFormData);\n    return newId;\n  };\n\n  const onAddBlock = (type, index) => {\n    if (editable) {\n      const [id, newFormData] = addBlock(properties, type, index);\n      onChangeFormData(newFormData);\n      return id;\n    }\n  };\n\n  const onChangeBlock = (id, value) => {\n    const newFormData = changeBlock(properties, id, value);\n    onChangeFormData(newFormData);\n  };\n\n  const onDeleteBlock = (id, selectPrev) => {\n    const previous = previousBlockId(properties, id);\n\n    const newFormData = deleteBlock(properties, id);\n    onChangeFormData(newFormData);\n\n    onSelectBlock(selectPrev ? previous : null);\n  };\n\n  const onMoveBlock = (dragIndex, hoverIndex) => {\n    const newFormData = moveBlock(properties, dragIndex, hoverIndex);\n    onChangeFormData(newFormData);\n  };\n\n  const defaultBlockWrapper = ({ draginfo }, editBlock, blockProps) => (\n    <EditBlockWrapper draginfo={draginfo} blockProps={blockProps}>\n      {editBlock}\n    </EditBlockWrapper>\n  );\n\n  const editBlockWrapper = children || defaultBlockWrapper;\n\n  return (\n    <div className=\"blocks-form\" ref={ref}>\n      <fieldset className=\"invisible\" disabled={!editable}>\n        <DragDropList\n          childList={blockList}\n          onMoveItem={(result) => {\n            const { source, destination } = result;\n            if (!destination) {\n              return;\n            }\n            const newFormData = moveBlock(\n              properties,\n              source.index,\n              destination.index,\n            );\n            onChangeFormData(newFormData);\n            return true;\n          }}\n        >\n          {(dragProps) => {\n            const { child, childId, index } = dragProps;\n            const blockProps = {\n              allowedBlocks,\n              showRestricted,\n              block: childId,\n              data: child,\n              handleKeyDown,\n              id: childId,\n              formTitle: title,\n              formDescription: description,\n              index,\n              manage,\n              onAddBlock,\n              onInsertBlock,\n              onChangeBlock,\n              onChangeField,\n              onChangeFormData,\n              onDeleteBlock,\n              onFocusNextBlock,\n              onFocusPreviousBlock,\n              onMoveBlock,\n              onMutateBlock,\n              onSelectBlock,\n              pathname,\n              metadata,\n              properties,\n              blocksConfig,\n              selected: selectedBlock === childId,\n              multiSelected: multiSelected?.includes(childId),\n              type: child['@type'],\n              editable,\n            };\n            return editBlockWrapper(\n              dragProps,\n              <EditBlock key={childId} {...blockProps} />,\n              blockProps,\n            );\n          }}\n        </DragDropList>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default BlocksForm;\n","import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Button } from 'semantic-ui-react';\n\nconst messages = defineMessages({\n  small: {\n    id: 'Left',\n    defaultMessage: 'Left',\n  },\n  medium: {\n    id: 'Right',\n    defaultMessage: 'Right',\n  },\n  large: {\n    id: 'Center',\n    defaultMessage: 'Center',\n  },\n});\n\nconst ImageSizeWidget = ({ onChangeBlock, data, block, disabled }) => {\n  /**\n   * Image size handler\n   * @method onImageSize\n   * @param {string} size Size option\n   * @returns {undefined}\n   */\n  function onImageSize(size) {\n    onChangeBlock(block, {\n      ...data,\n      size,\n    });\n  }\n\n  const intl = useIntl();\n\n  return (\n    <div className=\"field-image_size\">\n      <Button.Group>\n        <Button\n          icon\n          basic\n          aria-label={intl.formatMessage(messages.small)}\n          onClick={() => onImageSize('s')}\n          active={data.size === 's'}\n          disabled={disabled}\n        >\n          <div className=\"image-sizes-text\">S</div>\n        </Button>\n      </Button.Group>\n      <Button.Group>\n        <Button\n          icon\n          basic\n          aria-label={intl.formatMessage(messages.medium)}\n          onClick={() => onImageSize('m')}\n          active={data.size === 'm'}\n          disabled={disabled}\n        >\n          <div className=\"image-sizes-text\">M</div>\n        </Button>\n      </Button.Group>\n      <Button.Group>\n        <Button\n          icon\n          basic\n          aria-label={intl.formatMessage(messages.large)}\n          onClick={() => onImageSize('l')}\n          active={data.size === 'l' || data.size === undefined}\n          disabled={disabled}\n        >\n          <div className=\"image-sizes-text\">L</div>\n        </Button>\n      </Button.Group>\n    </div>\n  );\n};\n\nexport default ImageSizeWidget;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'semantic-ui-react';\nimport { Accordion, Grid, Segment } from 'semantic-ui-react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport {\n  CheckboxWidget,\n  Icon,\n  FormFieldWrapper,\n  TextWidget,\n} from '@plone/volto/components';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers';\nimport AlignBlock from '@plone/volto/components/manage/Sidebar/AlignBlock';\n\nimport imageSVG from '@plone/volto/icons/image.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport ImageSizeWidget from '@plone/volto/components/manage/Blocks/Image/ImageSizeWidget';\n\nconst messages = defineMessages({\n  Image: {\n    id: 'Image',\n    defaultMessage: 'Image',\n  },\n  Origin: {\n    id: 'Origin',\n    defaultMessage: 'Origin',\n  },\n  AltText: {\n    id: 'Alt text',\n    defaultMessage: 'Alt text',\n  },\n  AltTextHint: {\n    id: 'Alt text hint',\n    defaultMessage: 'Leave empty if the image is purely decorative.',\n  },\n  AltTextHintLinkText: {\n    id: 'Alt text hint link text',\n    defaultMessage: 'Describe the purpose of the image.',\n  },\n  Align: {\n    id: 'Alignment',\n    defaultMessage: 'Alignment',\n  },\n  LinkTo: {\n    id: 'Link to',\n    defaultMessage: 'Link to',\n  },\n  openLinkInNewTab: {\n    id: 'Open in a new tab',\n    defaultMessage: 'Open in a new tab',\n  },\n  NoImageSelected: {\n    id: 'No image selected',\n    defaultMessage: 'No image selected',\n  },\n  externalURL: {\n    id: 'External URL',\n    defaultMessage: 'External URL',\n  },\n  size: {\n    id: 'Size',\n    defaultMessage: 'Size',\n  },\n});\n\nconst ImageSidebar = ({\n  data,\n  block,\n  onChangeBlock,\n  openObjectBrowser,\n  required = false,\n  resetSubmitUrl,\n  intl,\n}) => {\n  const [activeAccIndex, setActiveAccIndex] = useState(0);\n\n  function handleAccClick(e, titleProps) {\n    const { index } = titleProps;\n    const newIndex = activeAccIndex === index ? -1 : index;\n\n    setActiveAccIndex(newIndex);\n  }\n\n  return (\n    <Segment.Group raised>\n      <header className=\"header pulled\">\n        <h2>\n          <FormattedMessage id=\"Image\" defaultMessage=\"Image\" />\n        </h2>\n      </header>\n\n      {!data.url && (\n        <>\n          <Segment className=\"sidebar-metadata-container\" secondary>\n            <FormattedMessage\n              id=\"No image selected\"\n              defaultMessage=\"No image selected\"\n            />\n            <Icon name={imageSVG} size=\"100px\" color=\"#b8c6c8\" />\n          </Segment>\n        </>\n      )}\n      {data.url && (\n        <>\n          <Segment className=\"sidebar-metadata-container\" secondary>\n            {data.url.split('/').slice(-1)[0]}\n            {isInternalURL(data.url) && (\n              <img\n                src={`${flattenToAppURL(data.url)}/@@images/image/mini`}\n                alt={data.alt}\n              />\n            )}\n            {!isInternalURL(data.url) && (\n              <img src={data.url} alt={data.alt} style={{ width: '50%' }} />\n            )}\n          </Segment>\n          <Segment className=\"form sidebar-image-data\">\n            {isInternalURL(data.url) && (\n              <TextWidget\n                id=\"Origin\"\n                title={intl.formatMessage(messages.Origin)}\n                required={false}\n                value={data.url.replace(/\\/$/, '').split('/').slice(-1)[0]}\n                icon={data.url ? clearSVG : navTreeSVG}\n                iconAction={\n                  data.url\n                    ? () => {\n                        resetSubmitUrl();\n                        onChangeBlock(block, {\n                          ...data,\n                          url: '',\n                        });\n                      }\n                    : () => openObjectBrowser()\n                }\n                onChange={() => {}}\n              />\n            )}\n            {!isInternalURL(data.url) && (\n              <TextWidget\n                id=\"external\"\n                title={intl.formatMessage(messages.externalURL)}\n                required={false}\n                value={data.url}\n                icon={clearSVG}\n                iconAction={() => {\n                  resetSubmitUrl();\n\n                  onChangeBlock(block, {\n                    ...data,\n                    url: '',\n                  });\n                }}\n                onChange={() => {}}\n              />\n            )}\n            <TextWidget\n              id=\"alt\"\n              title={intl.formatMessage(messages.AltText)}\n              description={\n                <>\n                  <a\n                    href=\"https://www.w3.org/WAI/tutorials/images/decision-tree/\"\n                    title={intl.formatMessage(messages.openLinkInNewTab)}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {intl.formatMessage(messages.AltTextHintLinkText)}\n                  </a>{' '}\n                  {intl.formatMessage(messages.AltTextHint)}\n                </>\n              }\n              required={false}\n              value={data.alt || ''}\n              icon={data.alt ? clearSVG : null}\n              iconAction={() =>\n                onChangeBlock(block, {\n                  ...data,\n                  alt: '',\n                })\n              }\n              onChange={(_name, value) => {\n                onChangeBlock(block, {\n                  ...data,\n                  alt: value,\n                });\n              }}\n            />\n            <Form.Field inline required={required}>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column width=\"4\">\n                    <div className=\"wrapper\">\n                      <label htmlFor=\"field-align\">\n                        <FormattedMessage\n                          id=\"Alignment\"\n                          defaultMessage=\"Alignment\"\n                        />\n                      </label>\n                    </div>\n                  </Grid.Column>\n                  <Grid.Column width=\"8\" className=\"align-tools\">\n                    <AlignBlock\n                      align={data.align}\n                      onChangeBlock={(block, data) => {\n                        onChangeBlock(block, {\n                          ...data,\n                          size: data.size,\n                        });\n                      }}\n                      data={data}\n                      block={block}\n                    />\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Form.Field>\n            <FormFieldWrapper\n              id=\"image_size\"\n              title={intl.formatMessage(messages.size)}\n            >\n              <ImageSizeWidget\n                onChangeBlock={onChangeBlock}\n                data={data}\n                block={block}\n              />\n            </FormFieldWrapper>\n          </Segment>\n          <Accordion fluid styled className=\"form\">\n            <Accordion.Title\n              active={activeAccIndex === 0}\n              index={0}\n              onClick={handleAccClick}\n            >\n              Link Settings\n              {activeAccIndex === 0 ? (\n                <Icon name={upSVG} size=\"20px\" />\n              ) : (\n                <Icon name={downSVG} size=\"20px\" />\n              )}\n            </Accordion.Title>\n            <Accordion.Content active={activeAccIndex === 0}>\n              <TextWidget\n                id=\"link\"\n                title={intl.formatMessage(messages.LinkTo)}\n                required={false}\n                value={flattenToAppURL(data.href)}\n                icon={data.href ? clearSVG : navTreeSVG}\n                iconAction={\n                  data.href\n                    ? () => {\n                        onChangeBlock(block, {\n                          ...data,\n                          href: '',\n                        });\n                      }\n                    : () => openObjectBrowser({ mode: 'link' })\n                }\n                onChange={(name, value) => {\n                  onChangeBlock(block, {\n                    ...data,\n                    href: flattenToAppURL(value),\n                  });\n                }}\n              />\n              <CheckboxWidget\n                id=\"openLinkInNewTab\"\n                title={intl.formatMessage(messages.openLinkInNewTab)}\n                value={data.openLinkInNewTab ? data.openLinkInNewTab : false}\n                onChange={(name, value) => {\n                  onChangeBlock(block, {\n                    ...data,\n                    openLinkInNewTab: value,\n                  });\n                }}\n              />\n            </Accordion.Content>\n          </Accordion>\n        </>\n      )}\n    </Segment.Group>\n  );\n};\n\nImageSidebar.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired,\n  resetSubmitUrl: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(ImageSidebar);\n","/* eslint no-console: 0 */\nimport http from 'http';\n\nimport app from './server';\nimport debug from 'debug';\n\nimport * as Sentry from '@sentry/node';\nimport initSentry from '@plone/volto/sentry';\n\ninitSentry(Sentry);\n\nexport default () => {\n  const server = http.createServer(app);\n  // const host = process.env.HOST || 'localhost';\n  const port = process.env.PORT || 3000;\n  const bind_address = process.env.RAZZLE_BIND_ADDRESS || '0.0.0.0';\n\n  let currentApp = app;\n\n  server\n    .listen(port, bind_address, () => {\n      if (app.apiPath === app.publicURL || !app.apiPath) {\n        console.log(`Volto is running in SEAMLESS mode`);\n      } else {\n        console.log(`API server (API_PATH) is set to: ${app.apiPath}`);\n      }\n      if (__DEVELOPMENT__ && app.devProxyToApiPath)\n        console.log(\n          `Using internal proxy: ${app.publicURL} -> ${app.devProxyToApiPath}`,\n        );\n      console.log(`🎭 Volto started at ${bind_address}:${port} 🚀`);\n\n      if (!process.env.RAZZLE_PUBLIC_URL)\n        debug('config')(`Current public URL: ${app.publicURL}`);\n    })\n    .on('error', (e) => {\n      console.error(e.message);\n      throw e;\n    });\n\n  return () => {\n    console.log('✅  Server-side HMR Enabled!');\n\n    module.hot.accept('./server', () => {\n      console.log('🔁  HMR Reloading `./server`...');\n      server.removeListener('request', currentApp);\n      const newApp = require('./server').default; // eslint-disable-line global-require\n      server.on('request', newApp);\n      currentApp = newApp;\n    });\n  };\n};\n","module.exports = require(\"http\");","import React from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport AlignBlock from '@plone/volto/components/manage/Sidebar/AlignBlock';\n\n/**\n * AlignWidget component.\n * To benefit from styling integration, use with a field named 'align'\n *\n * Example how this field would look in schema:\n *\n * ```jsx\n * {\n *  title: 'Align',\n *  description: 'Layout align',\n *  widget: 'align',\n * }\n * ```\n */\nconst AlignWidget = (props) => {\n  const { id, onChange, value } = props;\n  return (\n    <FormFieldWrapper {...props} className=\"align-widget\">\n      <AlignBlock\n        align={value}\n        onChangeBlock={(block, { align }) => onChange(id, align)}\n        data={{ align: value }}\n        block={id}\n      />\n    </FormFieldWrapper>\n  );\n};\n\nexport default injectIntl(AlignWidget);\n","module.exports = __webpack_public_path__ + \"static/media/Logo.05751d57.svg\";","module.exports = require(\"react-fast-compare\");","module.exports = require(\"object-assign\");","module.exports = require(\"lodash/identity\");","module.exports = require(\"tlds\");","module.exports = require(\"prepend-http\");","module.exports = require(\"zlib\");","module.exports = require(\"lodash/omitBy\");","module.exports = require(\"lodash/transform\");","module.exports = require(\"undoo\");","module.exports = __webpack_public_path__ + \"static/media/default-image.9451b251.svg\";","module.exports = require(\"redux-thunk\");","\"use strict\";\n\nvar compose = require('redux').compose;\n\nexports.__esModule = true;\nexports.composeWithDevTools = (\n  process.env.NODE_ENV !== 'production' && typeof window !== 'undefined' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ :\n    function() {\n      if (arguments.length === 0) return undefined;\n      if (typeof arguments[0] === 'object') return compose;\n      return compose.apply(null, arguments);\n    }\n);\n\nexports.devToolsEnhancer = (\n  process.env.NODE_ENV !== 'production' && typeof window !== 'undefined' &&\n  window.__REDUX_DEVTOOLS_EXTENSION__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION__ :\n    function() { return function(noop) { return noop; } }\n);\n","module.exports = require(\"lodash/startsWith\");","module.exports = require(\"pretty-bytes\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M3.1161,5.0001 L4.1161,21.0001 L3.0001,21.0001 L4.3341,29.0001 L32.0281,29.0001 L33.3611,21.0001 L32.2671,21.0001 L33.2681,9.0001 L17.5941,9.0001 L13.5951,5.0001 L3.1161,5.0001 Z M5.2451,7.0001 L12.7671,7.0001 L16.7661,11.0001 L31.0931,11.0001 L30.2611,21.0001 L6.1201,21.0001 L5.2451,7.0001 Z M5.3611,23.0001 L31.0001,23.0001 L30.3341,27.0001 L6.0271,27.0001 L5.3611,23.0001 Z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M19.0596,7 C18.7926,7 18.5416,7.104 18.3536,7.292 L6.9346,18.691 C6.7446,18.881 6.6406,19.134 6.6416,19.403 C6.6426,19.672 6.7496,19.925 6.9416,20.113 L15.6346,28.626 C16.0126,28.996 16.6616,28.995 17.0356,28.624 L28.7016,17.143 C28.8916,16.956 28.9996,16.696 28.9996,16.43 L28.9996,8 C28.9996,7.448 28.5516,7 27.9996,7 L19.0596,7 Z M16.3336,30.911 C15.5446,30.911 14.7996,30.607 14.2356,30.056 L5.5426,21.542 C4.9656,20.977 4.6456,20.22 4.6416,19.412 C4.6386,18.604 4.9506,17.846 5.5216,17.275 L16.9396,5.877 C17.5056,5.312 18.2586,5 19.0596,5 L27.9996,5 C29.6546,5 30.9996,6.346 30.9996,8 L30.9996,16.43 C30.9996,17.229 30.6736,18.008 30.1046,18.568 L18.4386,30.05 C17.8736,30.605 17.1266,30.911 16.3336,30.911 L16.3336,30.911 Z\\\"/><path d=\\\"M24,11 C23.449,11 23,11.448 23,12 C23,12.552 23.449,13 24,13 C24.551,13 25,12.552 25,12 C25,11.448 24.551,11 24,11 M24,15 C22.346,15 21,13.654 21,12 C21,10.346 22.346,9 24,9 C25.654,9 27,10.346 27,12 C27,13.654 25.654,15 24,15\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path d=\\\"M11.1667 19L14.0837 9 14.2497 9 17.1667 19 11.1667 19zM15.7497 7L12.5837 7 6.7497 27 4.9997 27 4.9997 29 9.9997 29 9.9997 27 8.8337 27 10.5837 21 17.7497 21 19.4997 27 17.9997 27 17.9997 29 22.9997 29 22.9997 27 21.5837 27 15.7497 7zM31 7L31 5C29.8 5 28.734 5.542 28 6.382 27.266 5.542 26.2 5 25 5L25 7C26.103 7 27 7.897 27 9L27 27C27 28.103 26.103 29 25 29L25 31C26.2 31 27.266 30.458 28 29.618 28.734 30.458 29.8 31 31 31L31 29C29.897 29 29 28.103 29 27L29 9C29 7.897 29.897 7 31 7\\\" fill-rule=\\\"evenodd\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M18 11C17.449 11 17 10.552 17 10 17 9.448 17.449 9 18 9 18.551 9 19 9.448 19 10 19 10.552 18.551 11 18 11M18 7C16.346 7 15 8.346 15 10 15 11.654 16.346 13 18 13 19.654 13 21 11.654 21 10 21 8.346 19.654 7 18 7M18 19C17.449 19 17 18.552 17 18 17 17.448 17.449 17 18 17 18.551 17 19 17.448 19 18 19 18.552 18.551 19 18 19M18 15C16.346 15 15 16.346 15 18 15 19.654 16.346 21 18 21 19.654 21 21 19.654 21 18 21 16.346 19.654 15 18 15\\\"/><path d=\\\"M23,22 C23,22.552 22.551,23 22,23 L14,23 C13.449,23 13,22.552 13,22 L13,6 C13,5.448 13.449,5 14,5 L22,5 C22.551,5 23,5.448 23,6 L23,22 Z M27,11 L27,9 L25,9 L25,6 C25,4.346 23.654,3 22,3 L14,3 C12.346,3 11,4.346 11,6 L11,9 L9,9 L9,11 L11,11 L11,17 L9,17 L9,19 L11,19 L11,22 C11,23.654 12.346,25 14,25 L17,25 L17,31 L13,31 L13,33 L23,33 L23,31 L19,31 L19,25 L22,25 C23.654,25 25,23.654 25,22 L25,19 L27,19 L27,17 L25,17 L25,11 L27,11 Z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M14 11L29 11 29 9 14 9zM14 19L29 19 29 17 14 17zM14 27L29 27 29 25 14 25zM8 20.414L5.293 17.707 6.707 16.293 8 17.586 11.293 14.293 12.707 15.707zM8 12.414L5.293 9.707 6.707 8.293 8 9.586 11.293 6.293 12.707 7.707zM8 28.414L5.293 25.707 6.707 24.293 8 25.586 11.293 22.293 12.707 23.707z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M5,31 L31,31 L31,5 L5,5 L5,31 Z M7,29.001 L29.001,29.001 L29.001,7 L7,7 L7,29.001 Z\\\"/><path d=\\\"M11 19L25 19 25 17 11 17z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M29 31L31 31 31 29 29 29zM17 31L19 31 19 29 17 29zM25 31L27 31 27 29 25 29zM21 31L23 31 23 29 21 29zM13 31L15 31 15 29 13 29zM9 31L11 31 11 29 9 29zM5 31L7 31 7 29 5 29zM5 19L7 19 7 17 5 17zM5 11L7 11 7 9 5 9zM5 27L7 27 7 25 5 25zM5 15L7 15 7 13 5 13zM5 23L7 23 7 21 5 21zM5 7L7 7 7 5 5 5zM21 7L23 7 23 5 21 5zM9 7L11 7 11 5 9 5zM13 7L15 7 15 5 13 5zM17 7L19 7 19 5 17 5zM25 7L27 7 27 5 25 5zM29 7L31 7 31 5 29 5zM29 11L31 11 31 9 29 9zM29 19L31 19 31 17 29 17zM29 15L31 15 31 13 29 13zM29 27L31 27 31 25 29 25zM29 23L31 23 31 21 29 21zM18 21C16.346 21 15 19.654 15 18 15 16.346 16.346 15 18 15 19.654 15 21 16.346 21 18 21 19.654 19.654 21 18 21M22.899 19L25 19 25 17 22.899 17C22.769 16.363 22.515 15.772 22.167 15.247L23.657 13.757 22.243 12.343 20.753 13.833C20.229 13.485 19.637 13.231 19 13.101L19 11 17 11 17 13.101C16.363 13.231 15.771 13.485 15.247 13.833L13.757 12.343 12.343 13.757 13.833 15.247C13.485 15.772 13.231 16.363 13.101 17L11 17 11 19 13.101 19C13.231 19.637 13.485 20.228 13.833 20.753L12.343 22.243 13.757 23.657 15.247 22.167C15.771 22.515 16.363 22.769 17 22.899L17 25 19 25 19 22.899C19.637 22.769 20.229 22.515 20.753 22.167L22.243 23.657 23.657 22.243 22.167 20.753C22.515 20.228 22.769 19.637 22.899 19\\\"/></g>\"}","module.exports = require(\"lodash/difference\");","module.exports = require(\"lodash/toNumber\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M5 19L31 19 31 17 5 17z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M23.293 11.293L18 16.586 12.707 11.293 11.293 12.707 16.586 18 11.293 23.293 12.707 24.707 18 19.414 23.293 24.707 24.707 23.293 19.414 18 24.707 12.707z\\\"/><path d=\\\"M18,31 C10.832,31 5,25.168 5,18 C5,10.832 10.832,5 18,5 C25.168,5 31,10.832 31,18 C31,25.168 25.168,31 18,31 M18,3 C9.729,3 3,9.729 3,18 C3,26.271 9.729,33 18,33 C26.271,33 33,26.271 33,18 C33,9.729 26.271,3 18,3\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M28.1631,13.7905 C27.0391,11.0755 24.9251,8.9615 22.2101,7.8375 L21.4441,9.6855 C23.6651,10.6045 25.3951,12.3345 26.3151,14.5555 C27.2351,16.7765 27.2351,19.2235 26.3151,21.4435 C24.4161,26.0285 19.1381,28.2145 14.5561,26.3145 C12.3351,25.3945 10.6041,23.6655 9.6841,21.4445 C8.7651,19.2235 8.7651,16.7765 9.6841,14.5565 C10.6051,12.3345 12.3351,10.6045 14.5561,9.6855 L13.7901,7.8375 C11.0761,8.9615 8.9621,11.0755 7.8371,13.7905 C6.7131,16.5045 6.7131,19.4955 7.8371,22.2095 C8.9611,24.9245 11.0751,27.0385 13.7901,28.1625 C15.1621,28.7305 16.5851,28.9995 17.9851,28.9995 C22.3041,28.9995 26.4101,26.4405 28.1631,22.2095 C29.2871,19.4955 29.2871,16.5045 28.1631,13.7905\\\"/><path d=\\\"M17 18L19 18 19 5 17 5z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M27,30 C27,30.551 26.552,31 26,31 L10,31 C9.448,31 9,30.551 9,30 L9,18 C9,17.449 9.448,17 10,17 L26,17 C26.552,17 27,17.449 27,18 L27,30 Z M27,15.184 L27,12 C27,7.038 22.963,3 18,3 C13.037,3 9,7.038 9,12 L11,12 C11,8.14 14.141,5 18,5 C21.859,5 25,8.14 25,12 L25,15 L10,15 C8.346,15 7,16.346 7,18 L7,30 C7,31.654 8.346,33 10,33 L26,33 C27.654,33 29,31.654 29,30 L29,18 C29,16.698 28.161,15.598 27,15.184 L27,15.184 Z\\\"/><path d=\\\"M18,20.5 C17.172,20.5 16.5,21.172 16.5,22 C16.5,22.443 16.695,22.836 17,23.111 L17,27 L19,27 L19,23.111 C19.305,22.836 19.5,22.443 19.5,22 C19.5,21.172 18.828,20.5 18,20.5\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M18,13.5 C18.828,13.5 19.5,12.828 19.5,12 C19.5,11.172 18.828,10.5 18,10.5 C17.172,10.5 16.5,11.172 16.5,12 C16.5,12.828 17.172,13.5 18,13.5\\\"/><path d=\\\"M18,31 C10.832,31 5,25.168 5,18 C5,10.832 10.832,5 18,5 C25.168,5 31,10.832 31,18 C31,25.168 25.168,31 18,31 M18,3 C9.729,3 3,9.729 3,18 C3,26.271 9.729,33 18,33 C26.271,33 33,26.271 33,18 C33,9.729 26.271,3 18,3\\\"/><path d=\\\"M19 15L15 15 15 17 17 17 17 25 15 25 15 27 21 27 21 25 19 25z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M24.4258,29 L11.5738,29 L5.1578,18 L11.5738,7 L24.4258,7 L30.8428,18 L24.4258,29 Z M25.5738,5 L10.4258,5 L2.8428,18 L10.4258,31 L25.5738,31 L33.1568,18 L25.5738,5 Z\\\"/><path d=\\\"M22.243 12.343L18 16.586 13.757 12.343 12.343 13.757 16.586 18 12.343 22.243 13.757 23.657 18 19.414 22.243 23.657 23.657 22.243 19.414 18 23.657 13.757z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M6.7139,29 L29.2859,29 L17.9999,9.032 L6.7139,29 Z M32.7139,31 L3.2859,31 L17.9999,4.968 L32.7139,31 Z\\\"/><path d=\\\"M19.5 26C19.5 26.828 18.828 27.5 18 27.5 17.172 27.5 16.5 26.828 16.5 26 16.5 25.172 17.172 24.5 18 24.5 18.828 24.5 19.5 25.172 19.5 26L19.5 26zM17 23L19 23 19 14 17 14z\\\"/></g>\"}","module.exports = require(\"lodash/reduce\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M19,9 L10.527,9 L13.719,5.695 L12.281,4.305 L6.781,10 L12.281,15.695 L13.719,14.305 L10.527,11 L19,11 C23.411,11 27,14.589 27,19 C27,23.411 23.411,27 19,27 L18,27 L18,29 L19,29 C24.514,29 29,24.514 29,19 C29,13.486 24.514,9 19,9\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M23.7192,4.3052 L22.2812,5.6952 L25.4722,9.0002 L17.0002,9.0002 C11.4862,9.0002 7.0002,13.4862 7.0002,19.0002 C7.0002,24.5142 11.4862,29.0002 17.0002,29.0002 L18.0002,29.0002 L18.0002,27.0002 L17.0002,27.0002 C12.5892,27.0002 9.0002,23.4112 9.0002,19.0002 C9.0002,14.5892 12.5892,11.0002 17.0002,11.0002 L25.4722,11.0002 L22.2812,14.3052 L23.7192,15.6952 L29.2192,10.0002 L23.7192,4.3052 Z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M12.293 22.293L13.707 23.707 17 20.414 17 31 19 31 19 20.414 22.293 23.707 23.707 22.293 18 16.586zM9 11L27 11 27 7 9 7 9 11zM7 13L29 13 29 5 7 5 7 13z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M23.707 13.707L22.293 12.293 19 15.586 19 5 17 5 17 15.586 13.707 12.293 12.293 13.707 18 19.414zM9 29L27 29 27 25 9 25 9 29zM7 31L29 31 29 23 7 23 7 31z\\\"/></g>\"}","module.exports = require(\"filesize\");","module.exports = require(\"lodash/values\");","module.exports = require(\"redux-mock-store\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M16 5L16 7 27.586 7 13.293 21.293 14.707 22.707 29 8.414 29 20 31 20 31 5z\\\"/><path d=\\\"M23 29L7 29 7 13 18 13 18 11 5 11 5 31 25 31 25 18 23 18z\\\"/></g>\"}","module.exports = require(\"react-anchor-link-smooth-scroll\");","module.exports = __webpack_public_path__ + \"static/media/block-video.832fa3ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/block-maps.731e84f6.svg\";","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M5 7L31 7 31 5 5 5zM15 13L31 13 31 11 15 11zM15 25L31 25 31 23 15 23zM15 19L31 19 31 17 15 17zM5 31L31 31 31 29 5 29zM6.719 23.695L5.281 22.305 9.438 18 5.281 13.695 6.719 12.305 12.219 18z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M23 7L33 7 33 5 23 5z\\\"/><path fill-rule=\\\"nonzero\\\" d=\\\"M3,7 L5,5 L5,19 L3,17 L19,17 L17,19 L17,5 L19,7 L3,7 Z M19,5 L19,19 L3,19 L3,5 L19,5 Z\\\"/><path d=\\\"M23 13L33 13 33 11 23 11zM23 19L33 19 33 17 23 17zM3 31L33 31 33 29 3 29zM3 25L33 25 33 23 3 23z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M3 7L13 7 13 5 3 5z\\\"/><path fill-rule=\\\"nonzero\\\" d=\\\"M17,7 L19,5 L19,19 L17,17 L33,17 L31,19 L31,5 L33,7 L17,7 Z M33,5 L33,19 L17,19 L17,5 L33,5 Z\\\"/><path d=\\\"M3 13L13 13 13 11 3 11zM3 19L13 19 13 17 3 17zM3 31L33 31 33 29 3 29zM3 25L33 25 33 23 3 23z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path fill-rule=\\\"nonzero\\\" d=\\\"M7,13 L9,11 L9,25 L7,23 L29,23 L27,25 L27,11 L29,13 L7,13 Z M29,11 L29,25 L7,25 L7,11 L29,11 Z\\\"/><path d=\\\"M7 31L29 31 29 29 7 29zM7 7L29 7 29 5 7 5z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path fill-rule=\\\"nonzero\\\" d=\\\"M3,7 L5,5 L5,25 L3,23 L33,23 L31,25 L31,5 L33,7 L3,7 Z M33,5 L33,25 L3,25 L3,5 L33,5 Z\\\"/><path d=\\\"M7 31L29 31 29 29 7 29zM25.314 10.757L28.557 14 7.444 14 10.687 10.757 9.272 9.343 3.616 15 9.272 20.657 10.687 19.243 7.444 16 28.557 16 25.314 19.243 26.728 20.657 32.385 15 26.728 9.343z\\\"/></g>\"}","module.exports = require(\"lodash/trim\");","/**\n * QuerystringWidget component.\n * @module components/manage/Widgets/QuerystringWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Button, Form, Grid, Input, Label } from 'semantic-ui-react';\nimport { filter, remove, toPairs, groupBy, isEmpty, map } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { getQuerystring } from '@plone/volto/actions';\nimport { Icon } from '@plone/volto/components';\nimport { format, parse } from 'date-fns';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport cx from 'classnames';\n\nimport {\n  Option,\n  DropdownIndicator,\n  selectTheme,\n  customSelectStyles,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\n\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  Criteria: {\n    id: 'Criteria',\n    defaultMessage: 'Criteria',\n  },\n  AddCriteria: {\n    id: 'Add criteria',\n    defaultMessage: 'Add criteria',\n  },\n  select: {\n    id: 'querystring-widget-select',\n    defaultMessage: 'Select…',\n  },\n});\n\n/**\n * Widget for a querystring value, to define a catalog search criteria.\n */\nexport class QuerystringWidgetComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.array,\n    focus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onEdit: PropTypes.func,\n    onDelete: PropTypes.func,\n    getQuerystring: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    value: null,\n    onChange: null,\n    onEdit: null,\n    onDelete: null,\n    focus: false,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs EditComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      visual: false,\n    };\n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.getWidget = this.getWidget.bind(this);\n  }\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n    this.props.getQuerystring();\n  }\n\n  /**\n   * Get correct widget\n   * @method getWidget\n   * @param {Object} row Row object.\n   * @param {number} index Row index.\n   * @returns {Object} Widget.\n   */\n  getWidget(row, index, Select) {\n    const props = {\n      fluid: true,\n      value: row.v,\n      onChange: (data) => this.onChangeValue(index, data.target.value),\n    };\n    const values = this.props.indexes[row.i].values;\n\n    switch (this.props.indexes[row.i].operators[row.o].widget) {\n      case null:\n        return <span />;\n      case 'DateWidget':\n        return (\n          <Form.Field style={{ flex: '1 0 auto' }}>\n            <Input\n              type=\"date\"\n              {...props}\n              value={format(parse(row.v), 'YYYY-MM-DD')}\n            />\n          </Form.Field>\n        );\n      case 'DateRangeWidget': // 2 date inputs\n        return (\n          <React.Fragment>\n            <Form.Field style={{ flex: '1 0 auto' }}>\n              <Input\n                type=\"date\"\n                {...props}\n                value={format(parse(row.v[0]), 'YYYY-MM-DD')}\n                onChange={(data) =>\n                  this.onChangeValue(index, [data.target.value, row.v[1]])\n                }\n              />\n            </Form.Field>\n            <Form.Field style={{ flex: '1 0 auto' }}>\n              <Input\n                type=\"date\"\n                {...props}\n                value={format(parse(row.v[1]), 'YYYY-MM-DD')}\n                onChange={(data) =>\n                  this.onChangeValue(index, [row.v[0], data.target.value])\n                }\n              />\n            </Form.Field>\n          </React.Fragment>\n        );\n      case 'RelativeDateWidget':\n        return (\n          <Form.Field style={{ flex: '1 0 auto' }}>\n            <Input step={1} type=\"number\" {...props} />\n          </Form.Field>\n        );\n      case 'MultipleSelectionWidget':\n        return (\n          <Form.Field style={{ flex: '1 0 auto', maxWidth: '92%' }}>\n            <Select\n              {...props}\n              className=\"react-select-container\"\n              classNamePrefix=\"react-select\"\n              options={\n                values\n                  ? map(toPairs(values), (value) => ({\n                      label: value[1].title,\n                      value: value[0],\n                    }))\n                  : []\n              }\n              styles={customSelectStyles}\n              placeholder={this.props.intl.formatMessage(messages.select)}\n              theme={selectTheme}\n              components={{ DropdownIndicator, Option }}\n              onChange={(data) => {\n                this.onChangeValue(\n                  index,\n                  map(data, (item) => item.value),\n                );\n              }}\n              isMulti={true}\n              value={map(row.v, (value) => ({\n                label: values?.[value]?.title || value,\n                value,\n              }))}\n            />\n          </Form.Field>\n        );\n      case 'ReferenceWidget':\n      default:\n        // if (row.o === 'plone.app.querystring.operation.string.relativePath') {\n        //   props.onChange = data => this.onChangeValue(index, data.target.value);\n        // }\n        return (\n          <Form.Field style={{ flex: '1 0 auto' }}>\n            <Input {...props} />\n          </Form.Field>\n        );\n    }\n  }\n\n  /**\n   * Change value handler\n   * @method onChangeValue\n   * @param {Number} index Index of the row.\n   * @param {String|Array} value Value of the row.\n   * @returns {undefined}\n   */\n  onChangeValue(index, value) {\n    this.props.onChange(\n      this.props.id,\n      map(this.props.value, (row, i) =>\n        index === i\n          ? {\n              ...row,\n              v: value,\n            }\n          : row,\n      ),\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      required,\n      description,\n      error,\n      value,\n      onChange,\n      onEdit,\n      indexes,\n      fieldSet,\n      reactSelect,\n      intl,\n    } = this.props;\n\n    const Select = reactSelect.default;\n\n    return (\n      <Form.Field\n        inline\n        required={required}\n        error={error.length > 0}\n        className={cx('query-widget', description ? 'help' : '')}\n        id={`${fieldSet || 'field'}-${id}`}\n      >\n        <Grid>\n          <Grid.Row stretched>\n            <Grid.Column width=\"12\">\n              <div className=\"simple-field-name\">\n                {intl.formatMessage(messages.Criteria)}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row stretched>\n            <Grid.Column width=\"12\">\n              {indexes &&\n                !isEmpty(indexes) &&\n                map(value, (row, index) => (\n                  <Form.Group key={index}>\n                    <div className=\"main-fields-wrapper\">\n                      <Form.Field\n                        style={{ flex: '1 0 auto', marginRight: '10px' }}\n                      >\n                        <Select\n                          id={`field-${id}`}\n                          name={id}\n                          disabled={onEdit !== null}\n                          className=\"react-select-container\"\n                          classNamePrefix=\"react-select\"\n                          options={map(\n                            toPairs(\n                              groupBy(\n                                toPairs(indexes),\n                                (item) => item[1].group,\n                              ),\n                            ),\n                            (group) => ({\n                              label: group[0],\n                              options: map(\n                                filter(group[1], (item) => item[1].enabled),\n                                (field) => ({\n                                  label: field[1].title,\n                                  value: field[0],\n                                  isDisabled: (value || []).some(\n                                    (v) => v['i'] === field[0],\n                                  ),\n                                }),\n                              ),\n                            }),\n                          )}\n                          styles={customSelectStyles}\n                          theme={selectTheme}\n                          placeholder={intl.formatMessage(messages.select)}\n                          components={{ DropdownIndicator, Option }}\n                          value={{\n                            value: row.i,\n                            label: indexes[row.i]?.title,\n                          }}\n                          onChange={(data) =>\n                            onChange(\n                              id,\n                              map(value, (curRow, curIndex) =>\n                                curIndex === index\n                                  ? {\n                                      i: data.value,\n                                      o: indexes[data.value].operations[0],\n                                      v: '',\n                                    }\n                                  : curRow,\n                              ),\n                            )\n                          }\n                        />\n                      </Form.Field>\n                      <Form.Field style={{ flex: '1 0 auto' }}>\n                        <Select\n                          id={`field-${id}`}\n                          name={id}\n                          disabled={onEdit !== null}\n                          className=\"react-select-container\"\n                          classNamePrefix=\"react-select\"\n                          options={map(\n                            indexes[row.i]?.operations ?? [],\n                            (operation) => ({\n                              value: operation,\n                              label: indexes[row.i].operators[operation].title,\n                            }),\n                          )}\n                          styles={customSelectStyles}\n                          theme={selectTheme}\n                          placeholder={intl.formatMessage(messages.select)}\n                          components={{ DropdownIndicator, Option }}\n                          value={{\n                            value: row.o,\n                            label: indexes[row.i].operators[row.o].title,\n                          }}\n                          onChange={(data) =>\n                            onChange(\n                              id,\n                              map(value, (curRow, curIndex) =>\n                                curIndex === index\n                                  ? {\n                                      i: row.i,\n                                      o: data.value,\n                                      v: '',\n                                    }\n                                  : curRow,\n                              ),\n                            )\n                          }\n                        />\n                      </Form.Field>\n                      {!this.props.indexes[row.i].operators[row.o].widget && (\n                        <Button\n                          onClick={(event) => {\n                            onChange(\n                              id,\n                              remove(value, (v, i) => i !== index),\n                            );\n                            event.preventDefault();\n                          }}\n                          style={{\n                            background: 'none',\n                            paddingRight: 0,\n                            paddingLeft: 0,\n                            margin: 0,\n                          }}\n                        >\n                          <Icon name={clearSVG} size=\"24px\" className=\"close\" />\n                        </Button>\n                      )}\n                    </div>\n                    {this.getWidget(row, index, Select)}\n                    {this.props.indexes[row.i].operators[row.o].widget && (\n                      <Button\n                        onClick={(event) => {\n                          onChange(\n                            id,\n                            remove(value, (v, i) => i !== index),\n                          );\n                          event.preventDefault();\n                        }}\n                        style={{\n                          background: 'none',\n                          paddingRight: 0,\n                          paddingLeft: 0,\n                          margin: 0,\n                        }}\n                      >\n                        <Icon name={clearSVG} size=\"24px\" className=\"close\" />\n                      </Button>\n                    )}\n                  </Form.Group>\n                ))}\n              <Form.Group>\n                <Form.Field style={{ flex: '1 0 auto' }}>\n                  <Select\n                    id={`field-${id}`}\n                    name={id}\n                    disabled={onEdit !== null}\n                    className=\"react-select-container\"\n                    classNamePrefix=\"react-select\"\n                    placeholder={intl.formatMessage(messages.AddCriteria)}\n                    options={map(\n                      toPairs(\n                        groupBy(toPairs(indexes), (item) => item[1].group),\n                      ),\n                      (group) => ({\n                        label: group[0],\n                        options: map(\n                          filter(group[1], (item) => item[1].enabled),\n                          (field) => ({\n                            label: field[1].title,\n                            value: field[0],\n                            isDisabled: (value || []).some(\n                              (v) => v['i'] === field[0],\n                            ),\n                          }),\n                        ),\n                      }),\n                    )}\n                    styles={customSelectStyles}\n                    theme={selectTheme}\n                    components={{ DropdownIndicator, Option }}\n                    value={null}\n                    onChange={(data) => {\n                      onChange(id, [\n                        ...(value || []),\n                        {\n                          i: data.value,\n                          o: indexes[data.value].operations[0],\n                          v: '',\n                        },\n                      ]);\n                    }}\n                  />\n                </Form.Field>\n              </Form.Group>\n              {map(error, (message) => (\n                <Label key={message} basic color=\"red\" pointing>\n                  {message}\n                </Label>\n              ))}\n            </Grid.Column>\n          </Grid.Row>\n          {description && (\n            <Grid.Row stretched>\n              <Grid.Column stretched width=\"12\">\n                <p className=\"help\">{description}</p>\n              </Grid.Column>\n            </Grid.Row>\n          )}\n        </Grid>\n      </Form.Field>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs(['reactSelect']),\n  connect(\n    (state) => ({\n      indexes: state.querystring.indexes,\n    }),\n    { getQuerystring },\n  ),\n)(QuerystringWidgetComponent);\n","import React from 'react';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { toPairs, groupBy, map } from 'lodash';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport {\n  Option,\n  DropdownIndicator,\n  selectTheme,\n  customSelectStyles,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nconst messages = defineMessages({\n  SortOn: {\n    id: 'Sort on',\n    defaultMessage: 'Sort on',\n  },\n  NoSelection: {\n    id: 'No selection',\n    defaultMessage: 'No selection',\n  },\n});\n\nfunction QueryStringSortOrderWidget(props) {\n  const { id, value, onChange, reactSelect, isDisabled } = props;\n  const sortable_indexes = useSelector(\n    (state) => state.querystring.sortable_indexes,\n  );\n  const intl = useIntl();\n  const Select = reactSelect.default;\n\n  return (\n    <FormFieldWrapper\n      {...props}\n      draggable={false}\n      className=\"query-sort-on-widget\"\n    >\n      <Select\n        id=\"select-listingblock-sort-on\"\n        name=\"select-listingblock-sort-on\"\n        className=\"react-select-container\"\n        classNamePrefix=\"react-select\"\n        // placeholder=\"Select criteria\"\n        isDisabled={isDisabled}\n        options={[\n          {\n            label: intl.formatMessage(messages.NoSelection),\n            value: '',\n          },\n          ...map(\n            toPairs(\n              groupBy(toPairs(sortable_indexes), (item) => item[1].group),\n            ),\n            (group) => ({\n              label: group[0],\n              options: map(group[1], (field) => ({\n                label: field[1].title,\n                value: field[0],\n              })),\n            }),\n          ),\n        ]}\n        styles={customSelectStyles}\n        theme={selectTheme}\n        components={{ DropdownIndicator, Option }}\n        value={{\n          value: value || '',\n          label:\n            value && sortable_indexes\n              ? sortable_indexes[value]?.title\n              : value || intl.formatMessage(messages.NoSelection),\n        }}\n        onChange={(field) => {\n          onChange(id, field.value);\n        }}\n      />\n    </FormFieldWrapper>\n  );\n}\n\nexport default injectLazyLibs(['reactSelect'])(QueryStringSortOrderWidget);\n","/**\n * EmailWidget component.\n * @module components/manage/Widgets/EmailWidget\n */\n\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Input } from 'semantic-ui-react';\n\n/** EmailWidget, a widget for email addresses\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Email\",\n *  widget: 'email',\n * }\n * ```\n */\nconst EmailWidget = (props) => {\n  const {\n    id,\n    value,\n    onChange,\n    onBlur,\n    onClick,\n    minLength,\n    maxLength,\n    placeholder,\n    isDisabled,\n  } = props;\n  const inputId = `field-${id}`;\n\n  return (\n    <FormFieldWrapper {...props} className=\"email\">\n      <Input\n        id={inputId}\n        name={id}\n        type=\"email\"\n        value={value || ''}\n        disabled={isDisabled}\n        placeholder={placeholder}\n        onChange={({ target }) =>\n          onChange(id, target.value === '' ? undefined : target.value)\n        }\n        onBlur={({ target }) =>\n          onBlur(id, target.value === '' ? undefined : target.value)\n        }\n        onClick={() => onClick()}\n        minLength={minLength || null}\n        maxLength={maxLength || null}\n      />\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types\n * @property {Object} propTypes Property types.\n * @static\n */\nEmailWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  placeholder: PropTypes.string,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nEmailWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  minLength: null,\n  maxLength: null,\n};\n\nexport default EmailWidget;\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Button, Grid } from 'semantic-ui-react';\nimport { FormFieldWrapper } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  small: {\n    id: 'Small',\n    defaultMessage: 'Small',\n  },\n  medium: {\n    id: 'Medium',\n    defaultMessage: 'Medium',\n  },\n  large: {\n    id: 'Large',\n    defaultMessage: 'Large',\n  },\n});\n\nconst ImageSizeWidget = (props) => {\n  const { onChange, id, disabled, intl, value } = props;\n\n  return (\n    <FormFieldWrapper {...props}>\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width=\"8\" className=\"field-image_size\">\n            <Button.Group>\n              <Button\n                icon\n                basic\n                aria-label={intl.formatMessage(messages.small)}\n                onClick={() => onChange(id, 's')}\n                active={value === 's'}\n                disabled={disabled}\n              >\n                <div className=\"image-sizes-text\">S</div>\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                aria-label={intl.formatMessage(messages.medium)}\n                onClick={() => onChange(id, 'm')}\n                active={value === 'm'}\n                disabled={disabled}\n              >\n                <div className=\"image-sizes-text\">M</div>\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                aria-label={intl.formatMessage(messages.large)}\n                onClick={() => onChange(id, 'l')}\n                active={value === 'l' || value === undefined}\n                disabled={disabled}\n              >\n                <div className=\"image-sizes-text\">L</div>\n              </Button>\n            </Button.Group>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nImageSizeWidget.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  id: PropTypes.string.isRequired,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nImageSizeWidget.defaultProps = {\n  onChange: () => {},\n};\n\nexport default injectIntl(ImageSizeWidget);\n","/**\n * VocabularyTermsWidget\n * @module components/manage/Widgets/VocabularyTermsWidget\n * Widget for plone.schema.JSONField field meant for a SimpleVocabulary source\n * \n\nVOCABULARY_SCHEMA = json.dumps(\n    {\n        \"type\": \"object\",\n        \"properties\": {\n            \"items\": {\n                \"type\": \"array\",\n                \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"token\": {\"type\": \"string\"},\n                        \"titles\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"lang\": {\"type\": \"string\"},\n                                \"title\": {\"type\": \"string\"},\n                            }\n                        },\n                    }\n                }\n            }\n        },\n    }\n)\n\n\nclass IPloneconfSettings(Interface):\n\n    types_of_foo = schema.JSONField(\n        title=\"Types of Foo\",\n        description=\"Available types of a foo\",\n        required=False,\n        schema=VOCABULARY_SCHEMA,\n        widget=\"vocabularyterms\",\n        default={\"items\": [\n            {\n                \"token\": \"talk\",\n                \"titles\": {\n                    \"en\": \"Talk\",\n                    \"de\": \"Vortrag\",\n                }\n            },\n            {\n                \"token\": \"lightning-talk\",\n                \"titles\": {\n                    \"en\": \"Lightning-Talk\",\n                    \"de\": \"kürzerer erleuchtender Vortrag\",\n                }\n            },\n        ]},\n        missing_value={\"items\": []},\n    )\n\n\n@provider(IVocabularyFactory)\ndef TalkTypesVocabulary(context):\n    name = \"ploneconf.types_of_talk\"\n    registry_record_value = api.portal.get_registry_record(name)\n    items = registry_record_value.get('items', [])\n    lang = api.portal.get_current_language()\n    return SimpleVocabulary.fromItems([[item['token'], item['token'], item['titles'][lang]] for item in items])\n\n\n * titles are editable\n * tokens are generated\n * \n * Purpose: Use this widget for a controlpanel field\n * that acts as a source of a vocabulary for a zope.schema.Choice field.\n * Vocabulary terms should change over time only in title, not value,\n * as vocabulary term values are stored on content type instances.\n *\n * Apply widget with `widget='vocabularyterms'`\n * Future widget directive coming: Apply widget with directive widget\n *\n * See storybook for a demo: Run\n * `yarn storybook`\n * or see https://docs.voltocms.com/storybook/\n */\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { find, findIndex, remove } from 'lodash';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { v4 as uuid } from 'uuid';\n\nimport { Button } from 'semantic-ui-react';\n\nimport {\n  DragDropList,\n  FormFieldWrapper,\n  Icon,\n  ObjectWidget,\n} from '@plone/volto/components';\nimport { langmap } from '@plone/volto/helpers';\n\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport addSVG from '@plone/volto/icons/add.svg';\nimport dragSVG from '@plone/volto/icons/drag.svg';\n\nconst messages = defineMessages({\n  title: {\n    id: 'Vocabulary terms',\n    defaultMessage: 'Vocabulary terms',\n  },\n  termtitle: {\n    id: 'Vocabulary term',\n    defaultMessage: 'Vocabulary term',\n  },\n  addTerm: {\n    id: 'Add vocabulary term',\n    defaultMessage: 'Add term',\n  },\n  removeTerm: {\n    id: 'Remove term',\n    defaultMessage: 'Remove term',\n  },\n  clearTermTitle: {\n    id: 'Reset term title',\n    defaultMessage: 'Reset title',\n  },\n  termtitlelabel: {\n    id: 'Vocabulary term title',\n    defaultMessage: 'Title',\n  },\n});\n\nconst VocabularyTermsWidget = (props) => {\n  const { id, value = {}, onChange } = props;\n  var widgetvalue = value;\n  const dispatch = useDispatch();\n  const [toFocusId, setToFocusId] = React.useState('');\n  const [editableToken, setEditableToken] = React.useState('');\n  const intl = useIntl();\n\n  React.useEffect(() => {\n    const element = document.getElementById(toFocusId);\n    element && element.focus();\n    setToFocusId('');\n  }, [dispatch, toFocusId]);\n\n  // LEGACY: value from unordered zope.schema.Dict instead of zope.schema.JSONField\n  if (widgetvalue.items === undefined) {\n    widgetvalue = {\n      items: Object.keys(widgetvalue).map((key) => {\n        return {\n          token: key,\n          titles: {\n            en: widgetvalue[key],\n          },\n        };\n      }),\n    };\n  }\n\n  let vocabularyterms = widgetvalue.items;\n\n  let supportedLanguages = Object.keys(\n    vocabularyterms?.map((el) => el.titles)?.pop() || {},\n  );\n\n  const TermSchema = {\n    title: 'Translation of term',\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Email',\n        fields: supportedLanguages,\n      },\n    ],\n    properties: Object.fromEntries(\n      supportedLanguages.map((languageIdentifier) => [\n        languageIdentifier,\n        {\n          title: langmap[languageIdentifier]?.nativeName ?? languageIdentifier,\n        },\n      ]),\n    ),\n    required: [],\n  };\n\n  function onChangeFieldHandler(token, fieldid, fieldvalue) {\n    let index = findIndex(widgetvalue.items, { token: token });\n    let newitems = widgetvalue.items;\n    newitems.splice(index, 1, {\n      token: token,\n      titles: fieldvalue,\n    });\n    onChange(id, {\n      items: newitems,\n    });\n  }\n\n  function addTermHandler(e) {\n    e.preventDefault();\n    const newtoken = uuid();\n    let newitems = widgetvalue.items;\n    newitems.push({\n      token: newtoken,\n      titles: Object.fromEntries(supportedLanguages.map((el) => [el, ''])),\n    });\n    onChange(id, {\n      items: newitems,\n    });\n    setToFocusId(`field-${supportedLanguages[0]}-0-${id}-${newtoken}`);\n    setEditableToken(newtoken);\n  }\n\n  function swap(arr, from, to) {\n    arr.splice(from, 1, arr.splice(to, 1, arr[from])[0]);\n  }\n\n  let enhancedvocabularyterms = vocabularyterms.map((el) => {\n    return { ...el, '@id': el.token };\n  });\n\n  return (\n    <FormFieldWrapper {...props} className=\"vocabularytermswidget dictwidget\">\n      <div className=\"add-item-button-wrapper\">\n        <Button\n          aria-label={intl.formatMessage(messages.termtitle)}\n          onClick={(e) => {\n            addTermHandler(e);\n          }}\n        >\n          <Icon name={addSVG} size=\"18px\" />\n          {intl.formatMessage(messages.addTerm)}\n        </Button>\n      </div>\n      <DragDropList\n        childList={enhancedvocabularyterms.map((o) => [o['@id'], o])}\n        onMoveItem={(result) => {\n          const { source, destination } = result;\n          if (!destination) {\n            return;\n          }\n          let newitems = widgetvalue.items;\n          swap(newitems, source.index, destination.index);\n          onChange(id, {\n            items: newitems,\n          });\n          return true;\n        }}\n      >\n        {(dragProps) => {\n          const { child, childId, index } = dragProps;\n          let termProps = {\n            index: index,\n            id,\n            vocabularyterms,\n            vterm: child,\n            onChange,\n          };\n          return termsWrapper(\n            dragProps,\n            <ObjectWidget\n              id={`${id}-${child.token}`}\n              key={childId}\n              onChange={(fieldid, fieldvalue) => {\n                onChangeFieldHandler(child.token, fieldid, fieldvalue);\n              }}\n              value={child.titles}\n              schema={TermSchema}\n              title=\"Translation of term\"\n            />,\n            { editableToken, setEditableToken, ...termProps },\n          );\n        }}\n      </DragDropList>\n    </FormFieldWrapper>\n  );\n};\n\nconst termsWrapper = ({ draginfo }, OW, termProps) => (\n  <TermsWrapper draginfo={draginfo} termProps={termProps}>\n    {OW}\n  </TermsWrapper>\n);\n\nconst TermsWrapper = (props) => {\n  const intl = useIntl();\n  const { termProps, draginfo, children } = props;\n  const { id, vocabularyterms, vterm, onChange } = termProps;\n\n  const _updateTermsWithNewToken = (term, newtoken) => {\n    let newitems = termProps.vocabularyterms;\n    let index = findIndex(newitems, { token: term.token });\n    newitems.splice(index, 1, {\n      token: newtoken,\n      titles: newitems[index].titles,\n    });\n    onChange(id, {\n      items: newitems,\n    });\n  };\n\n  function onChangeTokenHandler(event) {\n    let value = event.target.value;\n    // required token length: 3\n    if (value.length > 2) {\n      // check if value is different from already used tokens\n      if (find(termProps.vocabularyterms, (el) => el.token === value)) {\n        // token already token. Stay with uuid.\n      } else {\n        // `token '${value}' is OK`\n        _updateTermsWithNewToken(vterm, value);\n        termProps.setEditableToken('');\n      }\n    }\n  }\n\n  return (\n    <div\n      ref={draginfo.innerRef}\n      {...draginfo.draggableProps}\n      className=\"vocabularyterm\"\n    >\n      <div style={{ alignItems: 'center', display: 'flex' }}>\n        <div {...draginfo.dragHandleProps} className=\"draghandlewrapper\">\n          <Icon name={dragSVG} size=\"18px\" />\n        </div>\n        <div className=\"ui drag block inner\">{children}</div>\n        <div>\n          {vterm.token === termProps.editableToken ? (\n            <input\n              id={`token-${vterm.token}`}\n              title=\"Token\"\n              placeholder=\"token\"\n              onBlur={onChangeTokenHandler}\n            />\n          ) : null}\n          <Button\n            icon\n            basic\n            className=\"delete-button\"\n            title={intl.formatMessage(messages.removeTerm)}\n            aria-label={`${intl.formatMessage(messages.removeTerm)} #${\n              vterm.token\n            }`}\n            onClick={(e) => {\n              e.preventDefault();\n              remove(vocabularyterms, (el) => el.token === vterm.token);\n              onChange(id, { items: vocabularyterms });\n            }}\n          >\n            <Icon name={deleteSVG} size=\"20px\" color=\"#e40166\" />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VocabularyTermsWidget;\n","/**\n * SelectWidget component.\n * @module components/manage/Widgets/SelectWidget\n */\n\nimport { map, intersection, filter, toPairs, groupBy } from 'lodash';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { compose } from 'redux';\n\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport withQueryString from './../hocs/withQueryString';\n\nimport {\n  Option,\n  DropdownIndicator,\n  selectTheme,\n  customSelectStyles,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\n\nconst identity = (a) => a;\n\n/**\n * SelectWidget component class.\n * @function SelectWidget\n * @returns {string} Markup of the component.\n */\nclass SelectWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    loading: PropTypes.bool,\n    value: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n    onChange: PropTypes.func.isRequired,\n    onBlur: PropTypes.func,\n    onClick: PropTypes.func,\n    onEdit: PropTypes.func,\n    onDelete: PropTypes.func,\n    wrapped: PropTypes.bool,\n    querystring: PropTypes.object,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    items: {\n      vocabulary: null,\n    },\n    widgetOptions: {\n      vocabulary: null,\n    },\n    error: [],\n    choices: [],\n    loading: false,\n    value: null,\n    onChange: () => {},\n    onBlur: () => {},\n    onClick: () => {},\n    onEdit: null,\n    onDelete: null,\n  };\n\n  state = {\n    selectedOption: this.props.value\n      ? { label: this.props.value.title, value: this.props.value.value }\n      : {},\n  };\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (!this.props.choices && this.props.vocabBaseUrl) {\n      this.props.getVocabulary({ vocabNameOrURL: this.props.vocabBaseUrl });\n    }\n  }\n\n  /**\n   * Initiate search with new query\n   * @method loadOptions\n   * @param {string} search Search query.\n   * @param {string} previousOptions The previous options rendered.\n   * @param {string} additional Additional arguments to pass to the next loadOptions.\n   * @returns {undefined}\n   */\n  loadOptions = (search, previousOptions, additional) => {\n    let hasMore = this.props.itemsTotal > previousOptions.length;\n    if (hasMore) {\n      const offset = this.state.search !== search ? 0 : additional.offset;\n      this.props.getVocabulary({\n        vocabNameOrURL: this.props.vocabBaseUrl,\n        query: search,\n        start: offset,\n      });\n      this.setState({ search });\n\n      return {\n        options:\n          intersection(previousOptions, this.props.choices).length ===\n          this.props.choices.length\n            ? []\n            : this.props.choices,\n        hasMore: hasMore,\n        additional: {\n          offset: offset === additional.offset ? offset + 25 : offset,\n        },\n      };\n    }\n    return null;\n  };\n\n  /* Customized to pass object instead of plain string value */\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n    this.props.onChange(this.props.id, {\n      value: selectedOption.value,\n      title: selectedOption.label,\n    });\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      // choices,\n      value,\n      onChange,\n      // placeholder,\n      querystring,\n      filterOptions = identity,\n    } = this.props;\n    const isDisabled = false;\n    const { indexes = [] } = querystring;\n\n    const Select = this.props.reactSelect.default;\n\n    return (\n      <FormFieldWrapper {...this.props}>\n        <Select\n          id={`field-${id}`}\n          name={id}\n          isDisabled={isDisabled}\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          options={map(\n            toPairs(\n              groupBy(toPairs(filterOptions(indexes)), (item) => item[1].group),\n            ),\n            (group) => ({\n              label: group[0],\n              options: map(\n                filter(group[1], (item) => item[1].enabled),\n                (field) => ({\n                  label: field[1].title,\n                  value: field[0],\n                }),\n              ),\n            }),\n          )}\n          styles={customSelectStyles}\n          theme={selectTheme}\n          components={{ DropdownIndicator, Option }}\n          value={value}\n          onChange={(data) => {\n            let dataValue = [];\n            if (Array.isArray(data)) {\n              for (let obj of data) {\n                dataValue.push(obj.value);\n              }\n              return onChange(id, dataValue);\n            }\n            return onChange(id, data);\n          }}\n        />\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport default compose(\n  withQueryString,\n  injectLazyLibs(['reactSelect']),\n)(SelectWidget);\n","/**\n * SelectAutoComplete component.\n * @module components/manage/Widgets/SelectAutoComplete\n */\n\nimport React, { Component } from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport {\n  normalizeValue,\n  normalizeChoices,\n  convertValueToVocabQuery,\n} from './SelectUtils';\n\nimport {\n  getVocabFromHint,\n  getVocabFromField,\n  getVocabFromItems,\n} from '@plone/volto/helpers';\nimport { getVocabulary, getVocabularyTokenTitle } from '@plone/volto/actions';\n\nimport {\n  Option,\n  ClearIndicator,\n  DropdownIndicator,\n  selectTheme,\n  customSelectStyles,\n  MenuList,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\n\nimport { FormFieldWrapper } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  select: {\n    id: 'Select…',\n    defaultMessage: 'Select…',\n  },\n  no_options: {\n    id: 'No options',\n    defaultMessage: 'No options',\n  },\n  type_text: {\n    id: 'Type text...',\n    defaultMessage: 'Type text...',\n  },\n});\n\n/**\n * SelectAutoComplete component class.\n * @class SelectAutoComplete\n * @extends Component\n */\nclass SelectAutoComplete extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    getVocabulary: PropTypes.func.isRequired,\n    choices: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    ),\n    items: PropTypes.shape({\n      vocabulary: PropTypes.object,\n    }),\n    widgetOptions: PropTypes.shape({\n      vocabulary: PropTypes.object,\n    }),\n    value: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    ),\n    onChange: PropTypes.func.isRequired,\n    wrapped: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    placeholder: PropTypes.string,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    items: {\n      vocabulary: null,\n    },\n    widgetOptions: {\n      vocabulary: null,\n    },\n    error: [],\n    choices: [],\n    value: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Actions\n   */\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      searchLength: 0,\n      termsPairsCache: [],\n    };\n  }\n\n  componentDidMount() {\n    const { id, lang, value, choices } = this.props;\n    if (value && value?.length > 0) {\n      const tokensQuery = convertValueToVocabQuery(\n        normalizeValue(choices, value, this.props.intl),\n      );\n\n      this.props.getVocabularyTokenTitle({\n        vocabNameOrURL: this.props.vocabBaseUrl,\n        subrequest: `widget-${id}-${lang}`,\n        ...tokensQuery,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { value, choices } = this.props;\n    if (\n      this.state.termsPairsCache.length === 0 &&\n      value?.length > 0 &&\n      choices?.length > 0\n    ) {\n      this.setState((state) => ({\n        termsPairsCache: [...state.termsPairsCache, ...choices],\n      }));\n    }\n  }\n\n  /**\n   * Handle the field change, store it in the local state and back to simple\n   * array of tokens for correct serialization\n   * @method handleChange\n   * @param {array} selectedOption The selected options (already aggregated).\n   * @returns {undefined}\n   */\n  handleChange(selectedOption) {\n    this.props.onChange(\n      this.props.id,\n      selectedOption ? selectedOption.map((item) => item.value) : null,\n    );\n    this.setState((state) => ({\n      termsPairsCache: [...state.termsPairsCache, ...selectedOption],\n    }));\n  }\n\n  timeoutRef = React.createRef();\n\n  // How many characters to hold off searching from. Search tarts at this plus one.\n  SEARCH_HOLDOFF = 2;\n\n  loadOptions = (query) => {\n    // Implement a debounce of 400ms and a min search of 3 chars\n    if (query.length > this.SEARCH_HOLDOFF) {\n      if (this.timeoutRef.current) clearTimeout(this.timeoutRef.current);\n      return new Promise((resolve) => {\n        this.timeoutRef.current = setTimeout(async () => {\n          const res = await this.fetchAvailableChoices(query);\n          resolve(res);\n        }, 400);\n      });\n    } else {\n      return Promise.resolve([]);\n    }\n  };\n\n  fetchAvailableChoices = async (query) => {\n    const resp = await this.props.getVocabulary({\n      vocabNameOrURL: this.props.vocabBaseUrl,\n      query,\n      size: -1,\n      subrequest: this.props.lang,\n    });\n\n    return normalizeChoices(resp.items || [], this.props.intl);\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const selectedOption = normalizeValue(\n      this.state.termsPairsCache,\n      this.props.value,\n      this.props.intl,\n    );\n    const SelectAsync = this.props.reactSelectAsync.default;\n\n    return (\n      <FormFieldWrapper {...this.props}>\n        <SelectAsync\n          id={`field-${this.props.id}`}\n          key={this.props.id}\n          isDisabled={this.props.disabled || this.props.isDisabled}\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          cacheOptions\n          defaultOptions={[]}\n          loadOptions={this.loadOptions}\n          onInputChange={(search) =>\n            this.setState({ searchLength: search.length })\n          }\n          noOptionsMessage={() =>\n            this.props.intl.formatMessage(\n              this.state.searchLength > this.SEARCH_HOLDOFF\n                ? messages.no_options\n                : messages.type_text,\n            )\n          }\n          styles={customSelectStyles}\n          theme={selectTheme}\n          components={{\n            ...(this.props.choices?.length > 25 && {\n              MenuList,\n            }),\n            ClearIndicator,\n            DropdownIndicator,\n            Option,\n          }}\n          value={selectedOption || []}\n          placeholder={\n            this.props.placeholder ??\n            this.props.intl.formatMessage(messages.select)\n          }\n          onChange={this.handleChange}\n          isMulti\n        />\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport const SelectAutoCompleteComponent = injectIntl(SelectAutoComplete);\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs(['reactSelectAsync']),\n  connect(\n    (state, props) => {\n      const vocabBaseUrl =\n        getVocabFromHint(props) ||\n        getVocabFromField(props) ||\n        getVocabFromItems(props);\n\n      const vocabState =\n        state.vocabularies?.[vocabBaseUrl]?.subrequests?.[\n          `widget-${props.id}-${state.intl.locale}`\n        ]?.items;\n\n      // If the schema already has the choices in it, then do not try to get\n      // the vocab, even if there is one\n      return props.items?.choices\n        ? { choices: props.items.choices, lang: state.intl.locale }\n        : vocabState\n        ? {\n            choices: vocabState,\n            vocabBaseUrl,\n            lang: state.intl.locale,\n          }\n        : { vocabBaseUrl, lang: state.intl.locale };\n    },\n    { getVocabulary, getVocabularyTokenTitle },\n  ),\n)(SelectAutoComplete);\n","/**\n * Link View.\n * @module components/theme/View/LinkView\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isInternalURL, flattenToAppURL } from '@plone/volto/helpers';\nimport { Container } from 'semantic-ui-react';\nimport { UniversalLink } from '@plone/volto/components';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * View container class.\n * @class View\n * @extends Component\n */\nclass LinkView extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    content: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      remoteUrl: PropTypes.string,\n    }),\n    token: PropTypes.string,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    content: null,\n    token: null,\n  };\n\n  componentDidMount() {\n    if (!this.props.token) {\n      const { remoteUrl } = this.props.content;\n      if (isInternalURL(remoteUrl)) {\n        this.props.history.replace(flattenToAppURL(remoteUrl));\n      } else if (!__SERVER__) {\n        window.location.href = flattenToAppURL(remoteUrl);\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { remoteUrl } = this.props.content;\n    return (\n      <Container id=\"page-document\">\n        <h1 className=\"documentFirstHeading\">{this.props.content.title}</h1>\n        {this.props.content.description && (\n          <p className=\"documentDescription\">\n            {this.props.content.description}\n          </p>\n        )}\n        {remoteUrl && (\n          <p>\n            <FormattedMessage\n              id=\"The link address is:\"\n              defaultMessage=\"The link address is:\"\n            />{' '}\n            <UniversalLink href={remoteUrl}>\n              {flattenToAppURL(remoteUrl)}\n            </UniversalLink>\n          </p>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default LinkView;\n","/**\n * Home container.\n * @module components/theme/ConnectionRefused/ConnectionRefused\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Container } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\n\nconst ConnectionRefused = () => (\n  <Container\n    className=\"view-wrapper\"\n    style={{\n      fontFamily: 'Helvetica, sans-serif',\n      fontSize: '20px',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }}\n  >\n    <h1 style={{ textAlign: 'center', lineHeight: '40px' }}>\n      <FormattedMessage\n        id=\"Connection refused\"\n        defaultMessage=\"Connection refused\"\n      />\n      {__DEVELOPMENT__ && (\n        <>\n          <br />\n          <a href={config.settings.apiPath}>{config.settings.apiPath}</a>\n        </>\n      )}\n    </h1>\n    {__DEVELOPMENT__ && (\n      <p\n        className=\"description\"\n        style={{\n          textAlign: 'center',\n          margin: '20px auto',\n          width: '475px',\n        }}\n      >\n        <FormattedMessage\n          id=\"The backend is not responding, please check if you have started Plone, check your project's configuration object apiPath (or if you are using the internal proxy, devProxyToApiPath) or the RAZZLE_API_PATH Volto's environment variable.\"\n          defaultMessage=\"The backend is not responding, please check if you have started Plone, check your project's configuration object apiPath (or if you are using the internal proxy, devProxyToApiPath) or the RAZZLE_API_PATH Volto's environment variable.\"\n        />\n      </p>\n    )}\n    {!__DEVELOPMENT__ && (\n      <>\n        <p\n          className=\"description\"\n          style={{\n            textAlign: 'center',\n            margin: '20px auto',\n            width: '475px',\n          }}\n        >\n          <FormattedMessage\n            id=\"We apologize for the inconvenience, but the backend of the site you are accessing is not available right now. Please, try again later.\"\n            defaultMessage=\"We apologize for the inconvenience, but the backend of the site you are accessing is not available right now. Please, try again later.\"\n          />\n        </p>\n\n        <p style={{ textAlign: 'center' }}>\n          <FormattedMessage id=\"Thank you.\" defaultMessage=\"Thank you.\" />\n        </p>\n      </>\n    )}\n  </Container>\n);\n\nexport default ConnectionRefused;\n","/**\n * Home container.\n * @module components/theme/CorsError/CorsError\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Container } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\n\n/**\n * Not found function.\n * @function CorsError\n * @returns {string} Markup of the not found page.\n */\nconst CorsError = () => (\n  <Container\n    className=\"view-wrapper\"\n    style={{\n      fontFamily: 'Helvetica, sans-serif',\n      fontSize: '20px',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }}\n  >\n    {__DEVELOPMENT__ && (\n      <>\n        <h1 style={{ textAlign: 'center', lineHeight: '40px' }}>\n          <FormattedMessage\n            id=\"There is a configuration problem on the backend\"\n            defaultMessage=\"There is a configuration problem on the backend\"\n          />\n          <br />\n          <a href={config.settings.apiPath}>{config.settings.apiPath}</a>\n        </h1>\n        <p\n          className=\"description\"\n          style={{\n            textAlign: 'center',\n            margin: '20px auto',\n            width: '475px',\n          }}\n        >\n          <FormattedMessage\n            id=\"The backend is responding, but the CORS headers are not configured properly and the browser has denied the access to the backend resources.\"\n            defaultMessage=\"The backend is responding, but the CORS headers are not configured properly and the browser has denied the access to the backend resources.\"\n          />\n        </p>\n      </>\n    )}\n    {!__DEVELOPMENT__ && (\n      <>\n        <p\n          className=\"description\"\n          style={{\n            textAlign: 'center',\n            margin: '20px auto',\n            width: '475px',\n          }}\n        >\n          <FormattedMessage\n            id=\"The backend server of your website is not answering, we apologize for the inconvenience. Please try to re-load the page and try again. If the problem persists please contact the site administrators.\"\n            defaultMessage=\"The backend server of your website is not answering, we apologize for the inconvenience. Please try to re-load the page and try again. If the problem persists please contact the site administrators.\"\n          />\n        </p>\n\n        <p style={{ textAlign: 'center' }}>\n          <FormattedMessage id=\"Thank you.\" defaultMessage=\"Thank you.\" />\n        </p>\n      </>\n    )}\n  </Container>\n);\n\nexport default CorsError;\n","/**\n * RequestTimeout.\n * @module components/theme/RequestTimeout/RequestTimeout\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Container } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\n\n/**\n * @function RequestTimeout\n * @returns {string} Markup of the not found page.\n */\nconst RequestTimeout = () => (\n  <Container\n    className=\"view-wrapper\"\n    style={{\n      fontFamily: 'Helvetica, sans-serif',\n      fontSize: '20px',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }}\n  >\n    {__DEVELOPMENT__ && (\n      <>\n        <h1 style={{ textAlign: 'center', lineHeight: '40px' }}>\n          <FormattedMessage\n            id=\"No connection to the server\"\n            defaultMessage=\"There is no connection to the server, due to a timeout o no network connection.\"\n          />\n          <br />\n          <a href={config.settings.apiPath}>{config.settings.apiPath}</a>\n        </h1>\n        <p\n          className=\"description\"\n          style={{\n            textAlign: 'center',\n            margin: '20px auto',\n            width: '475px',\n          }}\n        >\n          <FormattedMessage\n            id=\"The backend is not responding, due to a server timeout or a connection problem of your device. Please check your connection and try again.\"\n            defaultMessage=\"The backend is not responding, due to a server timeout or a connection problem of your device. Please check your connection and try again.\"\n          />\n        </p>\n      </>\n    )}\n    {!__DEVELOPMENT__ && (\n      <>\n        <p\n          className=\"description\"\n          style={{\n            textAlign: 'center',\n            margin: '20px auto',\n            width: '475px',\n          }}\n        >\n          <FormattedMessage\n            id=\"The backend is not responding, due to a server timeout or a connection problem of your device. Please check your connection and try again.\"\n            defaultMessage=\"The backend is not responding, due to a server timeout or a connection problem of your device. Please check your connection and try again.\"\n          />\n        </p>\n\n        <p style={{ textAlign: 'center' }}>\n          <FormattedMessage id=\"Thank you.\" defaultMessage=\"Thank you.\" />\n        </p>\n      </>\n    )}\n  </Container>\n);\n\nexport default RequestTimeout;\n","/**\n * Edit text cell block.\n * @module components/manage/Blocks/Title/Cell\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { includes } from 'lodash';\nimport config from '@plone/volto/registry';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport loadable from '@loadable/component';\n\nconst Editor = loadable(() => import('draft-js-plugins-editor'));\n\n/**\n * Edit text cell class.\n * @class Cell\n * @extends Component\n */\nclass CellComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    onSelectCell: PropTypes.func.isRequired,\n    row: PropTypes.number,\n    cell: PropTypes.number,\n    value: PropTypes.object,\n    selected: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    isTableBlockSelected: PropTypes.bool,\n    disableNewBlocks: PropTypes.bool,\n    editable: PropTypes.bool,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    detached: false,\n    editable: true,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Cell\n   */\n  constructor(props) {\n    super(props);\n\n    const { EditorState, convertFromRaw } = props.draftJs;\n    const createInlineToolbarPlugin = props.draftJsInlineToolbarPlugin.default;\n\n    if (!__SERVER__) {\n      this.draftConfig = config.settings.richtextEditorSettings(props);\n      let editorState;\n      editorState = EditorState.createWithContent(convertFromRaw(props.value));\n\n      const inlineToolbarPlugin = createInlineToolbarPlugin({\n        structure: this.draftConfig.richTextEditorInlineToolbarButtons,\n      });\n\n      this.state = {\n        editorState,\n        inlineToolbarPlugin,\n      };\n    }\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.node) {\n      const onFocus = this.node.editor._onFocus;\n      this.node.editor._onFocus = (event) => {\n        onFocus(event);\n        this.props.onSelectCell(this.props.row, this.props.cell);\n      };\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.isTableBlockSelected !== this.props.isTableBlockSelected &&\n      this.props.cell === 0 &&\n      this.props.row === 0\n    ) {\n      this.node.focus();\n    }\n  }\n\n  /**\n   * Change handler\n   * @method onChange\n   * @param {object} editorState Editor state.\n   * @returns {undefined}\n   */\n  onChange(editorState) {\n    this.setState({ editorState }, () => {\n      this.props.onChange(this.props.row, this.props.cell, editorState);\n    });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (__SERVER__) {\n      return <div />;\n    }\n\n    const { InlineToolbar } = this.state.inlineToolbarPlugin;\n    const isSoftNewlineEvent = this.props.draftJsLibIsSoftNewlineEvent.default;\n    const { RichUtils } = this.props.draftJs;\n\n    return (\n      <div>\n        <Editor\n          readOnly={!this.props.editable}\n          onChange={this.onChange}\n          editorState={this.state.editorState}\n          plugins={[\n            this.state.inlineToolbarPlugin,\n            ...this.draftConfig.richTextEditorPlugins,\n          ]}\n          blockRenderMap={this.draftConfig.extendedBlockRenderMap}\n          blockStyleFn={this.draftConfig.blockStyleFn}\n          customStyleMap={this.draftConfig.customStyleMap}\n          handleReturn={(e) => {\n            if (isSoftNewlineEvent(e)) {\n              this.onChange(\n                RichUtils.insertSoftNewline(this.state.editorState),\n              );\n              return 'handled';\n            }\n            if (!this.props.detached && !this.props.disableNewBlocks) {\n              const selectionState = this.state.editorState.getSelection();\n              const anchorKey = selectionState.getAnchorKey();\n              const currentContent = this.state.editorState.getCurrentContent();\n              const currentContentBlock = currentContent.getBlockForKey(\n                anchorKey,\n              );\n              const blockType = currentContentBlock.getType();\n              if (!includes(this.draftConfig.listBlockTypes, blockType)) {\n                this.props.onSelectBlock(\n                  this.props.onAddBlock(\n                    this.draftConfig.defaultBlockType,\n                    this.props.index + 1,\n                  ),\n                );\n                return 'handled';\n              }\n              return 'un-handled';\n            }\n            return {};\n          }}\n          ref={(node) => {\n            this.node = node;\n          }}\n        />\n        <InlineToolbar />\n      </div>\n    );\n  }\n}\n\nexport const Cell = injectLazyLibs([\n  'draftJs',\n  'draftJsBlockBreakoutPlugin',\n  'draftJsCreateBlockStyleButton',\n  'draftJsCreateInlineStyleButton',\n  'draftJsFilters',\n  'draftJsImportHtml',\n  'draftJsInlineToolbarPlugin',\n  'draftJsLibIsSoftNewlineEvent',\n  'immutableLib',\n])(CellComponent);\n\nconst Preloader = (props) => {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    Editor.load().then(() => setLoaded(true));\n  }, []);\n  return loaded ? <Cell {...props} /> : null;\n};\n\nexport default Preloader;\n","module.exports = {\"attributes\":{\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"xmlns\":\"http://www.w3.org/2000/svg\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M3 13V3H21V13H3ZM5 5H19V11H5V5Z\\\" fill=\\\"currentcolor\\\"/><path d=\\\"M13 19H11V21H13V19zM15 19H17V21H15V19zM5 19H3V21H5V19zM7 19H9V21H7V19zM21 19H19V21H21V19zM19 15H21V17H19V15zM5 15H3V17H5V15z\\\"/>\"}","module.exports = {\"attributes\":{\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"xmlns\":\"http://www.w3.org/2000/svg\"},\"content\":\"<path d=\\\"M13 3H11V5H13V3Z\\\"/><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M3 21V11H21V21H3ZM5 13H19V19H5V13Z\\\" fill=\\\"currentcolor\\\"/><path d=\\\"M15 3H17V5H15V3zM5 3H3V5H5V3zM7 3H9V5H7V3zM21 3H19V5H21V3zM19 7H21V9H19V7zM5 7H3V9H5V7z\\\"/>\"}","module.exports = {\"attributes\":{\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"xmlns\":\"http://www.w3.org/2000/svg\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M13 21H3L3 3L13 3V21ZM5 19L5 5H11V19H5Z\\\" fill=\\\"currentcolor\\\"/><path d=\\\"M19 11V13H21V11H19zM19 9V7H21V9H19zM19 19V21H21V19H19zM19 17V15H21V17H19zM19 3V5H21V3L19 3zM15 5V3L17 3V5H15zM15 19V21H17V19H15z\\\"/>\"}","module.exports = {\"attributes\":{\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"xmlns\":\"http://www.w3.org/2000/svg\"},\"content\":\"<path d=\\\"M3 11L3 13H5L5 11H3Z\\\"/><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M21 21H11V3L21 3V21ZM13 19V5H19V19H13Z\\\" fill=\\\"currentcolor\\\"/><path d=\\\"M3 9L3 7H5V9H3zM3 19L3 21H5V19H3zM3 17L3 15H5V17H3zM3 3L3 5H5V3L3 3zM7 5V3L9 3V5H7zM7 19V21H9V19H7z\\\"/>\"}","module.exports = {\"attributes\":{\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"xmlns\":\"http://www.w3.org/2000/svg\"},\"content\":\"<path d=\\\"M5 9H19V11H21V7H3V17H15V15H5V9Z\\\" fill=\\\"currentcolor\\\"/><path d=\\\"M20.0001 17.4142L18.2072 19.2071L16.793 17.7929L18.5859 16L16.793 14.2071L18.2072 12.7929L20.0001 14.5858L21.793 12.7929L23.2072 14.2071L21.4143 16L23.2072 17.7929L21.793 19.2071L20.0001 17.4142Z\\\"/>\"}","module.exports = {\"attributes\":{\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"xmlns\":\"http://www.w3.org/2000/svg\"},\"content\":\"<path d=\\\"M9 5H15V15H17V3H7V21H11V19H9V5Z\\\" fill=\\\"currentcolor\\\"/><path d=\\\"M16.0001 21.4142L14.2072 23.2071L12.793 21.7929L14.5859 20L12.793 18.2071L14.2072 16.7929L16.0001 18.5858L17.793 16.7929L19.2072 18.2071L17.4143 20L19.2072 21.7929L17.793 23.2071L16.0001 21.4142Z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path d=\\\"M0 2L30 2 30 0 0 0zM0 10L24 10 24 8 0 8z\\\" transform=\\\"translate(3 13)\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M27 16L25 16 23 16 21 16 19 16 17 16 15 16 13 16 11 16 9 16 7 16 7 10 29 10 29 16 27 16zM5 8L5 16 5 18 7 18 9 18 11 18 13 18 15 18 17 18 19 18 21 18 23 18 25 18 27 18 29 18 31 18 31 16 31 8 5 8zM5 24L31 24 31 22 5 22zM5 28L23 28 23 26 5 26z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M23,17 L29,17 L29,13 L23,13 L23,17 Z M23,29 L29,29 L29,25 L23,25 L23,29 Z M15,29 L21,29 L21,25 L15,25 L15,29 Z M7,29 L13,29 L13,25 L7,25 L7,29 Z M7,17 L13,17 L13,13 L7,13 L7,17 Z M7,11 L13,11 L13,7 L7,7 L7,11 Z M15,17 L21,17 L21,13 L15,13 L15,17 Z M7,23 L13,23 L13,19 L7,19 L7,23 Z M23,23 L29,23 L29,19 L23,19 L23,23 Z M15,23 L21,23 L21,19 L15,19 L15,23 Z M15,11 L21,11 L21,7 L15,7 L15,11 Z M23,11 L29,11 L29,7 L23,7 L23,11 Z M23,5 L13,5 L5,5 L5,13 L5,17 L5,25 L5,31 L13,31 L23,31 L31,31 L31,25 L31,17 L31,13 L31,5 L23,5 Z\\\"/>\"}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport loadable from '@loadable/component';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport { Button } from 'semantic-ui-react';\nimport { Icon } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nimport galleryLeftSVG from '@plone/volto/icons/left-key.svg';\nimport galleryRightSVG from '@plone/volto/icons/right-key.svg';\nimport galleryPlaySVG from '@plone/volto/icons/play.svg';\nimport galleryPauseSVG from '@plone/volto/icons/pause.svg';\nimport galleryFullScreenSVG from '@plone/volto/icons/fullscreen.svg';\nimport galleryBackDownSVG from '@plone/volto/icons/back-down.svg';\n\nconst ImageGallery = loadable(() => import('react-image-gallery'));\n\nconst renderLeftNav = (onClick, disabled) => {\n  return (\n    <Button\n      className=\"image-gallery-icon image-gallery-left-nav primary basic\"\n      disabled={disabled}\n      onClick={onClick}\n    >\n      <Icon name={galleryLeftSVG} size=\"48px\" fill=\"black\" />\n    </Button>\n  );\n};\nconst renderRightNav = (onClick, disabled) => {\n  return (\n    <Button\n      className=\"image-gallery-icon image-gallery-right-nav primary basic\"\n      disabled={disabled}\n      onClick={onClick}\n    >\n      <Icon name={galleryRightSVG} size=\"48px\" />\n    </Button>\n  );\n};\n\nconst renderPlayPauseButton = (onClick, isPlaying) => (\n  <Button\n    type=\"button\"\n    className=\"image-gallery-icon image-gallery-play-button basic primary\"\n    onClick={onClick}\n    aria-label=\"Play or Pause Slideshow\"\n  >\n    {isPlaying ? (\n      <Icon name={galleryPauseSVG} size=\"48px\" />\n    ) : (\n      <Icon name={galleryPlaySVG} size=\"48px\" />\n    )}\n  </Button>\n);\n\nconst renderFullscreenButton = (onClick, isFullscreen) => {\n  return (\n    <Button\n      type=\"button\"\n      className=\"image-gallery-icon image-gallery-fullscreen-button primary basic\"\n      onClick={onClick}\n      aria-label=\"Open Fullscreen\"\n    >\n      {isFullscreen ? (\n        <Icon name={galleryBackDownSVG} size=\"48px\" />\n      ) : (\n        <Icon name={galleryFullScreenSVG} size=\"48px\" />\n      )}\n    </Button>\n  );\n};\n\nconst ImageGalleryTemplate = ({ items }) => {\n  const { settings } = config;\n  const renderItems = items.filter(\n    (content) =>\n      settings.imageObjects.includes(content['@type']) && content.image_field,\n  );\n  const imagesInfo = renderItems.map((item) => {\n    return {\n      original: `${flattenToAppURL(item['@id'])}/@@images/${\n        item.image_field\n      }/large`,\n      thumbnail: `${flattenToAppURL(item['@id'])}/@@images/${\n        item.image_field\n      }/thumb`,\n    };\n  });\n\n  return (\n    renderItems.length > 0 && (\n      <ImageGallery\n        items={imagesInfo}\n        renderLeftNav={renderLeftNav}\n        renderRightNav={renderRightNav}\n        renderPlayPauseButton={renderPlayPauseButton}\n        renderFullscreenButton={renderFullscreenButton}\n        lazyLoad={true}\n      />\n    )\n  );\n};\n\nImageGalleryTemplate.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default ImageGalleryTemplate;\n","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M11,10.71 L11,25.29 L23.96,18 L11,10.71 Z M9,28.71 L9,7.29 L28.04,18 L9,28.71 Z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path d=\\\"M21 25L23 25 23 11 21 11 21 25zM19 27L25 27 25 9 19 9 19 27zM13 25L15 25 15 11 13 11 13 25zM11 27L17 27 17 9 11 9 11 27z\\\" fill-rule=\\\"evenodd\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M31 13L31 5 23 5 23 7 27.586 7 18 16.586 8.414 7 13 7 13 5 5 5 5 13 7 13 7 8.414 16.586 18 7 27.586 7 23 5 23 5 31 13 31 13 29 8.414 29 18 19.414 27.586 29 23 29 23 31 31 31 31 23 29 23 29 27.586 19.414 18 29 8.414 29 13z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M29 23L29 21 21 21 21 29 23 29 23 24.414 29.293 30.707 30.707 29.293 24.414 23zM13 11.586L6.707 5.293 5.293 6.707 11.586 13 7 13 7 15 15 15 15 7 13 7zM29 13L24.414 13 30.707 6.707 29.293 5.293 23 11.586 23 7 21 7 21 15 29 15zM7 23L11.586 23 5.293 29.293 6.707 30.707 13 24.414 13 29 15 29 15 21 7 21z\\\"/></g>\"}","module.exports = require(\"lodash/isFunction\");","import loadable from '@loadable/component';\n\nexport const loadables = {\n  prettierStandalone: loadable.lib(() => import('prettier/standalone')),\n  prettierParserHtml: loadable.lib(() => import('prettier/parser-html')),\n  prismCore: loadable.lib(() => import('prismjs/components/prism-core')),\n  toastify: loadable.lib(() => import('react-toastify')),\n  reactSelect: loadable.lib(() => import('react-select'), { ssr: false }),\n  reactWindow: loadable.lib(() => import('react-window'), { ssr: false }),\n  reactSortableHOC: loadable.lib(() => import('react-sortable-hoc'), {\n    ssr: false,\n  }),\n  reactSelectAsyncPaginate: loadable.lib(\n    () => import('react-select-async-paginate'),\n    { ssr: false },\n  ),\n  reactSelectAsync: loadable.lib(() => import('react-select/async'), {\n    ssr: false,\n  }),\n  reactSelectCreateable: loadable.lib(() => import('react-select/creatable'), {\n    ssr: false,\n  }),\n  reactSelectAsyncCreateable: loadable.lib(\n    () => import('react-select/async-creatable'),\n    {\n      ssr: false,\n    },\n  ),\n  diffLib: loadable.lib(() => import('diff')),\n  moment: loadable.lib(() => import('moment')),\n  reactDates: loadable.lib(() => import('react-dates')),\n  reactDnd: loadable.lib(() => import('react-dnd')),\n  reactDndHtml5Backend: loadable.lib(() => import('react-dnd-html5-backend')),\n  reactBeautifulDnd: loadable.lib(() => import('react-beautiful-dnd')),\n\n  // draftjs libs\n  immutableLib: loadable.lib(() => import('immutable')),\n  draftJs: loadable.lib(() => import('draft-js')),\n  draftJsLibIsSoftNewlineEvent: loadable.lib(() =>\n    import('draft-js/lib/isSoftNewlineEvent'),\n  ),\n  draftJsFilters: loadable.lib(() => import('draftjs-filters')),\n  draftJsInlineToolbarPlugin: loadable.lib(() =>\n    import('draft-js-inline-toolbar-plugin'),\n  ),\n  draftJsImportHtml: loadable.lib(() => import('draft-js-import-html')),\n  draftJsBlockBreakoutPlugin: loadable.lib(() =>\n    import('draft-js-block-breakout-plugin'),\n  ),\n  draftJsCreateInlineStyleButton: loadable.lib(() =>\n    import('draft-js-buttons/lib/utils/createInlineStyleButton'),\n  ),\n  draftJsCreateBlockStyleButton: loadable.lib(() =>\n    import('draft-js-buttons/lib/utils/createBlockStyleButton'),\n  ),\n  draftJsPluginsUtils: loadable.lib(() => import('draft-js-plugins-utils')),\n};\n","module.exports = require(\"@sentry/integrations\");","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M7,29 L29,29 L29,7 L7,7 L7,29 Z M5,31 L31,31 L31,5 L5,5 L5,31 Z\\\"/><path d=\\\"M21 17L25 17 25 11 21 11 21 17zM19 19L27 19 27 9 19 9 19 19zM9 11L17 11 17 9 9 9zM9 15L17 15 17 13 9 13zM9 19L17 19 17 17 9 17zM9 23L27 23 27 21 9 21zM9 27L23 27 23 25 9 25z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M6.9996,3.0003 L6.9996,33.0003 L29.0006,33.0003 L29.0006,11.5863 L20.4136,3.0003 L6.9996,3.0003 Z M9.0006,5.0003 L19.0006,5.0003 L19.0006,13.0003 L27.0006,13.0003 L27.0006,31.0003 L9.0006,31.0003 L9.0006,5.0003 Z M20.9996,6.4143 L25.5856,11.0003 L20.9996,11.0003 L20.9996,6.4143 Z\\\"/><path d=\\\"M11 27L25 27 25 25 11 25zM11 23L25 23 25 21 11 21zM11 19L18 19 18 17 11 17z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M18.0003,2.9998 L4.9993,10.5828 L4.9993,25.7318 L18.0003,33.3158 L31.0003,25.7318 L31.0003,10.5828 L18.0003,2.9998 Z M19.0003,5.8988 L28.0693,11.1888 L19.0003,16.4248 L19.0003,5.8988 Z M7.9303,11.1888 L17.0003,5.8988 L17.0003,16.4248 L7.9303,11.1888 Z M20.0003,18.1578 L29.0003,12.9618 L29.0003,23.3538 L20.0003,18.1578 Z M6.9993,12.9618 L15.9993,18.1578 L6.9993,23.3538 L6.9993,12.9618 Z M19.0003,19.8898 L28.0693,25.1258 L19.0003,30.4168 L19.0003,19.8898 Z M7.9303,25.1258 L17.0003,19.8898 L17.0003,30.4168 L7.9303,25.1258 Z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M18,31 C10.832,31 5,25.168 5,18 C5,10.832 10.832,5 18,5 C25.168,5 31,10.832 31,18 C31,25.168 25.168,31 18,31 M18,3 C9.729,3 3,9.729 3,18 C3,26.271 9.729,33 18,33 C26.271,33 33,26.271 33,18 C33,9.729 26.271,3 18,3\\\"/><path d=\\\"M19,11 L17,11 L17,13 L11,13 L11,15 L21.019,15 C20.951,16.355 20.437,19.122 17.782,21.903 C16.268,20.501 15.662,19.221 15.343,17.783 L13.39,18.217 C13.82,20.152 14.704,21.74 16.308,23.264 C15.515,23.902 14.596,24.529 13.517,25.125 L14.483,26.875 C15.812,26.142 16.93,25.364 17.881,24.569 C18.897,25.321 20.103,26.078 21.548,26.875 L22.515,25.125 C21.253,24.428 20.221,23.786 19.365,23.177 C22.399,19.954 22.963,16.678 23.026,15 L25,15 L25,13 L19,13 L19,11 Z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M3,29 L33,29 L33,6.999 L3,6.999 L3,29 Z M6.546,9 L29.454,9 L18,19.636 L6.546,9 Z M28.707,23.293 L23.07,17.656 L31,10.293 L31,27 L5,27 L5,10.293 L12.93,17.656 L7.293,23.293 L8.707,24.707 L14.396,19.018 L18,22.365 L21.604,19.018 L27.293,24.707 L28.707,23.293 Z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M22.7875,30.075 C24.0565,28.319 25.0255,25.873 25.5515,23 L29.9975,23 C28.6495,26.222 26.0375,28.782 22.7875,30.075 L22.7875,30.075 Z M6.0035,23 L10.4485,23 C10.9745,25.873 11.9435,28.319 13.2125,30.075 C9.9625,28.782 7.3505,26.222 6.0035,23 L6.0035,23 Z M13.2125,5.925 C11.9435,7.681 10.9745,10.127 10.4485,13 L6.0025,13 C7.3505,9.778 9.9625,7.218 13.2125,5.925 L13.2125,5.925 Z M19.0005,21 L19.0005,15 L23.8345,15 C23.9395,15.951 24.0005,16.95 24.0005,18 C24.0005,19.05 23.9395,20.049 23.8345,21 L19.0005,21 Z M19.0005,30.79 L19.0005,23 L23.5275,23 C22.6995,27.191 20.8895,30.032 19.0005,30.79 L19.0005,30.79 Z M17.0005,23 L17.0005,30.79 C15.1105,30.032 13.3005,27.191 12.4725,23 L17.0005,23 Z M17.0005,5.21 L17.0005,13 L12.4725,13 C13.3005,8.81 15.1105,5.968 17.0005,5.21 L17.0005,5.21 Z M23.5275,13 L19.0005,13 L19.0005,5.21 C20.8895,5.968 22.6995,8.81 23.5275,13 L23.5275,13 Z M12.0005,18 C12.0005,16.95 12.0605,15.951 12.1655,15 L17.0005,15 L17.0005,21 L12.1655,21 C12.0605,20.049 12.0005,19.05 12.0005,18 L12.0005,18 Z M5.0005,18 C5.0005,16.966 5.1345,15.965 5.3635,15 L10.1555,15 C10.0545,15.967 10.0005,16.969 10.0005,18 C10.0005,19.031 10.0545,20.033 10.1555,21 L5.3635,21 C5.1345,20.035 5.0005,19.034 5.0005,18 L5.0005,18 Z M31.0005,18 C31.0005,19.034 30.8655,20.035 30.6365,21 L25.8445,21 C25.9455,20.033 26.0005,19.031 26.0005,18 C26.0005,16.969 25.9455,15.967 25.8445,15 L30.6365,15 C30.8655,15.965 31.0005,16.966 31.0005,18 L31.0005,18 Z M29.9975,13 L25.5515,13 C25.0255,10.127 24.0565,7.681 22.7875,5.925 C26.0375,7.218 28.6495,9.778 29.9975,13 L29.9975,13 Z M18.0005,3 C9.7285,3 3.0005,9.729 3.0005,18 C3.0005,26.272 9.7285,33 18.0005,33 C26.2715,33 33.0005,26.272 33.0005,18 C33.0005,9.729 26.2715,3 18.0005,3 L18.0005,3 Z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M7,24.5859 L7,22.9999 L6,22.9999 C5.449,22.9999 5,22.5519 5,21.9999 L5,9.9999 C5,9.4479 5.449,8.9999 6,8.9999 L26,8.9999 C26.551,8.9999 27,9.4479 27,9.9999 L27,14.9999 L29,14.9999 L29,9.9999 C29,8.3459 27.654,6.9999 26,6.9999 L6,6.9999 C4.346,6.9999 3,8.3459 3,9.9999 L3,21.9999 C3,23.3039 3.836,24.4159 5,24.8289 L5,29.4139 L9.414,24.9999 L17,24.9999 L17,22.9999 L8.586,22.9999 L7,24.5859 Z\\\"/><path d=\\\"M31,24 C31,24.552 30.551,25 30,25 L29,25 L29,26.586 L27.414,25 L22,25 C21.449,25 21,24.552 21,24 L21,20 C21,19.448 21.449,19 22,19 L30,19 C30.551,19 31,19.448 31,20 L31,24 Z M30,17 L22,17 C20.346,17 19,18.346 19,20 L19,24 C19,25.654 20.346,27 22,27 L26.586,27 L31,31.414 L31,26.829 C32.164,26.416 33,25.304 33,24 L33,20 C33,18.346 31.654,17 30,17 L30,17 Z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M27,19 C27,24.505 21.647,28.58 19,30.259 L19,7 L27,7 L27,19 Z M17,30.262 C14.354,28.587 9,24.519 9,19 L9,7 L17,7 L17,30.262 Z M7,5 L7,19 C7,27.514 17.122,32.679 17.552,32.895 L18,33.118 L18.448,32.895 C18.878,32.679 29,27.514 29,19 L29,5 L7,5 Z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M4.8774,27 L23.1324,27 C22.3064,25.614 20.0084,24.548 19.0924,24.232 C15.4554,23.373 15.0454,21.379 15.0114,21.154 L15.0004,21.003 L15.0004,17.895 L15.6304,17.645 C16.8514,17.158 16.7644,16.393 16.7634,16.386 L16.6384,15.607 L17.3654,15.304 C17.4044,15.268 17.5774,15.064 17.9134,14.315 C17.8684,14.255 17.7984,14.185 17.7704,14.163 L17.1894,13.725 L17.8304,11.881 C18.1344,10.639 18.0094,9.353 17.4614,8.651 C17.1974,8.314 16.8544,8 16.5174,8 L15.9664,8 L15.6724,7.655 C15.6704,7.653 15.0354,6.766 14.0284,6.766 C13.5514,6.769 12.1334,6.916 11.3624,7.421 C10.4574,8.013 9.5174,9.292 10.1784,11.953 L10.7744,13.773 L10.1364,14.196 C10.0934,14.228 10.0314,14.292 9.9984,14.339 C10.1754,14.816 10.5154,15.233 10.6504,15.308 L11.4284,15.632 L11.2414,16.388 C11.2324,16.494 11.2244,17.188 12.3694,17.644 L13.0004,17.894 L12.9884,21.151 C12.9554,21.376 12.5524,23.373 8.8194,24.259 C7.9814,24.553 5.7004,25.615 4.8774,27 L4.8774,27 Z M25.0004,29 L3.0004,29 L3.0004,28 C3.0004,24.39 7.8954,22.539 8.4774,22.34 C10.5884,21.834 10.8954,21.057 11.0004,20.847 L11.0004,19.199 C9.8114,18.515 9.3684,17.523 9.2664,16.76 C8.7184,16.278 8.2894,15.536 8.0804,14.916 C7.8304,14.176 8.0854,13.536 8.4414,13.083 L8.2574,12.521 C7.2064,8.3 9.3144,6.401 10.2674,5.777 C11.6724,4.858 13.7894,4.827 14.0254,4.826 C15.5324,4.826 16.5564,5.734 17.0414,6.29 C17.8034,6.429 18.5104,6.867 19.0364,7.54 C19.5834,8.239 20.4024,9.807 19.7454,12.45 L19.5164,13.114 C19.9054,13.644 20.0924,14.325 19.7984,14.997 C19.5254,15.62 19.2044,16.289 18.7404,16.739 C18.6424,17.505 18.2004,18.509 17.0004,19.199 L17.0004,20.87 C17.0754,21.01 17.3384,21.816 19.4304,22.313 C20.1054,22.539 25.0004,24.389 25.0004,28 L25.0004,29 Z\\\"/><path d=\\\"M33,29 L28,29 L28,27 L30.672,27 C29.782,25.622 27.317,24.555 26.333,24.238 C22.523,23.401 22.062,21.514 22.01,21.145 L22,21.003 L22,17.895 L22.63,17.645 C23.845,17.16 23.854,16.383 23.851,16.296 L23.826,15.586 L24.486,15.294 C24.643,15.191 24.916,14.646 25.069,14.327 C25.025,14.276 24.965,14.219 24.913,14.181 L24.301,13.734 L24.982,11.861 C25.416,10.223 24.956,9.155 24.642,8.745 C24.337,8.349 23.917,8 23.491,8 L22.962,8 L22.665,7.684 C22.642,7.651 21.984,6.802 20.88,6.767 C20.799,6.783 20.692,6.852 20.656,6.879 L19.312,5.413 C19.843,4.929 20.57,4.839 20.71,4.824 L20.814,4.822 C22.399,4.822 23.483,5.733 23.99,6.279 C24.854,6.414 25.651,6.897 26.228,7.647 C27.158,8.859 27.392,10.571 26.886,12.466 L26.654,13.098 C27.077,13.635 27.278,14.33 26.953,15.022 C26.63,15.709 26.295,16.358 25.813,16.785 C25.682,17.549 25.2,18.522 24,19.202 L24,20.874 C24.073,20.994 24.578,21.807 26.855,22.31 C27.563,22.532 33,24.375 33,28 L33,29 Z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M11,25 L18.293,25 L17.419,26.503 C17.141,26.98 17,27.484 17,28 C17,29.654 18.346,31 20,31 C21.654,31 23,29.654 23,28 C23,27.484 22.859,26.98 22.581,26.503 L21.707,25 L27,25 L27,22.896 C26.672,22.965 26.338,23 26,23 C23.243,23 21,20.757 21,18 C21,15.243 23.243,13 26,13 C26.338,13 26.672,13.035 27,13.104 L27,11 L21.707,11 L22.581,9.497 C22.859,9.02 23,8.516 23,8 C23,6.346 21.654,5 20,5 C18.346,5 17,6.346 17,8 C17,8.516 17.141,9.02 17.419,9.497 L18.293,11 L11,11 L11,16.294 L9.497,15.419 C9.02,15.141 8.516,15 8,15 C6.346,15 5,16.346 5,18 C5,19.654 6.346,21 8,21 C8.516,21 9.02,20.859 9.497,20.581 L11,19.706 L11,25 Z M20,33 C17.243,33 15,30.757 15,28 C15,27.661 15.035,27.328 15.104,27 L9,27 L9,22.896 C8.672,22.965 8.338,23 8,23 C5.243,23 3,20.757 3,18 C3,15.243 5.243,13 8,13 C8.338,13 8.672,13.035 9,13.104 L9,9 L15.104,9 C15.035,8.672 15,8.339 15,8 C15,5.243 17.243,3 20,3 C22.757,3 25,5.243 25,8 C25,8.339 24.965,8.672 24.896,9 L29,9 L29,16.294 L27.497,15.419 C27.02,15.141 26.516,15 26,15 C24.346,15 23,16.346 23,18 C23,19.654 24.346,21 26,21 C26.516,21 27.02,20.859 27.497,20.581 L29,19.706 L29,27 L24.896,27 C24.965,27.328 25,27.661 25,28 C25,30.757 22.757,33 20,33 L20,33 Z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M14,28 L14,18 L21,18 C23.757,18 26,20.243 26,23 C26,25.757 23.757,28 21,28 L14,28 Z M20,8 C22,8 23.5,9.57 23.5,11.5 C23.5,13.43 22,15 20,15 L14,15 L14,8 L20,8 Z M29,23 C29,19.981 27.318,17.348 24.843,15.987 C25.907,14.819 26.5,13.24 26.5,11.5 C26.5,8.226 24.41,5.517 21,5.072 L21,5 L14,5 L11,5 L9,5 L9,8 L11,8 L11,28 L9,28 L9,31 L22,31 L22,30.931 C25.94,30.436 29,27.072 29,23 L29,23 Z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path fill-rule=\\\"evenodd\\\" d=\\\"M25 7L25 5 19 5 19 7 20.612 7 13.279 29 11 29 11 31 17 31 17 29 15.388 29 22.721 7z\\\"/>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<g fill-rule=\\\"evenodd\\\"><path d=\\\"M11 11L33 11 33 8.999 11 8.999zM11 19L33 19 33 17 11 17zM11 27L33 27 33 25 11 25zM6.835 13L6.835 8.245 6.773 8.245 5.416 9.199 5.416 8.008 6.835 7.002 8.096 7.002 8.096 13zM8.69463281 21L4.46538477 21 4.46538477 20.0869141 6.40776758 18.0449219C6.65402532 17.7626939 6.83525723 17.5109061 6.95146875 17.2895508 7.06768027 17.0681955 7.12578516 16.875896 7.12578516 16.7126465 7.12578516 16.4802234 7.06698854 16.2948412 6.94939355 16.1564941 6.83179857 16.0181471 6.65540873 15.9489746 6.42021875 15.9489746 6.20993124 15.9489746 6.044609 16.0382071 5.92424707 16.2166748 5.80388514 16.3951425 5.74370508 16.62272 5.74370508 16.8994141L4.37407617 16.8994141 4.36577539 16.8745117C4.35194069 16.3155897 4.53455605 15.8417581 4.91362695 15.4530029 5.29269786 15.0642477 5.7948901 14.869873 6.42021875 14.869873 7.08428457 14.869873 7.60238649 15.0331201 7.97454004 15.3596191 8.34669359 15.6861182 8.53276758 16.1329724 8.53276758 16.7001953 8.53276758 17.0820332 8.43385092 17.4195949 8.23601465 17.7128906 8.03817837 18.0061864 7.67363937 18.441973 7.14238672 19.0202637L6.32475977 19.8959961 6.33721094 19.9208984 8.69463281 19.9208984 8.69463281 21zM5.74370508 25.3933105L6.40361719 25.3933105C6.65540881 25.3933105 6.84909177 25.3255215 6.98467188 25.1899414 7.12025198 25.0543613 7.18804102 24.8662121 7.18804102 24.6254883 7.18804102 24.4345694 7.12716923 24.2740892 7.00542383 24.144043 6.88367843 24.0139967 6.70659687 23.9489746 6.47417383 23.9489746 6.29155573 23.9489746 6.13107556 24.0015457 5.99272852 24.1066895 5.85438147 24.2118332 5.78520898 24.3474113 5.78520898 24.5134277L4.42388086 24.5134277 4.41558008 24.4885254C4.39897843 24.0070777 4.58851104 23.6169449 4.98418359 23.3181152 5.37985615 23.0192856 5.85991319 22.869873 6.42436914 22.869873 7.08013414 22.869873 7.60446158 23.0199773 7.99736719 23.3201904 8.3902728 23.6204035 8.58672266 24.0458143 8.58672266 24.5964355 8.58672266 24.8703627 8.5016405 25.1228423 8.33147363 25.3538818 8.16130677 25.5849214 7.93372929 25.7654616 7.64873438 25.8955078 7.97246646 26.0144863 8.22563776 26.1950265 8.40825586 26.4371338 8.59087396 26.6792411 8.68218164 26.9690738 8.68218164 27.3066406 8.68218164 27.8600288 8.47051384 28.2951237 8.04717188 28.6119385 7.62382991 28.9287532 7.08290108 29.0871582 6.42436914 29.0871582 5.85714625 29.0871582 5.36117953 28.9384374 4.9364541 28.6409912 4.51172867 28.3435451 4.30628639 27.9126005 4.32012109 27.3481445L4.32842188 27.3232422 5.69805078 27.3232422C5.69805078 27.5169281 5.77344879 27.6794834 5.92424707 27.8109131 6.07504535 27.9423428 6.25835244 28.0080566 6.47417383 28.0080566 6.72043157 28.0080566 6.91688143 27.9388842 7.0635293 27.8005371 7.21017717 27.6621901 7.2835 27.4878754 7.2835 27.2775879 7.2835 26.9842922 7.20671854 26.7705492 7.05315332 26.6363525 6.8995881 26.5021559 6.68307822 26.4350586 6.40361719 26.4350586L5.74370508 26.4350586 5.74370508 25.3933105z\\\"/></g>\"}","module.exports = {\"attributes\":{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"36\",\"height\":\"36\",\"viewBox\":\"0 0 36 36\"},\"content\":\"<path d=\\\"M28 18L28 10 20 10 20 18 26 18C26 21.3137085 23.3137085 24 20 24L20 26C24.418278 26 28 22.418278 28 18L28 18zM26 12L26 16 22 16 22 12 26 12 26 12zM16 18L16 10 8 10 8 18 14 18C14 21.3137085 11.3137085 24 8 24L8 26C12.418278 26 16 22.418278 16 18L16 18zM14 12L14 16 10 16 10 12 14 12 14 12z\\\" fill-rule=\\\"evenodd\\\"/>\"}","module.exports = require(\"querystring\");","module.exports = require(\"detect-browser\");","module.exports = require(\"universal-cookie-express\");","import config from '@plone/volto/registry';\nconst reserved_option_names = ['tags', 'extras'];\n\nconst initSentry = (Sentry) => {\n  const { settings } = config;\n  let sentry_config = __SENTRY__;\n\n  if (__SENTRY__) {\n    if (!sentry_config) {\n      sentry_config = {};\n    }\n    sentry_config.SENTRY_DSN = __SENTRY__.SENTRY_DSN;\n    sentry_config.SENTRY_CONFIG = __SENTRY__.SENTRY_CONFIG;\n  }\n\n  if (__SERVER__) {\n    if (process.env.RAZZLE_SENTRY_DSN) {\n      if (!sentry_config) {\n        sentry_config = {};\n      }\n      sentry_config.SENTRY_DSN = process.env.RAZZLE_SENTRY_DSN;\n    }\n    if (sentry_config) {\n      if (process.env.RAZZLE_SENTRY_BACKEND_CONFIG) {\n        sentry_config.SENTRY_CONFIG = JSON.parse(\n          process.env.RAZZLE_SENTRY_BACKEND_CONFIG,\n        );\n      }\n      if (process.env.RAZZLE_SENTRY_RELEASE) {\n        if (!sentry_config.SENTRY_CONFIG) {\n          sentry_config.SENTRY_CONFIG = {};\n        }\n        sentry_config.SENTRY_CONFIG.release = process.env.RAZZLE_SENTRY_RELEASE;\n      }\n    }\n  }\n\n  if (__CLIENT__) {\n    if (window?.env?.RAZZLE_SENTRY_DSN) {\n      if (!sentry_config) {\n        sentry_config = {};\n      }\n      sentry_config.SENTRY_DSN = window.env.RAZZLE_SENTRY_DSN;\n    }\n    if (sentry_config) {\n      if (window?.env?.RAZZLE_SENTRY_FRONTEND_CONFIG) {\n        sentry_config.SENTRY_CONFIG = JSON.parse(\n          window.env.RAZZLE_SENTRY_FRONTEND_CONFIG,\n        );\n      }\n      if (window?.env?.RAZZLE_SENTRY_RELEASE) {\n        if (!sentry_config.SENTRY_CONFIG) {\n          sentry_config.SENTRY_CONFIG = {};\n        }\n        sentry_config.SENTRY_CONFIG.release = window.env.RAZZLE_SENTRY_RELEASE;\n      }\n    }\n  }\n\n  if (sentry_config || settings?.sentryOptions?.dsn) {\n    let sentry_options = {\n      ...settings.sentryOptions,\n    };\n    if (sentry_config?.SENTRY_DSN) {\n      sentry_options.dsn = sentry_config.SENTRY_DSN;\n    }\n    if (sentry_config?.SENTRY_CONFIG !== undefined) {\n      const options = Object.keys(sentry_config.SENTRY_CONFIG);\n      options.forEach((field) => {\n        if (!reserved_option_names.includes(field)) {\n          sentry_options[field] = sentry_config.SENTRY_CONFIG[field];\n        }\n      });\n    }\n    Sentry.init(sentry_options);\n    if (sentry_options?.tags) {\n      Sentry.setTags(sentry_options.tags);\n    }\n    if (sentry_options?.extras) {\n      Sentry.setExtras(sentry_options.extras);\n    }\n\n    if (sentry_config?.SENTRY_CONFIG !== undefined) {\n      if (sentry_config?.SENTRY_CONFIG?.tags !== undefined) {\n        Sentry.setTags(sentry_config.SENTRY_CONFIG.tags);\n      }\n      if (sentry_config?.SENTRY_CONFIG?.extras !== undefined) {\n        Sentry.setExtras(sentry_config.SENTRY_CONFIG.extras);\n      }\n    }\n  }\n};\n\nexport default initSentry;\n","/**\n * Replace with custom runner when needed.\n * @module index\n */\n\nimport start from '@plone/volto/start-server';\n\nconst reloadServer = start();\n\nif (module.hot) {\n  reloadServer();\n}\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","module.exports = require(\"@sentry/browser\");","// Exports\nmodule.exports = {};\n","/**\n * Add your config changes here.\n * @module config\n * @example\n * export default function applyConfig(config) {\n *   config.settings = {\n *     ...config.settings,\n *     port: 4300,\n *     listBlockTypes: {\n *       ...config.settings.listBlockTypes,\n *       'my-list-item',\n *    }\n * }\n */\n\n// All your imports required for the config here BEFORE this line\nimport '@plone/volto/config';\n\nexport default function applyConfig(config) {\n  // Add here your project's configuration here by modifying `config` accordingly\n  return config;\n}\n","// Exports\nmodule.exports = {};\n","module.exports = require(\"prismjs/components/prism-markup\");","import express from 'express';\nimport { getAPIResourceWithAuth } from '@plone/volto/helpers';\n\nconst HEADERS = ['content-type', 'content-disposition', 'cache-control'];\n\nfunction imageMiddleware(req, res, next) {\n  getAPIResourceWithAuth(req)\n    .then((resource) => {\n      // Just forward the headers that we need\n      HEADERS.forEach((header) => {\n        if (resource.headers[header]) {\n          res.set(header, resource.headers[header]);\n        }\n      });\n      res.send(resource.body);\n    })\n    .catch(next);\n}\n\nexport default function () {\n  const middleware = express.Router();\n\n  middleware.all(['**/@@images/*'], imageMiddleware);\n  middleware.id = 'imageResourcesProcessor';\n  return middleware;\n}\n","import express from 'express';\nimport { getAPIResourceWithAuth } from '@plone/volto/helpers';\n\nconst HEADERS = ['content-type', 'content-disposition', 'cache-control'];\n\nfunction fileMiddleware(req, res, next) {\n  getAPIResourceWithAuth(req)\n    .then((resource) => {\n      // Just forward the headers that we need\n      HEADERS.forEach((header) => {\n        if (resource.headers[header]) {\n          res.set(header, resource.headers[header]);\n        }\n      });\n      res.send(resource.body);\n    })\n    .catch(next);\n}\n\nexport default function () {\n  const middleware = express.Router();\n\n  middleware.all(['**/@@download/*', '**/@@display-file/*'], fileMiddleware);\n  middleware.id = 'filesResourcesProcessor';\n  return middleware;\n}\n","import express from 'express';\nimport { generateRobots } from '@plone/volto/helpers';\n\n/*\nrobots.txt - priority order:\n\n1) robots.txt in /public folder\n2) VOLTO_ROBOTSTXT var in .env\n3) default: plone robots.txt\n\n*/\n\nconst ploneRobots = function (req, res, next) {\n  generateRobots(req).then((robots) => {\n    res.set('Content-Type', 'text/plain');\n    res.send(robots);\n  });\n};\n\nconst envRobots = function (req, res, next) {\n  res.type('text/plain');\n  res.send(process.env.VOLTO_ROBOTSTXT);\n};\n\nexport default function () {\n  const middleware = express.Router();\n  if (process.env.VOLTO_ROBOTSTXT) {\n    middleware.all('**/robots.txt', envRobots);\n  } else {\n    middleware.all('**/robots.txt', ploneRobots);\n  }\n  middleware.id = 'robots.txt';\n  return middleware;\n}\n","import express from 'express';\nimport { generateSitemap } from '@plone/volto/helpers';\n\nexport const sitemap = function (req, res, next) {\n  generateSitemap(req).then((sitemap) => {\n    if (Buffer.isBuffer(sitemap)) {\n      res.set('Content-Type', 'application/x-gzip');\n      res.set('Content-Encoding', 'gzip');\n      res.set('Content-Disposition', 'attachment; filename=\"sitemap.xml.gz\"');\n      res.send(sitemap);\n    } else {\n      // {\"errno\":-111, \"code\":\"ECONNREFUSED\", \"host\": ...}\n      res.status(500);\n      // Some data, such as the internal API address, may be sensitive to be published\n      res.send(`Sitemap generation error: ${sitemap.code ?? '-'}`);\n    }\n  });\n};\n\nexport default function () {\n  const middleware = express.Router();\n\n  middleware.all('**/sitemap.xml.gz', sitemap);\n  middleware.id = 'sitemap.xml.gz';\n  return middleware;\n}\n","// Internal proxy to bypass CORS while developing.\n\nimport express from 'express';\nimport config from '@plone/volto/registry';\nimport {\n  createProxyMiddleware,\n  responseInterceptor,\n} from 'http-proxy-middleware';\nimport querystring from 'querystring';\nimport { parse as parseUrl } from 'url';\n\nconst filter = function (pathname, req) {\n  // This is the proxy to the API in case the accept header is 'application/json'\n  return config.settings.devProxyToApiPath && pathname.startsWith('/++api++');\n};\n\nlet _env = null;\n\n// the config is not available at the middleware creation time, so it needs to\n// read/cache the global configuration on first request.\nfunction getEnv() {\n  if (_env) {\n    return _env;\n  }\n\n  const apiPathURL = parseUrl(config.settings.apiPath);\n  const proxyURL = parseUrl(config.settings.devProxyToApiPath);\n  const serverURL = `${proxyURL.protocol}//${proxyURL.host}`;\n  const instancePath = proxyURL.pathname;\n\n  _env = {\n    apiPathURL,\n    serverURL,\n    instancePath,\n  };\n\n  return _env;\n}\n\nexport default function () {\n  const middleware = express.Router();\n  const devProxy = createProxyMiddleware(filter, {\n    selfHandleResponse: true,\n    onProxyRes: responseInterceptor(\n      async (responseBuffer, proxyRes, req, res) => {\n        return responseBuffer;\n      },\n    ),\n    onProxyReq: (proxyReq, req, res) => {\n      // Fixes https://github.com/chimurai/http-proxy-middleware/issues/320\n      if (!req.body || !Object.keys(req.body).length) {\n        return;\n      }\n\n      const contentType = proxyReq.getHeader('Content-Type');\n      const writeBody = (bodyData) => {\n        proxyReq.setHeader('Content-Length', Buffer.byteLength(bodyData));\n        proxyReq.write(bodyData);\n      };\n\n      if (contentType.includes('application/json')) {\n        writeBody(JSON.stringify(req.body));\n      }\n\n      if (contentType.includes('application/x-www-form-urlencoded')) {\n        writeBody(querystring.stringify(req.body));\n      }\n    },\n    // target: serverURL,\n    router: (req) => {\n      const { serverURL } = getEnv();\n      return serverURL;\n    },\n    pathRewrite: (path, req) => {\n      const { apiPathURL, instancePath } = getEnv();\n      const target =\n        config.settings.proxyRewriteTarget ||\n        `/VirtualHostBase/http/${apiPathURL.hostname}:${apiPathURL.port}${instancePath}/++api++/VirtualHostRoot`;\n\n      return `${target}${path.replace('/++api++', '')}`;\n    },\n    logLevel: process.env.DEBUG_HPM ? 'debug' : 'silent',\n    ...(config.settings?.proxyRewriteTarget?.startsWith('https') && {\n      changeOrigin: true,\n      secure: false,\n    }),\n  });\n\n  middleware.all('*', devProxy);\n  middleware.id = 'devProxy';\n\n  return middleware;\n}\n","import imagesMiddleware from '@plone/volto/express-middleware/images';\nimport filesMiddleware from '@plone/volto/express-middleware/files';\nimport robotstxtMiddleware from '@plone/volto/express-middleware/robotstxt';\nimport sitemapMiddleware from '@plone/volto/express-middleware/sitemap';\nimport devProxyMiddleware from '@plone/volto/express-middleware/devproxy';\n\nconst settings = {\n  expressMiddleware: [\n    devProxyMiddleware(),\n    filesMiddleware(),\n    imagesMiddleware(),\n    robotstxtMiddleware(),\n    sitemapMiddleware(),\n  ],\n  criticalCssPath: 'public/critical.css',\n  readCriticalCss: null, // so it will be defaultReadCriticalCss\n  extractScripts: { errorPages: false },\n};\n\nexport default settings;\n"],"sourceRoot":""}