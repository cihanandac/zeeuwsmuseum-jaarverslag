{"version":3,"file":"server.dc86302e3ccce2020b60.hot-update.js","sources":["webpack:///./src/customizations/components/theme/Header/Header.jsx"],"sourcesContent":["/**\n * Header component.\n * @module components/theme/Header/Header\n */\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { Container, Segment } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport {\n  Anontools,\n  LanguageSelector,\n  Logo,\n  Navigation,\n  SearchWidget,\n  Breadcrumbs,\n  NavItems,\n} from '@plone/volto/components';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { getNavigation } from '@plone/volto/actions';\n\nfunction useScrollDirection() {\n  const [scrollDirection, setScrollDirection] = useState(null);\n\n  useEffect(() => {\n    let lastScrollY = window.pageYOffset;\n\n    const updateScrollDirection = () => {\n      const scrollY = window.pageYOffset;\n      const direction = scrollY > lastScrollY ? 'down' : 'up';\n      if (\n        direction !== scrollDirection &&\n        (scrollY - lastScrollY > 30 || scrollY - lastScrollY < -10)\n      ) {\n        setScrollDirection(direction);\n      }\n      lastScrollY = scrollY > 0 ? scrollY : 0;\n    };\n    window.addEventListener('scroll', updateScrollDirection); // add event listener\n    return () => {\n      window.removeEventListener('scroll', updateScrollDirection); // clean up\n    };\n  }, [scrollDirection]);\n\n  return scrollDirection;\n}\n\n\n/**\n * Header component class.\n * @class Header\n * @extends Component\n */\nconst Header = (props) => {\n  /**\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n  const scrollDirection = useScrollDirection();\n  const menuItems = props.menuItems;\n\n  return (\n    <Segment\n      basic\n      className={`header-wrapper ${\n        scrollDirection === 'down' ? 'hide' : 'show'\n      }`}\n      id=\"header-wrapper\"\n      role=\"banner\"\n    >\n      <Container className=\"header-container\">\n        <div className=\"header\">\n          <div className=\"logo-nav-wrapper\">\n            <div className=\"logo\">\n              <a className=\"logo-written\" id=\"writtenlogo\" href=\"/\">\n                ZEEUWS MUSEUM\n              </a>\n            </div>\n\n            {/* This section is for the rest of the menu */}\n            <Navigation pathname={props.pathname} />\n            {/* {console.log(props.items)} */}\n            {/* <div className=\"search\">\n              <SearchWidget />\n            </div> */}\n          </div>\n        </div>\n      </Container>\n      <Breadcrumbs pathname={props.pathname} menuItems={props.menuItems} />\n    </Segment>\n  );\n};\n\n\nHeader.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      url: PropTypes.string,\n      items: PropTypes.array,\n      review_state: PropTypes.string,\n    }),\n  ).isRequired,\n  getNavigation: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => {\n      return {\n        items: state,\n      };\n    },\n    { getNavigation },\n  ),\n)(Header);\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AANA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AAAA;AARA;AADA;AADA;AAkBA;AAAA;AAAA;AA1BA;AA6BA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAVA;AAcA;AAIA;AACA;AADA;AAGA;AACA;AAAA;;;;A","sourceRoot":""}