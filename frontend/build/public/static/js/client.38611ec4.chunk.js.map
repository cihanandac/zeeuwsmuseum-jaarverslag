{"version":3,"sources":["webpack:////private/var/folders/nk/871hwn1j52l2q091vzfv37nm0000gn/T/tmp-76281-PMA0IE4CTHh8-.js","webpack:///./src/config.js","webpack:///./src/routes.js","webpack:///./locales lazy ^\\.\\/.*\\.json$ namespace object","webpack:///./src/reducers/index.js","webpack:///./src/client.js","webpack:///./src/theme.js"],"names":["projectConfigLoader","addonsInfo","config","addonLoaders","every","el","TypeError","default","projectConfig","reduce","acc","apply","safeWrapper","func","res","Error","applyConfig","routes","path","component","App","addonRoutes","defaultRoutes","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","code","ids","id","t","keys","Object","module","exports","reducers","defaultReducers","client"],"mappings":"yHAAA,kCAKA,MAAMA,EAAsB,EAAQ,QAE9BC,EAAa,GAwBJ,IATDC,IACZ,MAAMC,EAAe,GACrB,IAAIA,EAAaC,MAAOC,GAAqB,oBAAPA,GACpC,MAAM,IAAIC,UACR,kGAGJ,MAXoB,CAACJ,GACyB,oBAAhCF,EAAoBO,QAAyBP,EAAoBO,QAAQL,GAAUA,EAU1FM,CAAcL,EAAaM,OAAO,CAACC,EAAKC,KAAUC,OAnBtCC,EAmBkDF,EAnBxCT,IAC7B,MAAMY,EAAMD,EAAKX,GACjB,GAAmB,qBAARY,EACT,MAAM,IAAIC,MAAM,gDAElB,OAAOD,IAcqEJ,GAnB1D,IAACG,GAmB+DX,M,0FC7BpF,yDAkBe,SAASc,EAAYd,GAElC,OAAOA,I,kCCpBT,wCAcA,MAAMe,EAAS,CACb,CACEC,KAAM,IACNC,UAAWC,IACXH,OAAQ,IAEFf,IAAOmB,aAAe,MACvBC,OAKML,O,qBC1Bf,IAAIM,EAAM,CACT,YAAa,CACZ,OACA,IAED,YAAa,CACZ,OACA,IAED,YAAa,CACZ,OACA,IAED,YAAa,CACZ,OACA,IAED,YAAa,CACZ,OACA,IAED,YAAa,CACZ,OACA,IAED,YAAa,CACZ,OACA,IAED,YAAa,CACZ,OACA,IAED,YAAa,CACZ,OACA,IAED,eAAgB,CACf,OACA,IAED,YAAa,CACZ,OACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIhB,MAAM,uBAAyBU,EAAM,KAEjD,MADAM,EAAEC,KAAO,mBACHD,KAIR,IAAIE,EAAMV,EAAIE,GAAMS,EAAKD,EAAI,GAC7B,OAAOP,EAAoBK,EAAEE,EAAI,IAAIH,MAAK,WACzC,OAAOJ,EAAoBS,EAAED,EAAI,MAGnCV,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBU,GAAK,OACzBI,EAAOC,QAAUf,G,yRClDjB,MAAMgB,E,iWAAW,CAAH,G,UACTC,GAIUD,O,kCCnBf,uBAOAE,e,kCCPA,sB","file":"static/js/client.38611ec4.chunk.js","sourcesContent":["/*\nThis file is autogenerated. Don't change it directly.\nInstead, change the \"addons\" setting in your package.json file.\n*/\n\nconst projectConfigLoader = require('@root/config');\n\nconst addonsInfo = [];\nexport { addonsInfo };\n\nconst safeWrapper = (func) => (config) => {\n  const res = func(config);\n  if (typeof res === 'undefined') {\n    throw new Error(\"Configuration function doesn't return config\");\n  }\n  return res;\n}\n\nconst projectConfig = (config) => {\n  return typeof projectConfigLoader.default === \"function\" ? projectConfigLoader.default(config) : config;\n}\n\nconst load = (config) => {\n  const addonLoaders = [];\n  if(!addonLoaders.every((el) => typeof el === \"function\")) {\n    throw new TypeError(\n      'Each addon has to provide a function applying its configuration to the projects configuration.',\n    );\n  }\n  return projectConfig(addonLoaders.reduce((acc, apply) => safeWrapper(apply)(acc), config));\n};\nexport default load;\n","/**\n * Add your config changes here.\n * @module config\n * @example\n * export default function applyConfig(config) {\n *   config.settings = {\n *     ...config.settings,\n *     port: 4300,\n *     listBlockTypes: {\n *       ...config.settings.listBlockTypes,\n *       'my-list-item',\n *    }\n * }\n */\n\n// All your imports required for the config here BEFORE this line\nimport '@plone/volto/config';\n\nexport default function applyConfig(config) {\n  // Add here your project's configuration here by modifying `config` accordingly\n  return config;\n}\n","/**\n * Routes.\n * @module routes\n */\n\nimport { App } from '@plone/volto/components';\nimport { defaultRoutes } from '@plone/volto/routes';\nimport config from '@plone/volto/registry';\n\n/**\n * Routes array.\n * @array\n * @returns {array} Routes.\n */\nconst routes = [\n  {\n    path: '/',\n    component: App, // Change this if you want a different component\n    routes: [\n      // Add your routes here\n      ...(config.addonRoutes || []),\n      ...defaultRoutes,\n    ],\n  },\n];\n\nexport default routes;\n","var map = {\n\t\"./de.json\": [\n\t\t\"GkOR\",\n\t\t20\n\t],\n\t\"./en.json\": [\n\t\t\"cCmO\",\n\t\t21\n\t],\n\t\"./es.json\": [\n\t\t\"qgB8\",\n\t\t22\n\t],\n\t\"./eu.json\": [\n\t\t\"D1MZ\",\n\t\t23\n\t],\n\t\"./fr.json\": [\n\t\t\"xSkN\",\n\t\t24\n\t],\n\t\"./it.json\": [\n\t\t\"2WN/\",\n\t\t25\n\t],\n\t\"./ja.json\": [\n\t\t\"fpnu\",\n\t\t26\n\t],\n\t\"./nl.json\": [\n\t\t\"5dWb\",\n\t\t27\n\t],\n\t\"./pt.json\": [\n\t\t\"v0ES\",\n\t\t28\n\t],\n\t\"./pt_BR.json\": [\n\t\t\"+ZGd\",\n\t\t29\n\t],\n\t\"./ro.json\": [\n\t\t\"eqea\",\n\t\t30\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"Zbgq\";\nmodule.exports = webpackAsyncContext;","/**\n * Root reducer.\n * @module reducers/root\n */\n\nimport defaultReducers from '@plone/volto/reducers';\n\n/**\n * Root reducer.\n * @function\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nconst reducers = {\n  ...defaultReducers,\n  // Add your reducers here\n};\n\nexport default reducers;\n","/**\n * Replace with custom client implementation when needed.\n * @module client\n */\n\nimport client from '@plone/volto/start-client';\n\nclient();\n\nif (module.hot) {\n  module.hot.accept();\n}\n","import 'semantic-ui-less/semantic.less';\nimport '@plone/volto/../theme/themes/pastanaga/extras/extras.less';\n"],"sourceRoot":""}