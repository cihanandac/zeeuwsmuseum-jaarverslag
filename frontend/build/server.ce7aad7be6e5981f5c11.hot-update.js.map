{"version":3,"file":"server.ce7aad7be6e5981f5c11.hot-update.js","sources":["webpack:///./node_modules/@plone/volto/src/components/index.js","webpack:///./node_modules/@plone/volto/src/components/manage/LockingToastsFactory/LockingToastsFactory.jsx","webpack:///./node_modules/@plone/volto/src/components/manage/WorkingCopyToastsFactory/WorkingCopyToastsFactory.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/App/App.jsx","webpack:///./node_modules/@plone/volto/src/components/theme/MultilingualRedirector/MultilingualRedirector.jsx","webpack:///./node_modules/@plone/volto/src/routes.js","webpack:///external \"@sentry/browser\"","webpack:///external \"lodash/trim\""],"sourcesContent":["/**\n * Point of contact for component modules. This file is quite sensitive regarding the\n * order in which it's loaded. e.g. if the component depends on others to work, it\n * should ideally be loaded after them. If you start seeing imported components as\n * undefined, check the order of imports in this file.\n * @module components\n */\nimport loadable from '@loadable/component';\n\n//  Do not lazy load them, since it has not much sense (they will live in the main chunk)\n// The App and View component are deliberatelly left out of this index.js file!\n// They should be used by Volto and only by Volto internally\nexport AppExtras from '@plone/volto/components/theme/AppExtras/AppExtras';\nexport Header from '@plone/volto/components/theme/Header/Header';\nexport Logo from '@plone/volto/components/theme/Logo/Logo';\nexport Anontools from '@plone/volto/components/theme/Anontools/Anontools';\nexport Navigation from '@plone/volto/components/theme/Navigation/Navigation';\nexport Breadcrumbs from '@plone/volto/components/theme/Breadcrumbs/Breadcrumbs';\nexport SearchWidget from '@plone/volto/components/theme/SearchWidget/SearchWidget';\nexport Footer from '@plone/volto/components/theme/Footer/Footer';\nexport Title from '@plone/volto/components/theme/Title/Title';\nexport DefaultView from '@plone/volto/components/theme/View/DefaultView';\nexport Pagination from '@plone/volto/components/theme/Pagination/Pagination';\nexport Tags from '@plone/volto/components/theme/Tags/Tags';\nexport OutdatedBrowser from '@plone/volto/components/theme/OutdatedBrowser/OutdatedBrowser';\nexport LanguageSelector from '@plone/volto/components/theme/LanguageSelector/LanguageSelector';\nexport RenderBlocks from '@plone/volto/components/theme/View/RenderBlocks';\nexport SkipLinks from '@plone/volto/components/theme/SkipLinks/SkipLinks';\nexport EventDetails from '@plone/volto/components/theme/EventDetails/EventDetails';\nexport PreviewImage from '@plone/volto/components/theme/PreviewImage/PreviewImage';\n\nexport Error from '@plone/volto/components/theme/Error/Error';\nexport NotFound from '@plone/volto/components/theme/NotFound/NotFound';\nexport Forbidden from '@plone/volto/components/theme/Forbidden/Forbidden';\nexport Unauthorized from '@plone/volto/components/theme/Unauthorized/Unauthorized';\n\nexport Avatar from '@plone/volto/components/theme/Avatar/Avatar';\nexport Icon from '@plone/volto/components/theme/Icon/Icon';\nexport ConditionalLink from '@plone/volto/components/manage/ConditionalLink/ConditionalLink';\nexport UniversalLink from '@plone/volto/components/manage/UniversalLink/UniversalLink';\nexport LinkMore from '@plone/volto/components/manage/LinkMore/LinkMore';\n\n// Lazy load them, since we want them and its deps to be in its own chunk\nexport ContactForm from '@plone/volto/components/theme/ContactForm/ContactForm';\nexport Login from '@plone/volto/components/theme/Login/Login';\nexport Logout from '@plone/volto/components/theme/Logout/Logout';\nexport Sitemap from '@plone/volto/components/theme/Sitemap/Sitemap';\nexport Search from '@plone/volto/components/theme/Search/Search';\nexport Comments from '@plone/volto/components/theme/Comments/Comments';\nexport SocialSharing from '@plone/volto/components/theme/SocialSharing/SocialSharing';\nexport Register from '@plone/volto/components/theme/Register/Register';\nexport PasswordReset from '@plone/volto/components/theme/PasswordReset/PasswordReset';\nexport RequestPasswordReset from '@plone/volto/components/theme/PasswordReset/RequestPasswordReset';\nexport ChangePassword from '@plone/volto/components/manage/Preferences/ChangePassword';\nexport PersonalPreferences from '@plone/volto/components/manage/Preferences/PersonalPreferences';\nexport PersonalInformation from '@plone/volto/components/manage/Preferences/PersonalInformation';\nexport CreateTranslation from '@plone/volto/components/manage/Multilingual/CreateTranslation';\nexport TranslationObject from '@plone/volto/components/manage/Multilingual/TranslationObject';\nexport CompareLanguages from '@plone/volto/components/manage/Multilingual/CompareLanguages';\n\nexport FileView from '@plone/volto/components/theme/View/FileView';\nexport ImageView from '@plone/volto/components/theme/View/ImageView';\nexport NewsItemView from '@plone/volto/components/theme/View/NewsItemView';\n\nexport const EventView = loadable(() =>\n  import('@plone/volto/components/theme/View/EventView'),\n);\n\nexport ListingView from '@plone/volto/components/theme/View/ListingView';\nexport SummaryView from '@plone/volto/components/theme/View/SummaryView';\nexport TabularView from '@plone/volto/components/theme/View/TabularView';\nexport AlbumView from '@plone/volto/components/theme/View/AlbumView';\n\nexport Actions from '@plone/volto/components/manage/Actions/Actions';\nexport Add from '@plone/volto/components/manage/Add/Add';\nexport AddonsControlpanel from '@plone/volto/components/manage/Controlpanels/AddonsControlpanel';\nexport Contents from '@plone/volto/components/manage/Contents/Contents';\nexport Circle from '@plone/volto/components/manage/Contents/circle';\nexport DatabaseInformation from '@plone/volto/components/manage/Controlpanels/DatabaseInformation';\nexport Controlpanel from '@plone/volto/components/manage/Controlpanels/Controlpanel';\nexport Controlpanels from '@plone/volto/components/manage/Controlpanels/Controlpanels';\nexport ContentTypes from '@plone/volto/components/manage/Controlpanels/ContentTypes';\nexport ContentType from '@plone/volto/components/manage/Controlpanels/ContentType';\nexport ContentTypeLayout from '@plone/volto/components/manage/Controlpanels/ContentTypeLayout';\nexport ContentTypeSchema from '@plone/volto/components/manage/Controlpanels/ContentTypeSchema';\nexport ContentTypesActions from '@plone/volto/components/manage/Controlpanels/ContentTypesActions';\nexport UsersControlpanel from '@plone/volto/components/manage/Controlpanels/Users/UsersControlpanel';\nexport UserGroupMembershipControlPanel from '@plone/volto/components/manage/Controlpanels/Users/UserGroupMembershipControlPanel';\nexport GroupsControlpanel from '@plone/volto/components/manage/Controlpanels/Groups/GroupsControlpanel';\nexport ModerateComments from '@plone/volto/components/manage/Controlpanels/ModerateComments';\nexport VersionOverview from '@plone/volto/components/manage/Controlpanels/VersionOverview';\nexport Delete from '@plone/volto/components/manage/Delete/Delete';\nexport Diff from '@plone/volto/components/manage/Diff/Diff';\nexport Display from '@plone/volto/components/manage/Display/Display';\nexport Edit from '@plone/volto/components/manage/Edit/Edit';\nexport ModalForm from '@plone/volto/components/manage/Form/ModalForm';\nexport History from '@plone/volto/components/manage/History/History';\nexport Sharing from '@plone/volto/components/manage/Sharing/Sharing';\nexport Workflow from '@plone/volto/components/manage/Workflow/Workflow';\nexport Messages from '@plone/volto/components/manage/Messages/Messages';\nexport BlockChooser from '@plone/volto/components/manage/BlockChooser/BlockChooser';\nexport BlockChooserButton from '@plone/volto/components/manage/BlockChooser/BlockChooserButton';\nexport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nexport Sidebar from '@plone/volto/components/manage/Sidebar/Sidebar';\nexport SidebarPopup from '@plone/volto/components/manage/Sidebar/SidebarPopup';\nexport SidebarPortal from '@plone/volto/components/manage/Sidebar/SidebarPortal';\nexport PersonalTools from '@plone/volto/components/manage/Toolbar/PersonalTools';\nexport More from '@plone/volto/components/manage/Toolbar/More';\nexport Types from '@plone/volto/components/manage/Toolbar/Types';\nexport Toast from '@plone/volto/components/manage/Toast/Toast';\nexport ManageTranslations from '@plone/volto/components/manage/Multilingual/ManageTranslations';\n\n// Potentially could ve removed from index, since they are internal components and\n// we don't want them to end up in the main chunk\nexport Form from '@plone/volto/components/manage/Form/Form';\nexport BlocksToolbar from '@plone/volto/components/manage/Form/BlocksToolbar';\nexport UndoToolbar from '@plone/volto/components/manage/Form/UndoToolbar';\nexport Field from '@plone/volto/components/manage/Form/Field';\nexport SearchTags from '@plone/volto/components/theme/Search/SearchTags';\nexport CommentEditModal from '@plone/volto/components/theme/Comments/CommentEditModal';\nexport ContentsBreadcrumbs from '@plone/volto/components/manage/Contents/ContentsBreadcrumbs';\nexport ContentsIndexHeader from '@plone/volto/components/manage/Contents/ContentsIndexHeader';\nexport ContentsItem from '@plone/volto/components/manage/Contents/ContentsItem';\nexport ContentsUploadModal from '@plone/volto/components/manage/Contents/ContentsUploadModal';\nexport ContentsPropertiesModal from '@plone/volto/components/manage/Contents/ContentsPropertiesModal';\nexport ContentsRenameModal from '@plone/volto/components/manage/Contents/ContentsRenameModal';\nexport ContentsWorkflowModal from '@plone/volto/components/manage/Contents/ContentsWorkflowModal';\nexport ContentsTagsModal from '@plone/volto/components/manage/Contents/ContentsTagsModal';\nexport RenderUsers from '@plone/volto/components/manage/Controlpanels/Users/RenderUsers';\nexport RenderGroups from '@plone/volto/components/manage/Controlpanels/Groups/RenderGroups';\nexport DiffField from '@plone/volto/components/manage/Diff/DiffField';\nexport DragDropList from '@plone/volto/components/manage/DragDropList/DragDropList';\nexport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nexport BlocksForm from '@plone/volto/components/manage/Blocks/Block/BlocksForm';\nexport BlockDataForm from '@plone/volto/components/manage/Form/BlockDataForm';\n\nexport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\nexport ArrayWidget from '@plone/volto/components/manage/Widgets/ArrayWidget';\nexport CheckboxWidget from '@plone/volto/components/manage/Widgets/CheckboxWidget';\n\nexport const DatetimeWidget = loadable(() =>\n  import('@plone/volto/components/manage/Widgets/DatetimeWidget'),\n);\nexport const RecurrenceWidget = loadable(() =>\n  import(\n    '@plone/volto/components/manage/Widgets/RecurrenceWidget/RecurrenceWidget'\n  ),\n);\n\nexport FileWidget from '@plone/volto/components/manage/Widgets/FileWidget';\nexport IdWidget from '@plone/volto/components/manage/Widgets/IdWidget';\nexport PasswordWidget from '@plone/volto/components/manage/Widgets/PasswordWidget';\nexport ReferenceWidget from '@plone/volto/components/manage/Widgets/ReferenceWidget';\nexport SchemaWidget from '@plone/volto/components/manage/Widgets/SchemaWidget';\nexport SchemaWidgetFieldset from '@plone/volto/components/manage/Widgets/SchemaWidgetFieldset';\nexport SelectWidget from '@plone/volto/components/manage/Widgets/SelectWidget';\nexport TextareaWidget from '@plone/volto/components/manage/Widgets/TextareaWidget';\nexport TextWidget from '@plone/volto/components/manage/Widgets/TextWidget';\nexport WysiwygWidget from '@plone/volto/components/manage/Widgets/WysiwygWidget';\nexport ObjectBrowserWidget from '@plone/volto/components/manage/Widgets/ObjectBrowserWidget';\nexport ObjectBrowserWidgetMode from '@plone/volto/components/manage/Widgets/ObjectBrowserWidget';\nexport ObjectWidget from '@plone/volto/components/manage/Widgets/ObjectWidget';\nexport ObjectListWidget from '@plone/volto/components/manage/Widgets/ObjectListWidget';\n\nexport EditDescriptionBlock from '@plone/volto/components/manage/Blocks/Description/Edit';\nexport EditTitleBlock from '@plone/volto/components/manage/Blocks/Title/Edit';\nexport EditToCBlock from '@plone/volto/components/manage/Blocks/ToC/Edit';\nexport EditTextBlock from '@plone/volto/components/manage/Blocks/Text/Edit';\nexport EditImageBlock from '@plone/volto/components/manage/Blocks/Image/Edit';\nexport EditListingBlock from '@plone/volto/components/manage/Blocks/Listing/Edit';\nexport EditVideoBlock from '@plone/volto/components/manage/Blocks/Video/Edit';\nexport EditBlock from '@plone/volto/components/manage/Blocks/Block/Edit';\nexport EditHeroImageLeftBlock from '@plone/volto/components/manage/Blocks/HeroImageLeft/Edit';\nexport ViewHeroImageLeftBlock from '@plone/volto/components/manage/Blocks/HeroImageLeft/View';\nexport EditMapBlock from '@plone/volto/components/manage/Blocks/Maps/Edit';\nexport EditHTMLBlock from '@plone/volto/components/manage/Blocks/HTML/Edit';\n\nexport ViewDescriptionBlock from '@plone/volto/components/manage/Blocks/Description/View';\nexport ViewTitleBlock from '@plone/volto/components/manage/Blocks/Title/View';\nexport ViewToCBlock from '@plone/volto/components/manage/Blocks/ToC/View';\nexport ViewTextBlock from '@plone/volto/components/manage/Blocks/Text/View';\nexport ViewImageBlock from '@plone/volto/components/manage/Blocks/Image/View';\nexport ViewListingBlock from '@plone/volto/components/manage/Blocks/Listing/View';\nexport ViewVideoBlock from '@plone/volto/components/manage/Blocks/Video/View';\nexport ViewMapBlock from '@plone/volto/components/manage/Blocks/Maps/View';\nexport ViewHTMLBlock from '@plone/volto/components/manage/Blocks/HTML/View';\n\nexport ListingBlockBody from '@plone/volto/components/manage/Blocks/Listing/ListingBody';\nexport ListingBlockData from '@plone/volto/components/manage/Blocks/Listing/ListingData';\n\nexport ImageSidebar from '@plone/volto/components/manage/Blocks/Image/ImageSidebar';\nexport MapsSidebar from '@plone/volto/components/manage/Blocks/Maps/MapsSidebar';\nexport VideoSidebar from '@plone/volto/components/manage/Blocks/Video/VideoSidebar';\nexport LeadImageSidebar from '@plone/volto/components/manage/Blocks/LeadImage/LeadImageSidebar';\n\nexport Style from '@plone/volto/components/manage/Blocks/Block/Style';\nexport BlockSettingsSidebar from '@plone/volto/components/manage/Blocks/Block/Settings';\nexport BlockSettingsSchema from '@plone/volto/components/manage/Blocks/Block/Schema';\nexport TextSettingsSchema from '@plone/volto/components/manage/Blocks/Text/Schema';\nexport ImageSettingsSchema from '@plone/volto/components/manage/Blocks/Image/Schema';\nexport ToCSettingsSchema from '@plone/volto/components/manage/Blocks/ToC/Schema';\n\nexport MaybeWrap from '@plone/volto/components/manage/MaybeWrap/MaybeWrap';\nexport ContentMetadataTags from '@plone/volto/components/theme/ContentMetadataTags/ContentMetadataTags';\nexport FormattedDate from '@plone/volto/components/theme/FormattedDate/FormattedDate';\nexport FormattedRelativeDate from '@plone/volto/components/theme/FormattedDate/FormattedRelativeDate';\nexport Component from '@plone/volto/components/theme/Component/Component';\n\nexport App from '@plone/volto/components/theme/App/App';\n","import React from 'react';\n// import { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Toast } from '@plone/volto/components';\n// import { flattenToAppURL } from '@plone/volto/helpers';\nimport { parse } from 'date-fns';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\nconst messages = defineMessages({\n  thisItemIsLocked: {\n    id: 'This item was locked by {creator} on {date}',\n    defaultMessage: 'This item was locked by {creator} on {date}',\n  },\n  unlockItem: {\n    id:\n      'If you are certain this user has abandoned the object, you may unlock the object. You will then be able to edit it.',\n    defaultMessage:\n      'If you are certain this user has abandoned the object, you may unlock the object. You will then be able to edit it.',\n  },\n});\n\nconst LockingToastsFactory = (props) => {\n  const intl = useIntl();\n  const pathname = useLocation().pathname;\n  const lang = useSelector((state) => state.intl.locale);\n  const { content, user } = props;\n  const lock = content?.lock;\n  const creator = lock?.creator_name || lock?.creator || '';\n  // const creator_url = locking?.creator_url || '';\n  const date = lock?.created || '';\n  const dateOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n  };\n\n  useDeepCompareEffect(() => {\n    if (user && content) {\n      if (lock?.locked && lock?.stealable && lock?.creator !== user) {\n        if (toast.isActive('lockinginfo')) {\n          toast.update('lockinginfo', {\n            render: (\n              <Toast\n                info\n                title={intl.formatMessage(messages.thisItemIsLocked, {\n                  creator: creator,\n                  date: new Intl.DateTimeFormat(lang, dateOptions).format(\n                    parse(date),\n                  ),\n                })}\n                content={intl.formatMessage(messages.unlockItem, {})}\n              />\n            ),\n          });\n        } else {\n          toast.info(\n            <Toast\n              info\n              title={intl.formatMessage(messages.thisItemIsLocked, {\n                creator: creator,\n                date: new Intl.DateTimeFormat(lang, dateOptions).format(\n                  parse(date),\n                ),\n              })}\n              content={intl.formatMessage(messages.unlockItem, {})}\n            />,\n            {\n              toastId: 'lockinginfo',\n              autoClose: false,\n              closeButton: false,\n              transition: null,\n            },\n          );\n        }\n      } else {\n        if (toast.isActive('lockinginfo')) {\n          toast.dismiss('lockinginfo');\n        }\n      }\n    }\n  }, [content, creator, date, dateOptions, intl, lang, lock, pathname, user]);\n\n  return null;\n};\n\nexport default LockingToastsFactory;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Toast } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport { parse } from 'date-fns';\nimport config from '@plone/volto/registry';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\nconst messages = defineMessages({\n  thisIsAWorkingCopyOf: {\n    id: 'This is a working copy of {title}',\n    defaultMessage: 'This is a working copy of {title}',\n  },\n  workingCopyIs: {\n    id: 'This has an ongoing working copy in {title}',\n    defaultMessage: 'This has an ongoing working copy in {title}',\n  },\n  workingCopyCreatedBy: {\n    id: 'Created by {creator} on {date}',\n    defaultMessage: 'Created by {creator} on {date}',\n  },\n});\n\nconst WorkingCopyToastsFactory = (props) => {\n  const intl = useIntl();\n  const pathname = useLocation().pathname;\n  const lang = useSelector((state) => state.intl.locale);\n  const { content } = props;\n  const title = content?.title;\n  const working_copy = content?.working_copy;\n  const dateOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n\n  useDeepCompareEffect(() => {\n    if (content && config.settings.hasWorkingCopySupport) {\n      if (working_copy) {\n        let toastMessage, toastTitle;\n        if (content.working_copy_of) {\n          // I'm a working copy\n          toastMessage = messages.thisIsAWorkingCopyOf;\n          toastTitle = (\n            <Link to={flattenToAppURL(content.working_copy_of['@id'])}>\n              {content.working_copy_of?.title}\n            </Link>\n          );\n        } else {\n          // I'm a baseline\n          toastMessage = messages.workingCopyIs;\n          toastTitle = (\n            <Link to={flattenToAppURL(working_copy['@id'])}>\n              {working_copy?.title}\n            </Link>\n          );\n        }\n        if (toast.isActive('workingcopyinfo')) {\n          toast.update('workingcopyinfo', {\n            render: (\n              <Toast\n                info\n                title={intl.formatMessage(toastMessage, {\n                  title: toastTitle,\n                })}\n                content={intl.formatMessage(messages.workingCopyCreatedBy, {\n                  creator: working_copy?.creator_name,\n                  date: new Intl.DateTimeFormat(lang, dateOptions).format(\n                    parse(working_copy?.created),\n                  ),\n                })}\n              />\n            ),\n          });\n        } else {\n          toast.info(\n            <Toast\n              info\n              title={intl.formatMessage(toastMessage, {\n                title: toastTitle,\n              })}\n              content={intl.formatMessage(messages.workingCopyCreatedBy, {\n                creator: working_copy?.creator_name,\n                date: new Intl.DateTimeFormat(lang, dateOptions).format(\n                  parse(working_copy?.created),\n                ),\n              })}\n            />,\n            {\n              toastId: 'workingcopyinfo',\n              autoClose: false,\n              closeButton: false,\n              transition: null,\n            },\n          );\n        }\n      }\n      if (!working_copy) {\n        if (toast.isActive('workingcopyinfo')) {\n          toast.dismiss('workingcopyinfo');\n        }\n      }\n    }\n  }, [pathname, content, title, working_copy, intl, lang, dateOptions]);\n\n  return null;\n};\n\nexport default WorkingCopyToastsFactory;\n","/**\n * App container.\n * @module components/theme/App/App\n */\n\nimport { Component } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { asyncConnect, Helmet } from '@plone/volto/helpers';\nimport { Segment } from 'semantic-ui-react';\nimport { renderRoutes } from 'react-router-config';\nimport { Slide, ToastContainer, toast } from 'react-toastify';\nimport split from 'lodash/split';\nimport join from 'lodash/join';\nimport trim from 'lodash/trim';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\nimport { PluggablesProvider } from '@plone/volto/components/manage/Pluggable';\nimport { visitBlocks } from '@plone/volto/helpers/Blocks/Blocks';\nimport { injectIntl } from 'react-intl';\n\nimport Error from '@plone/volto/error';\n\nimport {\n  Breadcrumbs,\n  Footer,\n  Header,\n  Icon,\n  OutdatedBrowser,\n  AppExtras,\n  SkipLinks,\n} from '@plone/volto/components';\nimport { BodyClass, getBaseUrl, getView, isCmsUi } from '@plone/volto/helpers';\nimport {\n  getBreadcrumbs,\n  getContent,\n  getNavigation,\n  getTypes,\n  getWorkflow,\n} from '@plone/volto/actions';\n\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport MultilingualRedirector from '@plone/volto/components/theme/MultilingualRedirector/MultilingualRedirector';\nimport WorkingCopyToastsFactory from '@plone/volto/components/manage/WorkingCopyToastsFactory/WorkingCopyToastsFactory';\nimport LockingToastsFactory from '@plone/volto/components/manage/LockingToastsFactory/LockingToastsFactory';\n\nimport * as Sentry from '@sentry/browser';\n\n/**\n * @export\n * @class App\n * @extends {Component}\n */\nclass App extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    pathname: PropTypes.string.isRequired,\n  };\n\n  state = {\n    hasError: false,\n    error: null,\n    errorInfo: null,\n  };\n\n  /**\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      if (this.state.hasError) {\n        this.setState({ hasError: false });\n      }\n    }\n  }\n\n  /**\n   * ComponentDidCatch\n   * @method ComponentDidCatch\n   * @param {string} error  The error\n   * @param {string} info The info\n   * @returns {undefined}\n   */\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true, error, errorInfo: info });\n    if (__CLIENT__) {\n      if (window?.env?.RAZZLE_SENTRY_DSN || __SENTRY__?.SENTRY_DSN) {\n        Sentry.captureException(error);\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { views } = config;\n    const path = getBaseUrl(this.props.pathname);\n    const action = getView(this.props.pathname);\n    const isCmsUI = isCmsUi(this.props.pathname);\n    const ConnectionRefusedView = views.errorViews.ECONNREFUSED;\n\n    const language =\n      this.props.content?.language?.token ?? this.props.intl?.locale;\n\n    return (\n      <PluggablesProvider>\n        {language && (\n          <Helmet>\n            <html lang={language} />\n          </Helmet>\n        )}\n        <BodyClass className={`view-${action}view`} />\n\n        {/* Body class depending on content type */}\n        {this.props.content && this.props.content['@type'] && (\n          <BodyClass\n            className={`contenttype-${this.props.content['@type']\n              .replace(' ', '-')\n              .toLowerCase()}`}\n          />\n        )}\n\n        {/* Body class depending on sections */}\n        <BodyClass\n          className={cx({\n            [trim(join(split(this.props.pathname, '/'), ' section-'))]:\n              this.props.pathname !== '/',\n            siteroot: this.props.pathname === '/',\n            'is-authenticated': !!this.props.token,\n            'is-anonymous': !this.props.token,\n            'cms-ui': isCmsUI,\n            'public-ui': !isCmsUI,\n          })}\n        />\n        <SkipLinks />\n        <Header pathname={path} />\n        <Breadcrumbs pathname={path} />\n        <MultilingualRedirector\n          pathname={this.props.pathname}\n          contentLanguage={this.props.content?.language?.token}\n        >\n          <Segment basic className=\"content-area\">\n            <main>\n              <OutdatedBrowser />\n              {this.props.connectionRefused ? (\n                <ConnectionRefusedView />\n              ) : this.state.hasError ? (\n                <Error\n                  message={this.state.error.message}\n                  stackTrace={this.state.errorInfo.componentStack}\n                />\n              ) : (\n                renderRoutes(this.props.route.routes, {\n                  staticContext: this.props.staticContext,\n                })\n              )}\n            </main>\n          </Segment>\n        </MultilingualRedirector>\n        <Footer />\n        <LockingToastsFactory\n          content={this.props.content}\n          user={this.props.userId}\n        />\n        <WorkingCopyToastsFactory content={this.props.content} />\n        <ToastContainer\n          position={toast.POSITION.BOTTOM_CENTER}\n          hideProgressBar\n          transition={Slide}\n          autoClose={5000}\n          closeButton={\n            <Icon\n              className=\"toast-dismiss-action\"\n              name={clearSVG}\n              size=\"18px\"\n            />\n          }\n        />\n        <AppExtras {...this.props} />\n      </PluggablesProvider>\n    );\n  }\n}\n\nexport const __test__ = connect(\n  (state, props) => ({\n    pathname: props.location.pathname,\n    token: state.userSession.token,\n    content: state.content.data,\n    apiError: state.apierror.error,\n    connectionRefused: state.apierror.connectionRefused,\n  }),\n  {},\n)(App);\n\nexport const fetchContent = async ({ store, location }) => {\n  const content = await store.dispatch(\n    getContent(getBaseUrl(location.pathname)),\n  );\n\n  const promises = [];\n  const { blocksConfig } = config.blocks;\n\n  const visitor = ([id, data]) => {\n    const blockType = data['@type'];\n    const { getAsyncData } = blocksConfig[blockType];\n    if (getAsyncData) {\n      const p = getAsyncData({\n        store,\n        dispatch: store.dispatch,\n        path: location.pathname,\n        location,\n        id,\n        data,\n      });\n      if (!p?.length) {\n        throw new Error(\n          'You should return a list of promises from getAsyncData',\n        );\n      }\n      promises.push(...p);\n    }\n  };\n\n  visitBlocks(content, visitor);\n\n  await Promise.allSettled(promises);\n\n  return content;\n};\n\nexport default compose(\n  asyncConnect([\n    {\n      key: 'breadcrumbs',\n      promise: ({ location, store: { dispatch } }) =>\n        __SERVER__ && dispatch(getBreadcrumbs(getBaseUrl(location.pathname))),\n    },\n    {\n      key: 'content',\n      promise: ({ location, store }) =>\n        __SERVER__ && fetchContent({ store, location }),\n    },\n    {\n      key: 'navigation',\n      promise: ({ location, store: { dispatch } }) =>\n        __SERVER__ &&\n        dispatch(\n          getNavigation(\n            getBaseUrl(location.pathname),\n            config.settings.navDepth,\n          ),\n        ),\n    },\n    {\n      key: 'types',\n      promise: ({ location, store: { dispatch } }) =>\n        __SERVER__ && dispatch(getTypes(getBaseUrl(location.pathname))),\n    },\n    {\n      key: 'workflow',\n      promise: ({ location, store: { dispatch } }) =>\n        __SERVER__ && dispatch(getWorkflow(getBaseUrl(location.pathname))),\n    },\n  ]),\n  injectIntl,\n  connect(\n    (state, props) => ({\n      pathname: props.location.pathname,\n      token: state.userSession.token,\n      userId: state.userSession.token\n        ? jwtDecode(state.userSession.token).sub\n        : '',\n      content: state.content.data,\n      apiError: state.apierror.error,\n      connectionRefused: state.apierror.connectionRefused,\n    }),\n    null,\n  ),\n)(App);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useCookies } from 'react-cookie';\nimport config from '@plone/volto/registry';\nimport { changeLanguage } from '@plone/volto/actions';\nimport { normalizeLanguageName } from '@plone/volto/helpers';\n\nconst MultilingualRedirector = (props) => {\n  const { settings } = config;\n  const { pathname, children } = props;\n  const [cookies] = useCookies();\n  const currentLanguage = cookies['I18N_LANGUAGE'] || settings.defaultLanguage;\n  const redirectToLanguage = settings.supportedLanguages.includes(\n    currentLanguage,\n  )\n    ? currentLanguage\n    : settings.defaultLanguage;\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    // ToDo: Add means to support language negotiation (with config)\n    // const detectedLang = (navigator.language || navigator.userLanguage).substring(0, 2);\n    let mounted = true;\n    if (settings.isMultilingual && pathname === '/') {\n      const langFileName = normalizeLanguageName(redirectToLanguage);\n      import('@root/../locales/' + langFileName + '.json').then((locale) => {\n        if (mounted) {\n          dispatch(changeLanguage(redirectToLanguage, locale.default));\n        }\n      });\n    }\n    return () => {\n      mounted = false;\n    };\n  }, [pathname, dispatch, redirectToLanguage, settings.isMultilingual]);\n\n  return pathname === '/' && settings.isMultilingual ? (\n    <Redirect to={`/${redirectToLanguage}`} />\n  ) : (\n    <>{children}</>\n  );\n};\n\nexport default MultilingualRedirector;\n","/**\n * Routes.\n * @module routes\n */\nimport {\n  Add,\n  AddonsControlpanel,\n  ChangePassword,\n  ContactForm,\n  Contents,\n  ContentType,\n  ContentTypeLayout,\n  ContentTypeSchema,\n  ContentTypes,\n  Controlpanel,\n  Controlpanels,\n  CreateTranslation,\n  DatabaseInformation,\n  Delete,\n  Diff,\n  Edit,\n  History,\n  Login,\n  Logout,\n  ManageTranslations,\n  ModerateComments,\n  NotFound,\n  PasswordReset,\n  Register,\n  RequestPasswordReset,\n  Search,\n  Sharing,\n  Sitemap,\n  UsersControlpanel,\n  UserGroupMembershipControlPanel,\n  GroupsControlpanel,\n} from '@plone/volto/components';\n\n// Deliberatelly use of absolute path of these components, since we do not want them\n// in the components/index.js file.\nimport App from '@plone/volto/components/theme/App/App';\nimport View from '@plone/volto/components/theme/View/View';\n\nimport config from '@plone/volto/registry';\n\n/**\n * Default routes array.\n * @array\n * @returns {array} Routes.\n */\nexport const multilingualRoutes = [\n  {\n    path: `/(${config.settings?.supportedLanguages.join('|')})/sitemap`,\n    component: Sitemap,\n  },\n  {\n    path: `/(${config.settings?.supportedLanguages.join('|')})/search`,\n    component: Search,\n  },\n  {\n    path: `/(${config.settings?.supportedLanguages.join('|')})/contact-form`,\n    component: ContactForm,\n  },\n  {\n    path: `/(${config.settings?.supportedLanguages.join('|')})/change-password`,\n    component: ChangePassword,\n  },\n  {\n    path: `/(${config.settings?.supportedLanguages.join('|')})/register`,\n    component: Register,\n  },\n  {\n    path: `/(${config.settings?.supportedLanguages.join('|')})/password-reset`,\n    component: RequestPasswordReset,\n    exact: true,\n  },\n  {\n    path: `/(${config.settings?.supportedLanguages.join(\n      '|',\n    )})/password-reset/:token`,\n    component: PasswordReset,\n    exact: true,\n  },\n];\n\nexport const defaultRoutes = [\n  {\n    path: '/',\n    component: View,\n    exact: true,\n  },\n  {\n    path: '/login',\n    component: Login,\n  },\n  {\n    path: '/logout',\n    component: Logout,\n  },\n  {\n    path: '/sitemap',\n    component: Sitemap,\n  },\n  {\n    path: '/search',\n    component: Search,\n  },\n  {\n    path: '/contact-form',\n    component: ContactForm,\n  },\n  {\n    path: '/controlpanel',\n    exact: true,\n    component: Controlpanels,\n  },\n  {\n    path: '/controlpanel/dexterity-types/:id/layout',\n    component: ContentTypeLayout,\n  },\n  {\n    path: '/controlpanel/dexterity-types/:id/schema',\n    component: ContentTypeSchema,\n  },\n  {\n    path: '/controlpanel/dexterity-types/:id',\n    component: ContentType,\n  },\n  {\n    path: '/controlpanel/dexterity-types',\n    component: ContentTypes,\n  },\n  {\n    path: '/controlpanel/addons',\n    component: AddonsControlpanel,\n  },\n  {\n    path: '/controlpanel/database',\n    component: DatabaseInformation,\n  },\n  {\n    path: '/controlpanel/moderate-comments',\n    component: ModerateComments,\n  },\n  {\n    path: '/controlpanel/users',\n    component: UsersControlpanel,\n  },\n  {\n    path: '/controlpanel/usergroupmembership',\n    component: UserGroupMembershipControlPanel,\n  },\n  {\n    path: '/controlpanel/groups',\n    component: GroupsControlpanel,\n  },\n  {\n    path: '/controlpanel/:id',\n    component: Controlpanel,\n  },\n  {\n    path: '/change-password',\n    component: ChangePassword,\n  },\n  {\n    path: '/add',\n    component: Add,\n  },\n  {\n    path: '/edit',\n    component: Edit,\n  },\n  {\n    path: '/contents',\n    component: Contents,\n  },\n  {\n    path: '/sharing',\n    component: Sharing,\n  },\n  {\n    path: '/**/add',\n    component: Add,\n  },\n  {\n    path: '/**/create-translation',\n    component: CreateTranslation,\n  },\n  {\n    path: '/**/contents',\n    component: Contents,\n  },\n  {\n    path: '/**/sharing',\n    component: Sharing,\n  },\n  {\n    path: '/**/delete',\n    component: Delete,\n  },\n  {\n    path: '/**/diff',\n    component: Diff,\n  },\n  {\n    path: '/**/edit',\n    component: Edit,\n  },\n  {\n    path: '/**/history',\n    component: History,\n  },\n  {\n    path: '/**/sharing',\n    component: Sharing,\n  },\n  {\n    path: '/**/manage-translations',\n    component: ManageTranslations,\n  },\n  {\n    path: '/**/login',\n    component: Login,\n  },\n  {\n    path: '/register',\n    component: Register,\n  },\n  {\n    path: '/password-reset',\n    component: RequestPasswordReset,\n    exact: true,\n  },\n  {\n    path: '/password-reset/:token',\n    component: PasswordReset,\n    exact: true,\n  },\n  {\n    path: '/**',\n    component: View,\n  },\n  {\n    path: '*',\n    component: NotFound,\n  },\n];\n\n/**\n * Routes array.\n * @array\n * @returns {array} Routes.\n */\nconst routes = [\n  {\n    path: '/',\n    component: App,\n    routes: [\n      // redirect to external links if path is in blacklist\n      ...(config.settings?.externalRoutes || []).map((route) => ({\n        ...route.match,\n        component: NotFound,\n      })),\n      // addon routes have a higher priority then default routes\n      ...(config.addonRoutes || []),\n      ...((config.settings?.isMultilingual && multilingualRoutes) || []),\n      ...defaultRoutes,\n    ],\n  },\n];\n\nexport default routes;\n","module.exports = require(\"@sentry/browser\");","module.exports = require(\"lodash/trim\");"],"mappingsuoZACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA,qkBAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AALA;AACA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAMA;AARA;AAFA;AAcA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAMA;AARA;AAWA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AATA;AACA;AAcA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AALA;AAFA;AAgBA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AALA;AAaA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChHA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AASA;AACA;AAQA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAAA;AAAA;AAAA;AACA;AADA;AAWA;AACA;AACA;AAHA;AAVA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA,uDAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AAAA;AADA;AAIA;AAAA;AAKA;AADA;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAMA;AACA;AAFA;AAMA;AADA;AAVA;AADA;AAJA;AAwBA;AACA;AAFA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AANA;AA5DA;AA4EA;AACA;AA1IA;AACA;AADA;AAOA;AADA;AACA;AAqIA;AAEA;AACA;AACA;AACA;AACA;AALA;AAUA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAOA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AASA;AACA;AACA;AAGA;AACA;AACA;AARA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtRA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AAmCA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AAHA;AAMA;AAGA;AACA;AALA;AASA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AAFA;AAKA;AAVA;AAiBA;;;;;;;;;;;AC/QA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}